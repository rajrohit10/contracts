{"abi":[{"type":"function","name":"approve","inputs":[{"name":"poolFactory","type":"address","internalType":"address"},{"name":"votingRewardsFactory","type":"address","internalType":"address"},{"name":"gaugeFactory","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"factoriesToPoolFactory","inputs":[{"name":"poolFactory","type":"address","internalType":"address"}],"outputs":[{"name":"votingRewardsFactory","type":"address","internalType":"address"},{"name":"gaugeFactory","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isPoolFactoryApproved","inputs":[{"name":"poolFactory","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"managedRewardsFactory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"poolFactories","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"poolFactoriesLength","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setManagedRewardsFactory","inputs":[{"name":"_newManagedRewardsFactory","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unapprove","inputs":[{"name":"poolFactory","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approve","inputs":[{"name":"poolFactory","type":"address","indexed":true,"internalType":"address"},{"name":"votingRewardsFactory","type":"address","indexed":true,"internalType":"address"},{"name":"gaugeFactory","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SetManagedRewardsFactory","inputs":[{"name":"_newRewardsFactory","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Unapprove","inputs":[{"name":"poolFactory","type":"address","indexed":true,"internalType":"address"},{"name":"votingRewardsFactory","type":"address","indexed":true,"internalType":"address"},{"name":"gaugeFactory","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"FallbackFactory","inputs":[]},{"type":"error","name":"InvalidFactoriesToPoolFactory","inputs":[]},{"type":"error","name":"PathAlreadyApproved","inputs":[]},{"type":"error","name":"PathNotApproved","inputs":[]},{"type":"error","name":"SameAddress","inputs":[]},{"type":"error","name":"ZeroAddress","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"approve(address,address,address)":"9b140a85","factoriesToPoolFactory(address)":"1217afdb","isPoolFactoryApproved(address)":"d1ea0a1d","managedRewardsFactory()":"0d0ae678","poolFactories()":"06121cd5","poolFactoriesLength()":"0cb299c9","setManagedRewardsFactory(address)":"64076939","unapprove(address)":"fbf1f78a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FallbackFactory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFactoriesToPoolFactory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PathAlreadyApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PathNotApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"votingRewardsFactory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gaugeFactory\",\"type\":\"address\"}],\"name\":\"Approve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newRewardsFactory\",\"type\":\"address\"}],\"name\":\"SetManagedRewardsFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"votingRewardsFactory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gaugeFactory\",\"type\":\"address\"}],\"name\":\"Unapprove\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"votingRewardsFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gaugeFactory\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"}],\"name\":\"factoriesToPoolFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"votingRewardsFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gaugeFactory\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"}],\"name\":\"isPoolFactoryApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"managedRewardsFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFactories\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFactoriesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newManagedRewardsFactory\",\"type\":\"address\"}],\"name\":\"setManagedRewardsFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"}],\"name\":\"unapprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,address,address)\":{\"details\":\"Callable by onlyOwner\",\"params\":{\"gaugeFactory\":\".\",\"poolFactory\":\".\",\"votingRewardsFactory\":\".\"}},\"isPoolFactoryApproved(address)\":{\"params\":{\"poolFactory\":\".\"},\"returns\":{\"_0\":\"True if PoolFactory is approved, else false\"}},\"poolFactories()\":{\"details\":\"The same PoolFactory address cannot be used twice\",\"returns\":{\"_0\":\"Array of PoolFactory addresses\"}},\"setManagedRewardsFactory(address)\":{\"details\":\"Callable by onlyOwner\",\"params\":{\"_newManagedRewardsFactory\":\"address of new managedRewardsFactory\"}},\"unapprove(address)\":{\"details\":\"Callable by onlyOwner\",\"params\":{\"poolFactory\":\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,address,address)\":{\"notice\":\"Approve a set of factories used in Velodrome Protocol.         Router.sol is able to swap any poolFactories currently approved.         Cannot approve address(0) factories.         Cannot aprove path that is already approved.         Each poolFactory has one unique set and maintains state.  In the case a poolFactory is unapproved             and then re-approved, the same set of factories must be used.  In other words, you cannot overwrite             the factories tied to a poolFactory address.         VotingRewardsFactories and GaugeFactories may use the same address across multiple poolFactories.\"},\"factoriesToPoolFactory(address)\":{\"notice\":\"Get the factories correlated to a poolFactory.         Once set, this can never be modified.         Returns the correlated factories even after an approved poolFactory is unapproved.\"},\"isPoolFactoryApproved(address)\":{\"notice\":\"Check if a PoolFactory is approved within the factory registry.  Router uses this method to         ensure a pool swapped from is approved.\"},\"managedRewardsFactory()\":{\"notice\":\"Factory to create free and locked rewards for a managed veNFT\"},\"poolFactories()\":{\"notice\":\"Get all PoolFactories approved by the registry\"},\"poolFactoriesLength()\":{\"notice\":\"Get the length of the poolFactories array\"},\"setManagedRewardsFactory(address)\":{\"notice\":\"Set the rewards factory address\"},\"unapprove(address)\":{\"notice\":\"Unapprove a set of factories used in Velodrome Protocol.         While a poolFactory is unapproved, Router.sol cannot swap with pools made from the corresponding factory         Can only unapprove an approved path.         Cannot unapprove the fallback path (core v2 factories).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/factories/IFactoryRegistry.sol\":\"IFactoryRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@opengsn/=lib/gsn/packages/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":gsn/=lib/gsn/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":utils/=test/utils/\"]},\"sources\":{\"contracts/interfaces/factories/IFactoryRegistry.sol\":{\"keccak256\":\"0x79a58f5209df154b463320ff0898e2995396834d7a03c4626256399a66bfad37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04b490b4701a87efaa3415b96e97cd7e0bd14988ec2bbf3714f82dbc1c1b740c\",\"dweb:/ipfs/QmTB6oaSWswgeJXdeQhmKn4wLoWAtmxkayL9Sz5stJWC2j\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"FallbackFactory"},{"inputs":[],"type":"error","name":"InvalidFactoriesToPoolFactory"},{"inputs":[],"type":"error","name":"PathAlreadyApproved"},{"inputs":[],"type":"error","name":"PathNotApproved"},{"inputs":[],"type":"error","name":"SameAddress"},{"inputs":[],"type":"error","name":"ZeroAddress"},{"inputs":[{"internalType":"address","name":"poolFactory","type":"address","indexed":true},{"internalType":"address","name":"votingRewardsFactory","type":"address","indexed":true},{"internalType":"address","name":"gaugeFactory","type":"address","indexed":true}],"type":"event","name":"Approve","anonymous":false},{"inputs":[{"internalType":"address","name":"_newRewardsFactory","type":"address","indexed":true}],"type":"event","name":"SetManagedRewardsFactory","anonymous":false},{"inputs":[{"internalType":"address","name":"poolFactory","type":"address","indexed":true},{"internalType":"address","name":"votingRewardsFactory","type":"address","indexed":true},{"internalType":"address","name":"gaugeFactory","type":"address","indexed":true}],"type":"event","name":"Unapprove","anonymous":false},{"inputs":[{"internalType":"address","name":"poolFactory","type":"address"},{"internalType":"address","name":"votingRewardsFactory","type":"address"},{"internalType":"address","name":"gaugeFactory","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"approve"},{"inputs":[{"internalType":"address","name":"poolFactory","type":"address"}],"stateMutability":"view","type":"function","name":"factoriesToPoolFactory","outputs":[{"internalType":"address","name":"votingRewardsFactory","type":"address"},{"internalType":"address","name":"gaugeFactory","type":"address"}]},{"inputs":[{"internalType":"address","name":"poolFactory","type":"address"}],"stateMutability":"view","type":"function","name":"isPoolFactoryApproved","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"managedRewardsFactory","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"poolFactories","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"poolFactoriesLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_newManagedRewardsFactory","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setManagedRewardsFactory"},{"inputs":[{"internalType":"address","name":"poolFactory","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"unapprove"}],"devdoc":{"kind":"dev","methods":{"approve(address,address,address)":{"details":"Callable by onlyOwner","params":{"gaugeFactory":".","poolFactory":".","votingRewardsFactory":"."}},"isPoolFactoryApproved(address)":{"params":{"poolFactory":"."},"returns":{"_0":"True if PoolFactory is approved, else false"}},"poolFactories()":{"details":"The same PoolFactory address cannot be used twice","returns":{"_0":"Array of PoolFactory addresses"}},"setManagedRewardsFactory(address)":{"details":"Callable by onlyOwner","params":{"_newManagedRewardsFactory":"address of new managedRewardsFactory"}},"unapprove(address)":{"details":"Callable by onlyOwner","params":{"poolFactory":"."}}},"version":1},"userdoc":{"kind":"user","methods":{"approve(address,address,address)":{"notice":"Approve a set of factories used in Velodrome Protocol.         Router.sol is able to swap any poolFactories currently approved.         Cannot approve address(0) factories.         Cannot aprove path that is already approved.         Each poolFactory has one unique set and maintains state.  In the case a poolFactory is unapproved             and then re-approved, the same set of factories must be used.  In other words, you cannot overwrite             the factories tied to a poolFactory address.         VotingRewardsFactories and GaugeFactories may use the same address across multiple poolFactories."},"factoriesToPoolFactory(address)":{"notice":"Get the factories correlated to a poolFactory.         Once set, this can never be modified.         Returns the correlated factories even after an approved poolFactory is unapproved."},"isPoolFactoryApproved(address)":{"notice":"Check if a PoolFactory is approved within the factory registry.  Router uses this method to         ensure a pool swapped from is approved."},"managedRewardsFactory()":{"notice":"Factory to create free and locked rewards for a managed veNFT"},"poolFactories()":{"notice":"Get all PoolFactories approved by the registry"},"poolFactoriesLength()":{"notice":"Get the length of the poolFactories array"},"setManagedRewardsFactory(address)":{"notice":"Set the rewards factory address"},"unapprove(address)":{"notice":"Unapprove a set of factories used in Velodrome Protocol.         While a poolFactory is unapproved, Router.sol cannot swap with pools made from the corresponding factory         Can only unapprove an approved path.         Cannot unapprove the fallback path (core v2 factories)."}},"version":1}},"settings":{"remappings":["@opengsn/=lib/gsn/packages/","@openzeppelin/=lib/openzeppelin-contracts/","@uniswap/v3-core/=lib/v3-core/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","gsn/=lib/gsn/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","utils/=test/utils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/factories/IFactoryRegistry.sol":"IFactoryRegistry"},"libraries":{}},"sources":{"contracts/interfaces/factories/IFactoryRegistry.sol":{"keccak256":"0x79a58f5209df154b463320ff0898e2995396834d7a03c4626256399a66bfad37","urls":["bzz-raw://04b490b4701a87efaa3415b96e97cd7e0bd14988ec2bbf3714f82dbc1c1b740c","dweb:/ipfs/QmTB6oaSWswgeJXdeQhmKn4wLoWAtmxkayL9Sz5stJWC2j"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/interfaces/factories/IFactoryRegistry.sol","id":35557,"exportedSymbols":{"IFactoryRegistry":[35556]},"nodeType":"SourceUnit","src":"32:3371:45","nodes":[{"id":35464,"nodeType":"PragmaDirective","src":"32:23:45","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":35556,"nodeType":"ContractDefinition","src":"57:3345:45","nodes":[{"id":35466,"nodeType":"ErrorDefinition","src":"90:24:45","nodes":[],"errorSelector":"1446b5be","name":"FallbackFactory","nameLocation":"96:15:45","parameters":{"id":35465,"nodeType":"ParameterList","parameters":[],"src":"111:2:45"}},{"id":35468,"nodeType":"ErrorDefinition","src":"119:38:45","nodes":[],"errorSelector":"03580431","name":"InvalidFactoriesToPoolFactory","nameLocation":"125:29:45","parameters":{"id":35467,"nodeType":"ParameterList","parameters":[],"src":"154:2:45"}},{"id":35470,"nodeType":"ErrorDefinition","src":"162:28:45","nodes":[],"errorSelector":"c59dc2ea","name":"PathAlreadyApproved","nameLocation":"168:19:45","parameters":{"id":35469,"nodeType":"ParameterList","parameters":[],"src":"187:2:45"}},{"id":35472,"nodeType":"ErrorDefinition","src":"195:24:45","nodes":[],"errorSelector":"d38afd65","name":"PathNotApproved","nameLocation":"201:15:45","parameters":{"id":35471,"nodeType":"ParameterList","parameters":[],"src":"216:2:45"}},{"id":35474,"nodeType":"ErrorDefinition","src":"224:20:45","nodes":[],"errorSelector":"367558c3","name":"SameAddress","nameLocation":"230:11:45","parameters":{"id":35473,"nodeType":"ParameterList","parameters":[],"src":"241:2:45"}},{"id":35476,"nodeType":"ErrorDefinition","src":"249:20:45","nodes":[],"errorSelector":"d92e233d","name":"ZeroAddress","nameLocation":"255:11:45","parameters":{"id":35475,"nodeType":"ParameterList","parameters":[],"src":"266:2:45"}},{"id":35484,"nodeType":"EventDefinition","src":"275:111:45","nodes":[],"anonymous":false,"eventSelector":"5abe7702ac48299ef7647755d7af6d6a6beecd1c584bbb6fa55b7a882490efc7","name":"Approve","nameLocation":"281:7:45","parameters":{"id":35483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35478,"indexed":true,"mutability":"mutable","name":"poolFactory","nameLocation":"305:11:45","nodeType":"VariableDeclaration","scope":35484,"src":"289:27:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35477,"name":"address","nodeType":"ElementaryTypeName","src":"289:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35480,"indexed":true,"mutability":"mutable","name":"votingRewardsFactory","nameLocation":"334:20:45","nodeType":"VariableDeclaration","scope":35484,"src":"318:36:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35479,"name":"address","nodeType":"ElementaryTypeName","src":"318:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35482,"indexed":true,"mutability":"mutable","name":"gaugeFactory","nameLocation":"372:12:45","nodeType":"VariableDeclaration","scope":35484,"src":"356:28:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35481,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"288:97:45"}},{"id":35492,"nodeType":"EventDefinition","src":"391:113:45","nodes":[],"anonymous":false,"eventSelector":"bbbf8609bccd24696f7d2d86357dbd1a55ff9b79853a72ea11b1c0968ada1776","name":"Unapprove","nameLocation":"397:9:45","parameters":{"id":35491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35486,"indexed":true,"mutability":"mutable","name":"poolFactory","nameLocation":"423:11:45","nodeType":"VariableDeclaration","scope":35492,"src":"407:27:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35485,"name":"address","nodeType":"ElementaryTypeName","src":"407:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35488,"indexed":true,"mutability":"mutable","name":"votingRewardsFactory","nameLocation":"452:20:45","nodeType":"VariableDeclaration","scope":35492,"src":"436:36:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35487,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35490,"indexed":true,"mutability":"mutable","name":"gaugeFactory","nameLocation":"490:12:45","nodeType":"VariableDeclaration","scope":35492,"src":"474:28:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35489,"name":"address","nodeType":"ElementaryTypeName","src":"474:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"406:97:45"}},{"id":35496,"nodeType":"EventDefinition","src":"509:67:45","nodes":[],"anonymous":false,"eventSelector":"3123bae5152a999decbb5b69306adb30fa19885cf983c49427fd5b4594dcb037","name":"SetManagedRewardsFactory","nameLocation":"515:24:45","parameters":{"id":35495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35494,"indexed":true,"mutability":"mutable","name":"_newRewardsFactory","nameLocation":"556:18:45","nodeType":"VariableDeclaration","scope":35496,"src":"540:34:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35493,"name":"address","nodeType":"ElementaryTypeName","src":"540:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"539:36:45"}},{"id":35506,"nodeType":"FunctionDefinition","src":"1393:99:45","nodes":[],"documentation":{"id":35497,"nodeType":"StructuredDocumentation","src":"582:806:45","text":"@notice Approve a set of factories used in Velodrome Protocol.\n         Router.sol is able to swap any poolFactories currently approved.\n         Cannot approve address(0) factories.\n         Cannot aprove path that is already approved.\n         Each poolFactory has one unique set and maintains state.  In the case a poolFactory is unapproved\n             and then re-approved, the same set of factories must be used.  In other words, you cannot overwrite\n             the factories tied to a poolFactory address.\n         VotingRewardsFactories and GaugeFactories may use the same address across multiple poolFactories.\n @dev Callable by onlyOwner\n @param poolFactory .\n @param votingRewardsFactory .\n @param gaugeFactory ."},"functionSelector":"9b140a85","implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1402:7:45","parameters":{"id":35504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35499,"mutability":"mutable","name":"poolFactory","nameLocation":"1418:11:45","nodeType":"VariableDeclaration","scope":35506,"src":"1410:19:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35498,"name":"address","nodeType":"ElementaryTypeName","src":"1410:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35501,"mutability":"mutable","name":"votingRewardsFactory","nameLocation":"1439:20:45","nodeType":"VariableDeclaration","scope":35506,"src":"1431:28:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35500,"name":"address","nodeType":"ElementaryTypeName","src":"1431:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35503,"mutability":"mutable","name":"gaugeFactory","nameLocation":"1469:12:45","nodeType":"VariableDeclaration","scope":35506,"src":"1461:20:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35502,"name":"address","nodeType":"ElementaryTypeName","src":"1461:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1409:73:45"},"returnParameters":{"id":35505,"nodeType":"ParameterList","parameters":[],"src":"1491:0:45"},"scope":35556,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35512,"nodeType":"FunctionDefinition","src":"1881:49:45","nodes":[],"documentation":{"id":35507,"nodeType":"StructuredDocumentation","src":"1498:378:45","text":"@notice Unapprove a set of factories used in Velodrome Protocol.\n         While a poolFactory is unapproved, Router.sol cannot swap with pools made from the corresponding factory\n         Can only unapprove an approved path.\n         Cannot unapprove the fallback path (core v2 factories).\n @dev Callable by onlyOwner\n @param poolFactory ."},"functionSelector":"fbf1f78a","implemented":false,"kind":"function","modifiers":[],"name":"unapprove","nameLocation":"1890:9:45","parameters":{"id":35510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35509,"mutability":"mutable","name":"poolFactory","nameLocation":"1908:11:45","nodeType":"VariableDeclaration","scope":35512,"src":"1900:19:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35508,"name":"address","nodeType":"ElementaryTypeName","src":"1900:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1899:21:45"},"returnParameters":{"id":35511,"nodeType":"ParameterList","parameters":[],"src":"1929:0:45"},"scope":35556,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35518,"nodeType":"FunctionDefinition","src":"2014:65:45","nodes":[],"documentation":{"id":35513,"nodeType":"StructuredDocumentation","src":"1936:73:45","text":"@notice Factory to create free and locked rewards for a managed veNFT"},"functionSelector":"0d0ae678","implemented":false,"kind":"function","modifiers":[],"name":"managedRewardsFactory","nameLocation":"2023:21:45","parameters":{"id":35514,"nodeType":"ParameterList","parameters":[],"src":"2044:2:45"},"returnParameters":{"id":35517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35518,"src":"2070:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35515,"name":"address","nodeType":"ElementaryTypeName","src":"2070:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2069:9:45"},"scope":35556,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35524,"nodeType":"FunctionDefinition","src":"2246:78:45","nodes":[],"documentation":{"id":35519,"nodeType":"StructuredDocumentation","src":"2085:156:45","text":"@notice Set the rewards factory address\n @dev Callable by onlyOwner\n @param _newManagedRewardsFactory address of new managedRewardsFactory"},"functionSelector":"64076939","implemented":false,"kind":"function","modifiers":[],"name":"setManagedRewardsFactory","nameLocation":"2255:24:45","parameters":{"id":35522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35521,"mutability":"mutable","name":"_newManagedRewardsFactory","nameLocation":"2288:25:45","nodeType":"VariableDeclaration","scope":35524,"src":"2280:33:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35520,"name":"address","nodeType":"ElementaryTypeName","src":"2280:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2279:35:45"},"returnParameters":{"id":35523,"nodeType":"ParameterList","parameters":[],"src":"2323:0:45"},"scope":35556,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":35534,"nodeType":"FunctionDefinition","src":"2546:142:45","nodes":[],"documentation":{"id":35525,"nodeType":"StructuredDocumentation","src":"2330:211:45","text":"@notice Get the factories correlated to a poolFactory.\n         Once set, this can never be modified.\n         Returns the correlated factories even after an approved poolFactory is unapproved."},"functionSelector":"1217afdb","implemented":false,"kind":"function","modifiers":[],"name":"factoriesToPoolFactory","nameLocation":"2555:22:45","parameters":{"id":35528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35527,"mutability":"mutable","name":"poolFactory","nameLocation":"2595:11:45","nodeType":"VariableDeclaration","scope":35534,"src":"2587:19:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35526,"name":"address","nodeType":"ElementaryTypeName","src":"2587:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2577:35:45"},"returnParameters":{"id":35533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35530,"mutability":"mutable","name":"votingRewardsFactory","nameLocation":"2644:20:45","nodeType":"VariableDeclaration","scope":35534,"src":"2636:28:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35529,"name":"address","nodeType":"ElementaryTypeName","src":"2636:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35532,"mutability":"mutable","name":"gaugeFactory","nameLocation":"2674:12:45","nodeType":"VariableDeclaration","scope":35534,"src":"2666:20:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35531,"name":"address","nodeType":"ElementaryTypeName","src":"2666:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2635:52:45"},"scope":35556,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35541,"nodeType":"FunctionDefinition","src":"2867:66:45","nodes":[],"documentation":{"id":35535,"nodeType":"StructuredDocumentation","src":"2694:168:45","text":"@notice Get all PoolFactories approved by the registry\n @dev The same PoolFactory address cannot be used twice\n @return Array of PoolFactory addresses"},"functionSelector":"06121cd5","implemented":false,"kind":"function","modifiers":[],"name":"poolFactories","nameLocation":"2876:13:45","parameters":{"id":35536,"nodeType":"ParameterList","parameters":[],"src":"2889:2:45"},"returnParameters":{"id":35540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35541,"src":"2915:16:45","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":35537,"name":"address","nodeType":"ElementaryTypeName","src":"2915:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":35538,"nodeType":"ArrayTypeName","src":"2915:9:45","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2914:18:45"},"scope":35556,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35549,"nodeType":"FunctionDefinition","src":"3192:81:45","nodes":[],"documentation":{"id":35542,"nodeType":"StructuredDocumentation","src":"2939:248:45","text":"@notice Check if a PoolFactory is approved within the factory registry.  Router uses this method to\n         ensure a pool swapped from is approved.\n @param poolFactory .\n @return True if PoolFactory is approved, else false"},"functionSelector":"d1ea0a1d","implemented":false,"kind":"function","modifiers":[],"name":"isPoolFactoryApproved","nameLocation":"3201:21:45","parameters":{"id":35545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35544,"mutability":"mutable","name":"poolFactory","nameLocation":"3231:11:45","nodeType":"VariableDeclaration","scope":35549,"src":"3223:19:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35543,"name":"address","nodeType":"ElementaryTypeName","src":"3223:7:45","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3222:21:45"},"returnParameters":{"id":35548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35549,"src":"3267:4:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35546,"name":"bool","nodeType":"ElementaryTypeName","src":"3267:4:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3266:6:45"},"scope":35556,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":35555,"nodeType":"FunctionDefinition","src":"3337:63:45","nodes":[],"documentation":{"id":35550,"nodeType":"StructuredDocumentation","src":"3279:53:45","text":"@notice Get the length of the poolFactories array"},"functionSelector":"0cb299c9","implemented":false,"kind":"function","modifiers":[],"name":"poolFactoriesLength","nameLocation":"3346:19:45","parameters":{"id":35551,"nodeType":"ParameterList","parameters":[],"src":"3365:2:45"},"returnParameters":{"id":35554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":35555,"src":"3391:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":35552,"name":"uint256","nodeType":"ElementaryTypeName","src":"3391:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3390:9:45"},"scope":35556,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IFactoryRegistry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[35556],"name":"IFactoryRegistry","nameLocation":"67:16:45","scope":35557,"usedErrors":[35466,35468,35470,35472,35474,35476]}],"license":"MIT"},"id":45}