{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@opengsn/=lib/gsn/packages/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":gsn/=lib/gsn/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":utils/=test/utils/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71\",\"dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@opengsn/=lib/gsn/packages/","@openzeppelin/=lib/openzeppelin-contracts/","@uniswap/v3-core/=lib/v3-core/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","gsn/=lib/gsn/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","utils/=test/utils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol":"ReentrancyGuard"},"libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol":{"keccak256":"0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a","urls":["bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71","dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol","id":84511,"exportedSymbols":{"ReentrancyGuard":[84510]},"nodeType":"SourceUnit","src":"112:3015:94","nodes":[{"id":84447,"nodeType":"PragmaDirective","src":"112:23:94","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":84510,"nodeType":"ContractDefinition","src":"888:2238:94","nodes":[{"id":84451,"nodeType":"VariableDeclaration","src":"1676:41:94","nodes":[],"constant":true,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:94","scope":84510,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":84450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:94","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":84454,"nodeType":"VariableDeclaration","src":"1723:37:94","nodes":[],"constant":true,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:94","scope":84510,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":84453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:94","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":84456,"nodeType":"VariableDeclaration","src":"1767:23:94","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1783:7:94","scope":84510,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":84464,"nodeType":"FunctionDefinition","src":"1797:53:94","nodes":[],"body":{"id":84463,"nodeType":"Block","src":"1811:39:94","nodes":[],"statements":[{"expression":{"id":84461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":84459,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84456,"src":"1821:7:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":84460,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84451,"src":"1831:12:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":84462,"nodeType":"ExpressionStatement","src":"1821:22:94"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":84457,"nodeType":"ParameterList","parameters":[],"src":"1808:2:94"},"returnParameters":{"id":84458,"nodeType":"ParameterList","parameters":[],"src":"1811:0:94"},"scope":84510,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":84475,"nodeType":"ModifierDefinition","src":"2227:103:94","nodes":[],"body":{"id":84474,"nodeType":"Block","src":"2251:79:94","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84467,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84490,"src":"2261:19:94","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":84468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:94","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":84469,"nodeType":"ExpressionStatement","src":"2261:21:94"},{"id":84470,"nodeType":"PlaceholderStatement","src":"2292:1:94"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84471,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84498,"src":"2303:18:94","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":84472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:94","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":84473,"nodeType":"ExpressionStatement","src":"2303:20:94"}]},"documentation":{"id":84465,"nodeType":"StructuredDocumentation","src":"1856:366:94","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2236:12:94","parameters":{"id":84466,"nodeType":"ParameterList","parameters":[],"src":"2248:2:94"},"virtual":false,"visibility":"internal"},{"id":84490,"nodeType":"FunctionDefinition","src":"2336:287:94","nodes":[],"body":{"id":84489,"nodeType":"Block","src":"2375:248:94","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":84481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":84479,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84456,"src":"2468:7:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":84480,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84454,"src":"2479:8:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:94","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":84482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:94","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":84478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:94","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:94","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":84484,"nodeType":"ExpressionStatement","src":"2460:63:94"},{"expression":{"id":84487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":84485,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84456,"src":"2598:7:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":84486,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84454,"src":"2608:8:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":84488,"nodeType":"ExpressionStatement","src":"2598:18:94"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:94","parameters":{"id":84476,"nodeType":"ParameterList","parameters":[],"src":"2364:2:94"},"returnParameters":{"id":84477,"nodeType":"ParameterList","parameters":[],"src":"2375:0:94"},"scope":84510,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":84498,"nodeType":"FunctionDefinition","src":"2629:209:94","nodes":[],"body":{"id":84497,"nodeType":"Block","src":"2667:171:94","nodes":[],"statements":[{"expression":{"id":84495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":84493,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84456,"src":"2809:7:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":84494,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84451,"src":"2819:12:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":84496,"nodeType":"ExpressionStatement","src":"2809:22:94"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:94","parameters":{"id":84491,"nodeType":"ParameterList","parameters":[],"src":"2656:2:94"},"returnParameters":{"id":84492,"nodeType":"ParameterList","parameters":[],"src":"2667:0:94"},"scope":84510,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":84509,"nodeType":"FunctionDefinition","src":"3017:107:94","nodes":[],"body":{"id":84508,"nodeType":"Block","src":"3081:43:94","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":84506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":84504,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84456,"src":"3098:7:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":84505,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84454,"src":"3109:8:94","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:94","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":84503,"id":84507,"nodeType":"Return","src":"3091:26:94"}]},"documentation":{"id":84499,"nodeType":"StructuredDocumentation","src":"2844:168:94","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:94","parameters":{"id":84500,"nodeType":"ParameterList","parameters":[],"src":"3049:2:94"},"returnParameters":{"id":84503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84509,"src":"3075:4:94","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":84501,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:94","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:94"},"scope":84510,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":84448,"nodeType":"StructuredDocumentation","src":"137:750:94","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[84510],"name":"ReentrancyGuard","nameLocation":"906:15:94","scope":84511,"usedErrors":[]}],"license":"MIT"},"id":94}