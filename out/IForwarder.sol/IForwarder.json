{"abi":[{"type":"function","name":"execute","inputs":[{"name":"forwardRequest","type":"tuple","internalType":"struct IForwarder.ForwardRequest","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"validUntil","type":"uint256","internalType":"uint256"}]},{"name":"domainSeparator","type":"bytes32","internalType":"bytes32"},{"name":"requestTypeHash","type":"bytes32","internalType":"bytes32"},{"name":"suffixData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"},{"name":"ret","type":"bytes","internalType":"bytes"}],"stateMutability":"payable"},{"type":"function","name":"getNonce","inputs":[{"name":"from","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"registerDomainSeparator","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"version","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"registerRequestType","inputs":[{"name":"typeName","type":"string","internalType":"string"},{"name":"typeSuffix","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"verify","inputs":[{"name":"forwardRequest","type":"tuple","internalType":"struct IForwarder.ForwardRequest","components":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"validUntil","type":"uint256","internalType":"uint256"}]},{"name":"domainSeparator","type":"bytes32","internalType":"bytes32"},{"name":"requestTypeHash","type":"bytes32","internalType":"bytes32"},{"name":"suffixData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"view"},{"type":"event","name":"DomainRegistered","inputs":[{"name":"domainSeparator","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"domainValue","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"RequestTypeRegistered","inputs":[{"name":"typeHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"typeStr","type":"string","indexed":false,"internalType":"string"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)":"e024dc7f","getNonce(address)":"2d0335ab","registerDomainSeparator(string,string)":"9c7b4592","registerRequestType(string,string)":"d9210be5","verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)":"ad9f99c7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"domainValue\",\"type\":\"bytes\"}],\"name\":\"DomainRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"typeStr\",\"type\":\"string\"}],\"name\":\"RequestTypeRegistered\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"forwardRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"requestTypeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"suffixData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"registerDomainSeparator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeSuffix\",\"type\":\"string\"}],\"name\":\"registerRequestType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct IForwarder.ForwardRequest\",\"name\":\"forwardRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"requestTypeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"suffixData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)\":{\"params\":{\"domainSeparator\":\"- domain used when signing this request\",\"forwardRequest\":\"- all transaction parameters\",\"requestTypeHash\":\"- request type used when signing this request.\",\"signature\":\"- signature to validate. the transaction is verified, and then executed. the success and ret of \\\"call\\\" are returned. This method would revert only verification errors. target errors are reported using the returned \\\"success\\\" and ret string\",\"suffixData\":\"- the extension data used when signing this request.\"}},\"registerDomainSeparator(string,string)\":{\"params\":{\"name\":\"the domain's display name\",\"version\":\"the domain/protocol version\"}},\"registerRequestType(string,string)\":{\"params\":{\"typeName\":\"- the name of the request type.\",\"typeSuffix\":\"- any extra data after the generic params.  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)\":{\"notice\":\"execute a transaction\"},\"registerDomainSeparator(string,string)\":{\"notice\":\"Register a new domain separator. The domain separator must have the following fields: name,version,chainId, verifyingContract. the chainId is the current network's chainId, and the verifyingContract is this forwarder. This method is given the domain name and version to create and register the domain separator value.\"},\"registerRequestType(string,string)\":{\"notice\":\"Register a new Request typehash.\"},\"verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)\":{\"notice\":\"verify the transaction would execute. validate the signature and the nonce of the request. revert if either signature or nonce are incorrect. also revert if domainSeparator or requestTypeHash are not registered.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/gsn/packages/contracts/src/forwarder/IForwarder.sol\":\"IForwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@opengsn/=lib/gsn/packages/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":gsn/=lib/gsn/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":utils/=test/utils/\"]},\"sources\":{\"lib/gsn/packages/contracts/src/forwarder/IForwarder.sol\":{\"keccak256\":\"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e42577c586894c9fc9e11a3281c0e2d4183121714fd1101380b6b2b66c144ba3\",\"dweb:/ipfs/QmPQphvUxhvnYGXtNRbU7WcmbEP2N7mMDgC5R8R9AqC9xG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"domainSeparator","type":"bytes32","indexed":true},{"internalType":"bytes","name":"domainValue","type":"bytes","indexed":false}],"type":"event","name":"DomainRegistered","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32","indexed":true},{"internalType":"string","name":"typeStr","type":"string","indexed":false}],"type":"event","name":"RequestTypeRegistered","anonymous":false},{"inputs":[{"internalType":"struct IForwarder.ForwardRequest","name":"forwardRequest","type":"tuple","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"validUntil","type":"uint256"}]},{"internalType":"bytes32","name":"domainSeparator","type":"bytes32"},{"internalType":"bytes32","name":"requestTypeHash","type":"bytes32"},{"internalType":"bytes","name":"suffixData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"payable","type":"function","name":"execute","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"ret","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"registerDomainSeparator"},{"inputs":[{"internalType":"string","name":"typeName","type":"string"},{"internalType":"string","name":"typeSuffix","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"registerRequestType"},{"inputs":[{"internalType":"struct IForwarder.ForwardRequest","name":"forwardRequest","type":"tuple","components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"validUntil","type":"uint256"}]},{"internalType":"bytes32","name":"domainSeparator","type":"bytes32"},{"internalType":"bytes32","name":"requestTypeHash","type":"bytes32"},{"internalType":"bytes","name":"suffixData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"view","type":"function","name":"verify"}],"devdoc":{"kind":"dev","methods":{"execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)":{"params":{"domainSeparator":"- domain used when signing this request","forwardRequest":"- all transaction parameters","requestTypeHash":"- request type used when signing this request.","signature":"- signature to validate. the transaction is verified, and then executed. the success and ret of \"call\" are returned. This method would revert only verification errors. target errors are reported using the returned \"success\" and ret string","suffixData":"- the extension data used when signing this request."}},"registerDomainSeparator(string,string)":{"params":{"name":"the domain's display name","version":"the domain/protocol version"}},"registerRequestType(string,string)":{"params":{"typeName":"- the name of the request type.","typeSuffix":"- any extra data after the generic params.  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)"}}},"version":1},"userdoc":{"kind":"user","methods":{"execute((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)":{"notice":"execute a transaction"},"registerDomainSeparator(string,string)":{"notice":"Register a new domain separator. The domain separator must have the following fields: name,version,chainId, verifyingContract. the chainId is the current network's chainId, and the verifyingContract is this forwarder. This method is given the domain name and version to create and register the domain separator value."},"registerRequestType(string,string)":{"notice":"Register a new Request typehash."},"verify((address,address,uint256,uint256,uint256,bytes,uint256),bytes32,bytes32,bytes,bytes)":{"notice":"verify the transaction would execute. validate the signature and the nonce of the request. revert if either signature or nonce are incorrect. also revert if domainSeparator or requestTypeHash are not registered."}},"version":1}},"settings":{"remappings":["@opengsn/=lib/gsn/packages/","@openzeppelin/=lib/openzeppelin-contracts/","@uniswap/v3-core/=lib/v3-core/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","gsn/=lib/gsn/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","utils/=test/utils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/gsn/packages/contracts/src/forwarder/IForwarder.sol":"IForwarder"},"libraries":{}},"sources":{"lib/gsn/packages/contracts/src/forwarder/IForwarder.sol":{"keccak256":"0xca05fe8ee1d0bbdd9edd83f16b8481fa67704f0ed5a42d5c0f76c8a3a47d73f4","urls":["bzz-raw://e42577c586894c9fc9e11a3281c0e2d4183121714fd1101380b6b2b66c144ba3","dweb:/ipfs/QmPQphvUxhvnYGXtNRbU7WcmbEP2N7mMDgC5R8R9AqC9xG"],"license":"GPL-3.0-only"}},"version":1},"ast":{"absolutePath":"lib/gsn/packages/contracts/src/forwarder/IForwarder.sol","id":83775,"exportedSymbols":{"IForwarder":[83774]},"nodeType":"SourceUnit","src":"41:2822:84","nodes":[{"id":83688,"nodeType":"PragmaDirective","src":"41:24:84","nodes":[],"literals":["solidity",">=","0.7",".6"]},{"id":83689,"nodeType":"PragmaDirective","src":"66:19:84","nodes":[],"literals":["abicoder","v2"]},{"id":83774,"nodeType":"ContractDefinition","src":"87:2775:84","nodes":[{"id":83704,"nodeType":"StructDefinition","src":"115:186:84","nodes":[],"canonicalName":"IForwarder.ForwardRequest","members":[{"constant":false,"id":83691,"mutability":"mutable","name":"from","nameLocation":"155:4:84","nodeType":"VariableDeclaration","scope":83704,"src":"147:12:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83690,"name":"address","nodeType":"ElementaryTypeName","src":"147:7:84","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":83693,"mutability":"mutable","name":"to","nameLocation":"177:2:84","nodeType":"VariableDeclaration","scope":83704,"src":"169:10:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83692,"name":"address","nodeType":"ElementaryTypeName","src":"169:7:84","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":83695,"mutability":"mutable","name":"value","nameLocation":"197:5:84","nodeType":"VariableDeclaration","scope":83704,"src":"189:13:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83694,"name":"uint256","nodeType":"ElementaryTypeName","src":"189:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":83697,"mutability":"mutable","name":"gas","nameLocation":"220:3:84","nodeType":"VariableDeclaration","scope":83704,"src":"212:11:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83696,"name":"uint256","nodeType":"ElementaryTypeName","src":"212:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":83699,"mutability":"mutable","name":"nonce","nameLocation":"241:5:84","nodeType":"VariableDeclaration","scope":83704,"src":"233:13:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83698,"name":"uint256","nodeType":"ElementaryTypeName","src":"233:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":83701,"mutability":"mutable","name":"data","nameLocation":"262:4:84","nodeType":"VariableDeclaration","scope":83704,"src":"256:10:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":83700,"name":"bytes","nodeType":"ElementaryTypeName","src":"256:5:84","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":83703,"mutability":"mutable","name":"validUntil","nameLocation":"284:10:84","nodeType":"VariableDeclaration","scope":83704,"src":"276:18:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83702,"name":"uint256","nodeType":"ElementaryTypeName","src":"276:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ForwardRequest","nameLocation":"122:14:84","scope":83774,"visibility":"public"},{"id":83710,"nodeType":"EventDefinition","src":"307:75:84","nodes":[],"anonymous":false,"eventSelector":"4bc68689cbe89a4a6333a3ab0a70093874da3e5bfb71e93102027f3f073687d8","name":"DomainRegistered","nameLocation":"313:16:84","parameters":{"id":83709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83706,"indexed":true,"mutability":"mutable","name":"domainSeparator","nameLocation":"346:15:84","nodeType":"VariableDeclaration","scope":83710,"src":"330:31:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"330:7:84","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":83708,"indexed":false,"mutability":"mutable","name":"domainValue","nameLocation":"369:11:84","nodeType":"VariableDeclaration","scope":83710,"src":"363:17:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":83707,"name":"bytes","nodeType":"ElementaryTypeName","src":"363:5:84","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"329:52:84"}},{"id":83716,"nodeType":"EventDefinition","src":"388:70:84","nodes":[],"anonymous":false,"eventSelector":"64d6bce64323458c44643c51fe45113efc882082f7b7fd5f09f0d69d2eedb202","name":"RequestTypeRegistered","nameLocation":"394:21:84","parameters":{"id":83715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83712,"indexed":true,"mutability":"mutable","name":"typeHash","nameLocation":"432:8:84","nodeType":"VariableDeclaration","scope":83716,"src":"416:24:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"416:7:84","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":83714,"indexed":false,"mutability":"mutable","name":"typeStr","nameLocation":"449:7:84","nodeType":"VariableDeclaration","scope":83716,"src":"442:14:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":83713,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:84","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:42:84"}},{"id":83723,"nodeType":"FunctionDefinition","src":"464:71:84","nodes":[],"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"473:8:84","parameters":{"id":83719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83718,"mutability":"mutable","name":"from","nameLocation":"490:4:84","nodeType":"VariableDeclaration","scope":83723,"src":"482:12:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83717,"name":"address","nodeType":"ElementaryTypeName","src":"482:7:84","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"481:14:84"},"returnParameters":{"id":83722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":83723,"src":"526:7:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83720,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:84","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"525:9:84"},"scope":83774,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":83738,"nodeType":"FunctionDefinition","src":"797:219:84","nodes":[],"documentation":{"id":83724,"nodeType":"StructuredDocumentation","src":"541:251:84","text":" verify the transaction would execute.\n validate the signature and the nonce of the request.\n revert if either signature or nonce are incorrect.\n also revert if domainSeparator or requestTypeHash are not registered."},"functionSelector":"ad9f99c7","implemented":false,"kind":"function","modifiers":[],"name":"verify","nameLocation":"806:6:84","parameters":{"id":83736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83727,"mutability":"mutable","name":"forwardRequest","nameLocation":"846:14:84","nodeType":"VariableDeclaration","scope":83738,"src":"822:38:84","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$83704_calldata_ptr","typeString":"struct IForwarder.ForwardRequest"},"typeName":{"id":83726,"nodeType":"UserDefinedTypeName","pathNode":{"id":83725,"name":"ForwardRequest","nameLocations":["822:14:84"],"nodeType":"IdentifierPath","referencedDeclaration":83704,"src":"822:14:84"},"referencedDeclaration":83704,"src":"822:14:84","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$83704_storage_ptr","typeString":"struct IForwarder.ForwardRequest"}},"visibility":"internal"},{"constant":false,"id":83729,"mutability":"mutable","name":"domainSeparator","nameLocation":"878:15:84","nodeType":"VariableDeclaration","scope":83738,"src":"870:23:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"870:7:84","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":83731,"mutability":"mutable","name":"requestTypeHash","nameLocation":"911:15:84","nodeType":"VariableDeclaration","scope":83738,"src":"903:23:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"903:7:84","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":83733,"mutability":"mutable","name":"suffixData","nameLocation":"951:10:84","nodeType":"VariableDeclaration","scope":83738,"src":"936:25:84","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":83732,"name":"bytes","nodeType":"ElementaryTypeName","src":"936:5:84","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":83735,"mutability":"mutable","name":"signature","nameLocation":"986:9:84","nodeType":"VariableDeclaration","scope":83738,"src":"971:24:84","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":83734,"name":"bytes","nodeType":"ElementaryTypeName","src":"971:5:84","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"812:189:84"},"returnParameters":{"id":83737,"nodeType":"ParameterList","parameters":[],"src":"1015:0:84"},"scope":83774,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":83757,"nodeType":"FunctionDefinition","src":"1648:272:84","nodes":[],"documentation":{"id":83739,"nodeType":"StructuredDocumentation","src":"1022:621:84","text":" execute a transaction\n @param forwardRequest - all transaction parameters\n @param domainSeparator - domain used when signing this request\n @param requestTypeHash - request type used when signing this request.\n @param suffixData - the extension data used when signing this request.\n @param signature - signature to validate.\n the transaction is verified, and then executed.\n the success and ret of \"call\" are returned.\n This method would revert only verification errors. target errors\n are reported using the returned \"success\" and ret string"},"functionSelector":"e024dc7f","implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1657:7:84","parameters":{"id":83751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83742,"mutability":"mutable","name":"forwardRequest","nameLocation":"1698:14:84","nodeType":"VariableDeclaration","scope":83757,"src":"1674:38:84","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$83704_calldata_ptr","typeString":"struct IForwarder.ForwardRequest"},"typeName":{"id":83741,"nodeType":"UserDefinedTypeName","pathNode":{"id":83740,"name":"ForwardRequest","nameLocations":["1674:14:84"],"nodeType":"IdentifierPath","referencedDeclaration":83704,"src":"1674:14:84"},"referencedDeclaration":83704,"src":"1674:14:84","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequest_$83704_storage_ptr","typeString":"struct IForwarder.ForwardRequest"}},"visibility":"internal"},{"constant":false,"id":83744,"mutability":"mutable","name":"domainSeparator","nameLocation":"1730:15:84","nodeType":"VariableDeclaration","scope":83757,"src":"1722:23:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1722:7:84","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":83746,"mutability":"mutable","name":"requestTypeHash","nameLocation":"1763:15:84","nodeType":"VariableDeclaration","scope":83757,"src":"1755:23:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1755:7:84","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":83748,"mutability":"mutable","name":"suffixData","nameLocation":"1803:10:84","nodeType":"VariableDeclaration","scope":83757,"src":"1788:25:84","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":83747,"name":"bytes","nodeType":"ElementaryTypeName","src":"1788:5:84","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":83750,"mutability":"mutable","name":"signature","nameLocation":"1838:9:84","nodeType":"VariableDeclaration","scope":83757,"src":"1823:24:84","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":83749,"name":"bytes","nodeType":"ElementaryTypeName","src":"1823:5:84","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1664:189:84"},"returnParameters":{"id":83756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83753,"mutability":"mutable","name":"success","nameLocation":"1893:7:84","nodeType":"VariableDeclaration","scope":83757,"src":"1888:12:84","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":83752,"name":"bool","nodeType":"ElementaryTypeName","src":"1888:4:84","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":83755,"mutability":"mutable","name":"ret","nameLocation":"1915:3:84","nodeType":"VariableDeclaration","scope":83757,"src":"1902:16:84","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":83754,"name":"bytes","nodeType":"ElementaryTypeName","src":"1902:5:84","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1887:32:84"},"scope":83774,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":83765,"nodeType":"FunctionDefinition","src":"2216:92:84","nodes":[],"documentation":{"id":83758,"nodeType":"StructuredDocumentation","src":"1926:285:84","text":" Register a new Request typehash.\n @param typeName - the name of the request type.\n @param typeSuffix - any extra data after the generic params.\n  (must add at least one param. The generic ForwardRequest type is always registered by the constructor)"},"functionSelector":"d9210be5","implemented":false,"kind":"function","modifiers":[],"name":"registerRequestType","nameLocation":"2225:19:84","parameters":{"id":83763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83760,"mutability":"mutable","name":"typeName","nameLocation":"2261:8:84","nodeType":"VariableDeclaration","scope":83765,"src":"2245:24:84","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":83759,"name":"string","nodeType":"ElementaryTypeName","src":"2245:6:84","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":83762,"mutability":"mutable","name":"typeSuffix","nameLocation":"2287:10:84","nodeType":"VariableDeclaration","scope":83765,"src":"2271:26:84","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":83761,"name":"string","nodeType":"ElementaryTypeName","src":"2271:6:84","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2244:54:84"},"returnParameters":{"id":83764,"nodeType":"ParameterList","parameters":[],"src":"2307:0:84"},"scope":83774,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":83773,"nodeType":"FunctionDefinition","src":"2771:89:84","nodes":[],"documentation":{"id":83766,"nodeType":"StructuredDocumentation","src":"2314:452:84","text":" Register a new domain separator.\n The domain separator must have the following fields: name,version,chainId, verifyingContract.\n the chainId is the current network's chainId, and the verifyingContract is this forwarder.\n This method is given the domain name and version to create and register the domain separator value.\n @param name the domain's display name\n @param version the domain/protocol version"},"functionSelector":"9c7b4592","implemented":false,"kind":"function","modifiers":[],"name":"registerDomainSeparator","nameLocation":"2780:23:84","parameters":{"id":83771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83768,"mutability":"mutable","name":"name","nameLocation":"2820:4:84","nodeType":"VariableDeclaration","scope":83773,"src":"2804:20:84","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":83767,"name":"string","nodeType":"ElementaryTypeName","src":"2804:6:84","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":83770,"mutability":"mutable","name":"version","nameLocation":"2842:7:84","nodeType":"VariableDeclaration","scope":83773,"src":"2826:23:84","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":83769,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:84","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2803:47:84"},"returnParameters":{"id":83772,"nodeType":"ParameterList","parameters":[],"src":"2859:0:84"},"scope":83774,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IForwarder","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[83774],"name":"IForwarder","nameLocation":"97:10:84","scope":83775,"usedErrors":[]}],"license":"GPL-3.0-only"},"id":84}