{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064b467c9d9a928b1e20f877297967c3082dfcf2e94ccd2ca4a5c3d3605065ae464736f6c63430008130033","sourceMap":"424:971:109:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:109;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064b467c9d9a928b1e20f877297967c3082dfcf2e94ccd2ca4a5c3d3605065ae464736f6c63430008130033","sourceMap":"424:971:109:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@opengsn/=lib/gsn/packages/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":gsn/=lib/gsn/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":utils/=test/utils/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@opengsn/=lib/gsn/packages/","@openzeppelin/=lib/openzeppelin-contracts/","@uniswap/v3-core/=lib/v3-core/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","gsn/=lib/gsn/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","utils/=test/utils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/Counters.sol":"Counters"},"libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Counters.sol":{"keccak256":"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1","urls":["bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee","dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Counters.sol","id":87906,"exportedSymbols":{"Counters":[87905]},"nodeType":"SourceUnit","src":"87:1309:109","nodes":[{"id":87833,"nodeType":"PragmaDirective","src":"87:23:109","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":87905,"nodeType":"ContractDefinition","src":"424:971:109","nodes":[{"id":87837,"nodeType":"StructDefinition","src":"447:374:109","nodes":[],"canonicalName":"Counters.Counter","members":[{"constant":false,"id":87836,"mutability":"mutable","name":"_value","nameLocation":"794:6:109","nodeType":"VariableDeclaration","scope":87837,"src":"786:14:109","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87835,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:109","scope":87905,"visibility":"public"},{"id":87849,"nodeType":"FunctionDefinition","src":"827:112:109","nodes":[],"body":{"id":87848,"nodeType":"Block","src":"901:38:109","nodes":[],"statements":[{"expression":{"expression":{"id":87845,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87840,"src":"918:7:109","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":87846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:109","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":87836,"src":"918:14:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":87844,"id":87847,"nodeType":"Return","src":"911:21:109"}]},"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:109","parameters":{"id":87841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87840,"mutability":"mutable","name":"counter","nameLocation":"860:7:109","nodeType":"VariableDeclaration","scope":87849,"src":"844:23:109","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":87839,"nodeType":"UserDefinedTypeName","pathNode":{"id":87838,"name":"Counter","nameLocations":["844:7:109"],"nodeType":"IdentifierPath","referencedDeclaration":87837,"src":"844:7:109"},"referencedDeclaration":87837,"src":"844:7:109","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:109"},"returnParameters":{"id":87844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":87849,"src":"892:7:109","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87842,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:109"},"scope":87905,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":87863,"nodeType":"FunctionDefinition","src":"945:123:109","nodes":[],"body":{"id":87862,"nodeType":"Block","src":"998:70:109","nodes":[],"statements":[{"id":87861,"nodeType":"UncheckedBlock","src":"1008:54:109","statements":[{"expression":{"id":87859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":87855,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87852,"src":"1032:7:109","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":87857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:109","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":87836,"src":"1032:14:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":87858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:109","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":87860,"nodeType":"ExpressionStatement","src":"1032:19:109"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:109","parameters":{"id":87853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87852,"mutability":"mutable","name":"counter","nameLocation":"980:7:109","nodeType":"VariableDeclaration","scope":87863,"src":"964:23:109","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":87851,"nodeType":"UserDefinedTypeName","pathNode":{"id":87850,"name":"Counter","nameLocations":["964:7:109"],"nodeType":"IdentifierPath","referencedDeclaration":87837,"src":"964:7:109"},"referencedDeclaration":87837,"src":"964:7:109","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:109"},"returnParameters":{"id":87854,"nodeType":"ParameterList","parameters":[],"src":"998:0:109"},"scope":87905,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":87891,"nodeType":"FunctionDefinition","src":"1074:229:109","nodes":[],"body":{"id":87890,"nodeType":"Block","src":"1127:176:109","nodes":[],"statements":[{"assignments":[87870],"declarations":[{"constant":false,"id":87870,"mutability":"mutable","name":"value","nameLocation":"1145:5:109","nodeType":"VariableDeclaration","scope":87890,"src":"1137:13:109","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":87873,"initialValue":{"expression":{"id":87871,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87866,"src":"1153:7:109","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":87872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:109","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":87836,"src":"1153:14:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:109"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":87877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":87875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87870,"src":"1185:5:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":87876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:109","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:109","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":87878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:109","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":87874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:109","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":87879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:109","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":87880,"nodeType":"ExpressionStatement","src":"1177:49:109"},{"id":87889,"nodeType":"UncheckedBlock","src":"1236:61:109","statements":[{"expression":{"id":87887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":87881,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87866,"src":"1260:7:109","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":87883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:109","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":87836,"src":"1260:14:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":87886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":87884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87870,"src":"1277:5:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":87885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:109","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":87888,"nodeType":"ExpressionStatement","src":"1260:26:109"}]}]},"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:109","parameters":{"id":87867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87866,"mutability":"mutable","name":"counter","nameLocation":"1109:7:109","nodeType":"VariableDeclaration","scope":87891,"src":"1093:23:109","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":87865,"nodeType":"UserDefinedTypeName","pathNode":{"id":87864,"name":"Counter","nameLocations":["1093:7:109"],"nodeType":"IdentifierPath","referencedDeclaration":87837,"src":"1093:7:109"},"referencedDeclaration":87837,"src":"1093:7:109","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:109"},"returnParameters":{"id":87868,"nodeType":"ParameterList","parameters":[],"src":"1127:0:109"},"scope":87905,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":87904,"nodeType":"FunctionDefinition","src":"1309:84:109","nodes":[],"body":{"id":87903,"nodeType":"Block","src":"1358:35:109","nodes":[],"statements":[{"expression":{"id":87901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":87897,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87894,"src":"1368:7:109","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":87899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:109","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":87836,"src":"1368:14:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":87900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:109","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:109","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":87902,"nodeType":"ExpressionStatement","src":"1368:18:109"}]},"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:109","parameters":{"id":87895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87894,"mutability":"mutable","name":"counter","nameLocation":"1340:7:109","nodeType":"VariableDeclaration","scope":87904,"src":"1324:23:109","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":87893,"nodeType":"UserDefinedTypeName","pathNode":{"id":87892,"name":"Counter","nameLocations":["1324:7:109"],"nodeType":"IdentifierPath","referencedDeclaration":87837,"src":"1324:7:109"},"referencedDeclaration":87837,"src":"1324:7:109","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$87837_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:109"},"returnParameters":{"id":87896,"nodeType":"ParameterList","parameters":[],"src":"1358:0:109"},"scope":87905,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":87834,"nodeType":"StructuredDocumentation","src":"112:311:109","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"linearizedBaseContracts":[87905],"name":"Counters","nameLocation":"432:8:109","scope":87906,"usedErrors":[]}],"license":"MIT"},"id":109}