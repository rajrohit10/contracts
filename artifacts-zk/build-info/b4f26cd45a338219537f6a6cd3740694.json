{"id":"b4f26cd45a338219537f6a6cd3740694","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    /**\n     * @dev A clone instance deployment failed.\n     */\n    error ERC1167FailedCreateClone();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(0, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert ERC1167FailedCreateClone();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(0, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert ERC1167FailedCreateClone();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := keccak256(add(ptr, 0x43), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/factories/PoolFactory.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.19 || 0.8.20;\nimport {IPoolFactory} from \"../interfaces/factories/IPoolFactory.sol\";\nimport {IPool} from \"../interfaces/IPool.sol\";\nimport {Pool} from \"../Pool.sol\";\nimport {Clones} from \"@openzeppelin/contracts/proxy/Clones.sol\";\n\ncontract PoolFactory is IPoolFactory {\n    address public immutable implementation;\n\n    bool public isPaused;\n    address public pauser;\n\n    uint256 public stableFee;\n    uint256 public volatileFee;\n    uint256 public constant MAX_FEE = 300; // 3%\n    // Override to indicate there is custom 0% fee - as a 0 value in the customFee mapping indicates\n    // that no custom fee rate has been set\n    uint256 public constant ZERO_FEE_INDICATOR = 420;\n    address public feeManager;\n\n    /// @dev used to change the name/symbol of the pool by calling emergencyCouncil\n    address public voter;\n\n    mapping(address => mapping(address => mapping(bool => address))) private _getPool;\n    address[] public allPools;\n    mapping(address => bool) private _isPool; // simplified check if its a pool, given that `stable` flag might not be available in peripherals\n    mapping(address => uint256) public customFee; // override for custom fees\n\n    address internal _temp0;\n    address internal _temp1;\n    bool internal _temp;\n\n    constructor(address _implementation) {\n        implementation = _implementation;\n        voter = msg.sender;\n        pauser = msg.sender;\n        feeManager = msg.sender;\n        isPaused = false;\n        stableFee = 5; // 0.05%\n        volatileFee = 30; // 0.3%\n    }\n\n    /// @inheritdoc IPoolFactory\n    function allPoolsLength() external view returns (uint256) {\n        return allPools.length;\n    }\n\n    /// @inheritdoc IPoolFactory\n    function getPool(address tokenA, address tokenB, uint24 fee) external view returns (address) {\n        return fee > 1 ? address(0) : fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false];\n    }\n\n    /// @inheritdoc IPoolFactory\n    function getPool(address tokenA, address tokenB, bool stable) external view returns (address) {\n        return _getPool[tokenA][tokenB][stable];\n    }\n\n    /// @inheritdoc IPoolFactory\n    function isPool(address pool) external view returns (bool) {\n        return _isPool[pool];\n    }\n\n    /// @inheritdoc IPoolFactory\n    function setVoter(address _voter) external {\n        if (msg.sender != voter) revert NotVoter();\n        voter = _voter;\n        emit SetVoter(_voter);\n    }\n\n    function setPauser(address _pauser) external {\n        if (msg.sender != pauser) revert NotPauser();\n        if (_pauser == address(0)) revert ZeroAddress();\n        pauser = _pauser;\n        emit SetPauser(_pauser);\n    }\n\n    function setPauseState(bool _state) external {\n        if (msg.sender != pauser) revert NotPauser();\n        isPaused = _state;\n        emit SetPauseState(_state);\n    }\n\n    function setFeeManager(address _feeManager) external {\n        if (msg.sender != feeManager) revert NotFeeManager();\n        if (_feeManager == address(0)) revert ZeroAddress();\n        feeManager = _feeManager;\n        emit SetFeeManager(_feeManager);\n    }\n\n    /// @inheritdoc IPoolFactory\n    function setFee(bool _stable, uint256 _fee) external {\n        if (msg.sender != feeManager) revert NotFeeManager();\n        if (_fee > MAX_FEE) revert FeeTooHigh();\n        if (_fee == 0) revert ZeroFee();\n        if (_stable) {\n            stableFee = _fee;\n        } else {\n            volatileFee = _fee;\n        }\n    }\n\n    /// @inheritdoc IPoolFactory\n    function setCustomFee(address pool, uint256 fee) external {\n        if (msg.sender != feeManager) revert NotFeeManager();\n        if (fee > MAX_FEE && fee != ZERO_FEE_INDICATOR) revert FeeTooHigh();\n        if (!_isPool[pool]) revert InvalidPool();\n\n        customFee[pool] = fee;\n        emit SetCustomFee(pool, fee);\n    }\n\n    /// @inheritdoc IPoolFactory\n    function getFee(address pool, bool _stable) public view returns (uint256) {\n        uint256 fee = customFee[pool];\n        return fee == ZERO_FEE_INDICATOR ? 0 : fee != 0 ? fee : _stable ? stableFee : volatileFee;\n    }\n\n    /// @inheritdoc IPoolFactory\n    function createPool(address tokenA, address tokenB, uint24 fee) external returns (address pool) {\n        if (fee > 1) revert FeeInvalid();\n        bool stable = fee == 1;\n        return createPool(tokenA, tokenB, stable);\n    }\n\n    /// @inheritdoc IPoolFactory\n    function createPool(address tokenA, address tokenB, bool stable) public returns (address pool) {\n        emit PoolStarted(tokenA, tokenB, stable);\n        if (tokenA == tokenB) revert SameAddress();\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        if (token0 == address(0)) revert ZeroAddress();\n        if (_getPool[token0][token1][stable] != address(0)) revert PoolAlreadyExists();\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1, stable)); // salt includes stable as well, 3 parameters\n        // pool = Clones.cloneDeterministic(implementation, salt);\n        pool = address(new Pool{salt: salt}());\n        IPool(pool).initialize(token0, token1, stable);\n        _getPool[token0][token1][stable] = pool;\n        _getPool[token1][token0][stable] = pool; // populate mapping in the reverse direction\n        allPools.push(pool);\n        _isPool[pool] = true;\n        emit PoolCreated(token0, token1, stable, pool, allPools.length);\n    }\n    \n}\n"},"contracts/interfaces/factories/IPoolFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IPoolFactory {\n    event SetFeeManager(address feeManager);\n    event SetPauser(address pauser);\n    event SetPauseState(bool state);\n    event SetVoter(address voter);\n    event PoolCreated(address indexed token0, address indexed token1, bool indexed stable, address pool, uint256);\n    event PoolStarted(address indexed tokenA, address indexed tokenB, bool indexed stable);\n    event SetCustomFee(address indexed pool, uint256 fee);\n\n    error FeeInvalid();\n    error FeeTooHigh();\n    error InvalidPool();\n    error NotFeeManager();\n    error NotPauser();\n    error NotVoter();\n    error PoolAlreadyExists();\n    error SameAddress();\n    error ZeroFee();\n    error ZeroAddress();\n\n    /// @notice returns the number of pools created from this factory\n    function allPoolsLength() external view returns (uint256);\n\n    /// @notice Is a valid pool created by this factory.\n    /// @param .\n    function isPool(address pool) external view returns (bool);\n\n    /// @notice Return address of pool created by this factory\n    /// @param tokenA .\n    /// @param tokenB .\n    /// @param stable True if stable, false if volatile\n    function getPool(address tokenA, address tokenB, bool stable) external view returns (address);\n\n    /// @notice Support for v3-style pools which wraps around getPool(tokenA,tokenB,stable)\n    /// @dev fee is converted to stable boolean.\n    /// @param tokenA .\n    /// @param tokenB .\n    /// @param fee  1 if stable, 0 if volatile, else returns address(0)\n    function getPool(address tokenA, address tokenB, uint24 fee) external view returns (address);\n\n    /// @dev Only called once to set to Voter.sol - Voter does not have a function\n    ///      to call this contract method, so once set it's immutable.\n    ///      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol\n    /// @param _voter .\n    function setVoter(address _voter) external;\n\n    function setPauser(address _pauser) external;\n\n    function setPauseState(bool _state) external;\n\n    function setFeeManager(address _feeManager) external;\n\n    /// @notice Set default fee for stable and volatile pools.\n    /// @dev Throws if higher than maximum fee.\n    ///      Throws if fee is zero.\n    /// @param _stable Stable or volatile pool.\n    /// @param _fee .\n    function setFee(bool _stable, uint256 _fee) external;\n\n    /// @notice Set overriding fee for a pool from the default\n    /// @dev A custom fee of zero means the default fee will be used.\n    function setCustomFee(address _pool, uint256 _fee) external;\n\n    /// @notice Returns fee for a pool, as custom fees are possible.\n    function getFee(address _pool, bool _stable) external view returns (uint256);\n\n    /// @notice Create a pool given two tokens and if they're stable/volatile\n    /// @dev token order does not matter\n    /// @param tokenA .\n    /// @param tokenB .\n    /// @param stable .\n    function createPool(address tokenA, address tokenB, bool stable) external returns (address pool);\n\n    /// @notice Support for v3-style pools which wraps around createPool(tokena,tokenB,stable)\n    /// @dev fee is converted to stable boolean\n    /// @dev token order does not matter\n    /// @param tokenA .\n    /// @param tokenB .\n    /// @param fee 1 if stable, 0 if volatile, else revert\n    function createPool(address tokenA, address tokenB, uint24 fee) external returns (address pool);\n\n    function isPaused() external view returns (bool);\n\n    function voter() external view returns (address);\n\n    function implementation() external view returns (address);\n}\n"},"contracts/interfaces/IPool.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IPool {\n    error DepositsNotEqual();\n    error BelowMinimumK();\n    error FactoryAlreadySet();\n    error InsufficientLiquidity();\n    error InsufficientLiquidityMinted();\n    error InsufficientLiquidityBurned();\n    error InsufficientOutputAmount();\n    error InsufficientInputAmount();\n    error IsPaused();\n    error InvalidTo();\n    error K();\n    error NotEmergencyCouncil();\n\n    event Fees(address indexed sender, uint256 amount0, uint256 amount1);\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\n    event Burn(address indexed sender, address indexed to, uint256 amount0, uint256 amount1);\n    event Swap(\n        address indexed sender,\n        address indexed to,\n        uint256 amount0In,\n        uint256 amount1In,\n        uint256 amount0Out,\n        uint256 amount1Out\n    );\n    event Sync(uint256 reserve0, uint256 reserve1);\n    event Claim(address indexed sender, address indexed recipient, uint256 amount0, uint256 amount1);\n\n    // Struct to capture time period obervations every 30 minutes, used for local oracles\n    struct Observation {\n        uint256 timestamp;\n        uint256 reserve0Cumulative;\n        uint256 reserve1Cumulative;\n    }\n\n    /// @notice Returns the decimal (dec), reserves (r), stable (st), and tokens (t) of token0 and token1\n    function metadata()\n        external\n        view\n        returns (uint256 dec0, uint256 dec1, uint256 r0, uint256 r1, bool st, address t0, address t1);\n\n    /// @notice Claim accumulated but unclaimed fees (claimable0 and claimable1)\n    function claimFees() external returns (uint256, uint256);\n\n    /// @notice Returns [token0, token1]\n    function tokens() external view returns (address, address);\n\n    /// @notice Address of token in the pool with the lower address value\n    function token0() external view returns (address);\n\n    /// @notice Address of token in the poool with the higher address value\n    function token1() external view returns (address);\n\n    /// @notice Address of linked PoolFees.sol\n    function poolFees() external view returns (address);\n\n    /// @notice Address of PoolFactory that created this contract\n    function factory() external view returns (address);\n\n    /// @notice Capture oracle reading every 30 minutes (1800 seconds)\n    function periodSize() external view returns (uint256);\n\n    /// @notice Amount of token0 in pool\n    function reserve0() external view returns (uint256);\n\n    /// @notice Amount of token1 in pool\n    function reserve1() external view returns (uint256);\n\n    /// @notice Timestamp of last update to pool\n    function blockTimestampLast() external view returns (uint256);\n\n    /// @notice Cumulative of reserve0 factoring in time elapsed\n    function reserve0CumulativeLast() external view returns (uint256);\n\n    /// @notice Cumulative of reserve1 factoring in time elapsed\n    function reserve1CumulativeLast() external view returns (uint256);\n\n    /// @notice Accumulated fees of token0 (global)\n    function index0() external view returns (uint256);\n\n    /// @notice Accumulated fees of token1 (global)\n    function index1() external view returns (uint256);\n\n    /// @notice Get an LP's relative index0 to index0\n    function supplyIndex0(address) external view returns (uint256);\n\n    /// @notice Get an LP's relative index1 to index1\n    function supplyIndex1(address) external view returns (uint256);\n\n    /// @notice Amount of unclaimed, but claimable tokens from fees of token0 for an LP\n    function claimable0(address) external view returns (uint256);\n\n    /// @notice Amount of unclaimed, but claimable tokens from fees of token1 for an LP\n    function claimable1(address) external view returns (uint256);\n\n    /// @notice Set pool name\n    ///         Only callable by Voter.emergencyCouncil()\n    /// @param __name String of new name\n    function setName(string calldata __name) external;\n\n    /// @notice Set pool symbol\n    ///         Only callable by Voter.emergencyCouncil()\n    /// @param __symbol String of new symbol\n    function setSymbol(string calldata __symbol) external;\n\n    /// @notice Get the number of observations recorded\n    function observationLength() external view returns (uint256);\n\n    /// @notice Get the value of the most recent observation\n    function lastObservation() external view returns (Observation memory);\n\n    /// @notice True if pool is stable, false if volatile\n    function stable() external view returns (bool);\n\n    /// @notice Produces the cumulative price using counterfactuals to save gas and avoid a call to sync.\n    function currentCumulativePrices()\n        external\n        view\n        returns (uint256 reserve0Cumulative, uint256 reserve1Cumulative, uint256 blockTimestamp);\n\n    /// @notice Provides twap price with user configured granularity, up to the full window size\n    /// @param tokenIn .\n    /// @param amountIn .\n    /// @param granularity .\n    /// @return amountOut .\n    function quote(address tokenIn, uint256 amountIn, uint256 granularity) external view returns (uint256 amountOut);\n\n    /// @notice Returns a memory set of TWAP prices\n    ///         Same as calling sample(tokenIn, amountIn, points, 1)\n    /// @param tokenIn .\n    /// @param amountIn .\n    /// @param points Number of points to return\n    /// @return Array of TWAP prices\n    function prices(address tokenIn, uint256 amountIn, uint256 points) external view returns (uint256[] memory);\n\n    /// @notice Same as prices with with an additional window argument.\n    ///         Window = 2 means 2 * 30min (or 1 hr) between observations\n    /// @param tokenIn .\n    /// @param amountIn .\n    /// @param points .\n    /// @param window .\n    /// @return Array of TWAP prices\n    function sample(\n        address tokenIn,\n        uint256 amountIn,\n        uint256 points,\n        uint256 window\n    ) external view returns (uint256[] memory);\n\n    /// @notice This low-level function should be called from a contract which performs important safety checks\n    /// @param amount0Out   Amount of token0 to send to `to`\n    /// @param amount1Out   Amount of token1 to send to `to`\n    /// @param to           Address to recieve the swapped output\n    /// @param data         Additional calldata for flashloans\n    function swap(uint256 amount0Out, uint256 amount1Out, address to, bytes calldata data) external;\n\n    /// @notice This low-level function should be called from a contract which performs important safety checks\n    ///         standard uniswap v2 implementation\n    /// @param to Address to receive token0 and token1 from burning the pool token\n    /// @return amount0 Amount of token0 returned\n    /// @return amount1 Amount of token1 returned\n    function burn(address to) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice This low-level function should be called by addLiquidity functions in Router.sol, which performs important safety checks\n    ///         standard uniswap v2 implementation\n    /// @param to           Address to receive the minted LP token\n    /// @return liquidity   Amount of LP token minted\n    function mint(address to) external returns (uint256 liquidity);\n\n    /// @notice Update reserves and, on the first call per block, price accumulators\n    /// @return _reserve0 .\n    /// @return _reserve1 .\n    /// @return _blockTimestampLast .\n    function getReserves() external view returns (uint256 _reserve0, uint256 _reserve1, uint256 _blockTimestampLast);\n\n    /// @notice Get the amount of tokenOut given the amount of tokenIn\n    /// @param amountIn Amount of token in\n    /// @param tokenIn  Address of token\n    /// @return Amount out\n    function getAmountOut(uint256 amountIn, address tokenIn) external view returns (uint256);\n\n    /// @notice Force balances to match reserves\n    /// @param to Address to receive any skimmed rewards\n    function skim(address to) external;\n\n    /// @notice Force reserves to match balances\n    function sync() external;\n\n    /// @notice Called on pool creation by PoolFactory\n    /// @param _token0 Address of token0\n    /// @param _token1 Address of token1\n    /// @param _stable True if stable, false if volatile\n    function initialize(address _token0, address _token1, bool _stable) external;\n}\n"},"contracts/interfaces/IPoolCallee.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IPoolCallee {\n    function hook(address sender, uint256 amount0, uint256 amount1, bytes calldata data) external;\n}\n"},"contracts/interfaces/IVoter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IVoter {\n    error AlreadyVotedOrDeposited();\n    error DistributeWindow();\n    error FactoryPathNotApproved();\n    error GaugeAlreadyKilled();\n    error GaugeAlreadyRevived();\n    error GaugeExists();\n    error GaugeDoesNotExist(address _pool);\n    error GaugeNotAlive(address _gauge);\n    error InactiveManagedNFT();\n    error MaximumVotingNumberTooLow();\n    error NonZeroVotes();\n    error NotAPool();\n    error NotApprovedOrOwner();\n    error NotGovernor();\n    error NotEmergencyCouncil();\n    error NotMinter();\n    error NotWhitelistedNFT();\n    error NotWhitelistedToken();\n    error SameValue();\n    error SpecialVotingWindow();\n    error TooManyPools();\n    error UnequalLengths();\n    error ZeroBalance();\n    error ZeroAddress();\n\n    event GaugeCreated(\n        address indexed poolFactory,\n        address indexed votingRewardsFactory,\n        address indexed gaugeFactory,\n        address pool,\n        address bribeVotingReward,\n        address feeVotingReward,\n        address gauge,\n        address creator\n    );\n    event GaugeKilled(address indexed gauge);\n    event GaugeRevived(address indexed gauge);\n    event Voted(\n        address indexed voter,\n        address indexed pool,\n        uint256 indexed tokenId,\n        uint256 weight,\n        uint256 totalWeight,\n        uint256 timestamp\n    );\n    event Abstained(\n        address indexed voter,\n        address indexed pool,\n        uint256 indexed tokenId,\n        uint256 weight,\n        uint256 totalWeight,\n        uint256 timestamp\n    );\n    event NotifyReward(address indexed sender, address indexed reward, uint256 amount);\n    event DistributeReward(address indexed sender, address indexed gauge, uint256 amount);\n    event WhitelistToken(address indexed whitelister, address indexed token, bool indexed _bool);\n    event WhitelistNFT(address indexed whitelister, uint256 indexed tokenId, bool indexed _bool);\n\n    /// @notice Store trusted forwarder address to pass into factories\n    function forwarder() external view returns (address);\n\n    /// @notice The ve token that governs these contracts\n    function ve() external view returns (address);\n\n    /// @notice Factory registry for valid pool / gauge / rewards factories\n    function factoryRegistry() external view returns (address);\n\n    /// @notice Address of Minter.sol\n    function minter() external view returns (address);\n\n    /// @notice Standard OZ IGovernor using ve for vote weights.\n    function governor() external view returns (address);\n\n    /// @notice Custom Epoch Governor using ve for vote weights.\n    function epochGovernor() external view returns (address);\n\n    /// @notice credibly neutral party similar to Curve's Emergency DAO\n    function emergencyCouncil() external view returns (address);\n\n    /// @dev Total Voting Weights\n    function totalWeight() external view returns (uint256);\n\n    /// @dev Most number of pools one voter can vote for at once\n    function maxVotingNum() external view returns (uint256);\n\n    // mappings\n    /// @dev Pool => Gauge\n    function gauges(address pool) external view returns (address);\n\n    /// @dev Gauge => Pool\n    function poolForGauge(address gauge) external view returns (address);\n\n    /// @dev Gauge => Fees Voting Reward\n    function gaugeToFees(address gauge) external view returns (address);\n\n    /// @dev Gauge => Bribes Voting Reward\n    function gaugeToBribe(address gauge) external view returns (address);\n\n    /// @dev Pool => Weights\n    function weights(address pool) external view returns (uint256);\n\n    /// @dev NFT => Pool => Votes\n    function votes(uint256 tokenId, address pool) external view returns (uint256);\n\n    /// @dev NFT => Total voting weight of NFT\n    function usedWeights(uint256 tokenId) external view returns (uint256);\n\n    /// @dev Nft => Timestamp of last vote (ensures single vote per epoch)\n    function lastVoted(uint256 tokenId) external view returns (uint256);\n\n    /// @dev Address => Gauge\n    function isGauge(address) external view returns (bool);\n\n    /// @dev Token => Whitelisted status\n    function isWhitelistedToken(address token) external view returns (bool);\n\n    /// @dev TokenId => Whitelisted status\n    function isWhitelistedNFT(uint256 tokenId) external view returns (bool);\n\n    /// @dev Gauge => Liveness status\n    function isAlive(address gauge) external view returns (bool);\n\n    /// @dev Gauge => Amount claimable\n    function claimable(address gauge) external view returns (uint256);\n\n    /// @notice Number of pools with a Gauge\n    function length() external view returns (uint256);\n\n    /// @notice Called by Minter to distribute weekly emissions rewards for disbursement amongst gauges.\n    /// @dev Assumes totalWeight != 0 (Will never be zero as long as users are voting).\n    ///      Throws if not called by minter.\n    /// @param _amount Amount of rewards to distribute.\n    function notifyRewardAmount(uint256 _amount) external;\n\n    /// @dev Utility to distribute to gauges of pools in range _start to _finish.\n    /// @param _start   Starting index of gauges to distribute to.\n    /// @param _finish  Ending index of gauges to distribute to.\n    function distribute(uint256 _start, uint256 _finish) external;\n\n    /// @dev Utility to distribute to gauges of pools in array.\n    /// @param _gauges Array of gauges to distribute to.\n    function distribute(address[] memory _gauges) external;\n\n    /// @notice Called by users to update voting balances in voting rewards contracts.\n    /// @param _tokenId Id of veNFT whose balance you wish to update.\n    function poke(uint256 _tokenId) external;\n\n    /// @notice Called by users to vote for pools. Votes distributed proportionally based on weights.\n    ///         Can only vote or deposit into a managed NFT once per epoch.\n    ///         Can only vote for gauges that have not been killed.\n    /// @dev Weights are distributed proportional to the sum of the weights in the array.\n    ///      Throws if length of _poolVote and _weights do not match.\n    /// @param _tokenId     Id of veNFT you are voting with.\n    /// @param _poolVote    Array of pools you are voting for.\n    /// @param _weights     Weights of pools.\n    function vote(uint256 _tokenId, address[] calldata _poolVote, uint256[] calldata _weights) external;\n\n    /// @notice Called by users to reset voting state. Required if you wish to make changes to\n    ///         veNFT state (e.g. merge, split, deposit into managed etc).\n    ///         Cannot reset in the same epoch that you voted in.\n    ///         Can vote or deposit into a managed NFT again after reset.\n    /// @param _tokenId Id of veNFT you are reseting.\n    function reset(uint256 _tokenId) external;\n\n    /// @notice Called by users to deposit into a managed NFT.\n    ///         Can only vote or deposit into a managed NFT once per epoch.\n    ///         Note that NFTs deposited into a managed NFT will be re-locked\n    ///         to the maximum lock time on withdrawal.\n    /// @dev Throws if not approved or owner.\n    ///      Throws if managed NFT is inactive.\n    ///      Throws if depositing within privileged window (one hour prior to epoch flip).\n    function depositManaged(uint256 _tokenId, uint256 _mTokenId) external;\n\n    /// @notice Called by users to withdraw from a managed NFT.\n    ///         Cannot do it in the same epoch that you deposited into a managed NFT.\n    ///         Can vote or deposit into a managed NFT again after withdrawing.\n    ///         Note that the NFT withdrawn is re-locked to the maximum lock time.\n    function withdrawManaged(uint256 _tokenId) external;\n\n    /// @notice Claim emissions from gauges.\n    /// @param _gauges Array of gauges to collect emissions from.\n    function claimRewards(address[] memory _gauges) external;\n\n    /// @notice Claim bribes for a given NFT.\n    /// @dev Utility to help batch bribe claims.\n    /// @param _bribes  Array of BribeVotingReward contracts to collect from.\n    /// @param _tokens  Array of tokens that are used as bribes.\n    /// @param _tokenId Id of veNFT that you wish to claim bribes for.\n    function claimBribes(address[] memory _bribes, address[][] memory _tokens, uint256 _tokenId) external;\n\n    /// @notice Claim fees for a given NFT.\n    /// @dev Utility to help batch fee claims.\n    /// @param _fees    Array of FeesVotingReward contracts to collect from.\n    /// @param _tokens  Array of tokens that are used as fees.\n    /// @param _tokenId Id of veNFT that you wish to claim fees for.\n    function claimFees(address[] memory _fees, address[][] memory _tokens, uint256 _tokenId) external;\n\n    /// @notice Set new governor.\n    /// @dev Throws if not called by governor.\n    /// @param _governor .\n    function setGovernor(address _governor) external;\n\n    /// @notice Set new epoch based governor.\n    /// @dev Throws if not called by governor.\n    /// @param _epochGovernor .\n    function setEpochGovernor(address _epochGovernor) external;\n\n    /// @notice Set new emergency council.\n    /// @dev Throws if not called by emergency council.\n    /// @param _emergencyCouncil .\n    function setEmergencyCouncil(address _emergencyCouncil) external;\n\n    /// @notice Set maximum number of gauges that can be voted for.\n    /// @dev Throws if not called by governor.\n    ///      Throws if _maxVotingNum is too low.\n    ///      Throws if the values are the same.\n    /// @param _maxVotingNum .\n    function setMaxVotingNum(uint256 _maxVotingNum) external;\n\n    /// @notice Whitelist (or unwhitelist) token for use in bribes.\n    /// @dev Throws if not called by governor.\n    /// @param _token .\n    /// @param _bool .\n    function whitelistToken(address _token, bool _bool) external;\n\n    /// @notice Whitelist (or unwhitelist) token id for voting in last hour prior to epoch flip.\n    /// @dev Throws if not called by governor.\n    ///      Throws if already whitelisted.\n    /// @param _tokenId .\n    /// @param _bool .\n    function whitelistNFT(uint256 _tokenId, bool _bool) external;\n\n    /// @notice Create a new gauge (unpermissioned).\n    /// @dev Governor can create a new gauge for a pool with any address.\n    /// @param _poolFactory .\n    /// @param _pool .\n    function createGauge(address _poolFactory, address _pool) external returns (address);\n\n    /// @notice Kills a gauge. The gauge will not receive any new emissions and cannot be deposited into.\n    ///         Can still withdraw from gauge.\n    /// @dev Throws if not called by emergency council.\n    ///      Throws if gauge already killed.\n    /// @param _gauge .\n    function killGauge(address _gauge) external;\n\n    /// @notice Revives a killed gauge. Gauge will can receive emissions and deposits again.\n    /// @dev Throws if not called by emergency council.\n    ///      Throws if gauge is not killed.\n    /// @param _gauge .\n    function reviveGauge(address _gauge) external;\n\n    /// @dev Update claims to emissions for an array of gauges.\n    /// @param _gauges Array of gauges to update emissions for.\n    function updateFor(address[] memory _gauges) external;\n\n    /// @dev Update claims to emissions for gauges based on their pool id as stored in Voter.\n    /// @param _start   Starting index of pools.\n    /// @param _end     Ending index of pools.\n    function updateFor(uint256 _start, uint256 _end) external;\n\n    /// @dev Update claims to emissions for single gauge\n    /// @param _gauge .\n    function updateFor(address _gauge) external;\n}\n"},"contracts/Pool.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.19 || 0.8.20;\nimport {Math} from \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport {IPool} from \"./interfaces/IPool.sol\";\nimport {IVoter} from \"./interfaces/IVoter.sol\";\nimport {IPoolCallee} from \"./interfaces/IPoolCallee.sol\";\nimport {IPoolFactory} from \"./interfaces/factories/IPoolFactory.sol\";\nimport {PoolFees} from \"./PoolFees.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {ERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/// @title Pool\n/// @author velodrome.finance, @figs999, @pegahcarter\n/// @notice Veldrome V2 token pool, either stable or volatile\ncontract Pool is IPool, ERC20Permit, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    string private _name;\n    string private _symbol;\n    address private _voter;\n\n    /// @inheritdoc IPool\n    bool public stable;\n\n    uint256 internal constant MINIMUM_LIQUIDITY = 10 ** 3;\n    uint256 internal constant MINIMUM_K = 10 ** 10;\n\n    /// @inheritdoc IPool\n    address public token0;\n    /// @inheritdoc IPool\n    address public token1;\n    /// @inheritdoc IPool\n    address public poolFees;\n    /// @inheritdoc IPool\n    address public factory;\n\n    /// @inheritdoc IPool\n    uint256 public constant periodSize = 1800;\n\n    Observation[] public observations;\n\n    uint256 internal decimals0;\n    uint256 internal decimals1;\n\n    /// @inheritdoc IPool\n    uint256 public reserve0;\n    /// @inheritdoc IPool\n    uint256 public reserve1;\n    /// @inheritdoc IPool\n    uint256 public blockTimestampLast;\n\n    /// @inheritdoc IPool\n    uint256 public reserve0CumulativeLast;\n    /// @inheritdoc IPool\n    uint256 public reserve1CumulativeLast;\n\n    /// @inheritdoc IPool\n    uint256 public index0;\n    /// @inheritdoc IPool\n    uint256 public index1;\n\n    /// @inheritdoc IPool\n    mapping(address => uint256) public supplyIndex0;\n    /// @inheritdoc IPool\n    mapping(address => uint256) public supplyIndex1;\n\n    /// @inheritdoc IPool\n    mapping(address => uint256) public claimable0;\n    /// @inheritdoc IPool\n    mapping(address => uint256) public claimable1;\n\n    constructor() ERC20(\"\", \"\") ERC20Permit(\"\") {}\n\n    /// @inheritdoc IPool\n    function initialize(address _token0, address _token1, bool _stable) external {\n        if (factory != address(0)) revert FactoryAlreadySet();\n        factory = msg.sender;\n        _voter = IPoolFactory(factory).voter();\n        (token0, token1, stable) = (_token0, _token1, _stable);\n        poolFees = address(new PoolFees(_token0, _token1));\n        string memory symbol0 = ERC20(_token0).symbol();\n        string memory symbol1 = ERC20(_token1).symbol();\n        if (_stable) {\n            _name = string(abi.encodePacked(\"StableV2 AMM - \", symbol0, \"/\", symbol1));\n            _symbol = string(abi.encodePacked(\"sAMMV2-\", symbol0, \"/\", symbol1));\n        } else {\n            _name = string(abi.encodePacked(\"VolatileV2 AMM - \", symbol0, \"/\", symbol1));\n            _symbol = string(abi.encodePacked(\"vAMMV2-\", symbol0, \"/\", symbol1));\n        }\n\n        decimals0 = 10 ** ERC20(_token0).decimals();\n        decimals1 = 10 ** ERC20(_token1).decimals();\n\n        observations.push(Observation(block.timestamp, 0, 0));\n    }\n\n    /// @inheritdoc IPool\n    function setName(string calldata __name) external {\n        if (msg.sender != IVoter(_voter).emergencyCouncil()) revert NotEmergencyCouncil();\n        _name = __name;\n    }\n\n    /// @inheritdoc IPool\n    function setSymbol(string calldata __symbol) external {\n        if (msg.sender != IVoter(_voter).emergencyCouncil()) revert NotEmergencyCouncil();\n        _symbol = __symbol;\n    }\n\n    /// @inheritdoc IPool\n    function observationLength() external view returns (uint256) {\n        return observations.length;\n    }\n\n    /// @inheritdoc IPool\n    function lastObservation() public view returns (Observation memory) {\n        return observations[observations.length - 1];\n    }\n\n    /// @inheritdoc IPool\n    function metadata()\n        external\n        view\n        returns (uint256 dec0, uint256 dec1, uint256 r0, uint256 r1, bool st, address t0, address t1)\n    {\n        return (decimals0, decimals1, reserve0, reserve1, stable, token0, token1);\n    }\n\n    /// @inheritdoc IPool\n    function tokens() external view returns (address, address) {\n        return (token0, token1);\n    }\n\n    /// @inheritdoc IPool\n    function claimFees() external returns (uint256 claimed0, uint256 claimed1) {\n        _updateFor(msg.sender);\n\n        claimed0 = claimable0[msg.sender];\n        claimed1 = claimable1[msg.sender];\n\n        if (claimed0 > 0 || claimed1 > 0) {\n            claimable0[msg.sender] = 0;\n            claimable1[msg.sender] = 0;\n\n            PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1);\n\n            emit Claim(msg.sender, msg.sender, claimed0, claimed1);\n        }\n    }\n\n    /// @dev Accrue fees on token0\n    function _update0(uint256 amount) internal {\n        // Only update on this pool if there is a fee\n        if (amount == 0) return;\n        IERC20(token0).safeTransfer(poolFees, amount); // transfer the fees out to PoolFees\n        uint256 _ratio = (amount * 1e18) / totalSupply(); // 1e18 adjustment is removed during claim\n        if (_ratio > 0) {\n            index0 += _ratio;\n        }\n        emit Fees(msg.sender, amount, 0);\n    }\n\n    /// @dev Accrue fees on token1\n    function _update1(uint256 amount) internal {\n        // Only update on this pool if there is a fee\n        if (amount == 0) return;\n        IERC20(token1).safeTransfer(poolFees, amount);\n        uint256 _ratio = (amount * 1e18) / totalSupply();\n        if (_ratio > 0) {\n            index1 += _ratio;\n        }\n        emit Fees(msg.sender, 0, amount);\n    }\n\n    /// @dev This function MUST be called on any balance changes, otherwise can be used to infinitely claim fees\n    ///      Fees are segregated from core funds, so fees can never put liquidity at risk.\n    function _updateFor(address recipient) internal {\n        uint256 _supplied = balanceOf(recipient); // get LP balance of `recipient`\n        if (_supplied > 0) {\n            uint256 _supplyIndex0 = supplyIndex0[recipient]; // get last adjusted index0 for recipient\n            uint256 _supplyIndex1 = supplyIndex1[recipient];\n            uint256 _index0 = index0; // get global index0 for accumulated fees\n            uint256 _index1 = index1;\n            supplyIndex0[recipient] = _index0; // update user current position to global position\n            supplyIndex1[recipient] = _index1;\n            uint256 _delta0 = _index0 - _supplyIndex0; // see if there is any difference that need to be accrued\n            uint256 _delta1 = _index1 - _supplyIndex1;\n            if (_delta0 > 0) {\n                uint256 _share = (_supplied * _delta0) / 1e18; // add accrued difference for each supplied token\n                claimable0[recipient] += _share;\n            }\n            if (_delta1 > 0) {\n                uint256 _share = (_supplied * _delta1) / 1e18;\n                claimable1[recipient] += _share;\n            }\n        } else {\n            supplyIndex0[recipient] = index0; // new users are set to the default global state\n            supplyIndex1[recipient] = index1;\n        }\n    }\n\n    /// @inheritdoc IPool\n    function getReserves() public view returns (uint256 _reserve0, uint256 _reserve1, uint256 _blockTimestampLast) {\n        _reserve0 = reserve0;\n        _reserve1 = reserve1;\n        _blockTimestampLast = blockTimestampLast;\n    }\n\n    /// @dev update reserves and, on the first call per block, price accumulators\n    function _update(uint256 balance0, uint256 balance1, uint256 _reserve0, uint256 _reserve1) internal {\n        uint256 blockTimestamp = block.timestamp;\n        uint256 timeElapsed = blockTimestamp - blockTimestampLast;\n        if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {\n            reserve0CumulativeLast += _reserve0 * timeElapsed;\n            reserve1CumulativeLast += _reserve1 * timeElapsed;\n        }\n\n        Observation memory _point = lastObservation();\n        timeElapsed = blockTimestamp - _point.timestamp; // compare the last observation with current timestamp, if greater than 30 minutes, record a new event\n        if (timeElapsed > periodSize) {\n            observations.push(Observation(blockTimestamp, reserve0CumulativeLast, reserve1CumulativeLast));\n        }\n        reserve0 = balance0;\n        reserve1 = balance1;\n        blockTimestampLast = blockTimestamp;\n        emit Sync(reserve0, reserve1);\n    }\n\n    /// @inheritdoc IPool\n    function currentCumulativePrices()\n        public\n        view\n        returns (uint256 reserve0Cumulative, uint256 reserve1Cumulative, uint256 blockTimestamp)\n    {\n        blockTimestamp = block.timestamp;\n        reserve0Cumulative = reserve0CumulativeLast;\n        reserve1Cumulative = reserve1CumulativeLast;\n\n        // if time has elapsed since the last update on the pool, mock the accumulated price values\n        (uint256 _reserve0, uint256 _reserve1, uint256 _blockTimestampLast) = getReserves();\n        if (_blockTimestampLast != blockTimestamp) {\n            // subtraction overflow is desired\n            uint256 timeElapsed = blockTimestamp - _blockTimestampLast;\n            reserve0Cumulative += _reserve0 * timeElapsed;\n            reserve1Cumulative += _reserve1 * timeElapsed;\n        }\n    }\n\n    /// @inheritdoc IPool\n    function quote(address tokenIn, uint256 amountIn, uint256 granularity) external view returns (uint256 amountOut) {\n        uint256[] memory _prices = sample(tokenIn, amountIn, granularity, 1);\n        uint256 priceAverageCumulative;\n        uint256 _length = _prices.length;\n        for (uint256 i = 0; i < _length; i++) {\n            priceAverageCumulative += _prices[i];\n        }\n        return priceAverageCumulative / granularity;\n    }\n\n    /// @inheritdoc IPool\n    function prices(address tokenIn, uint256 amountIn, uint256 points) external view returns (uint256[] memory) {\n        return sample(tokenIn, amountIn, points, 1);\n    }\n\n    /// @inheritdoc IPool\n    function sample(\n        address tokenIn,\n        uint256 amountIn,\n        uint256 points,\n        uint256 window\n    ) public view returns (uint256[] memory) {\n        uint256[] memory _prices = new uint256[](points);\n\n        uint256 length = observations.length - 1;\n        uint256 i = length - (points * window);\n        uint256 nextIndex = 0;\n        uint256 index = 0;\n\n        for (; i < length; i += window) {\n            nextIndex = i + window;\n            uint256 timeElapsed = observations[nextIndex].timestamp - observations[i].timestamp;\n            uint256 _reserve0 = (observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative) /\n                timeElapsed;\n            uint256 _reserve1 = (observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative) /\n                timeElapsed;\n            _prices[index] = _getAmountOut(amountIn, tokenIn, _reserve0, _reserve1);\n            // index < length; length cannot overflow\n            unchecked {\n                index = index + 1;\n            }\n        }\n        return _prices;\n    }\n\n    /// @inheritdoc IPool\n    function mint(address to) external nonReentrant returns (uint256 liquidity) {\n        (uint256 _reserve0, uint256 _reserve1) = (reserve0, reserve1);\n        uint256 _balance0 = IERC20(token0).balanceOf(address(this));\n        uint256 _balance1 = IERC20(token1).balanceOf(address(this));\n        uint256 _amount0 = _balance0 - _reserve0;\n        uint256 _amount1 = _balance1 - _reserve1;\n\n        uint256 _totalSupply = totalSupply(); // gas savings, must be defined here since totalSupply can update in _mintFee\n        if (_totalSupply == 0) {\n            liquidity = Math.sqrt(_amount0 * _amount1) - MINIMUM_LIQUIDITY;\n            _mint(address(1), MINIMUM_LIQUIDITY); // permanently lock the first MINIMUM_LIQUIDITY tokens - cannot be address(0)\n            if (stable) {\n                if ((_amount0 * 1e18) / decimals0 != (_amount1 * 1e18) / decimals1) revert DepositsNotEqual();\n                if (_k(_amount0, _amount1) <= MINIMUM_K) revert BelowMinimumK();\n            }\n        } else {\n            liquidity = Math.min((_amount0 * _totalSupply) / _reserve0, (_amount1 * _totalSupply) / _reserve1);\n        }\n        if (liquidity < MINIMUM_LIQUIDITY) revert InsufficientLiquidityMinted();\n        _mint(to, liquidity);\n\n        _update(_balance0, _balance1, _reserve0, _reserve1);\n        emit Mint(msg.sender, _amount0, _amount1);\n    }\n\n    /// @inheritdoc IPool\n    function burn(address to) external nonReentrant returns (uint256 amount0, uint256 amount1) {\n        (uint256 _reserve0, uint256 _reserve1) = (reserve0, reserve1);\n        (address _token0, address _token1) = (token0, token1);\n        uint256 _balance0 = IERC20(_token0).balanceOf(address(this));\n        uint256 _balance1 = IERC20(_token1).balanceOf(address(this));\n        uint256 _liquidity = balanceOf(address(this));\n\n        uint256 _totalSupply = totalSupply(); // gas savings, must be defined here since totalSupply can update in _mintFee\n        amount0 = (_liquidity * _balance0) / _totalSupply; // using balances ensures pro-rata distribution\n        amount1 = (_liquidity * _balance1) / _totalSupply; // using balances ensures pro-rata distribution\n        if (amount0 == 0 || amount1 == 0) revert InsufficientLiquidityBurned();\n        _burn(address(this), _liquidity);\n        IERC20(_token0).safeTransfer(to, amount0);\n        IERC20(_token1).safeTransfer(to, amount1);\n        _balance0 = IERC20(_token0).balanceOf(address(this));\n        _balance1 = IERC20(_token1).balanceOf(address(this));\n\n        _update(_balance0, _balance1, _reserve0, _reserve1);\n        emit Burn(msg.sender, to, amount0, amount1);\n    }\n\n    /// @inheritdoc IPool\n    function swap(uint256 amount0Out, uint256 amount1Out, address to, bytes calldata data) external nonReentrant {\n        if (IPoolFactory(factory).isPaused()) revert IsPaused();\n        if (amount0Out == 0 && amount1Out == 0) revert InsufficientOutputAmount();\n        (uint256 _reserve0, uint256 _reserve1) = (reserve0, reserve1);\n        if (amount0Out >= _reserve0 || amount1Out >= _reserve1) revert InsufficientLiquidity();\n\n        uint256 _balance0;\n        uint256 _balance1;\n        {\n            // scope for _token{0,1}, avoids stack too deep errors\n            (address _token0, address _token1) = (token0, token1);\n            if (to == _token0 || to == _token1) revert InvalidTo();\n            if (amount0Out > 0) IERC20(_token0).safeTransfer(to, amount0Out); // optimistically transfer tokens\n            if (amount1Out > 0) IERC20(_token1).safeTransfer(to, amount1Out); // optimistically transfer tokens\n            if (data.length > 0) IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data); // callback, used for flash loans\n            _balance0 = IERC20(_token0).balanceOf(address(this));\n            _balance1 = IERC20(_token1).balanceOf(address(this));\n        }\n        uint256 amount0In = _balance0 > _reserve0 - amount0Out ? _balance0 - (_reserve0 - amount0Out) : 0;\n        uint256 amount1In = _balance1 > _reserve1 - amount1Out ? _balance1 - (_reserve1 - amount1Out) : 0;\n        if (amount0In == 0 && amount1In == 0) revert InsufficientInputAmount();\n        {\n            // scope for reserve{0,1}Adjusted, avoids stack too deep errors\n            (address _token0, address _token1) = (token0, token1);\n            if (amount0In > 0) _update0((amount0In * IPoolFactory(factory).getFee(address(this), stable)) / 10000); // accrue fees for token0 and move them out of pool\n            if (amount1In > 0) _update1((amount1In * IPoolFactory(factory).getFee(address(this), stable)) / 10000); // accrue fees for token1 and move them out of pool\n            _balance0 = IERC20(_token0).balanceOf(address(this)); // since we removed tokens, we need to reconfirm balances, can also simply use previous balance - amountIn/ 10000, but doing balanceOf again as safety check\n            _balance1 = IERC20(_token1).balanceOf(address(this));\n            // The curve, either x3y+y3x for stable pools, or x*y for volatile pools\n            if (_k(_balance0, _balance1) < _k(_reserve0, _reserve1)) revert K();\n        }\n\n        _update(_balance0, _balance1, _reserve0, _reserve1);\n        emit Swap(msg.sender, to, amount0In, amount1In, amount0Out, amount1Out);\n    }\n\n    /// @inheritdoc IPool\n    function skim(address to) external nonReentrant {\n        (address _token0, address _token1) = (token0, token1);\n        IERC20(_token0).safeTransfer(to, IERC20(_token0).balanceOf(address(this)) - (reserve0));\n        IERC20(_token1).safeTransfer(to, IERC20(_token1).balanceOf(address(this)) - (reserve1));\n    }\n\n    /// @inheritdoc IPool\n    function sync() external nonReentrant {\n        if (totalSupply() == 0) revert InsufficientLiquidity();\n        _update(IERC20(token0).balanceOf(address(this)), IERC20(token1).balanceOf(address(this)), reserve0, reserve1);\n    }\n\n    function _f(uint256 x0, uint256 y) internal pure returns (uint256) {\n        uint256 _a = (x0 * y) / 1e18;\n        uint256 _b = ((x0 * x0) / 1e18 + (y * y) / 1e18);\n        return (_a * _b) / 1e18;\n    }\n\n    function _d(uint256 x0, uint256 y) internal pure returns (uint256) {\n        return (3 * x0 * ((y * y) / 1e18)) / 1e18 + ((((x0 * x0) / 1e18) * x0) / 1e18);\n    }\n\n    function _get_y(uint256 x0, uint256 xy, uint256 y) internal view returns (uint256) {\n        for (uint256 i = 0; i < 255; i++) {\n            uint256 k = _f(x0, y);\n            if (k < xy) {\n                // there are two cases where dy == 0\n                // case 1: The y is converged and we find the correct answer\n                // case 2: _d(x0, y) is too large compare to (xy - k) and the rounding error\n                //         screwed us.\n                //         In this case, we need to increase y by 1\n                uint256 dy = ((xy - k) * 1e18) / _d(x0, y);\n                if (dy == 0) {\n                    if (k == xy) {\n                        // We found the correct answer. Return y\n                        return y;\n                    }\n                    if (_k(x0, y + 1) > xy) {\n                        // If _k(x0, y + 1) > xy, then we are close to the correct answer.\n                        // There's no closer answer than y + 1\n                        return y + 1;\n                    }\n                    dy = 1;\n                }\n                y = y + dy;\n            } else {\n                uint256 dy = ((k - xy) * 1e18) / _d(x0, y);\n                if (dy == 0) {\n                    if (k == xy || _f(x0, y - 1) < xy) {\n                        // Likewise, if k == xy, we found the correct answer.\n                        // If _f(x0, y - 1) < xy, then we are close to the correct answer.\n                        // There's no closer answer than \"y\"\n                        // It's worth mentioning that we need to find y where f(x0, y) >= xy\n                        // As a result, we can't return y - 1 even it's closer to the correct answer\n                        return y;\n                    }\n                    dy = 1;\n                }\n                y = y - dy;\n            }\n        }\n        revert(\"!y\");\n    }\n\n    /// @inheritdoc IPool\n    function getAmountOut(uint256 amountIn, address tokenIn) external view returns (uint256) {\n        (uint256 _reserve0, uint256 _reserve1) = (reserve0, reserve1);\n        amountIn -= (amountIn * IPoolFactory(factory).getFee(address(this), stable)) / 10000; // remove fee from amount received\n        return _getAmountOut(amountIn, tokenIn, _reserve0, _reserve1);\n    }\n\n    function _getAmountOut(\n        uint256 amountIn,\n        address tokenIn,\n        uint256 _reserve0,\n        uint256 _reserve1\n    ) internal view returns (uint256) {\n        if (stable) {\n            uint256 xy = _k(_reserve0, _reserve1);\n            _reserve0 = (_reserve0 * 1e18) / decimals0;\n            _reserve1 = (_reserve1 * 1e18) / decimals1;\n            (uint256 reserveA, uint256 reserveB) = tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0);\n            amountIn = tokenIn == token0 ? (amountIn * 1e18) / decimals0 : (amountIn * 1e18) / decimals1;\n            uint256 y = reserveB - _get_y(amountIn + reserveA, xy, reserveB);\n            return (y * (tokenIn == token0 ? decimals1 : decimals0)) / 1e18;\n        } else {\n            (uint256 reserveA, uint256 reserveB) = tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0);\n            return (amountIn * reserveB) / (reserveA + amountIn);\n        }\n    }\n\n    function _k(uint256 x, uint256 y) internal view returns (uint256) {\n        if (stable) {\n            uint256 _x = (x * 1e18) / decimals0;\n            uint256 _y = (y * 1e18) / decimals1;\n            uint256 _a = (_x * _y) / 1e18;\n            uint256 _b = ((_x * _x) / 1e18 + (_y * _y) / 1e18);\n            return (_a * _b) / 1e18; // x3y+y3x >= k\n        } else {\n            return x * y; // xy >= k\n        }\n    }\n\n    /*\n    @dev OZ inheritance overrides\n    These are needed as _name and _symbol are set privately before\n    logic is executed within the constructor to set _name and _symbol.\n    */\n    function name() public view override returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view override returns (string memory) {\n        return _symbol;\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256) internal  {\n        _updateFor(from);\n        _updateFor(to);\n    }\n}\n"},"contracts/PoolFees.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.19 || 0.8.20;\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n/// @title PoolFees\n/// @notice Contract used as 1:1 pool relationship to split out fees.\n/// @notice Ensures curve does not need to be modified for LP shares.\ncontract PoolFees {\n    using SafeERC20 for IERC20;\n    address internal immutable pool; // The pool it is bonded to\n    address internal immutable token0; // token0 of pool, saved localy and statically for gas optimization\n    address internal immutable token1; // Token1 of pool, saved localy and statically for gas optimization\n\n    error NotPool();\n\n    constructor(address _token0, address _token1) {\n        pool = msg.sender;\n        token0 = _token0;\n        token1 = _token1;\n    }\n\n    /// @notice Allow the pool to transfer fees to users\n    function claimFeesFor(address _recipient, uint256 _amount0, uint256 _amount1) external {\n        if (msg.sender != pool) revert NotPool();\n        if (_amount0 > 0) IERC20(token0).safeTransfer(_recipient, _amount0);\n        if (_amount1 > 0) IERC20(token1).safeTransfer(_recipient, _amount1);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{"contracts/art/Trig.sol:Trig":{"Trig":"0xDfE367B10EBE44721ABd4698D3a600551ecBc0f7"},"contracts/art/PerlinNoise.sol:PerlinNoise":{"PerlinNoise":"0x1fb34d433CE1D007C5C9C19b021AA896F8Cb18B1"},"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary":{"DelegationLogicLibrary":"0xB14Cb52f8ff6b9A14b1FDCb1ED3c05f2eaD52029"},"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary":{"BalanceLogicLibrary":"0xB6D3049FbC7849F3f990Fbb63e8D0Cf75CEC3490"},"contracts/art/PerlinNoise.sol":{"PerlinNoise":"0xB30c4307270Dec94d254c414a2284A45255e47C0"},"contracts/art/Trig.sol":{"Trig":"0xa0c97479A27a30FC5786DCDb8b6a568AD0a9a30c"},"contracts/libraries/BalanceLogicLibrary.sol":{"BalanceLogicLibrary":"0xAc36bDE2f3e13e01371bbEfeFA313D4FE51d473c"},"contracts/libraries/DelegationLogicLibrary.sol":{"DelegationLogicLibrary":"0xb32ef5B29C7ba7297ee6e1491D0ED0eF14391a04"}}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n","message":"\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘","severity":"warning","sourceLocation":{"file":"16","start":6457,"end":6481},"type":"Warning"}],"version":"0.8.20","long_version":"0.8.20+commit.a1b79de6.Darwin.appleclang","zk_version":"1.3.22","sources":{"@openzeppelin/contracts/interfaces/IERC5267.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[24]},"id":25,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":24,"linearizedBaseContracts":[24],"name":"IERC5267","nameLocation":"143:8:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"158:84:0","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":4,"name":"EIP712DomainChanged","nameLocation":"253:19:0","nodeType":"EventDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"272:2:0"},"src":"247:28:0"},{"documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"281:140:0","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":23,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"447:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"fields","nameLocation":"517:6:0","nodeType":"VariableDeclaration","scope":23,"src":"510:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":7,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"name","nameLocation":"551:4:0","nodeType":"VariableDeclaration","scope":23,"src":"537:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12,"mutability":"mutable","name":"version","nameLocation":"583:7:0","nodeType":"VariableDeclaration","scope":23,"src":"569:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"chainId","nameLocation":"612:7:0","nodeType":"VariableDeclaration","scope":23,"src":"604:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:0","nodeType":"VariableDeclaration","scope":23,"src":"633:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"salt","nameLocation":"680:4:0","nodeType":"VariableDeclaration","scope":23,"src":"672:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"extensions","nameLocation":"715:10:0","nodeType":"VariableDeclaration","scope":23,"src":"698:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":20,"nodeType":"ArrayTypeName","src":"698:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:0"},"scope":24,"src":"426:310:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":25,"src":"133:605:0","usedErrors":[],"usedEvents":[4]}],"src":"107:632:0"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[161],"IERC20Errors":[66],"IERC721Errors":[114]},"id":162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":26,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"138:139:1","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":66,"linearizedBaseContracts":[66],"name":"IERC20Errors","nameLocation":"288:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"307:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":36,"name":"ERC20InsufficientBalance","nameLocation":"627:24:1","nodeType":"ErrorDefinition","parameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"sender","nameLocation":"660:6:1","nodeType":"VariableDeclaration","scope":36,"src":"652:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":29,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"balance","nameLocation":"676:7:1","nodeType":"VariableDeclaration","scope":36,"src":"668:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34,"mutability":"mutable","name":"needed","nameLocation":"693:6:1","nodeType":"VariableDeclaration","scope":36,"src":"685:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:1"},"src":"621:80:1"},{"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"707:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":41,"name":"ERC20InvalidSender","nameLocation":"870:18:1","nodeType":"ErrorDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"sender","nameLocation":"897:6:1","nodeType":"VariableDeclaration","scope":41,"src":"889:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:1"},"src":"864:41:1"},{"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"911:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":46,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:1","nodeType":"ErrorDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:1","nodeType":"VariableDeclaration","scope":46,"src":"1102:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:1"},"src":"1075:45:1"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1126:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":55,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:1","nodeType":"ErrorDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"spender","nameLocation":"1517:7:1","nodeType":"VariableDeclaration","scope":55,"src":"1509:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:1","nodeType":"VariableDeclaration","scope":55,"src":"1526:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"needed","nameLocation":"1553:6:1","nodeType":"VariableDeclaration","scope":55,"src":"1545:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:1"},"src":"1476:85:1"},{"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"1567:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":60,"name":"ERC20InvalidApprover","nameLocation":"1752:20:1","nodeType":"ErrorDefinition","parameters":{"id":59,"nodeType":"ParameterList","parameters":[{"constant":false,"id":58,"mutability":"mutable","name":"approver","nameLocation":"1781:8:1","nodeType":"VariableDeclaration","scope":60,"src":"1773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":57,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:1"},"src":"1746:45:1"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1797:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":65,"name":"ERC20InvalidSpender","nameLocation":"2003:19:1","nodeType":"ErrorDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"spender","nameLocation":"2031:7:1","nodeType":"VariableDeclaration","scope":65,"src":"2023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:1"},"src":"1997:43:1"}],"scope":162,"src":"278:1764:1","usedErrors":[36,41,46,55,60,65],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"2044:141:1","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":114,"linearizedBaseContracts":[114],"name":"IERC721Errors","nameLocation":"2196:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"2216:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":72,"name":"ERC721InvalidOwner","nameLocation":"2446:18:1","nodeType":"ErrorDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"owner","nameLocation":"2473:5:1","nodeType":"VariableDeclaration","scope":72,"src":"2465:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:1"},"src":"2440:40:1"},{"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"2486:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":77,"name":"ERC721NonexistentToken","nameLocation":"2629:22:1","nodeType":"ErrorDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:1","nodeType":"VariableDeclaration","scope":77,"src":"2652:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:1"},"src":"2623:46:1"},{"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"2675:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":86,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:1","nodeType":"ErrorDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"sender","nameLocation":"3004:6:1","nodeType":"VariableDeclaration","scope":86,"src":"2996:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:1","nodeType":"VariableDeclaration","scope":86,"src":"3012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"owner","nameLocation":"3037:5:1","nodeType":"VariableDeclaration","scope":86,"src":"3029:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:1"},"src":"2969:75:1"},{"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"3050:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":91,"name":"ERC721InvalidSender","nameLocation":"3213:19:1","nodeType":"ErrorDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"sender","nameLocation":"3241:6:1","nodeType":"VariableDeclaration","scope":91,"src":"3233:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":88,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:1"},"src":"3207:42:1"},{"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"3255:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":96,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:1","nodeType":"ErrorDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:1","nodeType":"VariableDeclaration","scope":96,"src":"3447:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:1"},"src":"3419:46:1"},{"documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"3471:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":103,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:1","nodeType":"ErrorDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"operator","nameLocation":"3764:8:1","nodeType":"VariableDeclaration","scope":103,"src":"3756:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":101,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:1","nodeType":"VariableDeclaration","scope":103,"src":"3774:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:1"},"src":"3723:68:1"},{"documentation":{"id":104,"nodeType":"StructuredDocumentation","src":"3797:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":108,"name":"ERC721InvalidApprover","nameLocation":"3982:21:1","nodeType":"ErrorDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"approver","nameLocation":"4012:8:1","nodeType":"VariableDeclaration","scope":108,"src":"4004:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:1"},"src":"3976:46:1"},{"documentation":{"id":109,"nodeType":"StructuredDocumentation","src":"4028:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":113,"name":"ERC721InvalidOperator","nameLocation":"4236:21:1","nodeType":"ErrorDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"operator","nameLocation":"4266:8:1","nodeType":"VariableDeclaration","scope":113,"src":"4258:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:1"},"src":"4230:46:1"}],"scope":162,"src":"2186:2092:1","usedErrors":[72,77,86,91,96,103,108,113],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"4280:143:1","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":161,"linearizedBaseContracts":[161],"name":"IERC1155Errors","nameLocation":"4434:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"4455:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":126,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:1","nodeType":"ErrorDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"sender","nameLocation":"4862:6:1","nodeType":"VariableDeclaration","scope":126,"src":"4854:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"balance","nameLocation":"4878:7:1","nodeType":"VariableDeclaration","scope":126,"src":"4870:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"needed","nameLocation":"4895:6:1","nodeType":"VariableDeclaration","scope":126,"src":"4887:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:1","nodeType":"VariableDeclaration","scope":126,"src":"4903:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:1"},"src":"4821:99:1"},{"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"4926:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":131,"name":"ERC1155InvalidSender","nameLocation":"5089:20:1","nodeType":"ErrorDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"sender","nameLocation":"5118:6:1","nodeType":"VariableDeclaration","scope":131,"src":"5110:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:1"},"src":"5083:43:1"},{"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"5132:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":136,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:1","nodeType":"ErrorDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:1","nodeType":"VariableDeclaration","scope":136,"src":"5325:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:1"},"src":"5296:47:1"},{"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"5349:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":143,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:1","nodeType":"ErrorDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"operator","nameLocation":"5653:8:1","nodeType":"VariableDeclaration","scope":143,"src":"5645:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"owner","nameLocation":"5671:5:1","nodeType":"VariableDeclaration","scope":143,"src":"5663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:1"},"src":"5610:68:1"},{"documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"5684:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":148,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:1","nodeType":"ErrorDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"approver","nameLocation":"5900:8:1","nodeType":"VariableDeclaration","scope":148,"src":"5892:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:1"},"src":"5863:47:1"},{"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"5916:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":153,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:1","nodeType":"ErrorDefinition","parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"operator","nameLocation":"6155:8:1","nodeType":"VariableDeclaration","scope":153,"src":"6147:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:1"},"src":"6118:47:1"},{"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"6171:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":160,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:1","nodeType":"ErrorDefinition","parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:1","nodeType":"VariableDeclaration","scope":160,"src":"6488:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:1","nodeType":"VariableDeclaration","scope":160,"src":"6507:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:1"},"src":"6456:73:1"}],"scope":162,"src":"4424:2107:1","usedErrors":[126,131,136,143,148,153,160],"usedEvents":[]}],"src":"112:6420:1"}},"@openzeppelin/contracts/proxy/Clones.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[246]},"id":247,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":163,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"Clones","contractDependencies":[],"contractKind":"library","documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"126:599:2","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."},"fullyImplemented":true,"id":246,"linearizedBaseContracts":[246],"name":"Clones","nameLocation":"734:6:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"747:59:2","text":" @dev A clone instance deployment failed."},"errorSelector":"c2f868f4","id":167,"name":"ERC1167FailedCreateClone","nameLocation":"817:24:2","nodeType":"ErrorDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"841:2:2"},"src":"811:33:2"},{"body":{"id":187,"nodeType":"Block","src":"1122:712:2","statements":[{"AST":{"nodeType":"YulBlock","src":"1184:549:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1389:4:2","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1402:4:2","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1412:4:2","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"1418:14:2"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1408:3:2"},"nodeType":"YulFunctionCall","src":"1408:25:2"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1398:3:2"},"nodeType":"YulFunctionCall","src":"1398:36:2"},{"kind":"number","nodeType":"YulLiteral","src":"1436:48:2","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1395:2:2"},"nodeType":"YulFunctionCall","src":"1395:90:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1382:6:2"},"nodeType":"YulFunctionCall","src":"1382:104:2"},"nodeType":"YulExpressionStatement","src":"1382:104:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1607:4:2","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1620:4:2","type":"","value":"0x78"},{"name":"implementation","nodeType":"YulIdentifier","src":"1626:14:2"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1616:3:2"},"nodeType":"YulFunctionCall","src":"1616:25:2"},{"kind":"number","nodeType":"YulLiteral","src":"1643:32:2","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1613:2:2"},"nodeType":"YulFunctionCall","src":"1613:63:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1600:6:2"},"nodeType":"YulFunctionCall","src":"1600:77:2"},"nodeType":"YulExpressionStatement","src":"1600:77:2"},{"nodeType":"YulAssignment","src":"1690:33:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1709:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1712:4:2","type":"","value":"0x09"},{"kind":"number","nodeType":"YulLiteral","src":"1718:4:2","type":"","value":"0x37"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"1702:6:2"},"nodeType":"YulFunctionCall","src":"1702:21:2"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"1690:8:2"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":170,"isOffset":false,"isSlot":false,"src":"1418:14:2","valueSize":1},{"declaration":170,"isOffset":false,"isSlot":false,"src":"1626:14:2","valueSize":1},{"declaration":173,"isOffset":false,"isSlot":false,"src":"1690:8:2","valueSize":1}],"id":175,"nodeType":"InlineAssembly","src":"1175:558:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":176,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"1746:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1766:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1758:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"1758:7:2","typeDescriptions":{}}},"id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1758:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1746:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":186,"nodeType":"IfStatement","src":"1742:86:2","trueBody":{"id":185,"nodeType":"Block","src":"1770:58:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":182,"name":"ERC1167FailedCreateClone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"1791:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1791:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"RevertStatement","src":"1784:33:2"}]}}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"850:192:2","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."},"id":188,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"1056:5:2","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"implementation","nameLocation":"1070:14:2","nodeType":"VariableDeclaration","scope":188,"src":"1062:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"1062:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1061:24:2"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"instance","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":188,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"scope":246,"src":"1047:787:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":210,"nodeType":"Block","src":"2311:719:2","statements":[{"AST":{"nodeType":"YulBlock","src":"2373:556:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2578:4:2","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2591:4:2","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2601:4:2","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2607:14:2"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2597:3:2"},"nodeType":"YulFunctionCall","src":"2597:25:2"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2587:3:2"},"nodeType":"YulFunctionCall","src":"2587:36:2"},{"kind":"number","nodeType":"YulLiteral","src":"2625:48:2","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2584:2:2"},"nodeType":"YulFunctionCall","src":"2584:90:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2571:6:2"},"nodeType":"YulFunctionCall","src":"2571:104:2"},"nodeType":"YulExpressionStatement","src":"2571:104:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2796:4:2","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2809:4:2","type":"","value":"0x78"},{"name":"implementation","nodeType":"YulIdentifier","src":"2815:14:2"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2805:3:2"},"nodeType":"YulFunctionCall","src":"2805:25:2"},{"kind":"number","nodeType":"YulLiteral","src":"2832:32:2","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2802:2:2"},"nodeType":"YulFunctionCall","src":"2802:63:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2789:6:2"},"nodeType":"YulFunctionCall","src":"2789:77:2"},"nodeType":"YulExpressionStatement","src":"2789:77:2"},{"nodeType":"YulAssignment","src":"2879:40:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2899:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2902:4:2","type":"","value":"0x09"},{"kind":"number","nodeType":"YulLiteral","src":"2908:4:2","type":"","value":"0x37"},{"name":"salt","nodeType":"YulIdentifier","src":"2914:4:2"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"2891:7:2"},"nodeType":"YulFunctionCall","src":"2891:28:2"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"2879:8:2"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":191,"isOffset":false,"isSlot":false,"src":"2607:14:2","valueSize":1},{"declaration":191,"isOffset":false,"isSlot":false,"src":"2815:14:2","valueSize":1},{"declaration":196,"isOffset":false,"isSlot":false,"src":"2879:8:2","valueSize":1},{"declaration":193,"isOffset":false,"isSlot":false,"src":"2914:4:2","valueSize":1}],"id":198,"nodeType":"InlineAssembly","src":"2364:565:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":199,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"2942:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2962:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2954:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"2954:7:2","typeDescriptions":{}}},"id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2954:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2942:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":209,"nodeType":"IfStatement","src":"2938:86:2","trueBody":{"id":208,"nodeType":"Block","src":"2966:58:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":205,"name":"ERC1167FailedCreateClone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2987:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2987:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"RevertStatement","src":"2980:33:2"}]}}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1840:364:2","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."},"id":211,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"2218:18:2","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":191,"mutability":"mutable","name":"implementation","nameLocation":"2245:14:2","nodeType":"VariableDeclaration","scope":211,"src":"2237:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"2237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"salt","nameLocation":"2269:4:2","nodeType":"VariableDeclaration","scope":211,"src":"2261:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2261:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2236:38:2"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"instance","nameLocation":"2301:8:2","nodeType":"VariableDeclaration","scope":211,"src":"2293:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"2293:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2292:18:2"},"scope":246,"src":"2209:821:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":224,"nodeType":"Block","src":"3305:515:2","statements":[{"AST":{"nodeType":"YulBlock","src":"3367:447:2","statements":[{"nodeType":"YulVariableDeclaration","src":"3381:22:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3398:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3392:5:2"},"nodeType":"YulFunctionCall","src":"3392:11:2"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3385:3:2","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3427:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3432:4:2","type":"","value":"0x38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3423:3:2"},"nodeType":"YulFunctionCall","src":"3423:14:2"},{"name":"deployer","nodeType":"YulIdentifier","src":"3439:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3416:6:2"},"nodeType":"YulFunctionCall","src":"3416:32:2"},"nodeType":"YulExpressionStatement","src":"3416:32:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3472:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3477:4:2","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3468:3:2"},"nodeType":"YulFunctionCall","src":"3468:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"3484:34:2","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3461:6:2"},"nodeType":"YulFunctionCall","src":"3461:58:2"},"nodeType":"YulExpressionStatement","src":"3461:58:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3543:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3548:4:2","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3539:3:2"},"nodeType":"YulFunctionCall","src":"3539:14:2"},{"name":"implementation","nodeType":"YulIdentifier","src":"3555:14:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3532:6:2"},"nodeType":"YulFunctionCall","src":"3532:38:2"},"nodeType":"YulExpressionStatement","src":"3532:38:2"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3590:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3595:42:2","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3583:6:2"},"nodeType":"YulFunctionCall","src":"3583:55:2"},"nodeType":"YulExpressionStatement","src":"3583:55:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3662:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3667:4:2","type":"","value":"0x58"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3658:3:2"},"nodeType":"YulFunctionCall","src":"3658:14:2"},{"name":"salt","nodeType":"YulIdentifier","src":"3674:4:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3651:6:2"},"nodeType":"YulFunctionCall","src":"3651:28:2"},"nodeType":"YulExpressionStatement","src":"3651:28:2"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3703:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3708:4:2","type":"","value":"0x78"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3699:3:2"},"nodeType":"YulFunctionCall","src":"3699:14:2"},{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3729:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3734:4:2","type":"","value":"0x0c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3725:3:2"},"nodeType":"YulFunctionCall","src":"3725:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"3741:4:2","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3715:9:2"},"nodeType":"YulFunctionCall","src":"3715:31:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3692:6:2"},"nodeType":"YulFunctionCall","src":"3692:55:2"},"nodeType":"YulExpressionStatement","src":"3692:55:2"},{"nodeType":"YulAssignment","src":"3760:44:2","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3787:3:2"},{"kind":"number","nodeType":"YulLiteral","src":"3792:4:2","type":"","value":"0x43"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3783:3:2"},"nodeType":"YulFunctionCall","src":"3783:14:2"},{"kind":"number","nodeType":"YulLiteral","src":"3799:4:2","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3773:9:2"},"nodeType":"YulFunctionCall","src":"3773:31:2"},"variableNames":[{"name":"predicted","nodeType":"YulIdentifier","src":"3760:9:2"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":218,"isOffset":false,"isSlot":false,"src":"3439:8:2","valueSize":1},{"declaration":214,"isOffset":false,"isSlot":false,"src":"3555:14:2","valueSize":1},{"declaration":221,"isOffset":false,"isSlot":false,"src":"3760:9:2","valueSize":1},{"declaration":216,"isOffset":false,"isSlot":false,"src":"3674:4:2","valueSize":1}],"id":223,"nodeType":"InlineAssembly","src":"3358:456:2"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3036:99:2","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":225,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3149:27:2","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"implementation","nameLocation":"3194:14:2","nodeType":"VariableDeclaration","scope":225,"src":"3186:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"3186:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"salt","nameLocation":"3226:4:2","nodeType":"VariableDeclaration","scope":225,"src":"3218:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"deployer","nameLocation":"3248:8:2","nodeType":"VariableDeclaration","scope":225,"src":"3240:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"3240:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3176:86:2"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"predicted","nameLocation":"3294:9:2","nodeType":"VariableDeclaration","scope":225,"src":"3286:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"3286:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3285:19:2"},"scope":246,"src":"3140:680:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":244,"nodeType":"Block","src":"4069:88:2","statements":[{"expression":{"arguments":[{"id":236,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"4114:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":237,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"4130:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":240,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4144:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$246","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$246","typeString":"library Clones"}],"id":239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4136:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:2","typeDescriptions":{}}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4136:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":235,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[225,245],"referencedDeclaration":225,"src":"4086:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":234,"id":243,"nodeType":"Return","src":"4079:71:2"}]},"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"3826:99:2","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3939:27:2","nodeType":"FunctionDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"implementation","nameLocation":"3984:14:2","nodeType":"VariableDeclaration","scope":245,"src":"3976:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"3976:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"salt","nameLocation":"4016:4:2","nodeType":"VariableDeclaration","scope":245,"src":"4008:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4008:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:60:2"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"predicted","nameLocation":"4058:9:2","nodeType":"VariableDeclaration","scope":245,"src":"4050:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"4050:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4049:19:2"},"scope":246,"src":"3930:227:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":247,"src":"726:3433:2","usedErrors":[167],"usedEvents":[]}],"src":"100:4060:2"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1628],"ERC20":[761],"IERC20":[839],"IERC20Errors":[66],"IERC20Metadata":[1019]},"id":762,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":248,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":250,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":840,"src":"131:36:3","symbolAliases":[{"foreign":{"id":249,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":1020,"src":"168:63:3","symbolAliases":[{"foreign":{"id":251,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"176:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":1629,"src":"232:48:3","symbolAliases":[{"foreign":{"id":253,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"240:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":762,"sourceUnit":162,"src":"281:65:3","symbolAliases":[{"foreign":{"id":255,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"289:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":258,"name":"Context","nameLocations":["1428:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1628,"src":"1428:7:3"},"id":259,"nodeType":"InheritanceSpecifier","src":"1428:7:3"},{"baseName":{"id":260,"name":"IERC20","nameLocations":["1437:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":839,"src":"1437:6:3"},"id":261,"nodeType":"InheritanceSpecifier","src":"1437:6:3"},{"baseName":{"id":262,"name":"IERC20Metadata","nameLocations":["1445:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"1445:14:3"},"id":263,"nodeType":"InheritanceSpecifier","src":"1445:14:3"},{"baseName":{"id":264,"name":"IERC20Errors","nameLocations":["1461:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":66,"src":"1461:12:3"},"id":265,"nodeType":"InheritanceSpecifier","src":"1461:12:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"348:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":761,"linearizedBaseContracts":[761,66,1019,839,1628],"name":"ERC20","nameLocation":"1419:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":269,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:3","nodeType":"VariableDeclaration","scope":761,"src":"1480:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":268,"keyName":"account","keyNameLocation":"1496:7:3","keyType":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":275,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:3","nodeType":"VariableDeclaration","scope":761,"src":"1540:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":274,"keyName":"account","keyNameLocation":"1556:7:3","keyType":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":273,"keyName":"spender","keyNameLocation":"1583:7:3","keyType":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":277,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:3","nodeType":"VariableDeclaration","scope":761,"src":"1630:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":279,"mutability":"mutable","name":"_name","nameLocation":"1680:5:3","nodeType":"VariableDeclaration","scope":761,"src":"1665:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":278,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":281,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:3","nodeType":"VariableDeclaration","scope":761,"src":"1691:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":280,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":297,"nodeType":"Block","src":"1952:57:3","statements":[{"expression":{"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":289,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"1962:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":290,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1970:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":292,"nodeType":"ExpressionStatement","src":"1962:13:3"},{"expression":{"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":293,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"1985:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":294,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"1995:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":296,"nodeType":"ExpressionStatement","src":"1985:17:3"}]},"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"1720:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":298,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"name_","nameLocation":"1922:5:3","nodeType":"VariableDeclaration","scope":298,"src":"1908:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":283,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:3","nodeType":"VariableDeclaration","scope":298,"src":"1929:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":285,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:3"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"1952:0:3"},"scope":761,"src":"1896:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1006],"body":{"id":306,"nodeType":"Block","src":"2134:29:3","statements":[{"expression":{"id":304,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"2151:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":303,"id":305,"nodeType":"Return","src":"2144:12:3"}]},"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"2015:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":307,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:3","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[],"src":"2087:2:3"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":307,"src":"2119:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":301,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:3"},"scope":761,"src":"2074:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1012],"body":{"id":315,"nodeType":"Block","src":"2338:31:3","statements":[{"expression":{"id":313,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"2355:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":312,"id":314,"nodeType":"Return","src":"2348:14:3"}]},"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"2169:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":316,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:3","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"2291:2:3"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":316,"src":"2323:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":310,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:3"},"scope":761,"src":"2276:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1018],"body":{"id":324,"nodeType":"Block","src":"3058:26:3","statements":[{"expression":{"hexValue":"3138","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":321,"id":323,"nodeType":"Return","src":"3068:9:3"}]},"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"2375:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":325,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:3","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[],"src":"3019:2:3"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":325,"src":"3051:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":319,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:3"},"scope":761,"src":"3002:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[788],"body":{"id":333,"nodeType":"Block","src":"3205:36:3","statements":[{"expression":{"id":331,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3222:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":330,"id":332,"nodeType":"Return","src":"3215:19:3"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"3090:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:3","nodeType":"FunctionDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[],"src":"3164:2:3"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"3196:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:3"},"scope":761,"src":"3144:97:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[796],"body":{"id":346,"nodeType":"Block","src":"3373:42:3","statements":[{"expression":{"baseExpression":{"id":342,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"3390:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":344,"indexExpression":{"id":343,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3400:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":341,"id":345,"nodeType":"Return","src":"3383:25:3"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"3247:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":347,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:3","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"account","nameLocation":"3326:7:3","nodeType":"VariableDeclaration","scope":347,"src":"3318:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:3"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":347,"src":"3364:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:3"},"scope":761,"src":"3299:116:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[806],"body":{"id":370,"nodeType":"Block","src":"3685:103:3","statements":[{"assignments":[358],"declarations":[{"constant":false,"id":358,"mutability":"mutable","name":"owner","nameLocation":"3703:5:3","nodeType":"VariableDeclaration","scope":370,"src":"3695:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":361,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":359,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"3711:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:3"},{"expression":{"arguments":[{"id":363,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"3743:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":364,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"3750:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"3754:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":362,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"3733:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":367,"nodeType":"ExpressionStatement","src":"3733:27:3"},{"expression":{"hexValue":"74727565","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":356,"id":369,"nodeType":"Return","src":"3770:11:3"}]},"documentation":{"id":348,"nodeType":"StructuredDocumentation","src":"3421:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":371,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:3","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"to","nameLocation":"3636:2:3","nodeType":"VariableDeclaration","scope":371,"src":"3628:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"value","nameLocation":"3648:5:3","nodeType":"VariableDeclaration","scope":371,"src":"3640:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:3"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":371,"src":"3679:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":354,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:3"},"scope":761,"src":"3610:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[816],"body":{"id":387,"nodeType":"Block","src":"3935:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":381,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3952:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":383,"indexExpression":{"id":382,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3964:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":385,"indexExpression":{"id":384,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"3971:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":380,"id":386,"nodeType":"Return","src":"3945:34:3"}]},"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"3794:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:3","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"owner","nameLocation":"3873:5:3","nodeType":"VariableDeclaration","scope":388,"src":"3865:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"spender","nameLocation":"3888:7:3","nodeType":"VariableDeclaration","scope":388,"src":"3880:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:3"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"3926:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:3"},"scope":761,"src":"3846:140:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[826],"body":{"id":411,"nodeType":"Block","src":"4372:107:3","statements":[{"assignments":[399],"declarations":[{"constant":false,"id":399,"mutability":"mutable","name":"owner","nameLocation":"4390:5:3","nodeType":"VariableDeclaration","scope":411,"src":"4382:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":402,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":400,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"4398:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:3"},{"expression":{"arguments":[{"id":404,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4429:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":405,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"4436:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"4445:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":403,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[652,712],"referencedDeclaration":652,"src":"4420:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"4420:31:3"},{"expression":{"hexValue":"74727565","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":397,"id":410,"nodeType":"Return","src":"4461:11:3"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"3992:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":412,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:3","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"spender","nameLocation":"4318:7:3","nodeType":"VariableDeclaration","scope":412,"src":"4310:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"value","nameLocation":"4335:5:3","nodeType":"VariableDeclaration","scope":412,"src":"4327:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:3"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"4366:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":395,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:3"},"scope":761,"src":"4293:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[838],"body":{"id":443,"nodeType":"Block","src":"5132:151:3","statements":[{"assignments":[425],"declarations":[{"constant":false,"id":425,"mutability":"mutable","name":"spender","nameLocation":"5150:7:3","nodeType":"VariableDeclaration","scope":443,"src":"5142:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":428,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":426,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"5160:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:3"},{"expression":{"arguments":[{"id":430,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"5198:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":431,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"5204:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5213:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":429,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"5182:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"5182:37:3"},{"expression":{"arguments":[{"id":436,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"5239:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":437,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"5245:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5249:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":435,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"5229:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":440,"nodeType":"ExpressionStatement","src":"5229:26:3"},{"expression":{"hexValue":"74727565","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":423,"id":442,"nodeType":"Return","src":"5265:11:3"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"4485:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:3","nodeType":"FunctionDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"from","nameLocation":"5069:4:3","nodeType":"VariableDeclaration","scope":444,"src":"5061:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"to","nameLocation":"5083:2:3","nodeType":"VariableDeclaration","scope":444,"src":"5075:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"value","nameLocation":"5095:5:3","nodeType":"VariableDeclaration","scope":444,"src":"5087:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:3"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"5126:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":421,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:3"},"scope":761,"src":"5039:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":490,"nodeType":"Block","src":"5725:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":454,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"5739:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:3","typeDescriptions":{}}},"id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"nodeType":"IfStatement","src":"5735:86:3","trueBody":{"id":467,"nodeType":"Block","src":"5759:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:3","typeDescriptions":{}}},"id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":460,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"5780:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"RevertStatement","src":"5773:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":469,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"5834:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:3","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":483,"nodeType":"IfStatement","src":"5830:86:3","trueBody":{"id":482,"nodeType":"Block","src":"5852:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:3","typeDescriptions":{}}},"id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":475,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"5873:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":481,"nodeType":"RevertStatement","src":"5866:39:3"}]}},{"expression":{"arguments":[{"id":485,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"5933:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"5939:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5943:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":484,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"5925:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"5925:24:3"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"5289:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:3","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"from","nameLocation":"5683:4:3","nodeType":"VariableDeclaration","scope":491,"src":"5675:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"to","nameLocation":"5697:2:3","nodeType":"VariableDeclaration","scope":491,"src":"5689:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"value","nameLocation":"5709:5:3","nodeType":"VariableDeclaration","scope":491,"src":"5701:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:3"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"5725:0:3"},"scope":761,"src":"5656:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":567,"nodeType":"Block","src":"6346:1032:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":501,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"6360:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:3","typeDescriptions":{}}},"id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":538,"nodeType":"Block","src":"6534:362:3","statements":[{"assignments":[513],"declarations":[{"constant":false,"id":513,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:3","nodeType":"VariableDeclaration","scope":538,"src":"6548:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":517,"initialValue":{"baseExpression":{"id":514,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"6570:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":516,"indexExpression":{"id":515,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"6580:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":518,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"6603:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"6617:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":528,"nodeType":"IfStatement","src":"6599:115:3","trueBody":{"id":527,"nodeType":"Block","src":"6624:90:3","statements":[{"errorCall":{"arguments":[{"id":522,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"6674:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":523,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"6680:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"6693:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":521,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"6649:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":526,"nodeType":"RevertStatement","src":"6642:57:3"}]}},{"id":537,"nodeType":"UncheckedBlock","src":"6727:159:3","statements":[{"expression":{"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":529,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"6834:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":531,"indexExpression":{"id":530,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"6844:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"6852:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"6866:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":536,"nodeType":"ExpressionStatement","src":"6834:37:3"}]}]},"id":539,"nodeType":"IfStatement","src":"6356:540:3","trueBody":{"id":511,"nodeType":"Block","src":"6380:148:3","statements":[{"expression":{"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":507,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"6496:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"6512:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":510,"nodeType":"ExpressionStatement","src":"6496:21:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":540,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"6910:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:3","typeDescriptions":{}}},"id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":559,"nodeType":"Block","src":"7125:206:3","statements":[{"id":558,"nodeType":"UncheckedBlock","src":"7139:182:3","statements":[{"expression":{"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"7284:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"7294:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"7301:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":557,"nodeType":"ExpressionStatement","src":"7284:22:3"}]}]},"id":560,"nodeType":"IfStatement","src":"6906:425:3","trueBody":{"id":551,"nodeType":"Block","src":"6928:191:3","statements":[{"id":550,"nodeType":"UncheckedBlock","src":"6942:167:3","statements":[{"expression":{"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":546,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"7073:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"7089:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":549,"nodeType":"ExpressionStatement","src":"7073:21:3"}]}]}},{"eventCall":{"arguments":[{"id":562,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"7355:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":563,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"7361:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"7365:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":561,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7346:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"EmitStatement","src":"7341:30:3"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"5962:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":568,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:3","nodeType":"FunctionDefinition","parameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"from","nameLocation":"6296:4:3","nodeType":"VariableDeclaration","scope":568,"src":"6288:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"to","nameLocation":"6310:2:3","nodeType":"VariableDeclaration","scope":568,"src":"6302:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":498,"mutability":"mutable","name":"value","nameLocation":"6322:5:3","nodeType":"VariableDeclaration","scope":568,"src":"6314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":497,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:3"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"6346:0:3"},"scope":761,"src":"6271:1107:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":600,"nodeType":"Block","src":"7777:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":576,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7791:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:3","typeDescriptions":{}}},"id":580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":590,"nodeType":"IfStatement","src":"7787:91:3","trueBody":{"id":589,"nodeType":"Block","src":"7814:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:3","typeDescriptions":{}}},"id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":582,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"7835:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"RevertStatement","src":"7828:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:3","typeDescriptions":{}}},"id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7907:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7916:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":591,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"7887:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":599,"nodeType":"ExpressionStatement","src":"7887:35:3"}]},"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"7384:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":601,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:3","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"account","nameLocation":"7744:7:3","nodeType":"VariableDeclaration","scope":601,"src":"7736:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"value","nameLocation":"7761:5:3","nodeType":"VariableDeclaration","scope":601,"src":"7753:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:3"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[],"src":"7777:0:3"},"scope":761,"src":"7721:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":633,"nodeType":"Block","src":"8303:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"8317:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:3","typeDescriptions":{}}},"id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":623,"nodeType":"IfStatement","src":"8313:89:3","trueBody":{"id":622,"nodeType":"Block","src":"8340:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:3","typeDescriptions":{}}},"id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":615,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"8361:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"RevertStatement","src":"8354:37:3"}]}},{"expression":{"arguments":[{"id":625,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"8419:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:3","typeDescriptions":{}}},"id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8440:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":624,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"8411:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"ExpressionStatement","src":"8411:35:3"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"7935:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":634,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:3","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"account","nameLocation":"8270:7:3","nodeType":"VariableDeclaration","scope":634,"src":"8262:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"value","nameLocation":"8287:5:3","nodeType":"VariableDeclaration","scope":634,"src":"8279:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:3"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[],"src":"8303:0:3"},"scope":761,"src":"8247:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":651,"nodeType":"Block","src":"9063:54:3","statements":[{"expression":{"arguments":[{"id":645,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9082:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":646,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"9089:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"9098:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":644,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[652,712],"referencedDeclaration":712,"src":"9073:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":650,"nodeType":"ExpressionStatement","src":"9073:37:3"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"8459:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":652,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:3","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"owner","nameLocation":"9015:5:3","nodeType":"VariableDeclaration","scope":652,"src":"9007:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"spender","nameLocation":"9030:7:3","nodeType":"VariableDeclaration","scope":652,"src":"9022:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":641,"mutability":"mutable","name":"value","nameLocation":"9047:5:3","nodeType":"VariableDeclaration","scope":652,"src":"9039:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:3"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[],"src":"9063:0:3"},"scope":761,"src":"8989:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":711,"nodeType":"Block","src":"10047:334:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":664,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"10061:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:3","typeDescriptions":{}}},"id":668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":678,"nodeType":"IfStatement","src":"10057:89:3","trueBody":{"id":677,"nodeType":"Block","src":"10082:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:3","typeDescriptions":{}}},"id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":670,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"10103:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"RevertStatement","src":"10096:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":679,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"10159:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:3","typeDescriptions":{}}},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"10155:90:3","trueBody":{"id":692,"nodeType":"Block","src":"10182:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:3","typeDescriptions":{}}},"id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":685,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"10203:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"RevertStatement","src":"10196:38:3"}]}},{"expression":{"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":694,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"10254:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":697,"indexExpression":{"id":695,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"10266:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":698,"indexExpression":{"id":696,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"10273:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10284:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":701,"nodeType":"ExpressionStatement","src":"10254:35:3"},{"condition":{"id":702,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"10303:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":710,"nodeType":"IfStatement","src":"10299:76:3","trueBody":{"id":709,"nodeType":"Block","src":"10314:61:3","statements":[{"eventCall":{"arguments":[{"id":704,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"10342:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":705,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"10349:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"10358:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":703,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"10333:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"EmitStatement","src":"10328:36:3"}]}}]},"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"9123:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":712,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:3","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"owner","nameLocation":"9975:5:3","nodeType":"VariableDeclaration","scope":712,"src":"9967:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"spender","nameLocation":"9990:7:3","nodeType":"VariableDeclaration","scope":712,"src":"9982:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"value","nameLocation":"10007:5:3","nodeType":"VariableDeclaration","scope":712,"src":"9999:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:3","nodeType":"VariableDeclaration","scope":712,"src":"10014:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:3"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"10047:0:3"},"scope":761,"src":"9949:432:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":759,"nodeType":"Block","src":"10752:388:3","statements":[{"assignments":[723],"declarations":[{"constant":false,"id":723,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:3","nodeType":"VariableDeclaration","scope":759,"src":"10762:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":728,"initialValue":{"arguments":[{"id":725,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"10799:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":726,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"10806:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":724,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"10789:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":729,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"10828:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":730,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:3","memberName":"max","nodeType":"MemberAccess","src":"10848:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":758,"nodeType":"IfStatement","src":"10824:310:3","trueBody":{"id":757,"nodeType":"Block","src":"10867:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"10885:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"10904:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":746,"nodeType":"IfStatement","src":"10881:130:3","trueBody":{"id":745,"nodeType":"Block","src":"10911:100:3","statements":[{"errorCall":{"arguments":[{"id":740,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"10963:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"10972:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"10990:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":739,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"10936:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"RevertStatement","src":"10929:67:3"}]}},{"id":756,"nodeType":"UncheckedBlock","src":"11024:100:3","statements":[{"expression":{"arguments":[{"id":748,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"11061:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"11068:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":750,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"11077:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"11096:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":747,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[652,712],"referencedDeclaration":712,"src":"11052:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"ExpressionStatement","src":"11052:57:3"}]}]}}]},"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"10387:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:3","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"owner","nameLocation":"10696:5:3","nodeType":"VariableDeclaration","scope":760,"src":"10688:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"spender","nameLocation":"10711:7:3","nodeType":"VariableDeclaration","scope":760,"src":"10703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"value","nameLocation":"10728:5:3","nodeType":"VariableDeclaration","scope":760,"src":"10720:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:3"},"returnParameters":{"id":721,"nodeType":"ParameterList","parameters":[],"src":"10752:0:3"},"scope":761,"src":"10663:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":762,"src":"1401:9741:3","usedErrors":[36,41,46,55,60,65],"usedEvents":[773,782]}],"src":"105:11038:3"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[839]},"id":840,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":763,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"132:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":839,"linearizedBaseContracts":[839],"name":"IERC20","nameLocation":"213:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"226:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":773,"name":"Transfer","nameLocation":"395:8:4","nodeType":"EventDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:4","nodeType":"VariableDeclaration","scope":773,"src":"404:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:4","nodeType":"VariableDeclaration","scope":773,"src":"426:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:4","nodeType":"VariableDeclaration","scope":773,"src":"446:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:4"},"src":"389:72:4"},{"anonymous":false,"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"467:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":782,"name":"Approval","nameLocation":"626:8:4","nodeType":"EventDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:4","nodeType":"VariableDeclaration","scope":782,"src":"635:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":778,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:4","nodeType":"VariableDeclaration","scope":782,"src":"658:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:4","nodeType":"VariableDeclaration","scope":782,"src":"683:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:4"},"src":"620:78:4"},{"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"704:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":788,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":788,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":839,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"835:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":796,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:4","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"account","nameLocation":"938:7:4","nodeType":"VariableDeclaration","scope":796,"src":"930:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:4"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":796,"src":"970:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:4"},"scope":839,"src":"911:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"985:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":806,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:4","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"to","nameLocation":"1229:2:4","nodeType":"VariableDeclaration","scope":806,"src":"1221:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"value","nameLocation":"1241:5:4","nodeType":"VariableDeclaration","scope":806,"src":"1233:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":800,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:4"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"1266:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":803,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:4"},"scope":839,"src":"1203:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"1278:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":816,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:4","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"owner","nameLocation":"1574:5:4","nodeType":"VariableDeclaration","scope":816,"src":"1566:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":811,"mutability":"mutable","name":"spender","nameLocation":"1589:7:4","nodeType":"VariableDeclaration","scope":816,"src":"1581:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:4"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"1621:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:4"},"scope":839,"src":"1547:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"1636:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:4","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"spender","nameLocation":"2333:7:4","nodeType":"VariableDeclaration","scope":826,"src":"2325:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"value","nameLocation":"2350:5:4","nodeType":"VariableDeclaration","scope":826,"src":"2342:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:4"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"2375:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":823,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:4"},"scope":839,"src":"2308:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"2387:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":838,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:4","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"from","nameLocation":"2719:4:4","nodeType":"VariableDeclaration","scope":838,"src":"2711:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"to","nameLocation":"2733:2:4","nodeType":"VariableDeclaration","scope":838,"src":"2725:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"value","nameLocation":"2745:5:4","nodeType":"VariableDeclaration","scope":838,"src":"2737:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:4"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":838,"src":"2770:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":835,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:4"},"scope":839,"src":"2689:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":840,"src":"203:2575:4","usedErrors":[],"usedEvents":[773,782]}],"src":"106:2673:4"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[2695],"EIP712":[2922],"ERC20":[761],"ERC20Permit":[993],"IERC20Permit":[1055],"Nonces":[1696]},"id":994,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":841,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":994,"sourceUnit":1056,"src":"148:48:5","symbolAliases":[{"foreign":{"id":842,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"156:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":994,"sourceUnit":762,"src":"197:35:5","symbolAliases":[{"foreign":{"id":844,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"205:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":994,"sourceUnit":2696,"src":"233:60:5","symbolAliases":[{"foreign":{"id":846,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"241:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":994,"sourceUnit":2923,"src":"294:62:5","symbolAliases":[{"foreign":{"id":848,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"302:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":851,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":994,"sourceUnit":1697,"src":"357:49:5","symbolAliases":[{"foreign":{"id":850,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"365:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":853,"name":"ERC20","nameLocations":["929:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":761,"src":"929:5:5"},"id":854,"nodeType":"InheritanceSpecifier","src":"929:5:5"},{"baseName":{"id":855,"name":"IERC20Permit","nameLocations":["936:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1055,"src":"936:12:5"},"id":856,"nodeType":"InheritanceSpecifier","src":"936:12:5"},{"baseName":{"id":857,"name":"EIP712","nameLocations":["950:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":2922,"src":"950:6:5"},"id":858,"nodeType":"InheritanceSpecifier","src":"950:6:5"},{"baseName":{"id":859,"name":"Nonces","nameLocations":["958:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"958:6:5"},"id":860,"nodeType":"InheritanceSpecifier","src":"958:6:5"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"408:487:5","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":993,"linearizedBaseContracts":[993,1696,2922,24,1055,761,66,1019,839,1628],"name":"ERC20Permit","nameLocation":"914:11:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":865,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:5","nodeType":"VariableDeclaration","scope":993,"src":"971:146:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":862,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"1124:52:5","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":870,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:5","nodeType":"ErrorDefinition","parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:5","nodeType":"VariableDeclaration","scope":870,"src":"1211:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:5"},"src":"1181:48:5"},{"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"1235:45:5","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":877,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:5","nodeType":"ErrorDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"signer","nameLocation":"1320:6:5","nodeType":"VariableDeclaration","scope":877,"src":"1312:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"owner","nameLocation":"1336:5:5","nodeType":"VariableDeclaration","scope":877,"src":"1328:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:5"},"src":"1285:58:5"},{"body":{"id":887,"nodeType":"Block","src":"1624:2:5","statements":[]},"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"1349:220:5","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":888,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":883,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"1613:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":885,"kind":"baseConstructorSpecifier","modifierName":{"id":882,"name":"EIP712","nameLocations":["1606:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":2922,"src":"1606:6:5"},"nodeType":"ModifierInvocation","src":"1606:17:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"name","nameLocation":"1600:4:5","nodeType":"VariableDeclaration","scope":888,"src":"1586:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":879,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:5"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"1624:0:5"},"scope":993,"src":"1574:52:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1040],"body":{"id":964,"nodeType":"Block","src":"1869:483:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":906,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":908,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"1901:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":915,"nodeType":"IfStatement","src":"1879:97:5","trueBody":{"id":914,"nodeType":"Block","src":"1911:65:5","statements":[{"errorCall":{"arguments":[{"id":911,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"1956:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":910,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"1932:23:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"RevertStatement","src":"1925:40:5"}]}},{"assignments":[917],"declarations":[{"constant":false,"id":917,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:5","nodeType":"VariableDeclaration","scope":964,"src":"1986:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":931,"initialValue":{"arguments":[{"arguments":[{"id":921,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2028:15:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":922,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2045:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":923,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"2052:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"2061:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":926,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2078:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":925,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"2068:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":928,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"2086:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":919,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:5","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":918,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:5"},{"assignments":[933],"declarations":[{"constant":false,"id":933,"mutability":"mutable","name":"hash","nameLocation":"2115:4:5","nodeType":"VariableDeclaration","scope":964,"src":"2107:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":937,"initialValue":{"arguments":[{"id":935,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"2139:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":934,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"2122:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:5"},{"assignments":[939],"declarations":[{"constant":false,"id":939,"mutability":"mutable","name":"signer","nameLocation":"2169:6:5","nodeType":"VariableDeclaration","scope":964,"src":"2161:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":947,"initialValue":{"arguments":[{"id":942,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"2192:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":943,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"2198:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":944,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"2201:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":945,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"2204:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":940,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"2178:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2695_$","typeString":"type(library ECDSA)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:5","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2645,"src":"2178:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":948,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"2220:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":949,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2230:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":957,"nodeType":"IfStatement","src":"2216:88:5","trueBody":{"id":956,"nodeType":"Block","src":"2237:67:5","statements":[{"errorCall":{"arguments":[{"id":952,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"2279:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":953,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2287:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":951,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"2258:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":955,"nodeType":"RevertStatement","src":"2251:42:5"}]}},{"expression":{"arguments":[{"id":959,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2323:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":960,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"2330:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"2339:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":958,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[652,712],"referencedDeclaration":652,"src":"2314:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":963,"nodeType":"ExpressionStatement","src":"2314:31:5"}]},"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"1632:43:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":965,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:5","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"owner","nameLocation":"1713:5:5","nodeType":"VariableDeclaration","scope":965,"src":"1705:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"spender","nameLocation":"1736:7:5","nodeType":"VariableDeclaration","scope":965,"src":"1728:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"value","nameLocation":"1761:5:5","nodeType":"VariableDeclaration","scope":965,"src":"1753:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:5","nodeType":"VariableDeclaration","scope":965,"src":"1776:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"v","nameLocation":"1808:1:5","nodeType":"VariableDeclaration","scope":965,"src":"1802:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":898,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"r","nameLocation":"1827:1:5","nodeType":"VariableDeclaration","scope":965,"src":"1819:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"s","nameLocation":"1846:1:5","nodeType":"VariableDeclaration","scope":965,"src":"1838:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:5"},"returnParameters":{"id":905,"nodeType":"ParameterList","parameters":[],"src":"1869:0:5"},"scope":993,"src":"1680:672:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1048,1655],"body":{"id":981,"nodeType":"Block","src":"2506:43:5","statements":[{"expression":{"arguments":[{"id":978,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"2536:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":976,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$993_$","typeString":"type(contract super ERC20Permit)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1655,"src":"2523:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":975,"id":980,"nodeType":"Return","src":"2516:26:5"}]},"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"2358:43:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":982,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:5","nodeType":"FunctionDefinition","overrides":{"id":972,"nodeType":"OverrideSpecifier","overrides":[{"id":970,"name":"IERC20Permit","nameLocations":["2466:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":1055,"src":"2466:12:5"},{"id":971,"name":"Nonces","nameLocations":["2480:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"2480:6:5"}],"src":"2457:30:5"},"parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"owner","nameLocation":"2430:5:5","nodeType":"VariableDeclaration","scope":982,"src":"2422:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:5"},"returnParameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"2497:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:5"},"scope":993,"src":"2406:143:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1054],"body":{"id":991,"nodeType":"Block","src":"2724:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":988,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"2741:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":987,"id":990,"nodeType":"Return","src":"2734:27:5"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"2555:43:5","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":992,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:5","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"2681:2:5"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"2715:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:5"},"scope":993,"src":"2656:112:5","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":994,"src":"896:1874:5","usedErrors":[36,41,46,55,60,65,870,877,1638,1779,1781,2358,2363,2368],"usedEvents":[4,773,782]}],"src":"122:2649:5"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[839],"IERC20Metadata":[1019]},"id":1020,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":995,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1020,"sourceUnit":840,"src":"151:37:6","symbolAliases":[{"foreign":{"id":996,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"159:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":999,"name":"IERC20","nameLocations":["305:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":839,"src":"305:6:6"},"id":1000,"nodeType":"InheritanceSpecifier","src":"305:6:6"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"190:86:6","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1019,"linearizedBaseContracts":[1019,839],"name":"IERC20Metadata","nameLocation":"287:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"318:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1006,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:6","nodeType":"FunctionDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[],"src":"390:2:6"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1006,"src":"416:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1003,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:6"},"scope":1019,"src":"377:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"437:56:6","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1012,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:6","nodeType":"FunctionDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[],"src":"513:2:6"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1012,"src":"539:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1009,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:6"},"scope":1019,"src":"498:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"560:65:6","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1018,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:6","nodeType":"FunctionDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"647:2:6"},"returnParameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1018,"src":"673:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1015,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:6"},"scope":1019,"src":"630:50:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1020,"src":"277:405:6","usedErrors":[],"usedEvents":[773,782]}],"src":"125:558:6"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1055]},"id":1056,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1021,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1022,"nodeType":"StructuredDocumentation","src":"149:1963:7","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1055,"linearizedBaseContracts":[1055],"name":"IERC20Permit","nameLocation":"2123:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"2142:850:7","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1040,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:7","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"owner","nameLocation":"3030:5:7","nodeType":"VariableDeclaration","scope":1040,"src":"3022:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"spender","nameLocation":"3053:7:7","nodeType":"VariableDeclaration","scope":1040,"src":"3045:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"value","nameLocation":"3078:5:7","nodeType":"VariableDeclaration","scope":1040,"src":"3070:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1031,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:7","nodeType":"VariableDeclaration","scope":1040,"src":"3093:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"v","nameLocation":"3125:1:7","nodeType":"VariableDeclaration","scope":1040,"src":"3119:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1032,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"r","nameLocation":"3144:1:7","nodeType":"VariableDeclaration","scope":1040,"src":"3136:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"s","nameLocation":"3163:1:7","nodeType":"VariableDeclaration","scope":1040,"src":"3155:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:7"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"3179:0:7"},"scope":1055,"src":"2997:183:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"3186:294:7","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1048,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:7","nodeType":"FunctionDefinition","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"owner","nameLocation":"3509:5:7","nodeType":"VariableDeclaration","scope":1048,"src":"3501:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:7"},"returnParameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1048,"src":"3539:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:7"},"scope":1055,"src":"3485:63:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"3554:128:7","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1054,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:7","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[],"src":"3765:2:7"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"3791:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:7"},"scope":1055,"src":"3740:60:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1056,"src":"2113:1689:7","usedErrors":[],"usedEvents":[]}],"src":"123:3680:7"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1598],"IERC20":[839],"IERC20Permit":[1055],"SafeERC20":[1345]},"id":1346,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1057,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1059,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1346,"sourceUnit":840,"src":"141:37:8","symbolAliases":[{"foreign":{"id":1058,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"149:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1061,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1346,"sourceUnit":1056,"src":"179:60:8","symbolAliases":[{"foreign":{"id":1060,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"187:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1063,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1346,"sourceUnit":1599,"src":"240:51:8","symbolAliases":[{"foreign":{"id":1062,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"248:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"293:457:8","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1345,"linearizedBaseContracts":[1345],"name":"SafeERC20","nameLocation":"759:9:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1067,"libraryName":{"id":1065,"name":"Address","nameLocations":["781:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1598,"src":"781:7:8"},"nodeType":"UsingForDirective","src":"775:26:8","typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"807:64:8","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":1072,"name":"SafeERC20FailedOperation","nameLocation":"882:24:8","nodeType":"ErrorDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"token","nameLocation":"915:5:8","nodeType":"VariableDeclaration","scope":1072,"src":"907:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:8"},"src":"876:46:8"},{"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"928:71:8","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1081,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:8","nodeType":"ErrorDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"spender","nameLocation":"1051:7:8","nodeType":"VariableDeclaration","scope":1081,"src":"1043:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:8","nodeType":"VariableDeclaration","scope":1081,"src":"1060:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:8","nodeType":"VariableDeclaration","scope":1081,"src":"1086:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:8"},"src":"1004:109:8"},{"body":{"id":1104,"nodeType":"Block","src":"1375:88:8","statements":[{"expression":{"arguments":[{"id":1093,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"1405:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1096,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"1427:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":806,"src":"1427:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1098,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"1444:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"1448:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1094,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1092,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"1385:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1103,"nodeType":"ExpressionStatement","src":"1385:71:8"}]},"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"1119:179:8","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:8","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"token","nameLocation":"1332:5:8","nodeType":"VariableDeclaration","scope":1105,"src":"1325:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},"typeName":{"id":1084,"nodeType":"UserDefinedTypeName","pathNode":{"id":1083,"name":"IERC20","nameLocations":["1325:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":839,"src":"1325:6:8"},"referencedDeclaration":839,"src":"1325:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"to","nameLocation":"1347:2:8","nodeType":"VariableDeclaration","scope":1105,"src":"1339:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"value","nameLocation":"1359:5:8","nodeType":"VariableDeclaration","scope":1105,"src":"1351:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:8"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[],"src":"1375:0:8"},"scope":1345,"src":"1303:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1131,"nodeType":"Block","src":"1792:98:8","statements":[{"expression":{"arguments":[{"id":1119,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"1822:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1122,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"1844:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":838,"src":"1844:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1124,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"1865:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1125,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"1871:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"1875:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1127,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1120,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1118,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"1802:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"ExpressionStatement","src":"1802:81:8"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"1469:228:8","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1132,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:8","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"token","nameLocation":"1735:5:8","nodeType":"VariableDeclaration","scope":1132,"src":"1728:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},"typeName":{"id":1108,"nodeType":"UserDefinedTypeName","pathNode":{"id":1107,"name":"IERC20","nameLocations":["1728:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":839,"src":"1728:6:8"},"referencedDeclaration":839,"src":"1728:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"from","nameLocation":"1750:4:8","nodeType":"VariableDeclaration","scope":1132,"src":"1742:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"to","nameLocation":"1764:2:8","nodeType":"VariableDeclaration","scope":1132,"src":"1756:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"value","nameLocation":"1776:5:8","nodeType":"VariableDeclaration","scope":1132,"src":"1768:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:8"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"1792:0:8"},"scope":1345,"src":"1702:188:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1162,"nodeType":"Block","src":"2167:139:8","statements":[{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:8","nodeType":"VariableDeclaration","scope":1162,"src":"2177:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1153,"initialValue":{"arguments":[{"arguments":[{"id":1149,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1345","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1345","typeString":"library SafeERC20"}],"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:8","typeDescriptions":{}}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1151,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"2231:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1145,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"2200:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":816,"src":"2200:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:8"},{"expression":{"arguments":[{"id":1155,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"2262:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},{"id":1156,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"2269:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1157,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"2278:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"2293:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1154,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"2249:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1161,"nodeType":"ExpressionStatement","src":"2249:50:8"}]},"documentation":{"id":1133,"nodeType":"StructuredDocumentation","src":"1896:180:8","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:8","nodeType":"FunctionDefinition","parameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"token","nameLocation":"2119:5:8","nodeType":"VariableDeclaration","scope":1163,"src":"2112:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},"typeName":{"id":1135,"nodeType":"UserDefinedTypeName","pathNode":{"id":1134,"name":"IERC20","nameLocations":["2112:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":839,"src":"2112:6:8"},"referencedDeclaration":839,"src":"2112:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"spender","nameLocation":"2134:7:8","nodeType":"VariableDeclaration","scope":1163,"src":"2126:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"value","nameLocation":"2151:5:8","nodeType":"VariableDeclaration","scope":1163,"src":"2143:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:8"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[],"src":"2167:0:8"},"scope":1345,"src":"2081:225:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1205,"nodeType":"Block","src":"2607:370:8","statements":[{"id":1204,"nodeType":"UncheckedBlock","src":"2617:354:8","statements":[{"assignments":[1175],"declarations":[{"constant":false,"id":1175,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:8","nodeType":"VariableDeclaration","scope":1204,"src":"2641:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1184,"initialValue":{"arguments":[{"arguments":[{"id":1180,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1345","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1345","typeString":"library SafeERC20"}],"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:8","typeDescriptions":{}}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1182,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2699:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1176,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2668:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":816,"src":"2668:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1185,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"2725:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1186,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2744:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1195,"nodeType":"IfStatement","src":"2721:160:8","trueBody":{"id":1194,"nodeType":"Block","src":"2763:118:8","statements":[{"errorCall":{"arguments":[{"id":1189,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2821:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1190,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"2830:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1191,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2848:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1188,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"2788:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"RevertStatement","src":"2781:85:8"}]}},{"expression":{"arguments":[{"id":1197,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"2907:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},{"id":1198,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2914:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1199,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"2923:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1200,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2942:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1196,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"2894:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1203,"nodeType":"ExpressionStatement","src":"2894:66:8"}]}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"2312:192:8","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:8","nodeType":"FunctionDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"token","nameLocation":"2547:5:8","nodeType":"VariableDeclaration","scope":1206,"src":"2540:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},"typeName":{"id":1166,"nodeType":"UserDefinedTypeName","pathNode":{"id":1165,"name":"IERC20","nameLocations":["2540:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":839,"src":"2540:6:8"},"referencedDeclaration":839,"src":"2540:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"spender","nameLocation":"2562:7:8","nodeType":"VariableDeclaration","scope":1206,"src":"2554:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:8","nodeType":"VariableDeclaration","scope":1206,"src":"2571:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:8"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[],"src":"2607:0:8"},"scope":1345,"src":"2509:468:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1252,"nodeType":"Block","src":"3373:303:8","statements":[{"assignments":[1218],"declarations":[{"constant":false,"id":1218,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:8","nodeType":"VariableDeclaration","scope":1252,"src":"3383:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1217,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1227,"initialValue":{"arguments":[{"expression":{"id":1221,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3426:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":826,"src":"3426:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1223,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"3442:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"3451:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1219,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:8"},{"condition":{"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:8","subExpression":{"arguments":[{"id":1229,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3498:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},{"id":1230,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3505:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1228,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"3474:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1251,"nodeType":"IfStatement","src":"3469:201:8","trueBody":{"id":1250,"nodeType":"Block","src":"3520:150:8","statements":[{"expression":{"arguments":[{"id":1234,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3554:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1237,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3576:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":826,"src":"3576:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1239,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"3592:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1235,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1233,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"3534:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1244,"nodeType":"ExpressionStatement","src":"3534:71:8"},{"expression":{"arguments":[{"id":1246,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"3639:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},{"id":1247,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"3646:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1245,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"3619:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1249,"nodeType":"ExpressionStatement","src":"3619:40:8"}]}}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"2983:308:8","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1253,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:8","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"token","nameLocation":"3325:5:8","nodeType":"VariableDeclaration","scope":1253,"src":"3318:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},"typeName":{"id":1209,"nodeType":"UserDefinedTypeName","pathNode":{"id":1208,"name":"IERC20","nameLocations":["3318:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":839,"src":"3318:6:8"},"referencedDeclaration":839,"src":"3318:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"spender","nameLocation":"3340:7:8","nodeType":"VariableDeclaration","scope":1253,"src":"3332:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"value","nameLocation":"3357:5:8","nodeType":"VariableDeclaration","scope":1253,"src":"3349:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:8"},"returnParameters":{"id":1216,"nodeType":"ParameterList","parameters":[],"src":"3373:0:8"},"scope":1345,"src":"3296:380:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1294,"nodeType":"Block","src":"4129:559:8","statements":[{"assignments":[1263],"declarations":[{"constant":false,"id":1263,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:8","nodeType":"VariableDeclaration","scope":1294,"src":"4478:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1262,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1271,"initialValue":{"arguments":[{"id":1269,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4532:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1266,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"4512:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}],"id":1265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:8","typeDescriptions":{}}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:8","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"4504:27:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1272,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"4551:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:8","memberName":"length","nodeType":"MemberAccess","src":"4551:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:8","subExpression":{"arguments":[{"id":1278,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"4589:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1279,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:8","typeDescriptions":{}}}],"id":1281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1276,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:8","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1293,"nodeType":"IfStatement","src":"4547:135:8","trueBody":{"id":1292,"nodeType":"Block","src":"4610:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1288,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"4664:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}],"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:8","typeDescriptions":{}}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1285,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4631:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1291,"nodeType":"RevertStatement","src":"4624:47:8"}]}}]},"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"3682:372:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:8","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"token","nameLocation":"4095:5:8","nodeType":"VariableDeclaration","scope":1295,"src":"4088:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},"typeName":{"id":1256,"nodeType":"UserDefinedTypeName","pathNode":{"id":1255,"name":"IERC20","nameLocations":["4088:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":839,"src":"4088:6:8"},"referencedDeclaration":839,"src":"4088:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"data","nameLocation":"4115:4:8","nodeType":"VariableDeclaration","scope":1295,"src":"4102:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1258,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:8"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"4129:0:8"},"scope":1345,"src":"4059:629:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1343,"nodeType":"Block","src":"5278:489:8","statements":[{"assignments":[1307,1309],"declarations":[{"constant":false,"id":1307,"mutability":"mutable","name":"success","nameLocation":"5579:7:8","nodeType":"VariableDeclaration","scope":1343,"src":"5574:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1306,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:8","nodeType":"VariableDeclaration","scope":1343,"src":"5588:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1308,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1317,"initialValue":{"arguments":[{"id":1315,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"5635:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1312,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"5623:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}],"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:8","typeDescriptions":{}}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:8","memberName":"call","nodeType":"MemberAccess","src":"5615:19:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:8"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1318,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5657:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1319,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5669:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:8","memberName":"length","nodeType":"MemberAccess","src":"5669:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1325,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5706:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1326,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:8","typeDescriptions":{}}}],"id":1328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1323,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:8","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1335,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"5738:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:8","typeDescriptions":{}}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:8","memberName":"code","nodeType":"MemberAccess","src":"5730:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:8","memberName":"length","nodeType":"MemberAccess","src":"5730:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1305,"id":1342,"nodeType":"Return","src":"5650:110:8"}]},"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"4694:490:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1344,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:8","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"token","nameLocation":"5229:5:8","nodeType":"VariableDeclaration","scope":1344,"src":"5222:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"},"typeName":{"id":1298,"nodeType":"UserDefinedTypeName","pathNode":{"id":1297,"name":"IERC20","nameLocations":["5222:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":839,"src":"5222:6:8"},"referencedDeclaration":839,"src":"5222:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"data","nameLocation":"5249:4:8","nodeType":"VariableDeclaration","scope":1344,"src":"5236:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1300,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:8"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1344,"src":"5272:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1303,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:8"},"scope":1345,"src":"5189:578:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1346,"src":"751:5018:8","usedErrors":[1072,1081],"usedEvents":[]}],"src":"115:5655:8"}},"@openzeppelin/contracts/utils/Address.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1598]},"id":1599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1347,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"127:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1598,"linearizedBaseContracts":[1598],"name":"Address","nameLocation":"203:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"217:94:9","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1353,"name":"AddressInsufficientBalance","nameLocation":"322:26:9","nodeType":"ErrorDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"account","nameLocation":"357:7:9","nodeType":"VariableDeclaration","scope":1353,"src":"349:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:9"},"src":"316:50:9"},{"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"372:75:9","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1358,"name":"AddressEmptyCode","nameLocation":"458:16:9","nodeType":"ErrorDefinition","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"target","nameLocation":"483:6:9","nodeType":"VariableDeclaration","scope":1358,"src":"475:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:9"},"src":"452:39:9"},{"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"497:89:9","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1361,"name":"FailedInnerCall","nameLocation":"597:15:9","nodeType":"ErrorDefinition","parameters":{"id":1360,"nodeType":"ParameterList","parameters":[],"src":"612:2:9"},"src":"591:24:9"},{"body":{"id":1401,"nodeType":"Block","src":"1602:260:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1371,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1598","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1598","typeString":"library Address"}],"id":1370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:9","typeDescriptions":{}}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:9","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1374,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1640:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1384,"nodeType":"IfStatement","src":"1612:109:9","trueBody":{"id":1383,"nodeType":"Block","src":"1648:73:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1379,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1598","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1598","typeString":"library Address"}],"id":1378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:9","typeDescriptions":{}}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1376,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"1669:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1382,"nodeType":"RevertStatement","src":"1662:48:9"}]}},{"assignments":[1386,null],"declarations":[{"constant":false,"id":1386,"mutability":"mutable","name":"success","nameLocation":"1737:7:9","nodeType":"VariableDeclaration","scope":1401,"src":"1732:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1385,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1393,"initialValue":{"arguments":[{"hexValue":"","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1387,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"1750:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:9","memberName":"call","nodeType":"MemberAccess","src":"1750:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1389,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1772:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:9"},{"condition":{"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:9","subExpression":{"id":1394,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"1798:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1400,"nodeType":"IfStatement","src":"1793:63:9","trueBody":{"id":1399,"nodeType":"Block","src":"1807:49:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1396,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"1828:15:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1398,"nodeType":"RevertStatement","src":"1821:24:9"}]}}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"621:905:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1402,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:9","nodeType":"FunctionDefinition","parameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:9","nodeType":"VariableDeclaration","scope":1402,"src":"1550:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"amount","nameLocation":"1585:6:9","nodeType":"VariableDeclaration","scope":1402,"src":"1577:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:9"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[],"src":"1602:0:9"},"scope":1598,"src":"1531:331:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1418,"nodeType":"Block","src":"2794:62:9","statements":[{"expression":{"arguments":[{"id":1413,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"2833:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1414,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2841:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1412,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"2811:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1411,"id":1417,"nodeType":"Return","src":"2804:45:9"}]},"documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"1868:832:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1419,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:9","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"target","nameLocation":"2735:6:9","nodeType":"VariableDeclaration","scope":1419,"src":"2727:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"data","nameLocation":"2756:4:9","nodeType":"VariableDeclaration","scope":1419,"src":"2743:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1406,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:9"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1419,"src":"2780:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1409,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:9"},"scope":1598,"src":"2705:151:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1464,"nodeType":"Block","src":"3293:279:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1433,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1598","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1598","typeString":"library Address"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:9","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:9","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"3331:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1446,"nodeType":"IfStatement","src":"3303:108:9","trueBody":{"id":1445,"nodeType":"Block","src":"3338:73:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1441,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1598","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1598","typeString":"library Address"}],"id":1440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:9","typeDescriptions":{}}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1438,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"3359:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1444,"nodeType":"RevertStatement","src":"3352:48:9"}]}},{"assignments":[1448,1450],"declarations":[{"constant":false,"id":1448,"mutability":"mutable","name":"success","nameLocation":"3426:7:9","nodeType":"VariableDeclaration","scope":1464,"src":"3421:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1447,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:9","nodeType":"VariableDeclaration","scope":1464,"src":"3435:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1449,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1457,"initialValue":{"arguments":[{"id":1455,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"3488:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1451,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"3462:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:9","memberName":"call","nodeType":"MemberAccess","src":"3462:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"3481:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:9"},{"expression":{"arguments":[{"id":1459,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"3537:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1460,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"3545:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1461,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3554:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1458,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"3510:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1430,"id":1463,"nodeType":"Return","src":"3503:62:9"}]},"documentation":{"id":1420,"nodeType":"StructuredDocumentation","src":"2862:313:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:9","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"target","nameLocation":"3219:6:9","nodeType":"VariableDeclaration","scope":1465,"src":"3211:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"data","nameLocation":"3240:4:9","nodeType":"VariableDeclaration","scope":1465,"src":"3227:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1423,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"value","nameLocation":"3254:5:9","nodeType":"VariableDeclaration","scope":1465,"src":"3246:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:9"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1465,"src":"3279:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1428,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:9"},"scope":1598,"src":"3180:392:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"3811:154:9","statements":[{"assignments":[1476,1478],"declarations":[{"constant":false,"id":1476,"mutability":"mutable","name":"success","nameLocation":"3827:7:9","nodeType":"VariableDeclaration","scope":1490,"src":"3822:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1475,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:9","nodeType":"VariableDeclaration","scope":1490,"src":"3836:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1477,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1483,"initialValue":{"arguments":[{"id":1481,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"3881:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1479,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3863:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:9"},{"expression":{"arguments":[{"id":1485,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3930:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"3938:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1487,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"3947:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1484,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"3903:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1474,"id":1489,"nodeType":"Return","src":"3896:62:9"}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"3578:128:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:9","nodeType":"FunctionDefinition","parameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"target","nameLocation":"3747:6:9","nodeType":"VariableDeclaration","scope":1491,"src":"3739:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"data","nameLocation":"3768:4:9","nodeType":"VariableDeclaration","scope":1491,"src":"3755:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1469,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:9"},"returnParameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1491,"src":"3797:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1472,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:9"},"scope":1598,"src":"3711:254:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1516,"nodeType":"Block","src":"4203:156:9","statements":[{"assignments":[1502,1504],"declarations":[{"constant":false,"id":1502,"mutability":"mutable","name":"success","nameLocation":"4219:7:9","nodeType":"VariableDeclaration","scope":1516,"src":"4214:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1501,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:9","nodeType":"VariableDeclaration","scope":1516,"src":"4228:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1503,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1509,"initialValue":{"arguments":[{"id":1507,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"4275:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1505,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4255:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:9","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:9"},{"expression":{"arguments":[{"id":1511,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4324:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1512,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"4332:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1513,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"4341:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1510,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"4297:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1500,"id":1515,"nodeType":"Return","src":"4290:62:9"}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"3971:130:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1517,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:9","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"target","nameLocation":"4144:6:9","nodeType":"VariableDeclaration","scope":1517,"src":"4136:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"data","nameLocation":"4165:4:9","nodeType":"VariableDeclaration","scope":1517,"src":"4152:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1495,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:9"},"returnParameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1517,"src":"4189:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1498,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:9"},"scope":1598,"src":"4106:253:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1556,"nodeType":"Block","src":"4783:424:9","statements":[{"condition":{"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:9","subExpression":{"id":1529,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"4798:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1554,"nodeType":"Block","src":"4857:344:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1536,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"5045:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:9","memberName":"length","nodeType":"MemberAccess","src":"5045:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1540,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"5071:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:9","memberName":"code","nodeType":"MemberAccess","src":"5071:11:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:9","memberName":"length","nodeType":"MemberAccess","src":"5071:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1551,"nodeType":"IfStatement","src":"5041:119:9","trueBody":{"id":1550,"nodeType":"Block","src":"5096:64:9","statements":[{"errorCall":{"arguments":[{"id":1547,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"5138:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1546,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"5121:16:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1549,"nodeType":"RevertStatement","src":"5114:31:9"}]}},{"expression":{"id":1552,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"5180:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1528,"id":1553,"nodeType":"Return","src":"5173:17:9"}]},"id":1555,"nodeType":"IfStatement","src":"4793:408:9","trueBody":{"id":1535,"nodeType":"Block","src":"4807:44:9","statements":[{"expression":{"arguments":[{"id":1532,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"4829:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1531,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4821:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1534,"nodeType":"ExpressionStatement","src":"4821:19:9"}]}}]},"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"4365:255:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1557,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:9","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"target","nameLocation":"4678:6:9","nodeType":"VariableDeclaration","scope":1557,"src":"4670:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"success","nameLocation":"4699:7:9","nodeType":"VariableDeclaration","scope":1557,"src":"4694:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1521,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1524,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:9","nodeType":"VariableDeclaration","scope":1557,"src":"4716:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1523,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:9"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1557,"src":"4769:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1526,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:9"},"scope":1598,"src":"4625:582:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1578,"nodeType":"Block","src":"5509:122:9","statements":[{"condition":{"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:9","subExpression":{"id":1567,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"5524:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1576,"nodeType":"Block","src":"5583:42:9","statements":[{"expression":{"id":1574,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"5604:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1566,"id":1575,"nodeType":"Return","src":"5597:17:9"}]},"id":1577,"nodeType":"IfStatement","src":"5519:106:9","trueBody":{"id":1573,"nodeType":"Block","src":"5533:44:9","statements":[{"expression":{"arguments":[{"id":1570,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"5555:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1569,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"5547:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1572,"nodeType":"ExpressionStatement","src":"5547:19:9"}]}}]},"documentation":{"id":1558,"nodeType":"StructuredDocumentation","src":"5213:189:9","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:9","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"success","nameLocation":"5438:7:9","nodeType":"VariableDeclaration","scope":1579,"src":"5433:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1559,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:9","nodeType":"VariableDeclaration","scope":1579,"src":"5447:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1561,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:9"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1579,"src":"5495:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1564,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:9"},"scope":1598,"src":"5407:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"5798:461:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1585,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5874:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:9","memberName":"length","nodeType":"MemberAccess","src":"5874:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1594,"nodeType":"Block","src":"6204:49:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1591,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"6225:15:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1593,"nodeType":"RevertStatement","src":"6218:24:9"}]},"id":1595,"nodeType":"IfStatement","src":"5870:383:9","trueBody":{"id":1590,"nodeType":"Block","src":"5897:301:9","statements":[{"AST":{"nodeType":"YulBlock","src":"6055:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6073:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"6102:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6096:5:9"},"nodeType":"YulFunctionCall","src":"6096:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6077:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"6145:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6137:3:9"},"nodeType":"YulFunctionCall","src":"6137:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6158:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:9"},"nodeType":"YulFunctionCall","src":"6130:44:9"},"nodeType":"YulExpressionStatement","src":"6130:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1582,"isOffset":false,"isSlot":false,"src":"6102:10:9","valueSize":1},{"declaration":1582,"isOffset":false,"isSlot":false,"src":"6145:10:9","valueSize":1}],"id":1589,"nodeType":"InlineAssembly","src":"6046:142:9"}]}}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"5637:101:9","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:9","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:9","nodeType":"VariableDeclaration","scope":1597,"src":"5760:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1581,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:9"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[],"src":"5798:0:9"},"scope":1598,"src":"5743:516:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1599,"src":"195:6066:9","usedErrors":[1353,1358,1361],"usedEvents":[]}],"src":"101:6161:9"}},"@openzeppelin/contracts/utils/Context.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1628]},"id":1629,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1600,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"127:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1628,"linearizedBaseContracts":[1628],"name":"Context","nameLocation":"642:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1609,"nodeType":"Block","src":"718:34:10","statements":[{"expression":{"expression":{"id":1606,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:10","memberName":"sender","nodeType":"MemberAccess","src":"735:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1605,"id":1608,"nodeType":"Return","src":"728:17:10"}]},"id":1610,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:10","nodeType":"FunctionDefinition","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[],"src":"675:2:10"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1610,"src":"709:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1603,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:10"},"scope":1628,"src":"656:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1618,"nodeType":"Block","src":"825:32:10","statements":[{"expression":{"expression":{"id":1615,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:10","memberName":"data","nodeType":"MemberAccess","src":"842:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1614,"id":1617,"nodeType":"Return","src":"835:15:10"}]},"id":1619,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:10","nodeType":"FunctionDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"775:2:10"},"returnParameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1619,"src":"809:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1612,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:10"},"scope":1628,"src":"758:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1626,"nodeType":"Block","src":"935:25:10","statements":[{"expression":{"hexValue":"30","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1623,"id":1625,"nodeType":"Return","src":"945:8:10"}]},"id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:10","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[],"src":"892:2:10"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1627,"src":"926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:10"},"scope":1628,"src":"863:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1629,"src":"624:338:10","usedErrors":[],"usedEvents":[]}],"src":"101:862:10"}},"@openzeppelin/contracts/utils/Nonces.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1696]},"id":1697,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1630,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"125:83:11","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1696,"linearizedBaseContracts":[1696],"name":"Nonces","nameLocation":"227:6:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"240:90:11","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1638,"name":"InvalidAccountNonce","nameLocation":"341:19:11","nodeType":"ErrorDefinition","parameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"account","nameLocation":"369:7:11","nodeType":"VariableDeclaration","scope":1638,"src":"361:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:11","nodeType":"VariableDeclaration","scope":1638,"src":"378:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:11"},"src":"335:65:11"},{"constant":false,"id":1642,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:11","nodeType":"VariableDeclaration","scope":1696,"src":"406:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1641,"keyName":"account","keyNameLocation":"422:7:11","keyType":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1654,"nodeType":"Block","src":"607:38:11","statements":[{"expression":{"baseExpression":{"id":1650,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"624:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1652,"indexExpression":{"id":1651,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"632:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1649,"id":1653,"nodeType":"Return","src":"617:21:11"}]},"documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"464:69:11","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1655,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:11","nodeType":"FunctionDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"owner","nameLocation":"562:5:11","nodeType":"VariableDeclaration","scope":1655,"src":"554:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:11"},"returnParameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1655,"src":"598:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:11"},"scope":1696,"src":"538:107:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1669,"nodeType":"Block","src":"828:326:11","statements":[{"id":1668,"nodeType":"UncheckedBlock","src":"1031:117:11","statements":[{"expression":{"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:11","subExpression":{"baseExpression":{"id":1663,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1121:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1665,"indexExpression":{"id":1664,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"1129:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1662,"id":1667,"nodeType":"Return","src":"1114:23:11"}]}]},"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"651:103:11","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1670,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:11","nodeType":"FunctionDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"owner","nameLocation":"786:5:11","nodeType":"VariableDeclaration","scope":1670,"src":"778:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:11"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1670,"src":"819:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:11"},"scope":1696,"src":"759:395:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1694,"nodeType":"Block","src":"1338:149:11","statements":[{"assignments":[1679],"declarations":[{"constant":false,"id":1679,"mutability":"mutable","name":"current","nameLocation":"1356:7:11","nodeType":"VariableDeclaration","scope":1694,"src":"1348:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1678,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1683,"initialValue":{"arguments":[{"id":1681,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1376:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1680,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"1366:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1684,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"1396:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1685,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1405:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1693,"nodeType":"IfStatement","src":"1392:89:11","trueBody":{"id":1692,"nodeType":"Block","src":"1414:67:11","statements":[{"errorCall":{"arguments":[{"id":1688,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"1455:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1689,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1462:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1687,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"1435:19:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1691,"nodeType":"RevertStatement","src":"1428:42:11"}]}}]},"documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"1160:100:11","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1695,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:11","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"owner","nameLocation":"1299:5:11","nodeType":"VariableDeclaration","scope":1695,"src":"1291:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:11","nodeType":"VariableDeclaration","scope":1695,"src":"1306:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:11"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"1338:0:11"},"scope":1696,"src":"1265:222:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1697,"src":"209:1280:11","usedErrors":[1638],"usedEvents":[]}],"src":"99:1391:11"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1765]},"id":1766,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1698,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"135:750:12","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1765,"linearizedBaseContracts":[1765],"name":"ReentrancyGuard","nameLocation":"904:15:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1702,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:12","nodeType":"VariableDeclaration","scope":1765,"src":"1674:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1705,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:12","nodeType":"VariableDeclaration","scope":1765,"src":"1720:36:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1707,"mutability":"mutable","name":"_status","nameLocation":"1779:7:12","nodeType":"VariableDeclaration","scope":1765,"src":"1763:23:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"1793:52:12","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1710,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:12","nodeType":"ErrorDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[],"src":"1884:2:12"},"src":"1850:37:12"},{"body":{"id":1717,"nodeType":"Block","src":"1907:38:12","statements":[{"expression":{"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1713,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"1917:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1714,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"1927:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1716,"nodeType":"ExpressionStatement","src":"1917:21:12"}]},"id":1718,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[],"src":"1904:2:12"},"returnParameters":{"id":1712,"nodeType":"ParameterList","parameters":[],"src":"1907:0:12"},"scope":1765,"src":"1893:52:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1728,"nodeType":"Block","src":"2346:79:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1721,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"2356:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1723,"nodeType":"ExpressionStatement","src":"2356:21:12"},{"id":1724,"nodeType":"PlaceholderStatement","src":"2387:1:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1725,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"2398:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1727,"nodeType":"ExpressionStatement","src":"2398:20:12"}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"1951:366:12","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1729,"name":"nonReentrant","nameLocation":"2331:12:12","nodeType":"ModifierDefinition","parameters":{"id":1720,"nodeType":"ParameterList","parameters":[],"src":"2343:2:12"},"src":"2322:103:12","virtual":false,"visibility":"internal"},{"body":{"id":1744,"nodeType":"Block","src":"2470:268:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"2558:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1733,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"2569:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1739,"nodeType":"IfStatement","src":"2554:86:12","trueBody":{"id":1738,"nodeType":"Block","src":"2578:62:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1735,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"2599:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1737,"nodeType":"RevertStatement","src":"2592:37:12"}]}},{"expression":{"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1740,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"2714:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1741,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"2724:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1743,"nodeType":"ExpressionStatement","src":"2714:17:12"}]},"id":1745,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:12","nodeType":"FunctionDefinition","parameters":{"id":1730,"nodeType":"ParameterList","parameters":[],"src":"2459:2:12"},"returnParameters":{"id":1731,"nodeType":"ParameterList","parameters":[],"src":"2470:0:12"},"scope":1765,"src":"2431:307:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1752,"nodeType":"Block","src":"2782:170:12","statements":[{"expression":{"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1748,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"2924:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1749,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"2934:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1751,"nodeType":"ExpressionStatement","src":"2924:21:12"}]},"id":1753,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:12","nodeType":"FunctionDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[],"src":"2771:2:12"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[],"src":"2782:0:12"},"scope":1765,"src":"2744:208:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1763,"nodeType":"Block","src":"3195:42:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"3212:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1760,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"3223:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1758,"id":1762,"nodeType":"Return","src":"3205:25:12"}]},"documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"2958:168:12","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1764,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:12","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[],"src":"3163:2:12"},"returnParameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1764,"src":"3189:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1756,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:12"},"scope":1765,"src":"3131:106:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1766,"src":"886:2353:12","usedErrors":[1710],"usedEvents":[]}],"src":"109:3131:12"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1771],"ShortStrings":[1982],"StorageSlot":[2092]},"id":1983,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1767,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1769,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1983,"sourceUnit":2093,"src":"132:46:13","symbolAliases":[{"foreign":{"id":1768,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"140:11:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1771,"name":"ShortString","nameLocation":"353:11:13","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:13","underlyingType":{"id":1770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"378:876:13","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1982,"linearizedBaseContracts":[1982],"name":"ShortStrings","nameLocation":"1263:12:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1775,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:13","nodeType":"VariableDeclaration","scope":1982,"src":"1345:111:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1779,"name":"StringTooLong","nameLocation":"1469:13:13","nodeType":"ErrorDefinition","parameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"str","nameLocation":"1490:3:13","nodeType":"VariableDeclaration","scope":1779,"src":"1483:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1776,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:13"},"src":"1463:32:13"},{"errorSelector":"b3512b0c","id":1781,"name":"InvalidShortString","nameLocation":"1506:18:13","nodeType":"ErrorDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[],"src":"1524:2:13"},"src":"1500:27:13"},{"body":{"id":1824,"nodeType":"Block","src":"1786:208:13","statements":[{"assignments":[1791],"declarations":[{"constant":false,"id":1791,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:13","nodeType":"VariableDeclaration","scope":1824,"src":"1796:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1790,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1796,"initialValue":{"arguments":[{"id":1794,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"1822:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1792,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:13","typeDescriptions":{}}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1797,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"1840:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:13","memberName":"length","nodeType":"MemberAccess","src":"1840:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1806,"nodeType":"IfStatement","src":"1836:72:13","trueBody":{"id":1805,"nodeType":"Block","src":"1858:50:13","statements":[{"errorCall":{"arguments":[{"id":1802,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"1893:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1801,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"1879:13:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1804,"nodeType":"RevertStatement","src":"1872:25:13"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1815,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"1965:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1813,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:13","typeDescriptions":{}}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:13","typeDescriptions":{}}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1818,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"1974:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:13","memberName":"length","nodeType":"MemberAccess","src":"1974:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:13","typeDescriptions":{}}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1807,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1924:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1771_$","typeString":"type(ShortString)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1771_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"functionReturnParameters":1789,"id":1823,"nodeType":"Return","src":"1917:70:13"}]},"documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"1533:170:13","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1825,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:13","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"str","nameLocation":"1745:3:13","nodeType":"VariableDeclaration","scope":1825,"src":"1731:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1783,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:13"},"returnParameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1825,"src":"1773:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"},"typeName":{"id":1787,"nodeType":"UserDefinedTypeName","pathNode":{"id":1786,"name":"ShortString","nameLocations":["1773:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"1773:11:13"},"referencedDeclaration":1771,"src":"1773:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:13"},"scope":1982,"src":"1708:286:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1850,"nodeType":"Block","src":"2152:331:13","statements":[{"assignments":[1835],"declarations":[{"constant":false,"id":1835,"mutability":"mutable","name":"len","nameLocation":"2170:3:13","nodeType":"VariableDeclaration","scope":1850,"src":"2162:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1839,"initialValue":{"arguments":[{"id":1837,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"2187:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}],"id":1836,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2176:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1771_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:13"},{"assignments":[1841],"declarations":[{"constant":false,"id":1841,"mutability":"mutable","name":"str","nameLocation":"2294:3:13","nodeType":"VariableDeclaration","scope":1850,"src":"2280:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1840,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1846,"initialValue":{"arguments":[{"hexValue":"3332","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1842,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:13"},{"AST":{"nodeType":"YulBlock","src":"2376:81:13","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2397:3:13"},{"name":"len","nodeType":"YulIdentifier","src":"2402:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2390:6:13"},"nodeType":"YulFunctionCall","src":"2390:16:13"},"nodeType":"YulExpressionStatement","src":"2390:16:13"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2430:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2435:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2426:3:13"},"nodeType":"YulFunctionCall","src":"2426:14:13"},{"name":"sstr","nodeType":"YulIdentifier","src":"2442:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2419:6:13"},"nodeType":"YulFunctionCall","src":"2419:28:13"},"nodeType":"YulExpressionStatement","src":"2419:28:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":1835,"isOffset":false,"isSlot":false,"src":"2402:3:13","valueSize":1},{"declaration":1829,"isOffset":false,"isSlot":false,"src":"2442:4:13","valueSize":1},{"declaration":1841,"isOffset":false,"isSlot":false,"src":"2397:3:13","valueSize":1},{"declaration":1841,"isOffset":false,"isSlot":false,"src":"2430:3:13","valueSize":1}],"id":1847,"nodeType":"InlineAssembly","src":"2367:90:13"},{"expression":{"id":1848,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2473:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1833,"id":1849,"nodeType":"Return","src":"2466:10:13"}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"2000:73:13","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1851,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:13","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:13","nodeType":"VariableDeclaration","scope":1851,"src":"2096:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"},"typeName":{"id":1828,"nodeType":"UserDefinedTypeName","pathNode":{"id":1827,"name":"ShortString","nameLocations":["2096:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"2096:11:13"},"referencedDeclaration":1771,"src":"2096:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:13"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1851,"src":"2137:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1831,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:13"},"scope":1982,"src":"2078:405:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1882,"nodeType":"Block","src":"2625:175:13","statements":[{"assignments":[1861],"declarations":[{"constant":false,"id":1861,"mutability":"mutable","name":"result","nameLocation":"2643:6:13","nodeType":"VariableDeclaration","scope":1882,"src":"2635:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1871,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1866,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"2679:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}],"expression":{"id":1864,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2660:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1771_$","typeString":"type(ShortString)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1771_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:13","typeDescriptions":{}}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1872,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"2706:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1879,"nodeType":"IfStatement","src":"2702:69:13","trueBody":{"id":1878,"nodeType":"Block","src":"2719:52:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1875,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"2740:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1877,"nodeType":"RevertStatement","src":"2733:27:13"}]}},{"expression":{"id":1880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"2787:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1859,"id":1881,"nodeType":"Return","src":"2780:13:13"}]},"documentation":{"id":1852,"nodeType":"StructuredDocumentation","src":"2489:61:13","text":" @dev Return the length of a `ShortString`."},"id":1883,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:13","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:13","nodeType":"VariableDeclaration","scope":1883,"src":"2575:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"},"typeName":{"id":1854,"nodeType":"UserDefinedTypeName","pathNode":{"id":1853,"name":"ShortString","nameLocations":["2575:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"2575:11:13"},"referencedDeclaration":1771,"src":"2575:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:13"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1883,"src":"2616:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:13"},"scope":1982,"src":"2555:245:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1922,"nodeType":"Block","src":"3023:231:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3043:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1894,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:13","typeDescriptions":{}}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:13","memberName":"length","nodeType":"MemberAccess","src":"3037:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1920,"nodeType":"Block","src":"3121:127:13","statements":[{"expression":{"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1909,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3161:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1906,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"3135:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2092_$","typeString":"type(library StorageSlot)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:13","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2069,"src":"3135:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2000_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2000_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1999,"src":"3135:38:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3176:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1914,"nodeType":"ExpressionStatement","src":"3135:46:13"},{"expression":{"arguments":[{"id":1917,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"3219:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1915,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"3202:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1771_$","typeString":"type(ShortString)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1771_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"functionReturnParameters":1893,"id":1919,"nodeType":"Return","src":"3195:42:13"}]},"id":1921,"nodeType":"IfStatement","src":"3033:215:13","trueBody":{"id":1905,"nodeType":"Block","src":"3063:52:13","statements":[{"expression":{"arguments":[{"id":1902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3098:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1901,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"3084:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1771_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"functionReturnParameters":1893,"id":1904,"nodeType":"Return","src":"3077:27:13"}]}}]},"documentation":{"id":1884,"nodeType":"StructuredDocumentation","src":"2806:103:13","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1923,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:13","nodeType":"FunctionDefinition","parameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"value","nameLocation":"2963:5:13","nodeType":"VariableDeclaration","scope":1923,"src":"2949:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1885,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"store","nameLocation":"2985:5:13","nodeType":"VariableDeclaration","scope":1923,"src":"2970:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1887,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:13"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1923,"src":"3010:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"},"typeName":{"id":1891,"nodeType":"UserDefinedTypeName","pathNode":{"id":1890,"name":"ShortString","nameLocations":["3010:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"3010:11:13"},"referencedDeclaration":1771,"src":"3010:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:13"},"scope":1982,"src":"2914:340:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1949,"nodeType":"Block","src":"3494:158:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"3527:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}],"expression":{"id":1934,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"3508:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1771_$","typeString":"type(ShortString)"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1771_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1938,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"3537:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1947,"nodeType":"Block","src":"3609:37:13","statements":[{"expression":{"id":1945,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"3630:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1933,"id":1946,"nodeType":"Return","src":"3623:12:13"}]},"id":1948,"nodeType":"IfStatement","src":"3504:142:13","trueBody":{"id":1944,"nodeType":"Block","src":"3556:47:13","statements":[{"expression":{"arguments":[{"id":1941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"3586:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}],"id":1940,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"3577:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1771_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1933,"id":1943,"nodeType":"Return","src":"3570:22:13"}]}}]},"documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"3260:120:13","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1950,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:13","nodeType":"FunctionDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"value","nameLocation":"3427:5:13","nodeType":"VariableDeclaration","scope":1950,"src":"3415:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"},"typeName":{"id":1926,"nodeType":"UserDefinedTypeName","pathNode":{"id":1925,"name":"ShortString","nameLocations":["3415:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"3415:11:13"},"referencedDeclaration":1771,"src":"3415:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"store","nameLocation":"3449:5:13","nodeType":"VariableDeclaration","scope":1950,"src":"3434:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1928,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:13"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1950,"src":"3479:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1931,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:13"},"scope":1982,"src":"3385:267:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1980,"nodeType":"Block","src":"4132:174:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"4165:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}],"expression":{"id":1961,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"4146:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1771_$","typeString":"type(ShortString)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1771_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1965,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"4175:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1978,"nodeType":"Block","src":"4249:51:13","statements":[{"expression":{"expression":{"arguments":[{"id":1974,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"4276:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1972,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:13","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:13","memberName":"length","nodeType":"MemberAccess","src":"4270:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1960,"id":1977,"nodeType":"Return","src":"4263:26:13"}]},"id":1979,"nodeType":"IfStatement","src":"4142:158:13","trueBody":{"id":1971,"nodeType":"Block","src":"4194:49:13","statements":[{"expression":{"arguments":[{"id":1968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"4226:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}],"id":1967,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"4215:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1771_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1960,"id":1970,"nodeType":"Return","src":"4208:24:13"}]}}]},"documentation":{"id":1951,"nodeType":"StructuredDocumentation","src":"3658:364:13","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:13","nodeType":"FunctionDefinition","parameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"value","nameLocation":"4071:5:13","nodeType":"VariableDeclaration","scope":1981,"src":"4059:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"},"typeName":{"id":1953,"nodeType":"UserDefinedTypeName","pathNode":{"id":1952,"name":"ShortString","nameLocations":["4059:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"4059:11:13"},"referencedDeclaration":1771,"src":"4059:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1956,"mutability":"mutable","name":"store","nameLocation":"4093:5:13","nodeType":"VariableDeclaration","scope":1981,"src":"4078:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1955,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:13"},"returnParameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1981,"src":"4123:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1958,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:13"},"scope":1982,"src":"4027:279:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1983,"src":"1255:3053:13","usedErrors":[1779,1781],"usedEvents":[]}],"src":"106:4203:13"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2092]},"id":2093,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1984,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"219:1025:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2092,"linearizedBaseContracts":[2092],"name":"StorageSlot","nameLocation":"1253:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1988,"members":[{"constant":false,"id":1987,"mutability":"mutable","name":"value","nameLocation":"1308:5:14","nodeType":"VariableDeclaration","scope":1988,"src":"1300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1986,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:14","nodeType":"StructDefinition","scope":2092,"src":"1271:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1991,"members":[{"constant":false,"id":1990,"mutability":"mutable","name":"value","nameLocation":"1360:5:14","nodeType":"VariableDeclaration","scope":1991,"src":"1355:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1989,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:14","nodeType":"StructDefinition","scope":2092,"src":"1326:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1994,"members":[{"constant":false,"id":1993,"mutability":"mutable","name":"value","nameLocation":"1415:5:14","nodeType":"VariableDeclaration","scope":1994,"src":"1407:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:14","nodeType":"StructDefinition","scope":2092,"src":"1378:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1997,"members":[{"constant":false,"id":1996,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":1997,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":2092,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2000,"members":[{"constant":false,"id":1999,"mutability":"mutable","name":"value","nameLocation":"1523:5:14","nodeType":"VariableDeclaration","scope":2000,"src":"1516:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1998,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:14","nodeType":"StructDefinition","scope":2092,"src":"1488:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2003,"members":[{"constant":false,"id":2002,"mutability":"mutable","name":"value","nameLocation":"1574:5:14","nodeType":"VariableDeclaration","scope":2003,"src":"1568:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2001,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:14","nodeType":"StructDefinition","scope":2092,"src":"1541:45:14","visibility":"public"},{"body":{"id":2013,"nodeType":"Block","src":"1768:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1830:38:14","statements":[{"nodeType":"YulAssignment","src":"1844:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"1854:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"1844:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2010,"isOffset":false,"isSlot":true,"src":"1844:6:14","suffix":"slot","valueSize":1},{"declaration":2006,"isOffset":false,"isSlot":false,"src":"1854:4:14","valueSize":1}],"id":2012,"nodeType":"InlineAssembly","src":"1821:47:14"}]},"documentation":{"id":2004,"nodeType":"StructuredDocumentation","src":"1592:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2014,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:14","nodeType":"FunctionDefinition","parameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"slot","nameLocation":"1716:4:14","nodeType":"VariableDeclaration","scope":2014,"src":"1708:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:14"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"r","nameLocation":"1765:1:14","nodeType":"VariableDeclaration","scope":2014,"src":"1745:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1988_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2009,"nodeType":"UserDefinedTypeName","pathNode":{"id":2008,"name":"AddressSlot","nameLocations":["1745:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1988,"src":"1745:11:14"},"referencedDeclaration":1988,"src":"1745:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1988_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:14"},"scope":2092,"src":"1684:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2024,"nodeType":"Block","src":"2056:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2118:38:14","statements":[{"nodeType":"YulAssignment","src":"2132:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2142:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2132:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2021,"isOffset":false,"isSlot":true,"src":"2132:6:14","suffix":"slot","valueSize":1},{"declaration":2017,"isOffset":false,"isSlot":false,"src":"2142:4:14","valueSize":1}],"id":2023,"nodeType":"InlineAssembly","src":"2109:47:14"}]},"documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"1880:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2025,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:14","nodeType":"FunctionDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"slot","nameLocation":"2004:4:14","nodeType":"VariableDeclaration","scope":2025,"src":"1996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:14"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"r","nameLocation":"2053:1:14","nodeType":"VariableDeclaration","scope":2025,"src":"2033:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1991_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2020,"nodeType":"UserDefinedTypeName","pathNode":{"id":2019,"name":"BooleanSlot","nameLocations":["2033:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1991,"src":"2033:11:14"},"referencedDeclaration":1991,"src":"2033:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1991_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:14"},"scope":2092,"src":"1972:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2035,"nodeType":"Block","src":"2344:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2406:38:14","statements":[{"nodeType":"YulAssignment","src":"2420:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2430:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2420:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2032,"isOffset":false,"isSlot":true,"src":"2420:6:14","suffix":"slot","valueSize":1},{"declaration":2028,"isOffset":false,"isSlot":false,"src":"2430:4:14","valueSize":1}],"id":2034,"nodeType":"InlineAssembly","src":"2397:47:14"}]},"documentation":{"id":2026,"nodeType":"StructuredDocumentation","src":"2168:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2036,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:14","nodeType":"FunctionDefinition","parameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"slot","nameLocation":"2292:4:14","nodeType":"VariableDeclaration","scope":2036,"src":"2284:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:14"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"r","nameLocation":"2341:1:14","nodeType":"VariableDeclaration","scope":2036,"src":"2321:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1994_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2031,"nodeType":"UserDefinedTypeName","pathNode":{"id":2030,"name":"Bytes32Slot","nameLocations":["2321:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1994,"src":"2321:11:14"},"referencedDeclaration":1994,"src":"2321:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1994_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:14"},"scope":2092,"src":"2260:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2046,"nodeType":"Block","src":"2632:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2694:38:14","statements":[{"nodeType":"YulAssignment","src":"2708:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2718:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2708:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2043,"isOffset":false,"isSlot":true,"src":"2708:6:14","suffix":"slot","valueSize":1},{"declaration":2039,"isOffset":false,"isSlot":false,"src":"2718:4:14","valueSize":1}],"id":2045,"nodeType":"InlineAssembly","src":"2685:47:14"}]},"documentation":{"id":2037,"nodeType":"StructuredDocumentation","src":"2456:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2047,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:14","nodeType":"FunctionDefinition","parameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"slot","nameLocation":"2580:4:14","nodeType":"VariableDeclaration","scope":2047,"src":"2572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:14"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"r","nameLocation":"2629:1:14","nodeType":"VariableDeclaration","scope":2047,"src":"2609:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1997_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2042,"nodeType":"UserDefinedTypeName","pathNode":{"id":2041,"name":"Uint256Slot","nameLocations":["2609:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1997,"src":"2609:11:14"},"referencedDeclaration":1997,"src":"2609:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1997_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:14"},"scope":2092,"src":"2548:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2057,"nodeType":"Block","src":"2917:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2979:38:14","statements":[{"nodeType":"YulAssignment","src":"2993:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"3003:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2993:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2054,"isOffset":false,"isSlot":true,"src":"2993:6:14","suffix":"slot","valueSize":1},{"declaration":2050,"isOffset":false,"isSlot":false,"src":"3003:4:14","valueSize":1}],"id":2056,"nodeType":"InlineAssembly","src":"2970:47:14"}]},"documentation":{"id":2048,"nodeType":"StructuredDocumentation","src":"2744:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2058,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:14","nodeType":"FunctionDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"slot","nameLocation":"2866:4:14","nodeType":"VariableDeclaration","scope":2058,"src":"2858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:14"},"returnParameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"r","nameLocation":"2914:1:14","nodeType":"VariableDeclaration","scope":2058,"src":"2895:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2000_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2053,"nodeType":"UserDefinedTypeName","pathNode":{"id":2052,"name":"StringSlot","nameLocations":["2895:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2000,"src":"2895:10:14"},"referencedDeclaration":2000,"src":"2895:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2000_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:14"},"scope":2092,"src":"2835:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2068,"nodeType":"Block","src":"3225:112:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3287:44:14","statements":[{"nodeType":"YulAssignment","src":"3301:20:14","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3311:10:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3301:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2065,"isOffset":false,"isSlot":true,"src":"3301:6:14","suffix":"slot","valueSize":1},{"declaration":2061,"isOffset":false,"isSlot":true,"src":"3311:10:14","suffix":"slot","valueSize":1}],"id":2067,"nodeType":"InlineAssembly","src":"3278:53:14"}]},"documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"3029:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:14","nodeType":"FunctionDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"store","nameLocation":"3173:5:14","nodeType":"VariableDeclaration","scope":2069,"src":"3158:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2060,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:14"},"returnParameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"r","nameLocation":"3222:1:14","nodeType":"VariableDeclaration","scope":2069,"src":"3203:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2000_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2064,"nodeType":"UserDefinedTypeName","pathNode":{"id":2063,"name":"StringSlot","nameLocations":["3203:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2000,"src":"3203:10:14"},"referencedDeclaration":2000,"src":"3203:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2000_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:14"},"scope":2092,"src":"3135:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2079,"nodeType":"Block","src":"3513:106:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3575:38:14","statements":[{"nodeType":"YulAssignment","src":"3589:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"3599:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3589:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2076,"isOffset":false,"isSlot":true,"src":"3589:6:14","suffix":"slot","valueSize":1},{"declaration":2072,"isOffset":false,"isSlot":false,"src":"3599:4:14","valueSize":1}],"id":2078,"nodeType":"InlineAssembly","src":"3566:47:14"}]},"documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"3343:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2080,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:14","nodeType":"FunctionDefinition","parameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"slot","nameLocation":"3463:4:14","nodeType":"VariableDeclaration","scope":2080,"src":"3455:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:14"},"returnParameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"r","nameLocation":"3510:1:14","nodeType":"VariableDeclaration","scope":2080,"src":"3492:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2003_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2075,"nodeType":"UserDefinedTypeName","pathNode":{"id":2074,"name":"BytesSlot","nameLocations":["3492:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2003,"src":"3492:9:14"},"referencedDeclaration":2003,"src":"3492:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2003_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:14"},"scope":2092,"src":"3433:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2090,"nodeType":"Block","src":"3816:112:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3878:44:14","statements":[{"nodeType":"YulAssignment","src":"3892:20:14","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3902:10:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3892:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2087,"isOffset":false,"isSlot":true,"src":"3892:6:14","suffix":"slot","valueSize":1},{"declaration":2083,"isOffset":false,"isSlot":true,"src":"3902:10:14","suffix":"slot","valueSize":1}],"id":2089,"nodeType":"InlineAssembly","src":"3869:53:14"}]},"documentation":{"id":2081,"nodeType":"StructuredDocumentation","src":"3625:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2091,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:14","nodeType":"FunctionDefinition","parameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"store","nameLocation":"3765:5:14","nodeType":"VariableDeclaration","scope":2091,"src":"3751:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2082,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:14"},"returnParameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2087,"mutability":"mutable","name":"r","nameLocation":"3813:1:14","nodeType":"VariableDeclaration","scope":2091,"src":"3795:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2003_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2086,"nodeType":"UserDefinedTypeName","pathNode":{"id":2085,"name":"BytesSlot","nameLocations":["3795:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2003,"src":"3795:9:14"},"referencedDeclaration":2003,"src":"3795:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2003_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:14"},"scope":2092,"src":"3729:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2093,"src":"1245:2685:14","usedErrors":[],"usedEvents":[]}],"src":"193:3738:14"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4050],"SignedMath":[4155],"Strings":[2347]},"id":2348,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2094,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2096,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2348,"sourceUnit":4051,"src":"127:37:15","symbolAliases":[{"foreign":{"id":2095,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"135:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2098,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2348,"sourceUnit":4156,"src":"165:49:15","symbolAliases":[{"foreign":{"id":2097,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"173:10:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2099,"nodeType":"StructuredDocumentation","src":"216:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":2347,"linearizedBaseContracts":[2347],"name":"Strings","nameLocation":"259:7:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2102,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:15","nodeType":"VariableDeclaration","scope":2347,"src":"273:56:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2100,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2105,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:15","nodeType":"VariableDeclaration","scope":2347,"src":"335:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2103,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"384:81:15","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2112,"name":"StringsInsufficientHexLength","nameLocation":"476:28:15","nodeType":"ErrorDefinition","parameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"value","nameLocation":"513:5:15","nodeType":"VariableDeclaration","scope":2112,"src":"505:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2107,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2110,"mutability":"mutable","name":"length","nameLocation":"528:6:15","nodeType":"VariableDeclaration","scope":2112,"src":"520:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:15"},"src":"470:66:15"},{"body":{"id":2159,"nodeType":"Block","src":"708:627:15","statements":[{"id":2158,"nodeType":"UncheckedBlock","src":"718:611:15","statements":[{"assignments":[2121],"declarations":[{"constant":false,"id":2121,"mutability":"mutable","name":"length","nameLocation":"750:6:15","nodeType":"VariableDeclaration","scope":2158,"src":"742:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2128,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"770:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2122,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"759:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4050_$","typeString":"type(library Math)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3870,"src":"759:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:15"},{"assignments":[2130],"declarations":[{"constant":false,"id":2130,"mutability":"mutable","name":"buffer","nameLocation":"808:6:15","nodeType":"VariableDeclaration","scope":2158,"src":"794:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2129,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2135,"initialValue":{"arguments":[{"id":2133,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"828:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2131,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:15"},{"assignments":[2137],"declarations":[{"constant":false,"id":2137,"mutability":"mutable","name":"ptr","nameLocation":"857:3:15","nodeType":"VariableDeclaration","scope":2158,"src":"849:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2136,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2138,"nodeType":"VariableDeclarationStatement","src":"849:11:15"},{"AST":{"nodeType":"YulBlock","src":"930:67:15","statements":[{"nodeType":"YulAssignment","src":"948:35:15","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"959:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"971:2:15","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"975:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:15"},"nodeType":"YulFunctionCall","src":"967:15:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:15"},"nodeType":"YulFunctionCall","src":"955:28:15"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"948:3:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2130,"isOffset":false,"isSlot":false,"src":"959:6:15","valueSize":1},{"declaration":2121,"isOffset":false,"isSlot":false,"src":"975:6:15","valueSize":1},{"declaration":2137,"isOffset":false,"isSlot":false,"src":"948:3:15","valueSize":1}],"id":2139,"nodeType":"InlineAssembly","src":"921:76:15"},{"body":{"id":2154,"nodeType":"Block","src":"1023:269:15","statements":[{"expression":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:15","subExpression":{"id":2141,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"1041:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2143,"nodeType":"ExpressionStatement","src":"1041:5:15"},{"AST":{"nodeType":"YulBlock","src":"1124:86:15","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1154:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1175:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1164:3:15"},"nodeType":"YulFunctionCall","src":"1164:14:15"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1180:10:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1159:4:15"},"nodeType":"YulFunctionCall","src":"1159:32:15"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1146:7:15"},"nodeType":"YulFunctionCall","src":"1146:46:15"},"nodeType":"YulExpressionStatement","src":"1146:46:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2102,"isOffset":false,"isSlot":false,"src":"1180:10:15","valueSize":1},{"declaration":2137,"isOffset":false,"isSlot":false,"src":"1154:3:15","valueSize":1},{"declaration":2115,"isOffset":false,"isSlot":false,"src":"1168:5:15","valueSize":1}],"id":2144,"nodeType":"InlineAssembly","src":"1115:95:15"},{"expression":{"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"1227:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2148,"nodeType":"ExpressionStatement","src":"1227:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"1260:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"nodeType":"IfStatement","src":"1256:21:15","trueBody":{"id":2152,"nodeType":"Break","src":"1272:5:15"}}]},"condition":{"hexValue":"74727565","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2155,"nodeType":"WhileStatement","src":"1010:282:15"},{"expression":{"id":2156,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"1312:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2119,"id":2157,"nodeType":"Return","src":"1305:13:15"}]}]},"documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"542:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:15","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"value","nameLocation":"663:5:15","nodeType":"VariableDeclaration","scope":2160,"src":"655:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:15"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2160,"src":"693:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2117,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:15"},"scope":2347,"src":"637:698:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2185,"nodeType":"Block","src":"1511:92:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"1542:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:15","trueExpression":{"hexValue":"2d","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"1588:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2178,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"1573:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$4155_$","typeString":"type(library SignedMath)"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":4154,"src":"1573:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2177,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"1564:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2168,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:15","typeDescriptions":{}}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:15","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2167,"id":2184,"nodeType":"Return","src":"1521:75:15"}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"1341:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2186,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:15","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"value","nameLocation":"1466:5:15","nodeType":"VariableDeclaration","scope":2186,"src":"1459:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2162,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:15"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2186,"src":"1496:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2165,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:15"},"scope":2347,"src":"1435:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2205,"nodeType":"Block","src":"1782:100:15","statements":[{"id":2204,"nodeType":"UncheckedBlock","src":"1792:84:15","statements":[{"expression":{"arguments":[{"id":2195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"1835:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"1854:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2196,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"1842:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4050_$","typeString":"type(library Math)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3992,"src":"1842:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2194,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2206,2289,2309],"referencedDeclaration":2289,"src":"1823:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2193,"id":2203,"nodeType":"Return","src":"1816:49:15"}]}]},"documentation":{"id":2187,"nodeType":"StructuredDocumentation","src":"1609:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2206,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:15","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"value","nameLocation":"1737:5:15","nodeType":"VariableDeclaration","scope":2206,"src":"1729:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:15"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2206,"src":"1767:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2191,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:15"},"scope":2347,"src":"1708:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2288,"nodeType":"Block","src":"2095:435:15","statements":[{"assignments":[2217],"declarations":[{"constant":false,"id":2217,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:15","nodeType":"VariableDeclaration","scope":2288,"src":"2105:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2219,"initialValue":{"id":2218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"2126:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:15"},{"assignments":[2221],"declarations":[{"constant":false,"id":2221,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:15","nodeType":"VariableDeclaration","scope":2288,"src":"2141:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2220,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2230,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2225,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"2177:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2222,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:15"},{"expression":{"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2231,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"2198:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2233,"indexExpression":{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2236,"nodeType":"ExpressionStatement","src":"2198:15:15"},{"expression":{"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2237,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"2223:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2239,"indexExpression":{"hexValue":"31","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2242,"nodeType":"ExpressionStatement","src":"2223:15:15"},{"body":{"id":2271,"nodeType":"Block","src":"2293:95:15","statements":[{"expression":{"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2257,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"2307:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2259,"indexExpression":{"id":2258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"2314:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2260,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"2319:10:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2264,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2261,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2330:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2266,"nodeType":"ExpressionStatement","src":"2307:40:15"},{"expression":{"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2267,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2361:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2270,"nodeType":"ExpressionStatement","src":"2361:16:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"2281:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2272,"initializationExpression":{"assignments":[2244],"declarations":[{"constant":false,"id":2244,"mutability":"mutable","name":"i","nameLocation":"2261:1:15","nodeType":"VariableDeclaration","scope":2272,"src":"2253:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2250,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2246,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"2269:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:15"},"loopExpression":{"expression":{"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:15","subExpression":{"id":2254,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"2290:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2256,"nodeType":"ExpressionStatement","src":"2288:3:15"},"nodeType":"ForStatement","src":"2248:140:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2273,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2401:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2282,"nodeType":"IfStatement","src":"2397:96:15","trueBody":{"id":2281,"nodeType":"Block","src":"2418:75:15","statements":[{"errorCall":{"arguments":[{"id":2277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"2468:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2278,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"2475:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2276,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2439:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2280,"nodeType":"RevertStatement","src":"2432:50:15"}]}},{"expression":{"arguments":[{"id":2285,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"2516:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2283,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:15","typeDescriptions":{}}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2215,"id":2287,"nodeType":"Return","src":"2502:21:15"}]},"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"1888:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:15","nodeType":"FunctionDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"value","nameLocation":"2034:5:15","nodeType":"VariableDeclaration","scope":2289,"src":"2026:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2208,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"length","nameLocation":"2049:6:15","nodeType":"VariableDeclaration","scope":2289,"src":"2041:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2210,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:15"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"2080:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2213,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:15"},"scope":2347,"src":"2005:525:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2308,"nodeType":"Block","src":"2762:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2302,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"2807:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2300,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:15","typeDescriptions":{}}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2298,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:15","typeDescriptions":{}}},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2305,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"2815:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2297,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2206,2289,2309],"referencedDeclaration":2289,"src":"2779:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2296,"id":2307,"nodeType":"Return","src":"2772:58:15"}]},"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"2536:148:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2309,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:15","nodeType":"FunctionDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"addr","nameLocation":"2718:4:15","nodeType":"VariableDeclaration","scope":2309,"src":"2710:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:15"},"returnParameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2309,"src":"2747:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2294,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:15"},"scope":2347,"src":"2689:148:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2345,"nodeType":"Block","src":"2992:104:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2321,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"3015:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2319,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:15","typeDescriptions":{}}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:15","memberName":"length","nodeType":"MemberAccess","src":"3009:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2326,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"3034:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2324,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:15","typeDescriptions":{}}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:15","memberName":"length","nodeType":"MemberAccess","src":"3028:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"3063:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2331,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:15","typeDescriptions":{}}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2330,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"3086:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2337,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:15","typeDescriptions":{}}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2336,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2318,"id":2344,"nodeType":"Return","src":"3002:87:15"}]},"documentation":{"id":2310,"nodeType":"StructuredDocumentation","src":"2843:66:15","text":" @dev Returns true if the two strings are equal."},"id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:15","nodeType":"FunctionDefinition","parameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"a","nameLocation":"2943:1:15","nodeType":"VariableDeclaration","scope":2346,"src":"2929:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2311,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"b","nameLocation":"2960:1:15","nodeType":"VariableDeclaration","scope":2346,"src":"2946:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2313,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:15"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2346,"src":"2986:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2316,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:15"},"scope":2347,"src":"2914:182:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2348,"src":"251:2847:15","usedErrors":[2112],"usedEvents":[]}],"src":"101:2998:15"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"id":16,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2695]},"id":2696,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2349,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2350,"nodeType":"StructuredDocumentation","src":"138:205:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2695,"linearizedBaseContracts":[2695],"name":"ECDSA","nameLocation":"352:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2355,"members":[{"id":2351,"name":"NoError","nameLocation":"392:7:16","nodeType":"EnumValue","src":"392:7:16"},{"id":2352,"name":"InvalidSignature","nameLocation":"409:16:16","nodeType":"EnumValue","src":"409:16:16"},{"id":2353,"name":"InvalidSignatureLength","nameLocation":"435:22:16","nodeType":"EnumValue","src":"435:22:16"},{"id":2354,"name":"InvalidSignatureS","nameLocation":"467:17:16","nodeType":"EnumValue","src":"467:17:16"}],"name":"RecoverError","nameLocation":"369:12:16","nodeType":"EnumDefinition","src":"364:126:16"},{"documentation":{"id":2356,"nodeType":"StructuredDocumentation","src":"496:63:16","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2358,"name":"ECDSAInvalidSignature","nameLocation":"570:21:16","nodeType":"ErrorDefinition","parameters":{"id":2357,"nodeType":"ParameterList","parameters":[],"src":"591:2:16"},"src":"564:30:16"},{"documentation":{"id":2359,"nodeType":"StructuredDocumentation","src":"600:60:16","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2363,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:16","nodeType":"ErrorDefinition","parameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"length","nameLocation":"707:6:16","nodeType":"VariableDeclaration","scope":2363,"src":"699:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:16"},"src":"665:50:16"},{"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"721:85:16","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2368,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:16","nodeType":"ErrorDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"s","nameLocation":"848:1:16","nodeType":"VariableDeclaration","scope":2368,"src":"840:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:16"},"src":"811:40:16"},{"body":{"id":2420,"nodeType":"Block","src":"2242:653:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2383,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"2256:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:16","memberName":"length","nodeType":"MemberAccess","src":"2256:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2418,"nodeType":"Block","src":"2781:108:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2405,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:16","typeDescriptions":{}}},"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2409,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"2815:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2355_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"2815:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2413,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"2860:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:16","memberName":"length","nodeType":"MemberAccess","src":"2860:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:16","typeDescriptions":{}}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2382,"id":2417,"nodeType":"Return","src":"2795:83:16"}]},"id":2419,"nodeType":"IfStatement","src":"2252:637:16","trueBody":{"id":2404,"nodeType":"Block","src":"2280:495:16","statements":[{"assignments":[2388],"declarations":[{"constant":false,"id":2388,"mutability":"mutable","name":"r","nameLocation":"2302:1:16","nodeType":"VariableDeclaration","scope":2404,"src":"2294:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2389,"nodeType":"VariableDeclarationStatement","src":"2294:9:16"},{"assignments":[2391],"declarations":[{"constant":false,"id":2391,"mutability":"mutable","name":"s","nameLocation":"2325:1:16","nodeType":"VariableDeclaration","scope":2404,"src":"2317:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2392,"nodeType":"VariableDeclarationStatement","src":"2317:9:16"},{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"v","nameLocation":"2346:1:16","nodeType":"VariableDeclaration","scope":2404,"src":"2340:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2393,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2395,"nodeType":"VariableDeclarationStatement","src":"2340:7:16"},{"AST":{"nodeType":"YulBlock","src":"2548:171:16","statements":[{"nodeType":"YulAssignment","src":"2566:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2581:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2592:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2577:3:16"},"nodeType":"YulFunctionCall","src":"2577:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2571:5:16"},"nodeType":"YulFunctionCall","src":"2571:27:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2566:1:16"}]},{"nodeType":"YulAssignment","src":"2615:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2630:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2641:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2626:3:16"},"nodeType":"YulFunctionCall","src":"2626:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2620:5:16"},"nodeType":"YulFunctionCall","src":"2620:27:16"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2615:1:16"}]},{"nodeType":"YulAssignment","src":"2664:41:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2674:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2687:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2698:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2683:3:16"},"nodeType":"YulFunctionCall","src":"2683:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2677:5:16"},"nodeType":"YulFunctionCall","src":"2677:27:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2669:4:16"},"nodeType":"YulFunctionCall","src":"2669:36:16"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2664:1:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2388,"isOffset":false,"isSlot":false,"src":"2566:1:16","valueSize":1},{"declaration":2391,"isOffset":false,"isSlot":false,"src":"2615:1:16","valueSize":1},{"declaration":2373,"isOffset":false,"isSlot":false,"src":"2581:9:16","valueSize":1},{"declaration":2373,"isOffset":false,"isSlot":false,"src":"2630:9:16","valueSize":1},{"declaration":2373,"isOffset":false,"isSlot":false,"src":"2687:9:16","valueSize":1},{"declaration":2394,"isOffset":false,"isSlot":false,"src":"2664:1:16","valueSize":1}],"id":2396,"nodeType":"InlineAssembly","src":"2539:180:16"},{"expression":{"arguments":[{"id":2398,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"2750:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2399,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"2756:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2400,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"2759:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2401,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"2762:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2397,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2421,2501,2609],"referencedDeclaration":2609,"src":"2739:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2382,"id":2403,"nodeType":"Return","src":"2732:32:16"}]}}]},"documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"857:1267:16","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2421,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:16","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"hash","nameLocation":"2157:4:16","nodeType":"VariableDeclaration","scope":2421,"src":"2149:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2373,"mutability":"mutable","name":"signature","nameLocation":"2176:9:16","nodeType":"VariableDeclaration","scope":2421,"src":"2163:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2372,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:16"},"returnParameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2421,"src":"2210:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2375,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2421,"src":"2219:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2378,"nodeType":"UserDefinedTypeName","pathNode":{"id":2377,"name":"RecoverError","nameLocations":["2219:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2355,"src":"2219:12:16"},"referencedDeclaration":2355,"src":"2219:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2421,"src":"2233:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:16"},"scope":2695,"src":"2129:766:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2450,"nodeType":"Block","src":"3789:168:16","statements":[{"assignments":[2432,2435,2437],"declarations":[{"constant":false,"id":2432,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:16","nodeType":"VariableDeclaration","scope":2450,"src":"3800:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2431,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"error","nameLocation":"3832:5:16","nodeType":"VariableDeclaration","scope":2450,"src":"3819:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2434,"nodeType":"UserDefinedTypeName","pathNode":{"id":2433,"name":"RecoverError","nameLocations":["3819:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2355,"src":"3819:12:16"},"referencedDeclaration":2355,"src":"3819:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:16","nodeType":"VariableDeclaration","scope":2450,"src":"3839:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2442,"initialValue":{"arguments":[{"id":2439,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"3870:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2440,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3876:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2438,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2421,2501,2609],"referencedDeclaration":2421,"src":"3859:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:16"},{"expression":{"arguments":[{"id":2444,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"3908:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},{"id":2445,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"3915:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2443,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"3896:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2355_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2447,"nodeType":"ExpressionStatement","src":"3896:28:16"},{"expression":{"id":2448,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"3941:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2430,"id":2449,"nodeType":"Return","src":"3934:16:16"}]},"documentation":{"id":2422,"nodeType":"StructuredDocumentation","src":"2901:796:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:16","nodeType":"FunctionDefinition","parameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"hash","nameLocation":"3727:4:16","nodeType":"VariableDeclaration","scope":2451,"src":"3719:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"signature","nameLocation":"3746:9:16","nodeType":"VariableDeclaration","scope":2451,"src":"3733:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2425,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:16"},"returnParameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2451,"src":"3780:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2428,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:16"},"scope":2695,"src":"3702:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2500,"nodeType":"Block","src":"4285:342:16","statements":[{"id":2499,"nodeType":"UncheckedBlock","src":"4295:326:16","statements":[{"assignments":[2469],"declarations":[{"constant":false,"id":2469,"mutability":"mutable","name":"s","nameLocation":"4327:1:16","nodeType":"VariableDeclaration","scope":2499,"src":"4319:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2476,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4331:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:16","typeDescriptions":{}}},"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:16"},{"assignments":[2478],"declarations":[{"constant":false,"id":2478,"mutability":"mutable","name":"v","nameLocation":"4528:1:16","nodeType":"VariableDeclaration","scope":2499,"src":"4522:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2477,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2491,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2483,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"4547:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:16","typeDescriptions":{}}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2479,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:16","typeDescriptions":{}}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:16"},{"expression":{"arguments":[{"id":2493,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"4596:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2494,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"4602:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2495,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"4605:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2496,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"4608:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2492,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2421,2501,2609],"referencedDeclaration":2609,"src":"4585:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2467,"id":2498,"nodeType":"Return","src":"4578:32:16"}]}]},"documentation":{"id":2452,"nodeType":"StructuredDocumentation","src":"3963:205:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":2501,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:16","nodeType":"FunctionDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"hash","nameLocation":"4201:4:16","nodeType":"VariableDeclaration","scope":2501,"src":"4193:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2456,"mutability":"mutable","name":"r","nameLocation":"4215:1:16","nodeType":"VariableDeclaration","scope":2501,"src":"4207:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2458,"mutability":"mutable","name":"vs","nameLocation":"4226:2:16","nodeType":"VariableDeclaration","scope":2501,"src":"4218:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:16"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2501,"src":"4253:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2501,"src":"4262:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2463,"nodeType":"UserDefinedTypeName","pathNode":{"id":2462,"name":"RecoverError","nameLocations":["4262:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2355,"src":"4262:12:16"},"referencedDeclaration":2355,"src":"4262:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2501,"src":"4276:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:16"},"scope":2695,"src":"4173:454:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2533,"nodeType":"Block","src":"4840:164:16","statements":[{"assignments":[2514,2517,2519],"declarations":[{"constant":false,"id":2514,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:16","nodeType":"VariableDeclaration","scope":2533,"src":"4851:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2513,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"error","nameLocation":"4883:5:16","nodeType":"VariableDeclaration","scope":2533,"src":"4870:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2516,"nodeType":"UserDefinedTypeName","pathNode":{"id":2515,"name":"RecoverError","nameLocations":["4870:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2355,"src":"4870:12:16"},"referencedDeclaration":2355,"src":"4870:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:16","nodeType":"VariableDeclaration","scope":2533,"src":"4890:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2525,"initialValue":{"arguments":[{"id":2521,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"4921:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2522,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"4927:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2523,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"4930:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2520,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2421,2501,2609],"referencedDeclaration":2501,"src":"4910:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:16"},{"expression":{"arguments":[{"id":2527,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"4955:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},{"id":2528,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4962:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2526,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"4943:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2355_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2530,"nodeType":"ExpressionStatement","src":"4943:28:16"},{"expression":{"id":2531,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"4988:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2512,"id":2532,"nodeType":"Return","src":"4981:16:16"}]},"documentation":{"id":2502,"nodeType":"StructuredDocumentation","src":"4633:116:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2534,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:16","nodeType":"FunctionDefinition","parameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"hash","nameLocation":"4779:4:16","nodeType":"VariableDeclaration","scope":2534,"src":"4771:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2506,"mutability":"mutable","name":"r","nameLocation":"4793:1:16","nodeType":"VariableDeclaration","scope":2534,"src":"4785:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2508,"mutability":"mutable","name":"vs","nameLocation":"4804:2:16","nodeType":"VariableDeclaration","scope":2534,"src":"4796:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:16"},"returnParameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2534,"src":"4831:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2510,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:16"},"scope":2695,"src":"4754:250:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2608,"nodeType":"Block","src":"5298:1372:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2555,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"6194:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2553,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:16","typeDescriptions":{}}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2569,"nodeType":"IfStatement","src":"6182:164:16","trueBody":{"id":2568,"nodeType":"Block","src":"6267:79:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:16","typeDescriptions":{}}},"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2563,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"6301:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2355_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2354,"src":"6301:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},{"id":2565,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"6333:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2566,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2552,"id":2567,"nodeType":"Return","src":"6281:54:16"}]}},{"assignments":[2571],"declarations":[{"constant":false,"id":2571,"mutability":"mutable","name":"signer","nameLocation":"6448:6:16","nodeType":"VariableDeclaration","scope":2608,"src":"6440:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2570,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2578,"initialValue":{"arguments":[{"id":2573,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"6467:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2574,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"6473:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2575,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"6476:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2576,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"6479:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2572,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2579,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6495:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2580,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:16","typeDescriptions":{}}},"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2598,"nodeType":"IfStatement","src":"6491:113:16","trueBody":{"id":2597,"nodeType":"Block","src":"6517:87:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2585,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:16","typeDescriptions":{}}},"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2589,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"6551:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2355_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2352,"src":"6551:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:16","typeDescriptions":{}}},"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2552,"id":2596,"nodeType":"Return","src":"6531:62:16"}]}},{"expression":{"components":[{"id":2599,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6622:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2600,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"6630:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2355_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2351,"src":"6630:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:16","typeDescriptions":{}}},"id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2552,"id":2607,"nodeType":"Return","src":"6614:49:16"}]},"documentation":{"id":2535,"nodeType":"StructuredDocumentation","src":"5010:125:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2609,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:16","nodeType":"FunctionDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2537,"mutability":"mutable","name":"hash","nameLocation":"5177:4:16","nodeType":"VariableDeclaration","scope":2609,"src":"5169:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2539,"mutability":"mutable","name":"v","nameLocation":"5197:1:16","nodeType":"VariableDeclaration","scope":2609,"src":"5191:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2538,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2541,"mutability":"mutable","name":"r","nameLocation":"5216:1:16","nodeType":"VariableDeclaration","scope":2609,"src":"5208:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"s","nameLocation":"5235:1:16","nodeType":"VariableDeclaration","scope":2609,"src":"5227:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:16"},"returnParameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"5266:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2545,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"5275:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2548,"nodeType":"UserDefinedTypeName","pathNode":{"id":2547,"name":"RecoverError","nameLocations":["5275:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2355,"src":"5275:12:16"},"referencedDeclaration":2355,"src":"5275:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"5289:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:16"},"scope":2695,"src":"5140:1530:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2644,"nodeType":"Block","src":"6897:166:16","statements":[{"assignments":[2624,2627,2629],"declarations":[{"constant":false,"id":2624,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:16","nodeType":"VariableDeclaration","scope":2644,"src":"6908:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2623,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"error","nameLocation":"6940:5:16","nodeType":"VariableDeclaration","scope":2644,"src":"6927:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2626,"nodeType":"UserDefinedTypeName","pathNode":{"id":2625,"name":"RecoverError","nameLocations":["6927:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2355,"src":"6927:12:16"},"referencedDeclaration":2355,"src":"6927:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2629,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:16","nodeType":"VariableDeclaration","scope":2644,"src":"6947:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2636,"initialValue":{"arguments":[{"id":2631,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"6978:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2632,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"6984:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2633,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"6987:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2634,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"6990:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2630,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2421,2501,2609],"referencedDeclaration":2609,"src":"6967:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2355_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:16"},{"expression":{"arguments":[{"id":2638,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"7014:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},{"id":2639,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"7021:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2637,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"7002:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2355_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2641,"nodeType":"ExpressionStatement","src":"7002:28:16"},{"expression":{"id":2642,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"7047:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2622,"id":2643,"nodeType":"Return","src":"7040:16:16"}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"6676:122:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2645,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:16","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"hash","nameLocation":"6828:4:16","nodeType":"VariableDeclaration","scope":2645,"src":"6820:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"v","nameLocation":"6840:1:16","nodeType":"VariableDeclaration","scope":2645,"src":"6834:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2613,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2616,"mutability":"mutable","name":"r","nameLocation":"6851:1:16","nodeType":"VariableDeclaration","scope":2645,"src":"6843:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"s","nameLocation":"6862:1:16","nodeType":"VariableDeclaration","scope":2645,"src":"6854:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:16"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2645,"src":"6888:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:16"},"scope":2695,"src":"6803:260:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2693,"nodeType":"Block","src":"7268:460:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7282:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2655,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"7291:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2355_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2351,"src":"7291:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2660,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7378:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2661,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"7387:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2355_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2352,"src":"7387:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2668,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7483:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2669,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"7492:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2355_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2353,"src":"7492:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2680,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7617:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2681,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"7626:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2355_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2354,"src":"7626:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2689,"nodeType":"IfStatement","src":"7613:109:16","trueBody":{"id":2688,"nodeType":"Block","src":"7658:64:16","statements":[{"errorCall":{"arguments":[{"id":2685,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"7702:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2684,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7679:22:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2687,"nodeType":"RevertStatement","src":"7672:39:16"}]}},"id":2690,"nodeType":"IfStatement","src":"7479:243:16","trueBody":{"id":2679,"nodeType":"Block","src":"7529:78:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2675,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"7586:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:16","typeDescriptions":{}}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2672,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"7550:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2678,"nodeType":"RevertStatement","src":"7543:53:16"}]}},"id":2691,"nodeType":"IfStatement","src":"7374:348:16","trueBody":{"id":2667,"nodeType":"Block","src":"7418:55:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2664,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"7439:21:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2666,"nodeType":"RevertStatement","src":"7432:30:16"}]}},"id":2692,"nodeType":"IfStatement","src":"7278:444:16","trueBody":{"id":2659,"nodeType":"Block","src":"7313:55:16","statements":[{"functionReturnParameters":2653,"id":2658,"nodeType":"Return","src":"7327:7:16"}]}}]},"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"7069:122:16","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2694,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:16","nodeType":"FunctionDefinition","parameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"error","nameLocation":"7230:5:16","nodeType":"VariableDeclaration","scope":2694,"src":"7217:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2648,"nodeType":"UserDefinedTypeName","pathNode":{"id":2647,"name":"RecoverError","nameLocations":["7217:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2355,"src":"7217:12:16"},"referencedDeclaration":2355,"src":"7217:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2355","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2651,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:16","nodeType":"VariableDeclaration","scope":2694,"src":"7237:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:16"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[],"src":"7268:0:16"},"scope":2695,"src":"7196:532:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2696,"src":"344:7386:16","usedErrors":[2358,2363,2368],"usedEvents":[]}],"src":"112:7619:16"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"id":17,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[2922],"IERC5267":[24],"MessageHashUtils":[2996],"ShortString":[1771],"ShortStrings":[1982]},"id":2923,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2697,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":2699,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2923,"sourceUnit":2997,"src":"139:56:17","symbolAliases":[{"foreign":{"id":2698,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"147:16:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2702,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2923,"sourceUnit":1983,"src":"196:62:17","symbolAliases":[{"foreign":{"id":2700,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"204:12:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2701,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"218:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2704,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2923,"sourceUnit":25,"src":"259:55:17","symbolAliases":[{"foreign":{"id":2703,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"267:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2706,"name":"IERC5267","nameLocations":["1988:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":24,"src":"1988:8:17"},"id":2707,"nodeType":"InheritanceSpecifier","src":"1988:8:17"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"316:1643:17","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":2922,"linearizedBaseContracts":[2922,24],"name":"EIP712","nameLocation":"1978:6:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2709,"libraryName":{"id":2708,"name":"ShortStrings","nameLocations":["2009:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"2009:12:17"},"nodeType":"UsingForDirective","src":"2003:25:17"},{"constant":true,"id":2714,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:17","nodeType":"VariableDeclaration","scope":2922,"src":"2034:140:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2711,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2716,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:17","nodeType":"VariableDeclaration","scope":2922,"src":"2373:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2718,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:17","nodeType":"VariableDeclaration","scope":2922,"src":"2427:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2720,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:17","nodeType":"VariableDeclaration","scope":2922,"src":"2473:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2722,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:17","nodeType":"VariableDeclaration","scope":2922,"src":"2517:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2724,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:17","nodeType":"VariableDeclaration","scope":2922,"src":"2560:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2727,"mutability":"immutable","name":"_name","nameLocation":"2637:5:17","nodeType":"VariableDeclaration","scope":2922,"src":"2607:35:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"},"typeName":{"id":2726,"nodeType":"UserDefinedTypeName","pathNode":{"id":2725,"name":"ShortString","nameLocations":["2607:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"2607:11:17"},"referencedDeclaration":1771,"src":"2607:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2730,"mutability":"immutable","name":"_version","nameLocation":"2678:8:17","nodeType":"VariableDeclaration","scope":2922,"src":"2648:38:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"},"typeName":{"id":2729,"nodeType":"UserDefinedTypeName","pathNode":{"id":2728,"name":"ShortString","nameLocations":["2648:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"2648:11:17"},"referencedDeclaration":1771,"src":"2648:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2732,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:17","nodeType":"VariableDeclaration","scope":2922,"src":"2692:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2731,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2734,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:17","nodeType":"VariableDeclaration","scope":2922,"src":"2726:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2733,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2791,"nodeType":"Block","src":"3383:376:17","statements":[{"expression":{"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2742,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"3393:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2745,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"3432:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2743,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"3401:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1923,"src":"3401:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1771_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"src":"3393:53:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"id":2748,"nodeType":"ExpressionStatement","src":"3393:53:17"},{"expression":{"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2749,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"3456:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2752,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"3501:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2750,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"3467:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1923,"src":"3467:33:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1771_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"src":"3456:62:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"id":2755,"nodeType":"ExpressionStatement","src":"3456:62:17"},{"expression":{"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2756,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"3528:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2760,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"3558:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2758,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:17","typeDescriptions":{}}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2757,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2764,"nodeType":"ExpressionStatement","src":"3528:36:17"},{"expression":{"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2765,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"3574:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2769,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"3607:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2767,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:17","typeDescriptions":{}}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2766,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2773,"nodeType":"ExpressionStatement","src":"3574:42:17"},{"expression":{"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2774,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"3627:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2775,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2778,"nodeType":"ExpressionStatement","src":"3627:30:17"},{"expression":{"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2779,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"3667:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2780,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"3692:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2783,"nodeType":"ExpressionStatement","src":"3667:48:17"},{"expression":{"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2784,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"3725:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2787,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2922","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2922","typeString":"contract EIP712"}],"id":2786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:17","typeDescriptions":{}}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2790,"nodeType":"ExpressionStatement","src":"3725:27:17"}]},"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"2764:559:17","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2792,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"name","nameLocation":"3354:4:17","nodeType":"VariableDeclaration","scope":2792,"src":"3340:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2736,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"version","nameLocation":"3374:7:17","nodeType":"VariableDeclaration","scope":2792,"src":"3360:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2738,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:17"},"returnParameters":{"id":2741,"nodeType":"ParameterList","parameters":[],"src":"3383:0:17"},"scope":2922,"src":"3328:431:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2817,"nodeType":"Block","src":"3907:200:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2800,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2922","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2922","typeString":"contract EIP712"}],"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2798,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:17","typeDescriptions":{}}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2802,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"3938:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2804,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2806,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"3970:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2815,"nodeType":"Block","src":"4046:55:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2812,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"4067:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2797,"id":2814,"nodeType":"Return","src":"4060:30:17"}]},"id":2816,"nodeType":"IfStatement","src":"3917:184:17","trueBody":{"id":2811,"nodeType":"Block","src":"3986:54:17","statements":[{"expression":{"id":2809,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"4007:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2797,"id":2810,"nodeType":"Return","src":"4000:29:17"}]}}]},"documentation":{"id":2793,"nodeType":"StructuredDocumentation","src":"3765:75:17","text":" @dev Returns the domain separator for the current chain."},"id":2818,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:17","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[],"src":"3872:2:17"},"returnParameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2818,"src":"3898:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:17"},"scope":2922,"src":"3845:262:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2838,"nodeType":"Block","src":"4177:115:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":2826,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"4215:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2827,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"4226:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2828,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"4239:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2829,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2833,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2922","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2922","typeString":"contract EIP712"}],"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2831,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:17","typeDescriptions":{}}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2824,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:17","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2823,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2822,"id":2837,"nodeType":"Return","src":"4187:98:17"}]},"id":2839,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:17","nodeType":"FunctionDefinition","parameters":{"id":2819,"nodeType":"ParameterList","parameters":[],"src":"4143:2:17"},"returnParameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2839,"src":"4168:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:17"},"scope":2922,"src":"4113:179:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2854,"nodeType":"Block","src":"5003:90:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2849,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"5053:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2851,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"5075:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2847,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"5020:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2996_$","typeString":"type(library MessageHashUtils)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:17","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2995,"src":"5020:32:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2846,"id":2853,"nodeType":"Return","src":"5013:73:17"}]},"documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"4298:614:17","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2855,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:17","nodeType":"FunctionDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:17","nodeType":"VariableDeclaration","scope":2855,"src":"4943:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:17"},"returnParameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2855,"src":"4994:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:17"},"scope":2922,"src":"4917:176:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[23],"body":{"id":2896,"nodeType":"Block","src":"5472:229:17","statements":[{"expression":{"components":[{"hexValue":"0f","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2875,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"5533:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2877,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"5560:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2879,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2883,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2922","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2922","typeString":"contract EIP712"}],"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2881,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:17","typeDescriptions":{}}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:17","typeDescriptions":{}}},"id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2889,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2890,"nodeType":"ArrayTypeName","src":"5672:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2873,"id":2895,"nodeType":"Return","src":"5482:212:17"}]},"documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"5099:40:17","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":2897,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:17","nodeType":"FunctionDefinition","parameters":{"id":2857,"nodeType":"ParameterList","parameters":[],"src":"5165:2:17"},"returnParameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"fields","nameLocation":"5249:6:17","nodeType":"VariableDeclaration","scope":2897,"src":"5242:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2858,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2861,"mutability":"mutable","name":"name","nameLocation":"5283:4:17","nodeType":"VariableDeclaration","scope":2897,"src":"5269:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2860,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2863,"mutability":"mutable","name":"version","nameLocation":"5315:7:17","nodeType":"VariableDeclaration","scope":2897,"src":"5301:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2862,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2865,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:17","nodeType":"VariableDeclaration","scope":2897,"src":"5336:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2867,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:17","nodeType":"VariableDeclaration","scope":2897,"src":"5365:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2866,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2869,"mutability":"mutable","name":"salt","nameLocation":"5412:4:17","nodeType":"VariableDeclaration","scope":2897,"src":"5404:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:17","nodeType":"VariableDeclaration","scope":2897,"src":"5430:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2871,"nodeType":"ArrayTypeName","src":"5430:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:17"},"scope":2922,"src":"5144:557:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2908,"nodeType":"Block","src":"6082:65:17","statements":[{"expression":{"arguments":[{"id":2905,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"6126:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2903,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"6099:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1950,"src":"6099:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1771_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1771_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2902,"id":2907,"nodeType":"Return","src":"6092:48:17"}]},"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"5707:256:17","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2909,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:17","nodeType":"FunctionDefinition","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[],"src":"6041:2:17"},"returnParameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2909,"src":"6067:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2900,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:17"},"scope":2922,"src":"6021:126:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2920,"nodeType":"Block","src":"6537:71:17","statements":[{"expression":{"arguments":[{"id":2917,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"6584:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2915,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"6554:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1771","typeString":"ShortString"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1950,"src":"6554:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1771_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1771_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2914,"id":2919,"nodeType":"Return","src":"6547:54:17"}]},"documentation":{"id":2910,"nodeType":"StructuredDocumentation","src":"6153:262:17","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2921,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:17","nodeType":"FunctionDefinition","parameters":{"id":2911,"nodeType":"ParameterList","parameters":[],"src":"6496:2:17"},"returnParameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2921,"src":"6522:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2912,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:17"},"scope":2922,"src":"6473:135:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2923,"src":"1960:4650:17","usedErrors":[1779,1781],"usedEvents":[4]}],"src":"113:6498:17"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"id":18,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2996],"Strings":[2347]},"id":2997,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2924,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2926,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2997,"sourceUnit":2348,"src":"149:39:18","symbolAliases":[{"foreign":{"id":2925,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"157:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"190:330:18","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2996,"linearizedBaseContracts":[2996],"name":"MessageHashUtils","nameLocation":"529:16:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":2936,"nodeType":"Block","src":"1314:368:18","statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:18","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:18","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:18"},"nodeType":"YulFunctionCall","src":"1390:48:18"},"nodeType":"YulExpressionStatement","src":"1390:48:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:18","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:18"},"nodeType":"YulFunctionCall","src":"1492:25:18"},"nodeType":"YulExpressionStatement","src":"1492:25:18"},{"nodeType":"YulAssignment","src":"1571:31:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:18","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:18"},"nodeType":"YulFunctionCall","src":"1581:21:18"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2933,"isOffset":false,"isSlot":false,"src":"1571:6:18","valueSize":1},{"declaration":2930,"isOffset":false,"isSlot":false,"src":"1505:11:18","valueSize":1}],"id":2935,"nodeType":"InlineAssembly","src":"1367:309:18"}]},"documentation":{"id":2928,"nodeType":"StructuredDocumentation","src":"552:665:18","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2937,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:18","nodeType":"FunctionDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:18","nodeType":"VariableDeclaration","scope":2937,"src":"1254:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:18"},"returnParameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"digest","nameLocation":"1306:6:18","nodeType":"VariableDeclaration","scope":2937,"src":"1298:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:18"},"scope":2996,"src":"1222:460:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2962,"nodeType":"Block","src":"2234:143:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2954,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"2343:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:18","memberName":"length","nodeType":"MemberAccess","src":"2343:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2952,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2326:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2347_$","typeString":"type(library Strings)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2160,"src":"2326:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2950,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:18","typeDescriptions":{}}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2958,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"2361:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2946,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:18","typeDescriptions":{}}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:18","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:18","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2945,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2944,"id":2961,"nodeType":"Return","src":"2244:126:18"}]},"documentation":{"id":2938,"nodeType":"StructuredDocumentation","src":"1688:455:18","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2963,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:18","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"message","nameLocation":"2193:7:18","nodeType":"VariableDeclaration","scope":2963,"src":"2180:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2939,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:18"},"returnParameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2963,"src":"2225:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:18"},"scope":2996,"src":"2148:229:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2982,"nodeType":"Block","src":"2831:80:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2977,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2887:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2978,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"2898:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2974,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2973,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2972,"id":2981,"nodeType":"Return","src":"2841:63:18"}]},"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"2383:332:18","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2983,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:18","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"validator","nameLocation":"2769:9:18","nodeType":"VariableDeclaration","scope":2983,"src":"2761:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"data","nameLocation":"2793:4:18","nodeType":"VariableDeclaration","scope":2983,"src":"2780:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2967,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:18"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2983,"src":"2822:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:18"},"scope":2996,"src":"2720:191:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2994,"nodeType":"Block","src":"3462:292:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:18"},"nodeType":"YulFunctionCall","src":"3549:11:18"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:18"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:18","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:18"},"nodeType":"YulFunctionCall","src":"3573:23:18"},"nodeType":"YulExpressionStatement","src":"3573:23:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:18","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:18"},"nodeType":"YulFunctionCall","src":"3616:14:18"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:18"},"nodeType":"YulFunctionCall","src":"3609:39:18"},"nodeType":"YulExpressionStatement","src":"3609:39:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:18"},"nodeType":"YulFunctionCall","src":"3668:14:18"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:18"},"nodeType":"YulFunctionCall","src":"3661:34:18"},"nodeType":"YulExpressionStatement","src":"3661:34:18"},{"nodeType":"YulAssignment","src":"3708:30:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:18","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:18"},"nodeType":"YulFunctionCall","src":"3718:20:18"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"shanghai","externalReferences":[{"declaration":2991,"isOffset":false,"isSlot":false,"src":"3708:6:18","valueSize":1},{"declaration":2986,"isOffset":false,"isSlot":false,"src":"3632:15:18","valueSize":1},{"declaration":2988,"isOffset":false,"isSlot":false,"src":"3684:10:18","valueSize":1}],"id":2993,"nodeType":"InlineAssembly","src":"3515:233:18"}]},"documentation":{"id":2984,"nodeType":"StructuredDocumentation","src":"2917:431:18","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2995,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:18","nodeType":"FunctionDefinition","parameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2986,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:18","nodeType":"VariableDeclaration","scope":2995,"src":"3378:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2988,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:18","nodeType":"VariableDeclaration","scope":2995,"src":"3403:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:18"},"returnParameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"digest","nameLocation":"3454:6:18","nodeType":"VariableDeclaration","scope":2995,"src":"3446:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:18"},"scope":2996,"src":"3353:401:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2997,"src":"521:3235:18","usedErrors":[],"usedEvents":[]}],"src":"123:3634:18"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":19,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4050]},"id":4051,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2998,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2999,"nodeType":"StructuredDocumentation","src":"129:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4050,"linearizedBaseContracts":[4050],"name":"Math","nameLocation":"211:4:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"222:50:19","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":3002,"name":"MathOverflowedMulDiv","nameLocation":"283:20:19","nodeType":"ErrorDefinition","parameters":{"id":3001,"nodeType":"ParameterList","parameters":[],"src":"303:2:19"},"src":"277:29:19"},{"canonicalName":"Math.Rounding","id":3007,"members":[{"id":3003,"name":"Floor","nameLocation":"336:5:19","nodeType":"EnumValue","src":"336:5:19"},{"id":3004,"name":"Ceil","nameLocation":"379:4:19","nodeType":"EnumValue","src":"379:4:19"},{"id":3005,"name":"Trunc","nameLocation":"421:5:19","nodeType":"EnumValue","src":"421:5:19"},{"id":3006,"name":"Expand","nameLocation":"451:6:19","nodeType":"EnumValue","src":"451:6:19"}],"name":"Rounding","nameLocation":"317:8:19","nodeType":"EnumDefinition","src":"312:169:19"},{"body":{"id":3038,"nodeType":"Block","src":"661:140:19","statements":[{"id":3037,"nodeType":"UncheckedBlock","src":"671:124:19","statements":[{"assignments":[3020],"declarations":[{"constant":false,"id":3020,"mutability":"mutable","name":"c","nameLocation":"703:1:19","nodeType":"VariableDeclaration","scope":3037,"src":"695:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3024,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3021,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"707:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3022,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"711:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"730:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"734:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3032,"nodeType":"IfStatement","src":"726:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3018,"id":3031,"nodeType":"Return","src":"737:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3034,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"782:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3018,"id":3036,"nodeType":"Return","src":"768:16:19"}]}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"487:93:19","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":3039,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:19","nodeType":"FunctionDefinition","parameters":{"id":3013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"a","nameLocation":"609:1:19","nodeType":"VariableDeclaration","scope":3039,"src":"601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"b","nameLocation":"620:1:19","nodeType":"VariableDeclaration","scope":3039,"src":"612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:19"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3039,"src":"646:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3014,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3039,"src":"652:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:19"},"scope":4050,"src":"585:216:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3066,"nodeType":"Block","src":"984:113:19","statements":[{"id":3065,"nodeType":"UncheckedBlock","src":"994:97:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3051,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"1022:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"1026:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3058,"nodeType":"IfStatement","src":"1018:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3050,"id":3057,"nodeType":"Return","src":"1029:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3060,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"1074:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3061,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"1078:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3050,"id":3064,"nodeType":"Return","src":"1060:20:19"}]}]},"documentation":{"id":3040,"nodeType":"StructuredDocumentation","src":"807:96:19","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":3067,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:19","nodeType":"FunctionDefinition","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"a","nameLocation":"932:1:19","nodeType":"VariableDeclaration","scope":3067,"src":"924:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"b","nameLocation":"943:1:19","nodeType":"VariableDeclaration","scope":3067,"src":"935:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:19"},"returnParameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"969:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3046,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3067,"src":"975:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:19"},"scope":4050,"src":"908:189:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3108,"nodeType":"Block","src":"1283:417:19","statements":[{"id":3107,"nodeType":"UncheckedBlock","src":"1293:401:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3079,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"1551:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3086,"nodeType":"IfStatement","src":"1547:28:19","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3078,"id":3085,"nodeType":"Return","src":"1559:16:19"}},{"assignments":[3088],"declarations":[{"constant":false,"id":3088,"mutability":"mutable","name":"c","nameLocation":"1597:1:19","nodeType":"VariableDeclaration","scope":3107,"src":"1589:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3092,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3089,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"1601:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3090,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"1605:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3093,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"1624:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3094,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"1628:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"1633:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3102,"nodeType":"IfStatement","src":"1620:33:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3078,"id":3101,"nodeType":"Return","src":"1636:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3104,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"1681:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3078,"id":3106,"nodeType":"Return","src":"1667:16:19"}]}]},"documentation":{"id":3068,"nodeType":"StructuredDocumentation","src":"1103:99:19","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":3109,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:19","nodeType":"FunctionDefinition","parameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3070,"mutability":"mutable","name":"a","nameLocation":"1231:1:19","nodeType":"VariableDeclaration","scope":3109,"src":"1223:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3072,"mutability":"mutable","name":"b","nameLocation":"1242:1:19","nodeType":"VariableDeclaration","scope":3109,"src":"1234:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:19"},"returnParameters":{"id":3078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3109,"src":"1268:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3074,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3109,"src":"1274:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:19"},"scope":4050,"src":"1207:493:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3136,"nodeType":"Block","src":"1887:114:19","statements":[{"id":3135,"nodeType":"UncheckedBlock","src":"1897:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3121,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"1925:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3128,"nodeType":"IfStatement","src":"1921:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3126,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3120,"id":3127,"nodeType":"Return","src":"1933:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"1978:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3131,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"1982:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3120,"id":3134,"nodeType":"Return","src":"1964:20:19"}]}]},"documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"1706:100:19","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":3137,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:19","nodeType":"FunctionDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"a","nameLocation":"1835:1:19","nodeType":"VariableDeclaration","scope":3137,"src":"1827:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3114,"mutability":"mutable","name":"b","nameLocation":"1846:1:19","nodeType":"VariableDeclaration","scope":3137,"src":"1838:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:19"},"returnParameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3137,"src":"1872:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3116,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3137,"src":"1878:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:19"},"scope":4050,"src":"1811:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3164,"nodeType":"Block","src":"2198:114:19","statements":[{"id":3163,"nodeType":"UncheckedBlock","src":"2208:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3149,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"2236:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3156,"nodeType":"IfStatement","src":"2232:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3154,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3148,"id":3155,"nodeType":"Return","src":"2244:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"2289:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3159,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"2293:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3148,"id":3162,"nodeType":"Return","src":"2275:20:19"}]}]},"documentation":{"id":3138,"nodeType":"StructuredDocumentation","src":"2007:110:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:19","nodeType":"FunctionDefinition","parameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3140,"mutability":"mutable","name":"a","nameLocation":"2146:1:19","nodeType":"VariableDeclaration","scope":3165,"src":"2138:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3142,"mutability":"mutable","name":"b","nameLocation":"2157:1:19","nodeType":"VariableDeclaration","scope":3165,"src":"2149:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:19"},"returnParameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3165,"src":"2183:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3144,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3165,"src":"2189:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:19"},"scope":4050,"src":"2122:190:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3182,"nodeType":"Block","src":"2449:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"2466:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"2470:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3179,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"2478:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:19","trueExpression":{"id":3178,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"2474:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3174,"id":3181,"nodeType":"Return","src":"2459:20:19"}]},"documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"2318:59:19","text":" @dev Returns the largest of two numbers."},"id":3183,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:19","nodeType":"FunctionDefinition","parameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"a","nameLocation":"2403:1:19","nodeType":"VariableDeclaration","scope":3183,"src":"2395:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"b","nameLocation":"2414:1:19","nodeType":"VariableDeclaration","scope":3183,"src":"2406:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:19"},"returnParameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3183,"src":"2440:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:19"},"scope":4050,"src":"2382:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3200,"nodeType":"Block","src":"2624:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"2641:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"2645:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3197,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"2653:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:19","trueExpression":{"id":3196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"2649:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3192,"id":3199,"nodeType":"Return","src":"2634:20:19"}]},"documentation":{"id":3184,"nodeType":"StructuredDocumentation","src":"2492:60:19","text":" @dev Returns the smallest of two numbers."},"id":3201,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:19","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"a","nameLocation":"2578:1:19","nodeType":"VariableDeclaration","scope":3201,"src":"2570:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3188,"mutability":"mutable","name":"b","nameLocation":"2589:1:19","nodeType":"VariableDeclaration","scope":3201,"src":"2581:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:19"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3201,"src":"2615:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:19"},"scope":4050,"src":"2557:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3223,"nodeType":"Block","src":"2845:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3211,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"2900:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3212,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"2904:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3215,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"2910:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3216,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"2914:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3210,"id":3222,"nodeType":"Return","src":"2892:28:19"}]},"documentation":{"id":3202,"nodeType":"StructuredDocumentation","src":"2667:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3224,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:19","nodeType":"FunctionDefinition","parameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"mutability":"mutable","name":"a","nameLocation":"2799:1:19","nodeType":"VariableDeclaration","scope":3224,"src":"2791:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3203,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"b","nameLocation":"2810:1:19","nodeType":"VariableDeclaration","scope":3224,"src":"2802:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3205,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:19"},"returnParameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3224,"src":"2836:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:19"},"scope":4050,"src":"2774:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3257,"nodeType":"Block","src":"3219:260:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3234,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"3233:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3242,"nodeType":"IfStatement","src":"3229:127:19","trueBody":{"id":3241,"nodeType":"Block","src":"3241:115:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"3340:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"3344:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3233,"id":3240,"nodeType":"Return","src":"3333:12:19"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3243,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"3444:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"3458:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3251,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"3467:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:19","trueExpression":{"hexValue":"30","id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3233,"id":3256,"nodeType":"Return","src":"3437:35:19"}]},"documentation":{"id":3225,"nodeType":"StructuredDocumentation","src":"2933:210:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:19","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"a","nameLocation":"3173:1:19","nodeType":"VariableDeclaration","scope":3258,"src":"3165:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3226,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"b","nameLocation":"3184:1:19","nodeType":"VariableDeclaration","scope":3258,"src":"3176:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:19"},"returnParameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3258,"src":"3210:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:19"},"scope":4050,"src":"3148:331:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3383,"nodeType":"Block","src":"3901:4018:19","statements":[{"id":3382,"nodeType":"UncheckedBlock","src":"3911:4002:19","statements":[{"assignments":[3271],"declarations":[{"constant":false,"id":3271,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:19","nodeType":"VariableDeclaration","scope":3382,"src":"4232:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3275,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"4248:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3273,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"4252:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:19"},{"assignments":[3277],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:19","nodeType":"VariableDeclaration","scope":3382,"src":"4312:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3278,"nodeType":"VariableDeclarationStatement","src":"4312:13:19"},{"AST":{"nodeType":"YulBlock","src":"4392:122:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4410:30:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4427:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"4430:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4433:3:19"},"nodeType":"YulFunctionCall","src":"4433:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"4420:6:19"},"nodeType":"YulFunctionCall","src":"4420:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"4414:2:19","type":""}]},{"nodeType":"YulAssignment","src":"4457:43:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4474:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"4478:5:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4470:3:19"},"nodeType":"YulFunctionCall","src":"4470:14:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"4489:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"4493:5:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4486:2:19"},"nodeType":"YulFunctionCall","src":"4486:13:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4466:3:19"},"nodeType":"YulFunctionCall","src":"4466:34:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"4457:5:19"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":3271,"isOffset":false,"isSlot":false,"src":"4478:5:19","valueSize":1},{"declaration":3271,"isOffset":false,"isSlot":false,"src":"4493:5:19","valueSize":1},{"declaration":3277,"isOffset":false,"isSlot":false,"src":"4457:5:19","valueSize":1},{"declaration":3261,"isOffset":false,"isSlot":false,"src":"4427:1:19","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"4430:1:19","valueSize":1}],"id":3279,"nodeType":"InlineAssembly","src":"4383:131:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3280,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"4595:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3288,"nodeType":"IfStatement","src":"4591:368:19","trueBody":{"id":3287,"nodeType":"Block","src":"4607:352:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3283,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"4925:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3284,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"4933:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3269,"id":3286,"nodeType":"Return","src":"4918:26:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"5065:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3290,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"5080:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3296,"nodeType":"IfStatement","src":"5061:88:19","trueBody":{"id":3295,"nodeType":"Block","src":"5087:62:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3292,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"5112:20:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3294,"nodeType":"RevertStatement","src":"5105:29:19"}]}},{"assignments":[3298],"declarations":[{"constant":false,"id":3298,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:19","nodeType":"VariableDeclaration","scope":3382,"src":"5404:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3299,"nodeType":"VariableDeclarationStatement","src":"5404:17:19"},{"AST":{"nodeType":"YulBlock","src":"5444:291:19","statements":[{"nodeType":"YulAssignment","src":"5513:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5533:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"5536:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"5539:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5526:6:19"},"nodeType":"YulFunctionCall","src":"5526:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"5513:9:19"}]},{"nodeType":"YulAssignment","src":"5633:41:19","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"5646:5:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"5656:9:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"5667:5:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5653:2:19"},"nodeType":"YulFunctionCall","src":"5653:20:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5642:3:19"},"nodeType":"YulFunctionCall","src":"5642:32:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5633:5:19"}]},{"nodeType":"YulAssignment","src":"5691:30:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"5704:5:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"5711:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5700:3:19"},"nodeType":"YulFunctionCall","src":"5700:21:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"5691:5:19"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":3265,"isOffset":false,"isSlot":false,"src":"5539:11:19","valueSize":1},{"declaration":3271,"isOffset":false,"isSlot":false,"src":"5667:5:19","valueSize":1},{"declaration":3271,"isOffset":false,"isSlot":false,"src":"5691:5:19","valueSize":1},{"declaration":3271,"isOffset":false,"isSlot":false,"src":"5704:5:19","valueSize":1},{"declaration":3277,"isOffset":false,"isSlot":false,"src":"5633:5:19","valueSize":1},{"declaration":3277,"isOffset":false,"isSlot":false,"src":"5646:5:19","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"5513:9:19","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"5656:9:19","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"5711:9:19","valueSize":1},{"declaration":3261,"isOffset":false,"isSlot":false,"src":"5533:1:19","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"5536:1:19","valueSize":1}],"id":3300,"nodeType":"InlineAssembly","src":"5435:300:19"},{"assignments":[3302],"declarations":[{"constant":false,"id":3302,"mutability":"mutable","name":"twos","nameLocation":"5947:4:19","nodeType":"VariableDeclaration","scope":3382,"src":"5939:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3309,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3303,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"5954:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3305,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"5973:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:19"},{"AST":{"nodeType":"YulBlock","src":"6008:362:19","statements":[{"nodeType":"YulAssignment","src":"6073:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"6092:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"6105:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6088:3:19"},"nodeType":"YulFunctionCall","src":"6088:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"6073:11:19"}]},{"nodeType":"YulAssignment","src":"6177:25:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6190:5:19"},{"name":"twos","nodeType":"YulIdentifier","src":"6197:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6186:3:19"},"nodeType":"YulFunctionCall","src":"6186:16:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6177:5:19"}]},{"nodeType":"YulAssignment","src":"6317:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"6340:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6333:3:19"},"nodeType":"YulFunctionCall","src":"6333:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"6347:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6329:3:19"},"nodeType":"YulFunctionCall","src":"6329:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"6354:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6325:3:19"},"nodeType":"YulFunctionCall","src":"6325:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"6317:4:19"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":3265,"isOffset":false,"isSlot":false,"src":"6073:11:19","valueSize":1},{"declaration":3265,"isOffset":false,"isSlot":false,"src":"6092:11:19","valueSize":1},{"declaration":3271,"isOffset":false,"isSlot":false,"src":"6177:5:19","valueSize":1},{"declaration":3271,"isOffset":false,"isSlot":false,"src":"6190:5:19","valueSize":1},{"declaration":3302,"isOffset":false,"isSlot":false,"src":"6105:4:19","valueSize":1},{"declaration":3302,"isOffset":false,"isSlot":false,"src":"6197:4:19","valueSize":1},{"declaration":3302,"isOffset":false,"isSlot":false,"src":"6317:4:19","valueSize":1},{"declaration":3302,"isOffset":false,"isSlot":false,"src":"6340:4:19","valueSize":1},{"declaration":3302,"isOffset":false,"isSlot":false,"src":"6347:4:19","valueSize":1}],"id":3310,"nodeType":"InlineAssembly","src":"5999:371:19"},{"expression":{"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3311,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"6436:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3312,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"6445:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3313,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"6453:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3316,"nodeType":"ExpressionStatement","src":"6436:21:19"},{"assignments":[3318],"declarations":[{"constant":false,"id":3318,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:19","nodeType":"VariableDeclaration","scope":3382,"src":"6775:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3325,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3320,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"6798:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:19"},{"expression":{"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3326,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7031:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3328,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"7046:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3329,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7060:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3333,"nodeType":"ExpressionStatement","src":"7031:36:19"},{"expression":{"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3334,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7100:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3336,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"7115:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3337,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7129:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3341,"nodeType":"ExpressionStatement","src":"7100:36:19"},{"expression":{"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3342,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7170:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"7185:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3345,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7199:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3349,"nodeType":"ExpressionStatement","src":"7170:36:19"},{"expression":{"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3350,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7240:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"7255:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3353,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7269:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3357,"nodeType":"ExpressionStatement","src":"7240:36:19"},{"expression":{"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3358,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7310:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3360,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"7325:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3361,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3365,"nodeType":"ExpressionStatement","src":"7310:36:19"},{"expression":{"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3366,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7381:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3368,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"7396:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3369,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7410:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3373,"nodeType":"ExpressionStatement","src":"7381:36:19"},{"expression":{"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"7851:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"7860:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3376,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"7868:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3379,"nodeType":"ExpressionStatement","src":"7851:24:19"},{"expression":{"id":3380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"7896:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3269,"id":3381,"nodeType":"Return","src":"7889:13:19"}]}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"3485:313:19","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3384,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:19","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"x","nameLocation":"3827:1:19","nodeType":"VariableDeclaration","scope":3384,"src":"3819:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"y","nameLocation":"3838:1:19","nodeType":"VariableDeclaration","scope":3384,"src":"3830:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:19","nodeType":"VariableDeclaration","scope":3384,"src":"3841:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:19"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"result","nameLocation":"3893:6:19","nodeType":"VariableDeclaration","scope":3384,"src":"3885:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:19"},"scope":4050,"src":"3803:4116:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3426,"nodeType":"Block","src":"8161:192:19","statements":[{"assignments":[3400],"declarations":[{"constant":false,"id":3400,"mutability":"mutable","name":"result","nameLocation":"8179:6:19","nodeType":"VariableDeclaration","scope":3426,"src":"8171:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3406,"initialValue":{"arguments":[{"id":3402,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"8195:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3403,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"8198:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3404,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"8201:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3401,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3384,3427],"referencedDeclaration":3384,"src":"8188:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3408,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"8244:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}],"id":3407,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"8227:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3007_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3411,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"8264:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3412,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"8267:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3413,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"8270:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3410,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3423,"nodeType":"IfStatement","src":"8223:101:19","trueBody":{"id":3422,"nodeType":"Block","src":"8288:36:19","statements":[{"expression":{"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"8302:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3421,"nodeType":"ExpressionStatement","src":"8302:11:19"}]}},{"expression":{"id":3424,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"8340:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3398,"id":3425,"nodeType":"Return","src":"8333:13:19"}]},"documentation":{"id":3385,"nodeType":"StructuredDocumentation","src":"7925:121:19","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3427,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:19","nodeType":"FunctionDefinition","parameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"x","nameLocation":"8075:1:19","nodeType":"VariableDeclaration","scope":3427,"src":"8067:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3386,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"y","nameLocation":"8086:1:19","nodeType":"VariableDeclaration","scope":3427,"src":"8078:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3391,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:19","nodeType":"VariableDeclaration","scope":3427,"src":"8089:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3390,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3394,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:19","nodeType":"VariableDeclaration","scope":3427,"src":"8110:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"},"typeName":{"id":3393,"nodeType":"UserDefinedTypeName","pathNode":{"id":3392,"name":"Rounding","nameLocations":["8110:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3007,"src":"8110:8:19"},"referencedDeclaration":3007,"src":"8110:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:19"},"returnParameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3427,"src":"8152:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:19"},"scope":4050,"src":"8051:302:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3538,"nodeType":"Block","src":"8644:1585:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"8658:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3441,"nodeType":"IfStatement","src":"8654:45:19","trueBody":{"id":3440,"nodeType":"Block","src":"8666:33:19","statements":[{"expression":{"hexValue":"30","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3434,"id":3439,"nodeType":"Return","src":"8680:8:19"}]}},{"assignments":[3443],"declarations":[{"constant":false,"id":3443,"mutability":"mutable","name":"result","nameLocation":"9386:6:19","nodeType":"VariableDeclaration","scope":3538,"src":"9378:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3442,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3452,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3446,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"9406:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3445,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3706,3741],"referencedDeclaration":3706,"src":"9401:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:19"},{"id":3537,"nodeType":"UncheckedBlock","src":"9815:408:19","statements":[{"expression":{"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3453,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"9839:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"9849:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"9858:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"9862:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3463,"nodeType":"ExpressionStatement","src":"9839:35:19"},{"expression":{"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3464,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"9888:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"9898:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"9907:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"9911:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3474,"nodeType":"ExpressionStatement","src":"9888:35:19"},{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3475,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"9937:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"9947:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"9956:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"9960:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3485,"nodeType":"ExpressionStatement","src":"9937:35:19"},{"expression":{"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3486,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"9986:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"9996:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3488,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"10005:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10009:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3496,"nodeType":"ExpressionStatement","src":"9986:35:19"},{"expression":{"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10035:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10045:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3499,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"10054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10058:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3507,"nodeType":"ExpressionStatement","src":"10035:35:19"},{"expression":{"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10084:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10094:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3510,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"10103:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10107:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3518,"nodeType":"ExpressionStatement","src":"10084:35:19"},{"expression":{"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3519,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10133:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3520,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10143:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"10152:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10156:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3529,"nodeType":"ExpressionStatement","src":"10133:35:19"},{"expression":{"arguments":[{"id":3531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10193:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"10201:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3533,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"10205:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3530,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"10189:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3434,"id":3536,"nodeType":"Return","src":"10182:30:19"}]}]},"documentation":{"id":3428,"nodeType":"StructuredDocumentation","src":"8359:223:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3539,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:19","nodeType":"FunctionDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"a","nameLocation":"8609:1:19","nodeType":"VariableDeclaration","scope":3539,"src":"8601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:19"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3539,"src":"8635:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:19"},"scope":4050,"src":"8587:1642:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3573,"nodeType":"Block","src":"10405:164:19","statements":[{"id":3572,"nodeType":"UncheckedBlock","src":"10415:148:19","statements":[{"assignments":[3551],"declarations":[{"constant":false,"id":3551,"mutability":"mutable","name":"result","nameLocation":"10447:6:19","nodeType":"VariableDeclaration","scope":3572,"src":"10439:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3550,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3555,"initialValue":{"arguments":[{"id":3553,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"10461:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3552,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3539,3574],"referencedDeclaration":3539,"src":"10456:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"10484:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3558,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"10511:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}],"id":3557,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"10494:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3007_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"10524:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3561,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"10533:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3563,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"10542:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:19","trueExpression":{"hexValue":"31","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3549,"id":3571,"nodeType":"Return","src":"10477:75:19"}]}]},"documentation":{"id":3540,"nodeType":"StructuredDocumentation","src":"10235:89:19","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3574,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:19","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"a","nameLocation":"10351:1:19","nodeType":"VariableDeclaration","scope":3574,"src":"10343:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3541,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3545,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:19","nodeType":"VariableDeclaration","scope":3574,"src":"10354:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"},"typeName":{"id":3544,"nodeType":"UserDefinedTypeName","pathNode":{"id":3543,"name":"Rounding","nameLocations":["10354:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3007,"src":"10354:8:19"},"referencedDeclaration":3007,"src":"10354:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:19"},"returnParameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3574,"src":"10396:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:19"},"scope":4050,"src":"10329:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3705,"nodeType":"Block","src":"10760:922:19","statements":[{"assignments":[3583],"declarations":[{"constant":false,"id":3583,"mutability":"mutable","name":"result","nameLocation":"10778:6:19","nodeType":"VariableDeclaration","scope":3705,"src":"10770:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3585,"initialValue":{"hexValue":"30","id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:19"},{"id":3702,"nodeType":"UncheckedBlock","src":"10798:855:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"10826:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3600,"nodeType":"IfStatement","src":"10822:99:19","trueBody":{"id":3599,"nodeType":"Block","src":"10844:77:19","statements":[{"expression":{"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"10862:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3594,"nodeType":"ExpressionStatement","src":"10862:13:19"},{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3595,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"10893:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3598,"nodeType":"ExpressionStatement","src":"10893:13:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"10938:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3615,"nodeType":"IfStatement","src":"10934:96:19","trueBody":{"id":3614,"nodeType":"Block","src":"10955:75:19","statements":[{"expression":{"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"10973:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3609,"nodeType":"ExpressionStatement","src":"10973:12:19"},{"expression":{"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"11003:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3613,"nodeType":"ExpressionStatement","src":"11003:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"11047:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3630,"nodeType":"IfStatement","src":"11043:96:19","trueBody":{"id":3629,"nodeType":"Block","src":"11064:75:19","statements":[{"expression":{"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"11082:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3624,"nodeType":"ExpressionStatement","src":"11082:12:19"},{"expression":{"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3625,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"11112:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3628,"nodeType":"ExpressionStatement","src":"11112:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"11156:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3645,"nodeType":"IfStatement","src":"11152:96:19","trueBody":{"id":3644,"nodeType":"Block","src":"11173:75:19","statements":[{"expression":{"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"11191:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3639,"nodeType":"ExpressionStatement","src":"11191:12:19"},{"expression":{"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3640,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"11221:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3643,"nodeType":"ExpressionStatement","src":"11221:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"11265:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3660,"nodeType":"IfStatement","src":"11261:93:19","trueBody":{"id":3659,"nodeType":"Block","src":"11281:73:19","statements":[{"expression":{"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"11299:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3654,"nodeType":"ExpressionStatement","src":"11299:11:19"},{"expression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"11328:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3658,"nodeType":"ExpressionStatement","src":"11328:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"11371:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3675,"nodeType":"IfStatement","src":"11367:93:19","trueBody":{"id":3674,"nodeType":"Block","src":"11387:73:19","statements":[{"expression":{"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"11405:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3669,"nodeType":"ExpressionStatement","src":"11405:11:19"},{"expression":{"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"11434:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3673,"nodeType":"ExpressionStatement","src":"11434:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"11477:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3690,"nodeType":"IfStatement","src":"11473:93:19","trueBody":{"id":3689,"nodeType":"Block","src":"11493:73:19","statements":[{"expression":{"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"11511:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3684,"nodeType":"ExpressionStatement","src":"11511:11:19"},{"expression":{"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"11540:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3688,"nodeType":"ExpressionStatement","src":"11540:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"11583:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3701,"nodeType":"IfStatement","src":"11579:64:19","trueBody":{"id":3700,"nodeType":"Block","src":"11599:44:19","statements":[{"expression":{"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3696,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"11617:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3699,"nodeType":"ExpressionStatement","src":"11617:11:19"}]}}]},{"expression":{"id":3703,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"11669:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3581,"id":3704,"nodeType":"Return","src":"11662:13:19"}]},"documentation":{"id":3575,"nodeType":"StructuredDocumentation","src":"10575:119:19","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3706,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:19","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"value","nameLocation":"10721:5:19","nodeType":"VariableDeclaration","scope":3706,"src":"10713:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:19"},"returnParameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3706,"src":"10751:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:19"},"scope":4050,"src":"10699:983:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3740,"nodeType":"Block","src":"11915:168:19","statements":[{"id":3739,"nodeType":"UncheckedBlock","src":"11925:152:19","statements":[{"assignments":[3718],"declarations":[{"constant":false,"id":3718,"mutability":"mutable","name":"result","nameLocation":"11957:6:19","nodeType":"VariableDeclaration","scope":3739,"src":"11949:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3722,"initialValue":{"arguments":[{"id":3720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"11971:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3719,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3706,3741],"referencedDeclaration":3706,"src":"11966:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"11998:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3725,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"12025:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}],"id":3724,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"12008:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3007_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"12043:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"12052:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:19","trueExpression":{"hexValue":"31","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3736,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3716,"id":3738,"nodeType":"Return","src":"11991:75:19"}]}]},"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"11688:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3741,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:19","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"value","nameLocation":"11857:5:19","nodeType":"VariableDeclaration","scope":3741,"src":"11849:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3712,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:19","nodeType":"VariableDeclaration","scope":3741,"src":"11864:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"},"typeName":{"id":3711,"nodeType":"UserDefinedTypeName","pathNode":{"id":3710,"name":"Rounding","nameLocations":["11864:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3007,"src":"11864:8:19"},"referencedDeclaration":3007,"src":"11864:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:19"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3741,"src":"11906:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:19"},"scope":4050,"src":"11835:248:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3869,"nodeType":"Block","src":"12276:854:19","statements":[{"assignments":[3750],"declarations":[{"constant":false,"id":3750,"mutability":"mutable","name":"result","nameLocation":"12294:6:19","nodeType":"VariableDeclaration","scope":3869,"src":"12286:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3752,"initialValue":{"hexValue":"30","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:19"},{"id":3866,"nodeType":"UncheckedBlock","src":"12314:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12342:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3769,"nodeType":"IfStatement","src":"12338:103:19","trueBody":{"id":3768,"nodeType":"Block","src":"12361:80:19","statements":[{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3763,"nodeType":"ExpressionStatement","src":"12379:17:19"},{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"12414:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3767,"nodeType":"ExpressionStatement","src":"12414:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12458:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3786,"nodeType":"IfStatement","src":"12454:103:19","trueBody":{"id":3785,"nodeType":"Block","src":"12477:80:19","statements":[{"expression":{"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12495:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3780,"nodeType":"ExpressionStatement","src":"12495:17:19"},{"expression":{"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"12530:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3784,"nodeType":"ExpressionStatement","src":"12530:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12574:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3803,"nodeType":"IfStatement","src":"12570:103:19","trueBody":{"id":3802,"nodeType":"Block","src":"12593:80:19","statements":[{"expression":{"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12611:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3797,"nodeType":"ExpressionStatement","src":"12611:17:19"},{"expression":{"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"12646:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3801,"nodeType":"ExpressionStatement","src":"12646:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12690:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3820,"nodeType":"IfStatement","src":"12686:100:19","trueBody":{"id":3819,"nodeType":"Block","src":"12708:78:19","statements":[{"expression":{"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12726:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3814,"nodeType":"ExpressionStatement","src":"12726:16:19"},{"expression":{"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"12760:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3818,"nodeType":"ExpressionStatement","src":"12760:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12803:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3837,"nodeType":"IfStatement","src":"12799:100:19","trueBody":{"id":3836,"nodeType":"Block","src":"12821:78:19","statements":[{"expression":{"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12839:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3831,"nodeType":"ExpressionStatement","src":"12839:16:19"},{"expression":{"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"12873:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3835,"nodeType":"ExpressionStatement","src":"12873:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12916:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3854,"nodeType":"IfStatement","src":"12912:100:19","trueBody":{"id":3853,"nodeType":"Block","src":"12934:78:19","statements":[{"expression":{"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"12952:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3848,"nodeType":"ExpressionStatement","src":"12952:16:19"},{"expression":{"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"12986:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3852,"nodeType":"ExpressionStatement","src":"12986:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"13029:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3865,"nodeType":"IfStatement","src":"13025:66:19","trueBody":{"id":3864,"nodeType":"Block","src":"13047:44:19","statements":[{"expression":{"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"13065:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3863,"nodeType":"ExpressionStatement","src":"13065:11:19"}]}}]},{"expression":{"id":3867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"13117:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3748,"id":3868,"nodeType":"Return","src":"13110:13:19"}]},"documentation":{"id":3742,"nodeType":"StructuredDocumentation","src":"12089:120:19","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3870,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:19","nodeType":"FunctionDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3744,"mutability":"mutable","name":"value","nameLocation":"12237:5:19","nodeType":"VariableDeclaration","scope":3870,"src":"12229:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:19"},"returnParameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3870,"src":"12267:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3746,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:19"},"scope":4050,"src":"12214:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3904,"nodeType":"Block","src":"13365:170:19","statements":[{"id":3903,"nodeType":"UncheckedBlock","src":"13375:154:19","statements":[{"assignments":[3882],"declarations":[{"constant":false,"id":3882,"mutability":"mutable","name":"result","nameLocation":"13407:6:19","nodeType":"VariableDeclaration","scope":3903,"src":"13399:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3886,"initialValue":{"arguments":[{"id":3884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"13422:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3883,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3870,3905],"referencedDeclaration":3870,"src":"13416:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"13449:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3889,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"13476:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}],"id":3888,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"13459:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3007_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3892,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"13495:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"13504:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:19","trueExpression":{"hexValue":"31","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3880,"id":3902,"nodeType":"Return","src":"13442:76:19"}]}]},"documentation":{"id":3871,"nodeType":"StructuredDocumentation","src":"13136:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3905,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:19","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"value","nameLocation":"13307:5:19","nodeType":"VariableDeclaration","scope":3905,"src":"13299:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3876,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:19","nodeType":"VariableDeclaration","scope":3905,"src":"13314:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"},"typeName":{"id":3875,"nodeType":"UserDefinedTypeName","pathNode":{"id":3874,"name":"Rounding","nameLocations":["13314:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3007,"src":"13314:8:19"},"referencedDeclaration":3007,"src":"13314:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:19"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3905,"src":"13356:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:19"},"scope":4050,"src":"13284:251:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3991,"nodeType":"Block","src":"13855:600:19","statements":[{"assignments":[3914],"declarations":[{"constant":false,"id":3914,"mutability":"mutable","name":"result","nameLocation":"13873:6:19","nodeType":"VariableDeclaration","scope":3991,"src":"13865:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3916,"initialValue":{"hexValue":"30","id":3915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:19"},{"id":3988,"nodeType":"UncheckedBlock","src":"13893:533:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"13921:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3931,"nodeType":"IfStatement","src":"13917:98:19","trueBody":{"id":3930,"nodeType":"Block","src":"13939:76:19","statements":[{"expression":{"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"13957:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3925,"nodeType":"ExpressionStatement","src":"13957:13:19"},{"expression":{"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"13988:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3929,"nodeType":"ExpressionStatement","src":"13988:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"14032:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3946,"nodeType":"IfStatement","src":"14028:95:19","trueBody":{"id":3945,"nodeType":"Block","src":"14049:74:19","statements":[{"expression":{"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"14067:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3940,"nodeType":"ExpressionStatement","src":"14067:12:19"},{"expression":{"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3941,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"14097:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3944,"nodeType":"ExpressionStatement","src":"14097:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"14140:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3961,"nodeType":"IfStatement","src":"14136:95:19","trueBody":{"id":3960,"nodeType":"Block","src":"14157:74:19","statements":[{"expression":{"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"14175:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3955,"nodeType":"ExpressionStatement","src":"14175:12:19"},{"expression":{"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3956,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"14205:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3959,"nodeType":"ExpressionStatement","src":"14205:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"14248:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3976,"nodeType":"IfStatement","src":"14244:95:19","trueBody":{"id":3975,"nodeType":"Block","src":"14265:74:19","statements":[{"expression":{"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"14283:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3970,"nodeType":"ExpressionStatement","src":"14283:12:19"},{"expression":{"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"14313:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3974,"nodeType":"ExpressionStatement","src":"14313:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"14356:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3987,"nodeType":"IfStatement","src":"14352:64:19","trueBody":{"id":3986,"nodeType":"Block","src":"14372:44:19","statements":[{"expression":{"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"14390:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3985,"nodeType":"ExpressionStatement","src":"14390:11:19"}]}}]},{"expression":{"id":3989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"14442:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3912,"id":3990,"nodeType":"Return","src":"14435:13:19"}]},"documentation":{"id":3906,"nodeType":"StructuredDocumentation","src":"13541:246:19","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3992,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:19","nodeType":"FunctionDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"value","nameLocation":"13816:5:19","nodeType":"VariableDeclaration","scope":3992,"src":"13808:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:19"},"returnParameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3992,"src":"13846:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:19"},"scope":4050,"src":"13792:663:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4029,"nodeType":"Block","src":"14692:177:19","statements":[{"id":4028,"nodeType":"UncheckedBlock","src":"14702:161:19","statements":[{"assignments":[4004],"declarations":[{"constant":false,"id":4004,"mutability":"mutable","name":"result","nameLocation":"14734:6:19","nodeType":"VariableDeclaration","scope":4028,"src":"14726:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4008,"initialValue":{"arguments":[{"id":4006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"14750:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4005,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3992,4030],"referencedDeclaration":3992,"src":"14743:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4009,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"14777:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4011,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"14804:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}],"id":4010,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"14787:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3007_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4014,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"14823:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"14838:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:19","trueExpression":{"hexValue":"31","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4002,"id":4027,"nodeType":"Return","src":"14770:82:19"}]}]},"documentation":{"id":3993,"nodeType":"StructuredDocumentation","src":"14461:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4030,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:19","nodeType":"FunctionDefinition","parameters":{"id":3999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3995,"mutability":"mutable","name":"value","nameLocation":"14634:5:19","nodeType":"VariableDeclaration","scope":4030,"src":"14626:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3998,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:19","nodeType":"VariableDeclaration","scope":4030,"src":"14641:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"},"typeName":{"id":3997,"nodeType":"UserDefinedTypeName","pathNode":{"id":3996,"name":"Rounding","nameLocations":["14641:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3007,"src":"14641:8:19"},"referencedDeclaration":3007,"src":"14641:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:19"},"returnParameters":{"id":4002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4030,"src":"14683:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:19"},"scope":4050,"src":"14610:259:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4048,"nodeType":"Block","src":"15067:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4041,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"15090:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}],"id":4040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4039,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:19","typeDescriptions":{}}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4038,"id":4047,"nodeType":"Return","src":"15077:31:19"}]},"documentation":{"id":4031,"nodeType":"StructuredDocumentation","src":"14875:113:19","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:19","nodeType":"FunctionDefinition","parameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4034,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:19","nodeType":"VariableDeclaration","scope":4049,"src":"15019:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"},"typeName":{"id":4033,"nodeType":"UserDefinedTypeName","pathNode":{"id":4032,"name":"Rounding","nameLocations":["15019:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3007,"src":"15019:8:19"},"referencedDeclaration":3007,"src":"15019:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3007","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:19"},"returnParameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4049,"src":"15061:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4036,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:19"},"scope":4050,"src":"14993:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4051,"src":"203:14914:19","usedErrors":[3002],"usedEvents":[]}],"src":"103:15015:19"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":20,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[4155]},"id":4156,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4052,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":4053,"nodeType":"StructuredDocumentation","src":"135:80:20","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4155,"linearizedBaseContracts":[4155],"name":"SignedMath","nameLocation":"224:10:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":4070,"nodeType":"Block","src":"376:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"393:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4064,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"397:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4067,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"405:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:20","trueExpression":{"id":4066,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"401:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4062,"id":4069,"nodeType":"Return","src":"386:20:20"}]},"documentation":{"id":4054,"nodeType":"StructuredDocumentation","src":"241:66:20","text":" @dev Returns the largest of two signed numbers."},"id":4071,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:20","nodeType":"FunctionDefinition","parameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4056,"mutability":"mutable","name":"a","nameLocation":"332:1:20","nodeType":"VariableDeclaration","scope":4071,"src":"325:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4055,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4058,"mutability":"mutable","name":"b","nameLocation":"342:1:20","nodeType":"VariableDeclaration","scope":4071,"src":"335:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4057,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:20"},"returnParameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4071,"src":"368:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4060,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:20"},"scope":4155,"src":"312:101:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4088,"nodeType":"Block","src":"555:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4081,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"572:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4082,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"576:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4085,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"584:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:20","trueExpression":{"id":4084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"580:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4080,"id":4087,"nodeType":"Return","src":"565:20:20"}]},"documentation":{"id":4072,"nodeType":"StructuredDocumentation","src":"419:67:20","text":" @dev Returns the smallest of two signed numbers."},"id":4089,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:20","nodeType":"FunctionDefinition","parameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"mutability":"mutable","name":"a","nameLocation":"511:1:20","nodeType":"VariableDeclaration","scope":4089,"src":"504:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4073,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4076,"mutability":"mutable","name":"b","nameLocation":"521:1:20","nodeType":"VariableDeclaration","scope":4089,"src":"514:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4075,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:20"},"returnParameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4089,"src":"547:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4078,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:20"},"scope":4155,"src":"491:101:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4132,"nodeType":"Block","src":"797:162:20","statements":[{"assignments":[4100],"declarations":[{"constant":false,"id":4100,"mutability":"mutable","name":"x","nameLocation":"866:1:20","nodeType":"VariableDeclaration","scope":4132,"src":"859:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4099,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4113,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4101,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"871:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4102,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"875:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"882:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4106,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"886:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:20"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4114,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"911:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4119,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"931:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:20","typeDescriptions":{}}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4115,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:20","typeDescriptions":{}}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4124,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"945:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4125,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"949:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4127,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4098,"id":4131,"nodeType":"Return","src":"904:48:20"}]},"documentation":{"id":4090,"nodeType":"StructuredDocumentation","src":"598:126:20","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":4133,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:20","nodeType":"FunctionDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4092,"mutability":"mutable","name":"a","nameLocation":"753:1:20","nodeType":"VariableDeclaration","scope":4133,"src":"746:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4091,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4094,"mutability":"mutable","name":"b","nameLocation":"763:1:20","nodeType":"VariableDeclaration","scope":4133,"src":"756:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4093,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:20"},"returnParameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4133,"src":"789:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4096,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:20"},"scope":4155,"src":"729:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4153,"nodeType":"Block","src":"1103:158:20","statements":[{"id":4152,"nodeType":"UncheckedBlock","src":"1113:142:20","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4143,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"1228:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:20","subExpression":{"id":4147,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"1242:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:20","trueExpression":{"id":4146,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"1237:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:20","typeDescriptions":{}}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4140,"id":4151,"nodeType":"Return","src":"1213:31:20"}]}]},"documentation":{"id":4134,"nodeType":"StructuredDocumentation","src":"965:78:20","text":" @dev Returns the absolute unsigned value of a signed value."},"id":4154,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:20","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"n","nameLocation":"1068:1:20","nodeType":"VariableDeclaration","scope":4154,"src":"1061:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4135,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:20"},"returnParameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4154,"src":"1094:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:20"},"scope":4155,"src":"1048:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4156,"src":"216:1047:20","usedErrors":[],"usedEvents":[]}],"src":"109:1155:20"}},"contracts/Pool.sol":{"id":21,"ast":{"absolutePath":"contracts/Pool.sol","exportedSymbols":{"ERC20":[761],"ERC20Permit":[993],"IERC20":[839],"IPool":[7458],"IPoolCallee":[7472],"IPoolFactory":[8143],"IVoter":[7954],"Math":[4050],"Pool":[6412],"PoolFees":[6496],"ReentrancyGuard":[1765],"SafeERC20":[1345]},"id":6413,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":4157,"literals":["solidity","^","0.8",".19","||","0.8",".20"],"nodeType":"PragmaDirective","src":"37:34:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":4159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6413,"sourceUnit":4051,"src":"72:65:21","symbolAliases":[{"foreign":{"id":4158,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"80:4:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPool.sol","file":"./interfaces/IPool.sol","id":4161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6413,"sourceUnit":7459,"src":"138:45:21","symbolAliases":[{"foreign":{"id":4160,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7458,"src":"146:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IVoter.sol","file":"./interfaces/IVoter.sol","id":4163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6413,"sourceUnit":7955,"src":"184:47:21","symbolAliases":[{"foreign":{"id":4162,"name":"IVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"192:6:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPoolCallee.sol","file":"./interfaces/IPoolCallee.sol","id":4165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6413,"sourceUnit":7473,"src":"232:57:21","symbolAliases":[{"foreign":{"id":4164,"name":"IPoolCallee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"240:11:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/factories/IPoolFactory.sol","file":"./interfaces/factories/IPoolFactory.sol","id":4167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6413,"sourceUnit":8144,"src":"290:69:21","symbolAliases":[{"foreign":{"id":4166,"name":"IPoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"298:12:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/PoolFees.sol","file":"./PoolFees.sol","id":4169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6413,"sourceUnit":6497,"src":"360:40:21","symbolAliases":[{"foreign":{"id":4168,"name":"PoolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"368:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6413,"sourceUnit":1346,"src":"401:82:21","symbolAliases":[{"foreign":{"id":4170,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"409:9:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6413,"sourceUnit":762,"src":"484:68:21","symbolAliases":[{"foreign":{"id":4172,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"492:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6413,"sourceUnit":840,"src":"553:70:21","symbolAliases":[{"foreign":{"id":4174,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"561:6:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":4177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6413,"sourceUnit":994,"src":"624:91:21","symbolAliases":[{"foreign":{"id":4176,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"632:11:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":4179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6413,"sourceUnit":1766,"src":"716:82:21","symbolAliases":[{"foreign":{"id":4178,"name":"ReentrancyGuard","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"724:15:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4181,"name":"IPool","nameLocations":["949:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":7458,"src":"949:5:21"},"id":4182,"nodeType":"InheritanceSpecifier","src":"949:5:21"},{"baseName":{"id":4183,"name":"ERC20Permit","nameLocations":["956:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":993,"src":"956:11:21"},"id":4184,"nodeType":"InheritanceSpecifier","src":"956:11:21"},{"baseName":{"id":4185,"name":"ReentrancyGuard","nameLocations":["969:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":1765,"src":"969:15:21"},"id":4186,"nodeType":"InheritanceSpecifier","src":"969:15:21"}],"canonicalName":"Pool","contractDependencies":[6496],"contractKind":"contract","documentation":{"id":4180,"nodeType":"StructuredDocumentation","src":"800:132:21","text":"@title Pool\n @author velodrome.finance, @figs999, @pegahcarter\n @notice Veldrome V2 token pool, either stable or volatile"},"fullyImplemented":true,"id":6412,"linearizedBaseContracts":[6412,1765,993,1696,2922,24,1055,761,66,1019,839,1628,7458],"name":"Pool","nameLocation":"941:4:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4190,"libraryName":{"id":4187,"name":"SafeERC20","nameLocations":["997:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":1345,"src":"997:9:21"},"nodeType":"UsingForDirective","src":"991:27:21","typeName":{"id":4189,"nodeType":"UserDefinedTypeName","pathNode":{"id":4188,"name":"IERC20","nameLocations":["1011:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":839,"src":"1011:6:21"},"referencedDeclaration":839,"src":"1011:6:21","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}}},{"constant":false,"id":4192,"mutability":"mutable","name":"_name","nameLocation":"1039:5:21","nodeType":"VariableDeclaration","scope":6412,"src":"1024:20:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4191,"name":"string","nodeType":"ElementaryTypeName","src":"1024:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4194,"mutability":"mutable","name":"_symbol","nameLocation":"1065:7:21","nodeType":"VariableDeclaration","scope":6412,"src":"1050:22:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4193,"name":"string","nodeType":"ElementaryTypeName","src":"1050:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4196,"mutability":"mutable","name":"_voter","nameLocation":"1094:6:21","nodeType":"VariableDeclaration","scope":6412,"src":"1078:22:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4195,"name":"address","nodeType":"ElementaryTypeName","src":"1078:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"baseFunctions":[7337],"constant":false,"documentation":{"id":4197,"nodeType":"StructuredDocumentation","src":"1107:21:21","text":"@inheritdoc IPool"},"functionSelector":"22be3de1","id":4199,"mutability":"mutable","name":"stable","nameLocation":"1145:6:21","nodeType":"VariableDeclaration","scope":6412,"src":"1133:18:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4198,"name":"bool","nodeType":"ElementaryTypeName","src":"1133:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":true,"id":4204,"mutability":"constant","name":"MINIMUM_LIQUIDITY","nameLocation":"1184:17:21","nodeType":"VariableDeclaration","scope":6412,"src":"1158:53:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1158:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"id":4203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"33","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1210:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1204:7:21","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}},"visibility":"internal"},{"constant":true,"id":4209,"mutability":"constant","name":"MINIMUM_K","nameLocation":"1243:9:21","nodeType":"VariableDeclaration","scope":6412,"src":"1217:46:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1217:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":4208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1255:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1261:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1255:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}},"visibility":"internal"},{"baseFunctions":[7208],"constant":false,"documentation":{"id":4210,"nodeType":"StructuredDocumentation","src":"1270:21:21","text":"@inheritdoc IPool"},"functionSelector":"0dfe1681","id":4212,"mutability":"mutable","name":"token0","nameLocation":"1311:6:21","nodeType":"VariableDeclaration","scope":6412,"src":"1296:21:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4211,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[7214],"constant":false,"documentation":{"id":4213,"nodeType":"StructuredDocumentation","src":"1323:21:21","text":"@inheritdoc IPool"},"functionSelector":"d21220a7","id":4215,"mutability":"mutable","name":"token1","nameLocation":"1364:6:21","nodeType":"VariableDeclaration","scope":6412,"src":"1349:21:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4214,"name":"address","nodeType":"ElementaryTypeName","src":"1349:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[7220],"constant":false,"documentation":{"id":4216,"nodeType":"StructuredDocumentation","src":"1376:21:21","text":"@inheritdoc IPool"},"functionSelector":"33580959","id":4218,"mutability":"mutable","name":"poolFees","nameLocation":"1417:8:21","nodeType":"VariableDeclaration","scope":6412,"src":"1402:23:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4217,"name":"address","nodeType":"ElementaryTypeName","src":"1402:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[7226],"constant":false,"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"1431:21:21","text":"@inheritdoc IPool"},"functionSelector":"c45a0155","id":4221,"mutability":"mutable","name":"factory","nameLocation":"1472:7:21","nodeType":"VariableDeclaration","scope":6412,"src":"1457:22:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4220,"name":"address","nodeType":"ElementaryTypeName","src":"1457:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[7232],"constant":true,"documentation":{"id":4222,"nodeType":"StructuredDocumentation","src":"1486:21:21","text":"@inheritdoc IPool"},"functionSelector":"e4463eb2","id":4225,"mutability":"constant","name":"periodSize","nameLocation":"1536:10:21","nodeType":"VariableDeclaration","scope":6412,"src":"1512:41:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4223,"name":"uint256","nodeType":"ElementaryTypeName","src":"1512:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31383030","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1549:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1800_by_1","typeString":"int_const 1800"},"value":"1800"},"visibility":"public"},{"constant":false,"functionSelector":"252c09d7","id":4229,"mutability":"mutable","name":"observations","nameLocation":"1581:12:21","nodeType":"VariableDeclaration","scope":6412,"src":"1560:33:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation[]"},"typeName":{"baseType":{"id":4227,"nodeType":"UserDefinedTypeName","pathNode":{"id":4226,"name":"Observation","nameLocations":["1560:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":7168,"src":"1560:11:21"},"referencedDeclaration":7168,"src":"1560:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_storage_ptr","typeString":"struct IPool.Observation"}},"id":4228,"nodeType":"ArrayTypeName","src":"1560:13:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage_ptr","typeString":"struct IPool.Observation[]"}},"visibility":"public"},{"constant":false,"id":4231,"mutability":"mutable","name":"decimals0","nameLocation":"1617:9:21","nodeType":"VariableDeclaration","scope":6412,"src":"1600:26:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1600:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4233,"mutability":"mutable","name":"decimals1","nameLocation":"1649:9:21","nodeType":"VariableDeclaration","scope":6412,"src":"1632:26:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1632:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"baseFunctions":[7238],"constant":false,"documentation":{"id":4234,"nodeType":"StructuredDocumentation","src":"1665:21:21","text":"@inheritdoc IPool"},"functionSelector":"443cb4bc","id":4236,"mutability":"mutable","name":"reserve0","nameLocation":"1706:8:21","nodeType":"VariableDeclaration","scope":6412,"src":"1691:23:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[7244],"constant":false,"documentation":{"id":4237,"nodeType":"StructuredDocumentation","src":"1720:21:21","text":"@inheritdoc IPool"},"functionSelector":"5a76f25e","id":4239,"mutability":"mutable","name":"reserve1","nameLocation":"1761:8:21","nodeType":"VariableDeclaration","scope":6412,"src":"1746:23:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1746:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[7250],"constant":false,"documentation":{"id":4240,"nodeType":"StructuredDocumentation","src":"1775:21:21","text":"@inheritdoc IPool"},"functionSelector":"c5700a02","id":4242,"mutability":"mutable","name":"blockTimestampLast","nameLocation":"1816:18:21","nodeType":"VariableDeclaration","scope":6412,"src":"1801:33:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1801:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[7256],"constant":false,"documentation":{"id":4243,"nodeType":"StructuredDocumentation","src":"1841:21:21","text":"@inheritdoc IPool"},"functionSelector":"bf944dbc","id":4245,"mutability":"mutable","name":"reserve0CumulativeLast","nameLocation":"1882:22:21","nodeType":"VariableDeclaration","scope":6412,"src":"1867:37:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1867:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[7262],"constant":false,"documentation":{"id":4246,"nodeType":"StructuredDocumentation","src":"1910:21:21","text":"@inheritdoc IPool"},"functionSelector":"c245febc","id":4248,"mutability":"mutable","name":"reserve1CumulativeLast","nameLocation":"1951:22:21","nodeType":"VariableDeclaration","scope":6412,"src":"1936:37:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1936:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[7268],"constant":false,"documentation":{"id":4249,"nodeType":"StructuredDocumentation","src":"1980:21:21","text":"@inheritdoc IPool"},"functionSelector":"32c0defd","id":4251,"mutability":"mutable","name":"index0","nameLocation":"2021:6:21","nodeType":"VariableDeclaration","scope":6412,"src":"2006:21:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2006:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[7274],"constant":false,"documentation":{"id":4252,"nodeType":"StructuredDocumentation","src":"2033:21:21","text":"@inheritdoc IPool"},"functionSelector":"bda39cad","id":4254,"mutability":"mutable","name":"index1","nameLocation":"2074:6:21","nodeType":"VariableDeclaration","scope":6412,"src":"2059:21:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2059:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[7282],"constant":false,"documentation":{"id":4255,"nodeType":"StructuredDocumentation","src":"2087:21:21","text":"@inheritdoc IPool"},"functionSelector":"9f767c88","id":4259,"mutability":"mutable","name":"supplyIndex0","nameLocation":"2148:12:21","nodeType":"VariableDeclaration","scope":6412,"src":"2113:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4258,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4256,"name":"address","nodeType":"ElementaryTypeName","src":"2121:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2113:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2132:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"baseFunctions":[7290],"constant":false,"documentation":{"id":4260,"nodeType":"StructuredDocumentation","src":"2166:21:21","text":"@inheritdoc IPool"},"functionSelector":"205aabf1","id":4264,"mutability":"mutable","name":"supplyIndex1","nameLocation":"2227:12:21","nodeType":"VariableDeclaration","scope":6412,"src":"2192:47:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4263,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4261,"name":"address","nodeType":"ElementaryTypeName","src":"2200:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2192:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2211:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"baseFunctions":[7298],"constant":false,"documentation":{"id":4265,"nodeType":"StructuredDocumentation","src":"2246:21:21","text":"@inheritdoc IPool"},"functionSelector":"4d5a9f8a","id":4269,"mutability":"mutable","name":"claimable0","nameLocation":"2307:10:21","nodeType":"VariableDeclaration","scope":6412,"src":"2272:45:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4268,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4266,"name":"address","nodeType":"ElementaryTypeName","src":"2280:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2272:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2291:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"baseFunctions":[7306],"constant":false,"documentation":{"id":4270,"nodeType":"StructuredDocumentation","src":"2323:21:21","text":"@inheritdoc IPool"},"functionSelector":"a1ac4d13","id":4274,"mutability":"mutable","name":"claimable1","nameLocation":"2384:10:21","nodeType":"VariableDeclaration","scope":6412,"src":"2349:45:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4273,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4271,"name":"address","nodeType":"ElementaryTypeName","src":"2357:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2349:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":4284,"nodeType":"Block","src":"2445:2:21","statements":[]},"id":4285,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2421:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2425:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":4279,"kind":"baseConstructorSpecifier","modifierName":{"id":4276,"name":"ERC20","nameLocations":["2415:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":761,"src":"2415:5:21"},"nodeType":"ModifierInvocation","src":"2415:13:21"},{"arguments":[{"hexValue":"","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2441:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":4282,"kind":"baseConstructorSpecifier","modifierName":{"id":4280,"name":"ERC20Permit","nameLocations":["2429:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":993,"src":"2429:11:21"},"nodeType":"ModifierInvocation","src":"2429:15:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4275,"nodeType":"ParameterList","parameters":[],"src":"2412:2:21"},"returnParameters":{"id":4283,"nodeType":"ParameterList","parameters":[],"src":"2445:0:21"},"scope":6412,"src":"2401:46:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7457],"body":{"id":4443,"nodeType":"Block","src":"2556:949:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"2570:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2589:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2581:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4296,"name":"address","nodeType":"ElementaryTypeName","src":"2581:7:21","typeDescriptions":{}}},"id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2581:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2570:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4304,"nodeType":"IfStatement","src":"2566:53:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4301,"name":"FactoryAlreadySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"2600:17:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2600:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4303,"nodeType":"RevertStatement","src":"2593:26:21"}},{"expression":{"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4305,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"2629:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4306,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2639:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2643:6:21","memberName":"sender","nodeType":"MemberAccess","src":"2639:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2629:20:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4309,"nodeType":"ExpressionStatement","src":"2629:20:21"},{"expression":{"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4310,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"2659:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4312,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"2681:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4311,"name":"IPoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"2668:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPoolFactory_$8143_$","typeString":"type(contract IPoolFactory)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPoolFactory_$8143","typeString":"contract IPoolFactory"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2690:5:21","memberName":"voter","nodeType":"MemberAccess","referencedDeclaration":8137,"src":"2668:27:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2659:38:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4317,"nodeType":"ExpressionStatement","src":"2659:38:21"},{"expression":{"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4318,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"2708:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4319,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"2716:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4320,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"2724:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4321,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"2707:24:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_bool_$","typeString":"tuple(address,address,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4322,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"2735:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4323,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"2744:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4324,"name":"_stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"2753:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2734:27:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_bool_$","typeString":"tuple(address,address,bool)"}},"src":"2707:54:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4327,"nodeType":"ExpressionStatement","src":"2707:54:21"},{"expression":{"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4328,"name":"poolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"2771:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4334,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"2803:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4335,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"2812:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"2790:12:21","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_PoolFees_$6496_$","typeString":"function (address,address) returns (contract PoolFees)"},"typeName":{"id":4332,"nodeType":"UserDefinedTypeName","pathNode":{"id":4331,"name":"PoolFees","nameLocations":["2794:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":6496,"src":"2794:8:21"},"referencedDeclaration":6496,"src":"2794:8:21","typeDescriptions":{"typeIdentifier":"t_contract$_PoolFees_$6496","typeString":"contract PoolFees"}}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PoolFees_$6496","typeString":"contract PoolFees"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PoolFees_$6496","typeString":"contract PoolFees"}],"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2782:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4329,"name":"address","nodeType":"ElementaryTypeName","src":"2782:7:21","typeDescriptions":{}}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2782:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2771:50:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4339,"nodeType":"ExpressionStatement","src":"2771:50:21"},{"assignments":[4341],"declarations":[{"constant":false,"id":4341,"mutability":"mutable","name":"symbol0","nameLocation":"2845:7:21","nodeType":"VariableDeclaration","scope":4443,"src":"2831:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4340,"name":"string","nodeType":"ElementaryTypeName","src":"2831:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4347,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4343,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"2861:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4342,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"2855:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$761_$","typeString":"type(contract ERC20)"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$761","typeString":"contract ERC20"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:21","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":316,"src":"2855:21:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2831:47:21"},{"assignments":[4349],"declarations":[{"constant":false,"id":4349,"mutability":"mutable","name":"symbol1","nameLocation":"2902:7:21","nodeType":"VariableDeclaration","scope":4443,"src":"2888:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4348,"name":"string","nodeType":"ElementaryTypeName","src":"2888:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4355,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4351,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"2918:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4350,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"2912:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$761_$","typeString":"type(contract ERC20)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$761","typeString":"contract ERC20"}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2927:6:21","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":316,"src":"2912:21:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2888:47:21"},{"condition":{"id":4356,"name":"_stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"2949:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4410,"nodeType":"Block","src":"3145:183:21","statements":[{"expression":{"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4384,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"3159:5:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"566f6c6174696c65563220414d4d202d20","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3191:19:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_40700817e93d8e2ac0d129f7c7691145ec94d01a93d5fb515c8b55bd40451fa8","typeString":"literal_string \"VolatileV2 AMM - \""},"value":"VolatileV2 AMM - "},{"id":4390,"name":"symbol0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"3212:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2f","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3221:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},"value":"/"},{"id":4392,"name":"symbol1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"3226:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_40700817e93d8e2ac0d129f7c7691145ec94d01a93d5fb515c8b55bd40451fa8","typeString":"literal_string \"VolatileV2 AMM - \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4387,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3174:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3178:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"3174:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3174:60:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3167:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4385,"name":"string","nodeType":"ElementaryTypeName","src":"3167:6:21","typeDescriptions":{}}},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3159:76:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4396,"nodeType":"ExpressionStatement","src":"3159:76:21"},{"expression":{"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4397,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"3249:7:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"76414d4d56322d","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3283:9:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e8194f8ff728525a7d133fbc0d5a6765226976184ff7749cde225b2a97a463b","typeString":"literal_string \"vAMMV2-\""},"value":"vAMMV2-"},{"id":4403,"name":"symbol0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"3294:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2f","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3303:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},"value":"/"},{"id":4405,"name":"symbol1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"3308:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e8194f8ff728525a7d133fbc0d5a6765226976184ff7749cde225b2a97a463b","typeString":"literal_string \"vAMMV2-\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4400,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3266:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3270:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"3266:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3266:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3259:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4398,"name":"string","nodeType":"ElementaryTypeName","src":"3259:6:21","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3259:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3249:68:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4409,"nodeType":"ExpressionStatement","src":"3249:68:21"}]},"id":4411,"nodeType":"IfStatement","src":"2945:383:21","trueBody":{"id":4383,"nodeType":"Block","src":"2958:181:21","statements":[{"expression":{"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4357,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"2972:5:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"537461626c65563220414d4d202d20","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3004:17:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c4ae4d97054a721226fa48a98920736fafceecf362edc85b768c16b91c868984","typeString":"literal_string \"StableV2 AMM - \""},"value":"StableV2 AMM - "},{"id":4363,"name":"symbol0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"3023:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2f","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3032:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},"value":"/"},{"id":4365,"name":"symbol1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"3037:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c4ae4d97054a721226fa48a98920736fafceecf362edc85b768c16b91c868984","typeString":"literal_string \"StableV2 AMM - \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4360,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2987:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2991:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"2987:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2987:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2980:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4358,"name":"string","nodeType":"ElementaryTypeName","src":"2980:6:21","typeDescriptions":{}}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2972:74:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4369,"nodeType":"ExpressionStatement","src":"2972:74:21"},{"expression":{"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4370,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"3060:7:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"73414d4d56322d","id":4375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3094:9:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e7089d415379bc9c49ff8c8468d82d9a43a503900ad805cfe4d4eb9755a4117","typeString":"literal_string \"sAMMV2-\""},"value":"sAMMV2-"},{"id":4376,"name":"symbol0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"3105:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2f","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3114:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},"value":"/"},{"id":4378,"name":"symbol1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"3119:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e7089d415379bc9c49ff8c8468d82d9a43a503900ad805cfe4d4eb9755a4117","typeString":"literal_string \"sAMMV2-\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4373,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3077:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3081:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"3077:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3077:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3070:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4371,"name":"string","nodeType":"ElementaryTypeName","src":"3070:6:21","typeDescriptions":{}}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3060:68:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4382,"nodeType":"ExpressionStatement","src":"3060:68:21"}]}},{"expression":{"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4412,"name":"decimals0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"3338:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3350:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4415,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"3362:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4414,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"3356:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$761_$","typeString":"type(contract ERC20)"}},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$761","typeString":"contract ERC20"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3371:8:21","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":325,"src":"3356:23:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3350:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3338:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4421,"nodeType":"ExpressionStatement","src":"3338:43:21"},{"expression":{"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4422,"name":"decimals1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"3391:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3403:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4425,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"3415:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4424,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"3409:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$761_$","typeString":"type(contract ERC20)"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3409:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$761","typeString":"contract ERC20"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3424:8:21","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":325,"src":"3409:23:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3409:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3403:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3391:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4431,"nodeType":"ExpressionStatement","src":"3391:43:21"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4436,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3475:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3481:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"3475:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3492:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3495:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4435,"name":"Observation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"3463:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Observation_$7168_storage_ptr_$","typeString":"type(struct IPool.Observation storage pointer)"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3463:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_memory_ptr","typeString":"struct IPool.Observation memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Observation_$7168_memory_ptr","typeString":"struct IPool.Observation memory"}],"expression":{"id":4432,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"3445:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation storage ref[] storage ref"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3458:4:21","memberName":"push","nodeType":"MemberAccess","src":"3445:17:21","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Observation_$7168_storage_$dyn_storage_ptr_$_t_struct$_Observation_$7168_storage_$returns$__$attached_to$_t_array$_t_struct$_Observation_$7168_storage_$dyn_storage_ptr_$","typeString":"function (struct IPool.Observation storage ref[] storage pointer,struct IPool.Observation storage ref)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3445:53:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4442,"nodeType":"ExpressionStatement","src":"3445:53:21"}]},"documentation":{"id":4286,"nodeType":"StructuredDocumentation","src":"2453:21:21","text":"@inheritdoc IPool"},"functionSelector":"e4bbb5a8","id":4444,"implemented":true,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"2488:10:21","nodeType":"FunctionDefinition","parameters":{"id":4293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4288,"mutability":"mutable","name":"_token0","nameLocation":"2507:7:21","nodeType":"VariableDeclaration","scope":4444,"src":"2499:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4287,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4290,"mutability":"mutable","name":"_token1","nameLocation":"2524:7:21","nodeType":"VariableDeclaration","scope":4444,"src":"2516:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4289,"name":"address","nodeType":"ElementaryTypeName","src":"2516:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4292,"mutability":"mutable","name":"_stable","nameLocation":"2538:7:21","nodeType":"VariableDeclaration","scope":4444,"src":"2533:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4291,"name":"bool","nodeType":"ElementaryTypeName","src":"2533:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2498:48:21"},"returnParameters":{"id":4294,"nodeType":"ParameterList","parameters":[],"src":"2556:0:21"},"scope":6412,"src":"2479:1026:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7312],"body":{"id":4466,"nodeType":"Block","src":"3587:122:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4450,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3601:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3605:6:21","memberName":"sender","nodeType":"MemberAccess","src":"3601:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4453,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"3622:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4452,"name":"IVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"3615:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVoter_$7954_$","typeString":"type(contract IVoter)"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3615:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVoter_$7954","typeString":"contract IVoter"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3630:16:21","memberName":"emergencyCouncil","nodeType":"MemberAccess","referencedDeclaration":7654,"src":"3615:31:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3615:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3601:47:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4461,"nodeType":"IfStatement","src":"3597:81:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4458,"name":"NotEmergencyCouncil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"3657:19:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4460,"nodeType":"RevertStatement","src":"3650:28:21"}},{"expression":{"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4462,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"3688:5:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4463,"name":"__name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"3696:6:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"3688:14:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4465,"nodeType":"ExpressionStatement","src":"3688:14:21"}]},"documentation":{"id":4445,"nodeType":"StructuredDocumentation","src":"3511:21:21","text":"@inheritdoc IPool"},"functionSelector":"c47f0027","id":4467,"implemented":true,"kind":"function","modifiers":[],"name":"setName","nameLocation":"3546:7:21","nodeType":"FunctionDefinition","parameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"__name","nameLocation":"3570:6:21","nodeType":"VariableDeclaration","scope":4467,"src":"3554:22:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":4446,"name":"string","nodeType":"ElementaryTypeName","src":"3554:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3553:24:21"},"returnParameters":{"id":4449,"nodeType":"ParameterList","parameters":[],"src":"3587:0:21"},"scope":6412,"src":"3537:172:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7318],"body":{"id":4489,"nodeType":"Block","src":"3795:126:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4473,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3809:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3813:6:21","memberName":"sender","nodeType":"MemberAccess","src":"3809:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4476,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4196,"src":"3830:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4475,"name":"IVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"3823:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVoter_$7954_$","typeString":"type(contract IVoter)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVoter_$7954","typeString":"contract IVoter"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3838:16:21","memberName":"emergencyCouncil","nodeType":"MemberAccess","referencedDeclaration":7654,"src":"3823:31:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3809:47:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4484,"nodeType":"IfStatement","src":"3805:81:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4481,"name":"NotEmergencyCouncil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"3865:19:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3865:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4483,"nodeType":"RevertStatement","src":"3858:28:21"}},{"expression":{"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4485,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"3896:7:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4486,"name":"__symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"3906:8:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"3896:18:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4488,"nodeType":"ExpressionStatement","src":"3896:18:21"}]},"documentation":{"id":4468,"nodeType":"StructuredDocumentation","src":"3715:21:21","text":"@inheritdoc IPool"},"functionSelector":"b84c8246","id":4490,"implemented":true,"kind":"function","modifiers":[],"name":"setSymbol","nameLocation":"3750:9:21","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"__symbol","nameLocation":"3776:8:21","nodeType":"VariableDeclaration","scope":4490,"src":"3760:24:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":4469,"name":"string","nodeType":"ElementaryTypeName","src":"3760:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3759:26:21"},"returnParameters":{"id":4472,"nodeType":"ParameterList","parameters":[],"src":"3795:0:21"},"scope":6412,"src":"3741:180:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7324],"body":{"id":4499,"nodeType":"Block","src":"4014:43:21","statements":[{"expression":{"expression":{"id":4496,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"4031:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation storage ref[] storage ref"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4044:6:21","memberName":"length","nodeType":"MemberAccess","src":"4031:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4495,"id":4498,"nodeType":"Return","src":"4024:26:21"}]},"documentation":{"id":4491,"nodeType":"StructuredDocumentation","src":"3927:21:21","text":"@inheritdoc IPool"},"functionSelector":"ebeb31db","id":4500,"implemented":true,"kind":"function","modifiers":[],"name":"observationLength","nameLocation":"3962:17:21","nodeType":"FunctionDefinition","parameters":{"id":4492,"nodeType":"ParameterList","parameters":[],"src":"3979:2:21"},"returnParameters":{"id":4495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4500,"src":"4005:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4493,"name":"uint256","nodeType":"ElementaryTypeName","src":"4005:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4004:9:21"},"scope":6412,"src":"3953:104:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7331],"body":{"id":4514,"nodeType":"Block","src":"4157:61:21","statements":[{"expression":{"baseExpression":{"id":4507,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"4174:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation storage ref[] storage ref"}},"id":4512,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4508,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"4187:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation storage ref[] storage ref"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4200:6:21","memberName":"length","nodeType":"MemberAccess","src":"4187:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4209:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4187:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4174:37:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_storage","typeString":"struct IPool.Observation storage ref"}},"functionReturnParameters":4506,"id":4513,"nodeType":"Return","src":"4167:44:21"}]},"documentation":{"id":4501,"nodeType":"StructuredDocumentation","src":"4063:21:21","text":"@inheritdoc IPool"},"functionSelector":"8a7b8cf2","id":4515,"implemented":true,"kind":"function","modifiers":[],"name":"lastObservation","nameLocation":"4098:15:21","nodeType":"FunctionDefinition","parameters":{"id":4502,"nodeType":"ParameterList","parameters":[],"src":"4113:2:21"},"returnParameters":{"id":4506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4515,"src":"4137:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_memory_ptr","typeString":"struct IPool.Observation"},"typeName":{"id":4504,"nodeType":"UserDefinedTypeName","pathNode":{"id":4503,"name":"Observation","nameLocations":["4137:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":7168,"src":"4137:11:21"},"referencedDeclaration":7168,"src":"4137:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_storage_ptr","typeString":"struct IPool.Observation"}},"visibility":"internal"}],"src":"4136:20:21"},"scope":6412,"src":"4089:129:21","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[7186],"body":{"id":4542,"nodeType":"Block","src":"4406:90:21","statements":[{"expression":{"components":[{"id":4533,"name":"decimals0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"4424:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4534,"name":"decimals1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"4435:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4535,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"4446:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4536,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"4456:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4537,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"4466:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4538,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"4474:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4539,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"4482:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4423:66:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_address_$_t_address_$","typeString":"tuple(uint256,uint256,uint256,uint256,bool,address,address)"}},"functionReturnParameters":4532,"id":4541,"nodeType":"Return","src":"4416:73:21"}]},"documentation":{"id":4516,"nodeType":"StructuredDocumentation","src":"4224:21:21","text":"@inheritdoc IPool"},"functionSelector":"392f37e9","id":4543,"implemented":true,"kind":"function","modifiers":[],"name":"metadata","nameLocation":"4259:8:21","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[],"src":"4267:2:21"},"returnParameters":{"id":4532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"dec0","nameLocation":"4325:4:21","nodeType":"VariableDeclaration","scope":4543,"src":"4317:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4317:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4521,"mutability":"mutable","name":"dec1","nameLocation":"4339:4:21","nodeType":"VariableDeclaration","scope":4543,"src":"4331:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4520,"name":"uint256","nodeType":"ElementaryTypeName","src":"4331:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4523,"mutability":"mutable","name":"r0","nameLocation":"4353:2:21","nodeType":"VariableDeclaration","scope":4543,"src":"4345:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4522,"name":"uint256","nodeType":"ElementaryTypeName","src":"4345:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4525,"mutability":"mutable","name":"r1","nameLocation":"4365:2:21","nodeType":"VariableDeclaration","scope":4543,"src":"4357:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"4357:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4527,"mutability":"mutable","name":"st","nameLocation":"4374:2:21","nodeType":"VariableDeclaration","scope":4543,"src":"4369:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4526,"name":"bool","nodeType":"ElementaryTypeName","src":"4369:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4529,"mutability":"mutable","name":"t0","nameLocation":"4386:2:21","nodeType":"VariableDeclaration","scope":4543,"src":"4378:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4528,"name":"address","nodeType":"ElementaryTypeName","src":"4378:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4531,"mutability":"mutable","name":"t1","nameLocation":"4398:2:21","nodeType":"VariableDeclaration","scope":4543,"src":"4390:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4530,"name":"address","nodeType":"ElementaryTypeName","src":"4390:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4316:85:21"},"scope":6412,"src":"4250:246:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7202],"body":{"id":4555,"nodeType":"Block","src":"4587:40:21","statements":[{"expression":{"components":[{"id":4551,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"4605:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4552,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"4613:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4604:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"functionReturnParameters":4550,"id":4554,"nodeType":"Return","src":"4597:23:21"}]},"documentation":{"id":4544,"nodeType":"StructuredDocumentation","src":"4502:21:21","text":"@inheritdoc IPool"},"functionSelector":"9d63848a","id":4556,"implemented":true,"kind":"function","modifiers":[],"name":"tokens","nameLocation":"4537:6:21","nodeType":"FunctionDefinition","parameters":{"id":4545,"nodeType":"ParameterList","parameters":[],"src":"4543:2:21"},"returnParameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4556,"src":"4569:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4546,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4556,"src":"4578:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4548,"name":"address","nodeType":"ElementaryTypeName","src":"4578:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4568:18:21"},"scope":6412,"src":"4528:99:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7194],"body":{"id":4625,"nodeType":"Block","src":"4734:408:21","statements":[{"expression":{"arguments":[{"expression":{"id":4565,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4755:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4759:6:21","memberName":"sender","nodeType":"MemberAccess","src":"4755:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4564,"name":"_updateFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"4744:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4744:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4568,"nodeType":"ExpressionStatement","src":"4744:22:21"},{"expression":{"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4569,"name":"claimed0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"4777:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4570,"name":"claimable0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"4788:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4573,"indexExpression":{"expression":{"id":4571,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4799:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4803:6:21","memberName":"sender","nodeType":"MemberAccess","src":"4799:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4788:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4777:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4575,"nodeType":"ExpressionStatement","src":"4777:33:21"},{"expression":{"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4576,"name":"claimed1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"4820:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4577,"name":"claimable1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"4831:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4580,"indexExpression":{"expression":{"id":4578,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4842:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4846:6:21","memberName":"sender","nodeType":"MemberAccess","src":"4842:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4831:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4820:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4582,"nodeType":"ExpressionStatement","src":"4820:33:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4583,"name":"claimed0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"4868:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4879:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4868:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"claimed1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"4884:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4895:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4884:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4868:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4624,"nodeType":"IfStatement","src":"4864:272:21","trueBody":{"id":4623,"nodeType":"Block","src":"4898:238:21","statements":[{"expression":{"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4590,"name":"claimable0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"4912:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4593,"indexExpression":{"expression":{"id":4591,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4923:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4927:6:21","memberName":"sender","nodeType":"MemberAccess","src":"4923:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4912:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4937:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4912:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4596,"nodeType":"ExpressionStatement","src":"4912:26:21"},{"expression":{"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4597,"name":"claimable1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"4952:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4600,"indexExpression":{"expression":{"id":4598,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4963:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4967:6:21","memberName":"sender","nodeType":"MemberAccess","src":"4963:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4952:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4977:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4952:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4603,"nodeType":"ExpressionStatement","src":"4952:26:21"},{"expression":{"arguments":[{"expression":{"id":4608,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5025:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5029:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5025:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4610,"name":"claimed0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"5037:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4611,"name":"claimed1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"5047:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4605,"name":"poolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"5002:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4604,"name":"PoolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"4993:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PoolFees_$6496_$","typeString":"type(contract PoolFees)"}},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4993:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PoolFees_$6496","typeString":"contract PoolFees"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5012:12:21","memberName":"claimFeesFor","nodeType":"MemberAccess","referencedDeclaration":6495,"src":"4993:31:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) external"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4993:63:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4613,"nodeType":"ExpressionStatement","src":"4993:63:21"},{"eventCall":{"arguments":[{"expression":{"id":4615,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5082:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5086:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5082:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4617,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5094:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5098:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5094:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4619,"name":"claimed0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"5106:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4620,"name":"claimed1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"5116:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4614,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"5076:5:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5076:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4622,"nodeType":"EmitStatement","src":"5071:54:21"}]}}]},"documentation":{"id":4557,"nodeType":"StructuredDocumentation","src":"4633:21:21","text":"@inheritdoc IPool"},"functionSelector":"d294f093","id":4626,"implemented":true,"kind":"function","modifiers":[],"name":"claimFees","nameLocation":"4668:9:21","nodeType":"FunctionDefinition","parameters":{"id":4558,"nodeType":"ParameterList","parameters":[],"src":"4677:2:21"},"returnParameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"claimed0","nameLocation":"4706:8:21","nodeType":"VariableDeclaration","scope":4626,"src":"4698:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"4698:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4562,"mutability":"mutable","name":"claimed1","nameLocation":"4724:8:21","nodeType":"VariableDeclaration","scope":4626,"src":"4716:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"4716:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4697:36:21"},"scope":6412,"src":"4659:483:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4671,"nodeType":"Block","src":"5226:395:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4632,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"5294:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5304:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5294:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4636,"nodeType":"IfStatement","src":"5290:24:21","trueBody":{"functionReturnParameters":4631,"id":4635,"nodeType":"Return","src":"5307:7:21"}},{"expression":{"arguments":[{"id":4641,"name":"poolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"5351:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4642,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"5361:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4638,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"5330:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4637,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5323:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5323:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5338:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"5323:27:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$839_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5323:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4644,"nodeType":"ExpressionStatement","src":"5323:45:21"},{"assignments":[4646],"declarations":[{"constant":false,"id":4646,"mutability":"mutable","name":"_ratio","nameLocation":"5423:6:21","nodeType":"VariableDeclaration","scope":4671,"src":"5415:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4645,"name":"uint256","nodeType":"ElementaryTypeName","src":"5415:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4654,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4647,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"5433:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5442:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"5433:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5432:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4651,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"5450:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5450:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5432:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5415:48:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"_ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"5520:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5529:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5520:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4663,"nodeType":"IfStatement","src":"5516:57:21","trueBody":{"id":4662,"nodeType":"Block","src":"5532:41:21","statements":[{"expression":{"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4658,"name":"index0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"5546:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4659,"name":"_ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"5556:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5546:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4661,"nodeType":"ExpressionStatement","src":"5546:16:21"}]}},{"eventCall":{"arguments":[{"expression":{"id":4665,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5592:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5592:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4667,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"5604:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5612:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4664,"name":"Fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"5587:4:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5587:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4670,"nodeType":"EmitStatement","src":"5582:32:21"}]},"documentation":{"id":4627,"nodeType":"StructuredDocumentation","src":"5148:30:21","text":"@dev Accrue fees on token0"},"id":4672,"implemented":true,"kind":"function","modifiers":[],"name":"_update0","nameLocation":"5192:8:21","nodeType":"FunctionDefinition","parameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4629,"mutability":"mutable","name":"amount","nameLocation":"5209:6:21","nodeType":"VariableDeclaration","scope":4672,"src":"5201:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"5201:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5200:16:21"},"returnParameters":{"id":4631,"nodeType":"ParameterList","parameters":[],"src":"5226:0:21"},"scope":6412,"src":"5183:438:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4717,"nodeType":"Block","src":"5705:315:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4678,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"5773:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5783:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5773:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4682,"nodeType":"IfStatement","src":"5769:24:21","trueBody":{"functionReturnParameters":4677,"id":4681,"nodeType":"Return","src":"5786:7:21"}},{"expression":{"arguments":[{"id":4687,"name":"poolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"5830:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"5840:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4684,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"5809:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4683,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5802:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5802:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5817:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"5802:27:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$839_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5802:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4690,"nodeType":"ExpressionStatement","src":"5802:45:21"},{"assignments":[4692],"declarations":[{"constant":false,"id":4692,"mutability":"mutable","name":"_ratio","nameLocation":"5865:6:21","nodeType":"VariableDeclaration","scope":4717,"src":"5857:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"5857:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4700,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4693,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"5875:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5884:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"5875:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5874:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4697,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"5892:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5892:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5874:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5857:48:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"_ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"5919:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5928:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5919:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4709,"nodeType":"IfStatement","src":"5915:57:21","trueBody":{"id":4708,"nodeType":"Block","src":"5931:41:21","statements":[{"expression":{"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4704,"name":"index1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"5945:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4705,"name":"_ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"5955:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5945:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4707,"nodeType":"ExpressionStatement","src":"5945:16:21"}]}},{"eventCall":{"arguments":[{"expression":{"id":4711,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5991:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5995:6:21","memberName":"sender","nodeType":"MemberAccess","src":"5991:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6003:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4714,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"6006:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4710,"name":"Fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"5986:4:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5986:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4716,"nodeType":"EmitStatement","src":"5981:32:21"}]},"documentation":{"id":4673,"nodeType":"StructuredDocumentation","src":"5627:30:21","text":"@dev Accrue fees on token1"},"id":4718,"implemented":true,"kind":"function","modifiers":[],"name":"_update1","nameLocation":"5671:8:21","nodeType":"FunctionDefinition","parameters":{"id":4676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"amount","nameLocation":"5688:6:21","nodeType":"VariableDeclaration","scope":4718,"src":"5680:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5680:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5679:16:21"},"returnParameters":{"id":4677,"nodeType":"ParameterList","parameters":[],"src":"5705:0:21"},"scope":6412,"src":"5662:358:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4832,"nodeType":"Block","src":"6278:1246:21","statements":[{"assignments":[4725],"declarations":[{"constant":false,"id":4725,"mutability":"mutable","name":"_supplied","nameLocation":"6296:9:21","nodeType":"VariableDeclaration","scope":4832,"src":"6288:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4724,"name":"uint256","nodeType":"ElementaryTypeName","src":"6288:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4729,"initialValue":{"arguments":[{"id":4727,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"6318:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4726,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"6308:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6308:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6288:40:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4730,"name":"_supplied","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"6375:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6387:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6375:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4830,"nodeType":"Block","src":"7366:152:21","statements":[{"expression":{"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4818,"name":"supplyIndex0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"7380:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4820,"indexExpression":{"id":4819,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"7393:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7380:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4821,"name":"index0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"7406:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7380:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4823,"nodeType":"ExpressionStatement","src":"7380:32:21"},{"expression":{"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4824,"name":"supplyIndex1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"7475:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4826,"indexExpression":{"id":4825,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"7488:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7475:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4827,"name":"index1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"7501:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7475:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4829,"nodeType":"ExpressionStatement","src":"7475:32:21"}]},"id":4831,"nodeType":"IfStatement","src":"6371:1147:21","trueBody":{"id":4817,"nodeType":"Block","src":"6390:970:21","statements":[{"assignments":[4734],"declarations":[{"constant":false,"id":4734,"mutability":"mutable","name":"_supplyIndex0","nameLocation":"6412:13:21","nodeType":"VariableDeclaration","scope":4817,"src":"6404:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"6404:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4738,"initialValue":{"baseExpression":{"id":4735,"name":"supplyIndex0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"6428:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4737,"indexExpression":{"id":4736,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"6441:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6428:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6404:47:21"},{"assignments":[4740],"declarations":[{"constant":false,"id":4740,"mutability":"mutable","name":"_supplyIndex1","nameLocation":"6515:13:21","nodeType":"VariableDeclaration","scope":4817,"src":"6507:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4739,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4744,"initialValue":{"baseExpression":{"id":4741,"name":"supplyIndex1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"6531:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4743,"indexExpression":{"id":4742,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"6544:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6531:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6507:47:21"},{"assignments":[4746],"declarations":[{"constant":false,"id":4746,"mutability":"mutable","name":"_index0","nameLocation":"6576:7:21","nodeType":"VariableDeclaration","scope":4817,"src":"6568:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4745,"name":"uint256","nodeType":"ElementaryTypeName","src":"6568:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4748,"initialValue":{"id":4747,"name":"index0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"6586:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6568:24:21"},{"assignments":[4750],"declarations":[{"constant":false,"id":4750,"mutability":"mutable","name":"_index1","nameLocation":"6656:7:21","nodeType":"VariableDeclaration","scope":4817,"src":"6648:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4749,"name":"uint256","nodeType":"ElementaryTypeName","src":"6648:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4752,"initialValue":{"id":4751,"name":"index1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"6666:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6648:24:21"},{"expression":{"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4753,"name":"supplyIndex0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"6686:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4755,"indexExpression":{"id":4754,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"6699:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6686:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4756,"name":"_index0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"6712:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6686:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4758,"nodeType":"ExpressionStatement","src":"6686:33:21"},{"expression":{"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4759,"name":"supplyIndex1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"6784:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4761,"indexExpression":{"id":4760,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"6797:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6784:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4762,"name":"_index1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"6810:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6784:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4764,"nodeType":"ExpressionStatement","src":"6784:33:21"},{"assignments":[4766],"declarations":[{"constant":false,"id":4766,"mutability":"mutable","name":"_delta0","nameLocation":"6839:7:21","nodeType":"VariableDeclaration","scope":4817,"src":"6831:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4765,"name":"uint256","nodeType":"ElementaryTypeName","src":"6831:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4770,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4767,"name":"_index0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"6849:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4768,"name":"_supplyIndex0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"6859:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6849:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6831:41:21"},{"assignments":[4772],"declarations":[{"constant":false,"id":4772,"mutability":"mutable","name":"_delta1","nameLocation":"6952:7:21","nodeType":"VariableDeclaration","scope":4817,"src":"6944:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4771,"name":"uint256","nodeType":"ElementaryTypeName","src":"6944:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4776,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4773,"name":"_index1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"6962:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4774,"name":"_supplyIndex1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"6972:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6962:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6944:41:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4777,"name":"_delta0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"7003:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7013:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7003:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4796,"nodeType":"IfStatement","src":"6999:194:21","trueBody":{"id":4795,"nodeType":"Block","src":"7016:177:21","statements":[{"assignments":[4781],"declarations":[{"constant":false,"id":4781,"mutability":"mutable","name":"_share","nameLocation":"7042:6:21","nodeType":"VariableDeclaration","scope":4795,"src":"7034:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"7034:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4788,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4782,"name":"_supplied","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"7052:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4783,"name":"_delta0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"7064:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7052:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4785,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7051:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7075:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7051:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7034:45:21"},{"expression":{"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4789,"name":"claimable0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"7147:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4791,"indexExpression":{"id":4790,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"7158:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7147:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4792,"name":"_share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"7172:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7147:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4794,"nodeType":"ExpressionStatement","src":"7147:31:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4797,"name":"_delta1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"7210:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7220:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7210:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4816,"nodeType":"IfStatement","src":"7206:144:21","trueBody":{"id":4815,"nodeType":"Block","src":"7223:127:21","statements":[{"assignments":[4801],"declarations":[{"constant":false,"id":4801,"mutability":"mutable","name":"_share","nameLocation":"7249:6:21","nodeType":"VariableDeclaration","scope":4815,"src":"7241:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4800,"name":"uint256","nodeType":"ElementaryTypeName","src":"7241:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4808,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4802,"name":"_supplied","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"7259:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4803,"name":"_delta1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4772,"src":"7271:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7259:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7258:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7282:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7258:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7241:45:21"},{"expression":{"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4809,"name":"claimable1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"7304:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4811,"indexExpression":{"id":4810,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"7315:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7304:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4812,"name":"_share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"7329:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7304:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4814,"nodeType":"ExpressionStatement","src":"7304:31:21"}]}}]}}]},"documentation":{"id":4719,"nodeType":"StructuredDocumentation","src":"6026:199:21","text":"@dev This function MUST be called on any balance changes, otherwise can be used to infinitely claim fees\n      Fees are segregated from core funds, so fees can never put liquidity at risk."},"id":4833,"implemented":true,"kind":"function","modifiers":[],"name":"_updateFor","nameLocation":"6239:10:21","nodeType":"FunctionDefinition","parameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"recipient","nameLocation":"6258:9:21","nodeType":"VariableDeclaration","scope":4833,"src":"6250:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4720,"name":"address","nodeType":"ElementaryTypeName","src":"6250:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6249:19:21"},"returnParameters":{"id":4723,"nodeType":"ParameterList","parameters":[],"src":"6278:0:21"},"scope":6412,"src":"6230:1294:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[7427],"body":{"id":4855,"nodeType":"Block","src":"7667:117:21","statements":[{"expression":{"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4843,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4837,"src":"7677:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4844,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"7689:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7677:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4846,"nodeType":"ExpressionStatement","src":"7677:20:21"},{"expression":{"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4847,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"7707:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4848,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"7719:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7707:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4850,"nodeType":"ExpressionStatement","src":"7707:20:21"},{"expression":{"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4851,"name":"_blockTimestampLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"7737:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4852,"name":"blockTimestampLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"7759:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7737:40:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4854,"nodeType":"ExpressionStatement","src":"7737:40:21"}]},"documentation":{"id":4834,"nodeType":"StructuredDocumentation","src":"7530:21:21","text":"@inheritdoc IPool"},"functionSelector":"0902f1ac","id":4856,"implemented":true,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"7565:11:21","nodeType":"FunctionDefinition","parameters":{"id":4835,"nodeType":"ParameterList","parameters":[],"src":"7576:2:21"},"returnParameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4837,"mutability":"mutable","name":"_reserve0","nameLocation":"7608:9:21","nodeType":"VariableDeclaration","scope":4856,"src":"7600:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4836,"name":"uint256","nodeType":"ElementaryTypeName","src":"7600:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4839,"mutability":"mutable","name":"_reserve1","nameLocation":"7627:9:21","nodeType":"VariableDeclaration","scope":4856,"src":"7619:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"7619:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4841,"mutability":"mutable","name":"_blockTimestampLast","nameLocation":"7646:19:21","nodeType":"VariableDeclaration","scope":4856,"src":"7638:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4840,"name":"uint256","nodeType":"ElementaryTypeName","src":"7638:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7599:67:21"},"scope":6412,"src":"7556:228:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4949,"nodeType":"Block","src":"7972:843:21","statements":[{"assignments":[4869],"declarations":[{"constant":false,"id":4869,"mutability":"mutable","name":"blockTimestamp","nameLocation":"7990:14:21","nodeType":"VariableDeclaration","scope":4949,"src":"7982:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"7982:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4872,"initialValue":{"expression":{"id":4870,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8007:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8013:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"8007:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7982:40:21"},{"assignments":[4874],"declarations":[{"constant":false,"id":4874,"mutability":"mutable","name":"timeElapsed","nameLocation":"8040:11:21","nodeType":"VariableDeclaration","scope":4949,"src":"8032:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4873,"name":"uint256","nodeType":"ElementaryTypeName","src":"8032:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4878,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4875,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"8054:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4876,"name":"blockTimestampLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"8071:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8054:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8032:57:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4879,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"8103:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8117:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8103:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4882,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"8122:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8135:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8122:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8103:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4886,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"8140:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8153:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8140:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8103:51:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4903,"nodeType":"IfStatement","src":"8099:194:21","trueBody":{"id":4902,"nodeType":"Block","src":"8156:137:21","statements":[{"expression":{"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4890,"name":"reserve0CumulativeLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"8170:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4891,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"8196:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4892,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"8208:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8196:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8170:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4895,"nodeType":"ExpressionStatement","src":"8170:49:21"},{"expression":{"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4896,"name":"reserve1CumulativeLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8233:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4897,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"8259:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4898,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"8271:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8259:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8233:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4901,"nodeType":"ExpressionStatement","src":"8233:49:21"}]}},{"assignments":[4906],"declarations":[{"constant":false,"id":4906,"mutability":"mutable","name":"_point","nameLocation":"8322:6:21","nodeType":"VariableDeclaration","scope":4949,"src":"8303:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_memory_ptr","typeString":"struct IPool.Observation"},"typeName":{"id":4905,"nodeType":"UserDefinedTypeName","pathNode":{"id":4904,"name":"Observation","nameLocations":["8303:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":7168,"src":"8303:11:21"},"referencedDeclaration":7168,"src":"8303:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_storage_ptr","typeString":"struct IPool.Observation"}},"visibility":"internal"}],"id":4909,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4907,"name":"lastObservation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4515,"src":"8331:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_struct$_Observation_$7168_memory_ptr_$","typeString":"function () view returns (struct IPool.Observation memory)"}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8331:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_memory_ptr","typeString":"struct IPool.Observation memory"}},"nodeType":"VariableDeclarationStatement","src":"8303:45:21"},{"expression":{"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4910,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"8358:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4911,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"8372:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4912,"name":"_point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4906,"src":"8389:6:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_memory_ptr","typeString":"struct IPool.Observation memory"}},"id":4913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8396:9:21","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":7163,"src":"8389:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8372:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8358:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4916,"nodeType":"ExpressionStatement","src":"8358:47:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4917,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"8522:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4918,"name":"periodSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"8536:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8522:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4931,"nodeType":"IfStatement","src":"8518:149:21","trueBody":{"id":4930,"nodeType":"Block","src":"8548:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":4924,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"8592:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4925,"name":"reserve0CumulativeLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"8608:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4926,"name":"reserve1CumulativeLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8632:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4923,"name":"Observation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"8580:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Observation_$7168_storage_ptr_$","typeString":"type(struct IPool.Observation storage pointer)"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8580:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_memory_ptr","typeString":"struct IPool.Observation memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Observation_$7168_memory_ptr","typeString":"struct IPool.Observation memory"}],"expression":{"id":4920,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"8562:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation storage ref[] storage ref"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8575:4:21","memberName":"push","nodeType":"MemberAccess","src":"8562:17:21","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Observation_$7168_storage_$dyn_storage_ptr_$_t_struct$_Observation_$7168_storage_$returns$__$attached_to$_t_array$_t_struct$_Observation_$7168_storage_$dyn_storage_ptr_$","typeString":"function (struct IPool.Observation storage ref[] storage pointer,struct IPool.Observation storage ref)"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8562:94:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4929,"nodeType":"ExpressionStatement","src":"8562:94:21"}]}},{"expression":{"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4932,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8676:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4933,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"8687:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8676:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4935,"nodeType":"ExpressionStatement","src":"8676:19:21"},{"expression":{"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4936,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"8705:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4937,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"8716:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8705:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4939,"nodeType":"ExpressionStatement","src":"8705:19:21"},{"expression":{"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4940,"name":"blockTimestampLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"8734:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4941,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"8755:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8734:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4943,"nodeType":"ExpressionStatement","src":"8734:35:21"},{"eventCall":{"arguments":[{"id":4945,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"8789:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4946,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"8799:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4944,"name":"Sync","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"8784:4:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8784:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4948,"nodeType":"EmitStatement","src":"8779:29:21"}]},"documentation":{"id":4857,"nodeType":"StructuredDocumentation","src":"7790:77:21","text":"@dev update reserves and, on the first call per block, price accumulators"},"id":4950,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7881:7:21","nodeType":"FunctionDefinition","parameters":{"id":4866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4859,"mutability":"mutable","name":"balance0","nameLocation":"7897:8:21","nodeType":"VariableDeclaration","scope":4950,"src":"7889:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4858,"name":"uint256","nodeType":"ElementaryTypeName","src":"7889:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4861,"mutability":"mutable","name":"balance1","nameLocation":"7915:8:21","nodeType":"VariableDeclaration","scope":4950,"src":"7907:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"7907:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4863,"mutability":"mutable","name":"_reserve0","nameLocation":"7933:9:21","nodeType":"VariableDeclaration","scope":4950,"src":"7925:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4865,"mutability":"mutable","name":"_reserve1","nameLocation":"7952:9:21","nodeType":"VariableDeclaration","scope":4950,"src":"7944:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"7944:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7888:74:21"},"returnParameters":{"id":4867,"nodeType":"ParameterList","parameters":[],"src":"7972:0:21"},"scope":6412,"src":"7872:943:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[7347],"body":{"id":5005,"nodeType":"Block","src":"9011:649:21","statements":[{"expression":{"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4960,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"9021:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4961,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9038:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9044:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"9038:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9021:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4964,"nodeType":"ExpressionStatement","src":"9021:32:21"},{"expression":{"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4965,"name":"reserve0Cumulative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"9063:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4966,"name":"reserve0CumulativeLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"9084:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9063:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4968,"nodeType":"ExpressionStatement","src":"9063:43:21"},{"expression":{"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4969,"name":"reserve1Cumulative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"9116:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4970,"name":"reserve1CumulativeLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"9137:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9116:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4972,"nodeType":"ExpressionStatement","src":"9116:43:21"},{"assignments":[4974,4976,4978],"declarations":[{"constant":false,"id":4974,"mutability":"mutable","name":"_reserve0","nameLocation":"9279:9:21","nodeType":"VariableDeclaration","scope":5005,"src":"9271:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4973,"name":"uint256","nodeType":"ElementaryTypeName","src":"9271:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4976,"mutability":"mutable","name":"_reserve1","nameLocation":"9298:9:21","nodeType":"VariableDeclaration","scope":5005,"src":"9290:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint256","nodeType":"ElementaryTypeName","src":"9290:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4978,"mutability":"mutable","name":"_blockTimestampLast","nameLocation":"9317:19:21","nodeType":"VariableDeclaration","scope":5005,"src":"9309:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4977,"name":"uint256","nodeType":"ElementaryTypeName","src":"9309:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4981,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4979,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"9340:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function () view returns (uint256,uint256,uint256)"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9340:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9270:83:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"_blockTimestampLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"9367:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4983,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"9390:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9367:37:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5004,"nodeType":"IfStatement","src":"9363:291:21","trueBody":{"id":5003,"nodeType":"Block","src":"9406:248:21","statements":[{"assignments":[4986],"declarations":[{"constant":false,"id":4986,"mutability":"mutable","name":"timeElapsed","nameLocation":"9475:11:21","nodeType":"VariableDeclaration","scope":5003,"src":"9467:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"9467:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4990,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4987,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"9489:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4988,"name":"_blockTimestampLast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"9506:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9489:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9467:58:21"},{"expression":{"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4991,"name":"reserve0Cumulative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"9539:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4992,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"9561:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4993,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"9573:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9561:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9539:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4996,"nodeType":"ExpressionStatement","src":"9539:45:21"},{"expression":{"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4997,"name":"reserve1Cumulative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"9598:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4998,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"9620:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4999,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"9632:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9620:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9598:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5002,"nodeType":"ExpressionStatement","src":"9598:45:21"}]}}]},"documentation":{"id":4951,"nodeType":"StructuredDocumentation","src":"8821:21:21","text":"@inheritdoc IPool"},"functionSelector":"1df8c717","id":5006,"implemented":true,"kind":"function","modifiers":[],"name":"currentCumulativePrices","nameLocation":"8856:23:21","nodeType":"FunctionDefinition","parameters":{"id":4952,"nodeType":"ParameterList","parameters":[],"src":"8879:2:21"},"returnParameters":{"id":4959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"reserve0Cumulative","nameLocation":"8935:18:21","nodeType":"VariableDeclaration","scope":5006,"src":"8927:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4953,"name":"uint256","nodeType":"ElementaryTypeName","src":"8927:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4956,"mutability":"mutable","name":"reserve1Cumulative","nameLocation":"8963:18:21","nodeType":"VariableDeclaration","scope":5006,"src":"8955:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4955,"name":"uint256","nodeType":"ElementaryTypeName","src":"8955:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4958,"mutability":"mutable","name":"blockTimestamp","nameLocation":"8991:14:21","nodeType":"VariableDeclaration","scope":5006,"src":"8983:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4957,"name":"uint256","nodeType":"ElementaryTypeName","src":"8983:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8926:80:21"},"scope":6412,"src":"8847:813:21","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[7359],"body":{"id":5060,"nodeType":"Block","src":"9805:328:21","statements":[{"assignments":[5022],"declarations":[{"constant":false,"id":5022,"mutability":"mutable","name":"_prices","nameLocation":"9832:7:21","nodeType":"VariableDeclaration","scope":5060,"src":"9815:24:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5020,"name":"uint256","nodeType":"ElementaryTypeName","src":"9815:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5021,"nodeType":"ArrayTypeName","src":"9815:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5029,"initialValue":{"arguments":[{"id":5024,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"9849:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5025,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"9858:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5026,"name":"granularity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"9868:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9881:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5023,"name":"sample","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"9842:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,uint256,uint256,uint256) view returns (uint256[] memory)"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9842:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9815:68:21"},{"assignments":[5031],"declarations":[{"constant":false,"id":5031,"mutability":"mutable","name":"priceAverageCumulative","nameLocation":"9901:22:21","nodeType":"VariableDeclaration","scope":5060,"src":"9893:30:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5030,"name":"uint256","nodeType":"ElementaryTypeName","src":"9893:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5032,"nodeType":"VariableDeclarationStatement","src":"9893:30:21"},{"assignments":[5034],"declarations":[{"constant":false,"id":5034,"mutability":"mutable","name":"_length","nameLocation":"9941:7:21","nodeType":"VariableDeclaration","scope":5060,"src":"9933:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"9933:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5037,"initialValue":{"expression":{"id":5035,"name":"_prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"9951:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9959:6:21","memberName":"length","nodeType":"MemberAccess","src":"9951:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9933:32:21"},{"body":{"id":5054,"nodeType":"Block","src":"10013:61:21","statements":[{"expression":{"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5048,"name":"priceAverageCumulative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"10027:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":5049,"name":"_prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"10053:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5051,"indexExpression":{"id":5050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"10061:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10053:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10027:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5053,"nodeType":"ExpressionStatement","src":"10027:36:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"9995:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5043,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"9999:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9995:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5055,"initializationExpression":{"assignments":[5039],"declarations":[{"constant":false,"id":5039,"mutability":"mutable","name":"i","nameLocation":"9988:1:21","nodeType":"VariableDeclaration","scope":5055,"src":"9980:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"9980:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5041,"initialValue":{"hexValue":"30","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9992:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9980:13:21"},"loopExpression":{"expression":{"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10008:3:21","subExpression":{"id":5045,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"10008:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5047,"nodeType":"ExpressionStatement","src":"10008:3:21"},"nodeType":"ForStatement","src":"9975:99:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5056,"name":"priceAverageCumulative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"10090:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5057,"name":"granularity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"10115:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10090:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5017,"id":5059,"nodeType":"Return","src":"10083:43:21"}]},"documentation":{"id":5007,"nodeType":"StructuredDocumentation","src":"9666:21:21","text":"@inheritdoc IPool"},"functionSelector":"9e8cc04b","id":5061,"implemented":true,"kind":"function","modifiers":[],"name":"quote","nameLocation":"9701:5:21","nodeType":"FunctionDefinition","parameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5009,"mutability":"mutable","name":"tokenIn","nameLocation":"9715:7:21","nodeType":"VariableDeclaration","scope":5061,"src":"9707:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5008,"name":"address","nodeType":"ElementaryTypeName","src":"9707:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5011,"mutability":"mutable","name":"amountIn","nameLocation":"9732:8:21","nodeType":"VariableDeclaration","scope":5061,"src":"9724:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"9724:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5013,"mutability":"mutable","name":"granularity","nameLocation":"9750:11:21","nodeType":"VariableDeclaration","scope":5061,"src":"9742:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5012,"name":"uint256","nodeType":"ElementaryTypeName","src":"9742:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9706:56:21"},"returnParameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"amountOut","nameLocation":"9794:9:21","nodeType":"VariableDeclaration","scope":5061,"src":"9786:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"9786:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9785:19:21"},"scope":6412,"src":"9692:441:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7372],"body":{"id":5081,"nodeType":"Block","src":"10273:60:21","statements":[{"expression":{"arguments":[{"id":5075,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"10297:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5076,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"10306:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5077,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"10316:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10324:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5074,"name":"sample","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"10290:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,uint256,uint256,uint256) view returns (uint256[] memory)"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10290:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5073,"id":5080,"nodeType":"Return","src":"10283:43:21"}]},"documentation":{"id":5062,"nodeType":"StructuredDocumentation","src":"10139:21:21","text":"@inheritdoc IPool"},"functionSelector":"5881c475","id":5082,"implemented":true,"kind":"function","modifiers":[],"name":"prices","nameLocation":"10174:6:21","nodeType":"FunctionDefinition","parameters":{"id":5069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"tokenIn","nameLocation":"10189:7:21","nodeType":"VariableDeclaration","scope":5082,"src":"10181:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5063,"name":"address","nodeType":"ElementaryTypeName","src":"10181:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5066,"mutability":"mutable","name":"amountIn","nameLocation":"10206:8:21","nodeType":"VariableDeclaration","scope":5082,"src":"10198:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5065,"name":"uint256","nodeType":"ElementaryTypeName","src":"10198:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5068,"mutability":"mutable","name":"points","nameLocation":"10224:6:21","nodeType":"VariableDeclaration","scope":5082,"src":"10216:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5067,"name":"uint256","nodeType":"ElementaryTypeName","src":"10216:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10180:51:21"},"returnParameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5082,"src":"10255:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5070,"name":"uint256","nodeType":"ElementaryTypeName","src":"10255:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5071,"nodeType":"ArrayTypeName","src":"10255:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10254:18:21"},"scope":6412,"src":"10165:168:21","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7387],"body":{"id":5209,"nodeType":"Block","src":"10525:934:21","statements":[{"assignments":[5101],"declarations":[{"constant":false,"id":5101,"mutability":"mutable","name":"_prices","nameLocation":"10552:7:21","nodeType":"VariableDeclaration","scope":5209,"src":"10535:24:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5099,"name":"uint256","nodeType":"ElementaryTypeName","src":"10535:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5100,"nodeType":"ArrayTypeName","src":"10535:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5107,"initialValue":{"arguments":[{"id":5105,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"10576:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10562:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5102,"name":"uint256","nodeType":"ElementaryTypeName","src":"10566:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5103,"nodeType":"ArrayTypeName","src":"10566:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10562:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10535:48:21"},{"assignments":[5109],"declarations":[{"constant":false,"id":5109,"mutability":"mutable","name":"length","nameLocation":"10602:6:21","nodeType":"VariableDeclaration","scope":5209,"src":"10594:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5108,"name":"uint256","nodeType":"ElementaryTypeName","src":"10594:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5114,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5110,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"10611:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation storage ref[] storage ref"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10624:6:21","memberName":"length","nodeType":"MemberAccess","src":"10611:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10633:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10611:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10594:40:21"},{"assignments":[5116],"declarations":[{"constant":false,"id":5116,"mutability":"mutable","name":"i","nameLocation":"10652:1:21","nodeType":"VariableDeclaration","scope":5209,"src":"10644:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5115,"name":"uint256","nodeType":"ElementaryTypeName","src":"10644:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5123,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5117,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5109,"src":"10656:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5118,"name":"points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"10666:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5119,"name":"window","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"10675:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10666:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10665:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10656:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10644:38:21"},{"assignments":[5125],"declarations":[{"constant":false,"id":5125,"mutability":"mutable","name":"nextIndex","nameLocation":"10700:9:21","nodeType":"VariableDeclaration","scope":5209,"src":"10692:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5124,"name":"uint256","nodeType":"ElementaryTypeName","src":"10692:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5127,"initialValue":{"hexValue":"30","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10712:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10692:21:21"},{"assignments":[5129],"declarations":[{"constant":false,"id":5129,"mutability":"mutable","name":"index","nameLocation":"10731:5:21","nodeType":"VariableDeclaration","scope":5209,"src":"10723:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5128,"name":"uint256","nodeType":"ElementaryTypeName","src":"10723:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5131,"initialValue":{"hexValue":"30","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10739:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10723:17:21"},{"body":{"id":5205,"nodeType":"Block","src":"10783:646:21","statements":[{"expression":{"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5139,"name":"nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"10797:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5140,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"10809:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5141,"name":"window","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"10813:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10797:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5144,"nodeType":"ExpressionStatement","src":"10797:22:21"},{"assignments":[5146],"declarations":[{"constant":false,"id":5146,"mutability":"mutable","name":"timeElapsed","nameLocation":"10841:11:21","nodeType":"VariableDeclaration","scope":5205,"src":"10833:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5145,"name":"uint256","nodeType":"ElementaryTypeName","src":"10833:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5156,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5147,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"10855:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation storage ref[] storage ref"}},"id":5149,"indexExpression":{"id":5148,"name":"nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"10868:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10855:23:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_storage","typeString":"struct IPool.Observation storage ref"}},"id":5150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10879:9:21","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":7163,"src":"10855:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":5151,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"10891:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation storage ref[] storage ref"}},"id":5153,"indexExpression":{"id":5152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"10904:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10891:15:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_storage","typeString":"struct IPool.Observation storage ref"}},"id":5154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10907:9:21","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":7163,"src":"10891:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10855:61:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10833:83:21"},{"assignments":[5158],"declarations":[{"constant":false,"id":5158,"mutability":"mutable","name":"_reserve0","nameLocation":"10938:9:21","nodeType":"VariableDeclaration","scope":5205,"src":"10930:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5157,"name":"uint256","nodeType":"ElementaryTypeName","src":"10930:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5171,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5159,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"10951:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation storage ref[] storage ref"}},"id":5161,"indexExpression":{"id":5160,"name":"nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"10964:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10951:23:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_storage","typeString":"struct IPool.Observation storage ref"}},"id":5162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10975:18:21","memberName":"reserve0Cumulative","nodeType":"MemberAccess","referencedDeclaration":7165,"src":"10951:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":5163,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"10996:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation storage ref[] storage ref"}},"id":5165,"indexExpression":{"id":5164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"11009:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10996:15:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_storage","typeString":"struct IPool.Observation storage ref"}},"id":5166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11012:18:21","memberName":"reserve0Cumulative","nodeType":"MemberAccess","referencedDeclaration":7165,"src":"10996:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10951:79:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10950:81:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5169,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"11050:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10950:111:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10930:131:21"},{"assignments":[5173],"declarations":[{"constant":false,"id":5173,"mutability":"mutable","name":"_reserve1","nameLocation":"11083:9:21","nodeType":"VariableDeclaration","scope":5205,"src":"11075:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5172,"name":"uint256","nodeType":"ElementaryTypeName","src":"11075:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5186,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5174,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"11096:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation storage ref[] storage ref"}},"id":5176,"indexExpression":{"id":5175,"name":"nextIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"11109:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11096:23:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_storage","typeString":"struct IPool.Observation storage ref"}},"id":5177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11120:18:21","memberName":"reserve1Cumulative","nodeType":"MemberAccess","referencedDeclaration":7167,"src":"11096:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":5178,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"11141:12:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$7168_storage_$dyn_storage","typeString":"struct IPool.Observation storage ref[] storage ref"}},"id":5180,"indexExpression":{"id":5179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"11154:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11141:15:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_storage","typeString":"struct IPool.Observation storage ref"}},"id":5181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11157:18:21","memberName":"reserve1Cumulative","nodeType":"MemberAccess","referencedDeclaration":7167,"src":"11141:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11096:79:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11095:81:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5184,"name":"timeElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"11195:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11095:111:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11075:131:21"},{"expression":{"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5187,"name":"_prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"11220:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5189,"indexExpression":{"id":5188,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"11228:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11220:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5191,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"11251:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5192,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"11261:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5193,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"11270:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5194,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"11281:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5190,"name":"_getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"11237:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,address,uint256,uint256) view returns (uint256)"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11237:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11220:71:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5197,"nodeType":"ExpressionStatement","src":"11220:71:21"},{"id":5204,"nodeType":"UncheckedBlock","src":"11359:60:21","statements":[{"expression":{"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5198,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"11387:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5199,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"11395:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11403:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11395:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11387:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5203,"nodeType":"ExpressionStatement","src":"11387:17:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"10758:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5133,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5109,"src":"10762:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10758:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5206,"loopExpression":{"expression":{"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5135,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"10770:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5136,"name":"window","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"10775:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10770:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5138,"nodeType":"ExpressionStatement","src":"10770:11:21"},"nodeType":"ForStatement","src":"10751:678:21"},{"expression":{"id":5207,"name":"_prices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"11445:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5096,"id":5208,"nodeType":"Return","src":"11438:14:21"}]},"documentation":{"id":5083,"nodeType":"StructuredDocumentation","src":"10339:21:21","text":"@inheritdoc IPool"},"functionSelector":"13345fe1","id":5210,"implemented":true,"kind":"function","modifiers":[],"name":"sample","nameLocation":"10374:6:21","nodeType":"FunctionDefinition","parameters":{"id":5092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"tokenIn","nameLocation":"10398:7:21","nodeType":"VariableDeclaration","scope":5210,"src":"10390:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5084,"name":"address","nodeType":"ElementaryTypeName","src":"10390:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"amountIn","nameLocation":"10423:8:21","nodeType":"VariableDeclaration","scope":5210,"src":"10415:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5086,"name":"uint256","nodeType":"ElementaryTypeName","src":"10415:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5089,"mutability":"mutable","name":"points","nameLocation":"10449:6:21","nodeType":"VariableDeclaration","scope":5210,"src":"10441:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"10441:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5091,"mutability":"mutable","name":"window","nameLocation":"10473:6:21","nodeType":"VariableDeclaration","scope":5210,"src":"10465:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5090,"name":"uint256","nodeType":"ElementaryTypeName","src":"10465:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10380:105:21"},"returnParameters":{"id":5096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5210,"src":"10507:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5094,"nodeType":"ArrayTypeName","src":"10507:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10506:18:21"},"scope":6412,"src":"10365:1094:21","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[7417],"body":{"id":5368,"nodeType":"Block","src":"11567:1273:21","statements":[{"assignments":[5221,5223],"declarations":[{"constant":false,"id":5221,"mutability":"mutable","name":"_reserve0","nameLocation":"11586:9:21","nodeType":"VariableDeclaration","scope":5368,"src":"11578:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5220,"name":"uint256","nodeType":"ElementaryTypeName","src":"11578:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5223,"mutability":"mutable","name":"_reserve1","nameLocation":"11605:9:21","nodeType":"VariableDeclaration","scope":5368,"src":"11597:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5222,"name":"uint256","nodeType":"ElementaryTypeName","src":"11597:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5227,"initialValue":{"components":[{"id":5224,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"11619:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5225,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"11629:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11618:20:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11577:61:21"},{"assignments":[5229],"declarations":[{"constant":false,"id":5229,"mutability":"mutable","name":"_balance0","nameLocation":"11656:9:21","nodeType":"VariableDeclaration","scope":5368,"src":"11648:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5228,"name":"uint256","nodeType":"ElementaryTypeName","src":"11648:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5239,"initialValue":{"arguments":[{"arguments":[{"id":5236,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11701:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11693:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5234,"name":"address","nodeType":"ElementaryTypeName","src":"11693:7:21","typeDescriptions":{}}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11693:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5231,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"11675:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5230,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"11668:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11668:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11683:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"11668:24:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11668:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11648:59:21"},{"assignments":[5241],"declarations":[{"constant":false,"id":5241,"mutability":"mutable","name":"_balance1","nameLocation":"11725:9:21","nodeType":"VariableDeclaration","scope":5368,"src":"11717:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5240,"name":"uint256","nodeType":"ElementaryTypeName","src":"11717:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5251,"initialValue":{"arguments":[{"arguments":[{"id":5248,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11770:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11762:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5246,"name":"address","nodeType":"ElementaryTypeName","src":"11762:7:21","typeDescriptions":{}}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11762:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5243,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"11744:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5242,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"11737:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11737:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11752:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"11737:24:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11737:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11717:59:21"},{"assignments":[5253],"declarations":[{"constant":false,"id":5253,"mutability":"mutable","name":"_amount0","nameLocation":"11794:8:21","nodeType":"VariableDeclaration","scope":5368,"src":"11786:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5252,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5257,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5254,"name":"_balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"11805:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5255,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"11817:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11805:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11786:40:21"},{"assignments":[5259],"declarations":[{"constant":false,"id":5259,"mutability":"mutable","name":"_amount1","nameLocation":"11844:8:21","nodeType":"VariableDeclaration","scope":5368,"src":"11836:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5258,"name":"uint256","nodeType":"ElementaryTypeName","src":"11836:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5263,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5260,"name":"_balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"11855:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5261,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"11867:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11855:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11836:40:21"},{"assignments":[5265],"declarations":[{"constant":false,"id":5265,"mutability":"mutable","name":"_totalSupply","nameLocation":"11895:12:21","nodeType":"VariableDeclaration","scope":5368,"src":"11887:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"11887:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5268,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5266,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"11910:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11910:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11887:36:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5269,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"12015:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12031:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12015:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5340,"nodeType":"Block","src":"12487:123:21","statements":[{"expression":{"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5322,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"12501:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5325,"name":"_amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"12523:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5326,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"12534:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12523:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12522:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5329,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"12550:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12522:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5331,"name":"_amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"12562:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5332,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"12573:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12562:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12561:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5335,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"12589:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12561:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5323,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"12513:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4050_$","typeString":"type(library Math)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12518:3:21","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":3201,"src":"12513:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12513:86:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12501:98:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5339,"nodeType":"ExpressionStatement","src":"12501:98:21"}]},"id":5341,"nodeType":"IfStatement","src":"12011:599:21","trueBody":{"id":5321,"nodeType":"Block","src":"12034:447:21","statements":[{"expression":{"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5272,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"12048:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5275,"name":"_amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"12070:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5276,"name":"_amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"12081:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12070:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5273,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"12060:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4050_$","typeString":"type(library Math)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12065:4:21","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3539,"src":"12060:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12060:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5279,"name":"MINIMUM_LIQUIDITY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"12093:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12060:50:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12048:62:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5282,"nodeType":"ExpressionStatement","src":"12048:62:21"},{"expression":{"arguments":[{"arguments":[{"hexValue":"31","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12138:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12130:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5284,"name":"address","nodeType":"ElementaryTypeName","src":"12130:7:21","typeDescriptions":{}}},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12130:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5288,"name":"MINIMUM_LIQUIDITY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"12142:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5283,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"12124:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12124:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5290,"nodeType":"ExpressionStatement","src":"12124:36:21"},{"condition":{"id":5291,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"12256:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5320,"nodeType":"IfStatement","src":"12252:219:21","trueBody":{"id":5319,"nodeType":"Block","src":"12264:207:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5292,"name":"_amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"12287:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12298:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"12287:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12286:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5296,"name":"decimals0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"12306:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12286:29:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"_amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"12320:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12331:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"12320:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12319:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5302,"name":"decimals1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"12339:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12319:29:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12286:62:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5308,"nodeType":"IfStatement","src":"12282:93:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5305,"name":"DepositsNotEqual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"12357:16:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12357:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5307,"nodeType":"RevertStatement","src":"12350:25:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5310,"name":"_amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"12400:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5311,"name":"_amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"12410:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5309,"name":"_k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"12397:2:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12397:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5313,"name":"MINIMUM_K","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"12423:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12397:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5318,"nodeType":"IfStatement","src":"12393:63:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5315,"name":"BelowMinimumK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"12441:13:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12441:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5317,"nodeType":"RevertStatement","src":"12434:22:21"}}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5342,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"12623:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5343,"name":"MINIMUM_LIQUIDITY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"12635:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12623:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5348,"nodeType":"IfStatement","src":"12619:71:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5345,"name":"InsufficientLiquidityMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"12661:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12661:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5347,"nodeType":"RevertStatement","src":"12654:36:21"}},{"expression":{"arguments":[{"id":5350,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"12706:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5351,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"12710:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5349,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"12700:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12700:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5353,"nodeType":"ExpressionStatement","src":"12700:20:21"},{"expression":{"arguments":[{"id":5355,"name":"_balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"12739:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5356,"name":"_balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"12750:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5357,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"12761:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5358,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"12772:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5354,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[4950,568],"referencedDeclaration":4950,"src":"12731:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12731:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5360,"nodeType":"ExpressionStatement","src":"12731:51:21"},{"eventCall":{"arguments":[{"expression":{"id":5362,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12802:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12806:6:21","memberName":"sender","nodeType":"MemberAccess","src":"12802:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5364,"name":"_amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"12814:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5365,"name":"_amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"12824:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5361,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"12797:4:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12797:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5367,"nodeType":"EmitStatement","src":"12792:41:21"}]},"documentation":{"id":5211,"nodeType":"StructuredDocumentation","src":"11465:21:21","text":"@inheritdoc IPool"},"functionSelector":"6a627842","id":5369,"implemented":true,"kind":"function","modifiers":[{"id":5216,"kind":"modifierInvocation","modifierName":{"id":5215,"name":"nonReentrant","nameLocations":["11526:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"11526:12:21"},"nodeType":"ModifierInvocation","src":"11526:12:21"}],"name":"mint","nameLocation":"11500:4:21","nodeType":"FunctionDefinition","parameters":{"id":5214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5213,"mutability":"mutable","name":"to","nameLocation":"11513:2:21","nodeType":"VariableDeclaration","scope":5369,"src":"11505:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5212,"name":"address","nodeType":"ElementaryTypeName","src":"11505:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11504:12:21"},"returnParameters":{"id":5219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"liquidity","nameLocation":"11556:9:21","nodeType":"VariableDeclaration","scope":5369,"src":"11548:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5217,"name":"uint256","nodeType":"ElementaryTypeName","src":"11548:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11547:19:21"},"scope":6412,"src":"11491:1349:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7409],"body":{"id":5527,"nodeType":"Block","src":"12963:1138:21","statements":[{"assignments":[5382,5384],"declarations":[{"constant":false,"id":5382,"mutability":"mutable","name":"_reserve0","nameLocation":"12982:9:21","nodeType":"VariableDeclaration","scope":5527,"src":"12974:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5381,"name":"uint256","nodeType":"ElementaryTypeName","src":"12974:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5384,"mutability":"mutable","name":"_reserve1","nameLocation":"13001:9:21","nodeType":"VariableDeclaration","scope":5527,"src":"12993:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5383,"name":"uint256","nodeType":"ElementaryTypeName","src":"12993:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5388,"initialValue":{"components":[{"id":5385,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"13015:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5386,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"13025:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13014:20:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"12973:61:21"},{"assignments":[5390,5392],"declarations":[{"constant":false,"id":5390,"mutability":"mutable","name":"_token0","nameLocation":"13053:7:21","nodeType":"VariableDeclaration","scope":5527,"src":"13045:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5389,"name":"address","nodeType":"ElementaryTypeName","src":"13045:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5392,"mutability":"mutable","name":"_token1","nameLocation":"13070:7:21","nodeType":"VariableDeclaration","scope":5527,"src":"13062:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5391,"name":"address","nodeType":"ElementaryTypeName","src":"13062:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5396,"initialValue":{"components":[{"id":5393,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"13082:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5394,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"13090:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13081:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"13044:53:21"},{"assignments":[5398],"declarations":[{"constant":false,"id":5398,"mutability":"mutable","name":"_balance0","nameLocation":"13115:9:21","nodeType":"VariableDeclaration","scope":5527,"src":"13107:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5397,"name":"uint256","nodeType":"ElementaryTypeName","src":"13107:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5408,"initialValue":{"arguments":[{"arguments":[{"id":5405,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13161:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13153:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5403,"name":"address","nodeType":"ElementaryTypeName","src":"13153:7:21","typeDescriptions":{}}},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13153:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5400,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"13134:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5399,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"13127:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13127:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13143:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"13127:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13127:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13107:60:21"},{"assignments":[5410],"declarations":[{"constant":false,"id":5410,"mutability":"mutable","name":"_balance1","nameLocation":"13185:9:21","nodeType":"VariableDeclaration","scope":5527,"src":"13177:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5409,"name":"uint256","nodeType":"ElementaryTypeName","src":"13177:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5420,"initialValue":{"arguments":[{"arguments":[{"id":5417,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13231:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13223:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5415,"name":"address","nodeType":"ElementaryTypeName","src":"13223:7:21","typeDescriptions":{}}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13223:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5412,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"13204:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5411,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"13197:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13197:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13213:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"13197:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13197:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13177:60:21"},{"assignments":[5422],"declarations":[{"constant":false,"id":5422,"mutability":"mutable","name":"_liquidity","nameLocation":"13255:10:21","nodeType":"VariableDeclaration","scope":5527,"src":"13247:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"13247:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5429,"initialValue":{"arguments":[{"arguments":[{"id":5426,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13286:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13278:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5424,"name":"address","nodeType":"ElementaryTypeName","src":"13278:7:21","typeDescriptions":{}}},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13278:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5423,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"13268:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13268:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13247:45:21"},{"assignments":[5431],"declarations":[{"constant":false,"id":5431,"mutability":"mutable","name":"_totalSupply","nameLocation":"13311:12:21","nodeType":"VariableDeclaration","scope":5527,"src":"13303:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5430,"name":"uint256","nodeType":"ElementaryTypeName","src":"13303:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5434,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5432,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"13326:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13326:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13303:36:21"},{"expression":{"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5435,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"13427:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5436,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"13438:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5437,"name":"_balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"13451:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13438:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13437:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5440,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"13464:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13437:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13427:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5443,"nodeType":"ExpressionStatement","src":"13427:49:21"},{"expression":{"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5444,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"13534:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5445,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"13545:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5446,"name":"_balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"13558:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13545:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13544:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5449,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"13571:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13544:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13534:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5452,"nodeType":"ExpressionStatement","src":"13534:49:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5453,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"13645:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13656:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13645:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5456,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"13661:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13672:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13661:12:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13645:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5463,"nodeType":"IfStatement","src":"13641:70:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5460,"name":"InsufficientLiquidityBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"13682:27:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13682:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5462,"nodeType":"RevertStatement","src":"13675:36:21"}},{"expression":{"arguments":[{"arguments":[{"id":5467,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13735:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13727:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5465,"name":"address","nodeType":"ElementaryTypeName","src":"13727:7:21","typeDescriptions":{}}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13727:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5469,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"13742:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5464,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"13721:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13721:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5471,"nodeType":"ExpressionStatement","src":"13721:32:21"},{"expression":{"arguments":[{"id":5476,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"13792:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5477,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"13796:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5473,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"13770:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5472,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"13763:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13763:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13779:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"13763:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$839_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13763:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5479,"nodeType":"ExpressionStatement","src":"13763:41:21"},{"expression":{"arguments":[{"id":5484,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"13843:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5485,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"13847:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5481,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"13821:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5480,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"13814:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13814:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13830:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"13814:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$839_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13814:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5487,"nodeType":"ExpressionStatement","src":"13814:41:21"},{"expression":{"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5488,"name":"_balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"13865:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5495,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13911:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13903:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5493,"name":"address","nodeType":"ElementaryTypeName","src":"13903:7:21","typeDescriptions":{}}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13903:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5490,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"13884:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5489,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"13877:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13893:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"13877:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13865:52:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5499,"nodeType":"ExpressionStatement","src":"13865:52:21"},{"expression":{"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5500,"name":"_balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"13927:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5507,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13973:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13965:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5505,"name":"address","nodeType":"ElementaryTypeName","src":"13965:7:21","typeDescriptions":{}}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13965:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5502,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"13946:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5501,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"13939:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13939:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13955:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"13939:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13939:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13927:52:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5511,"nodeType":"ExpressionStatement","src":"13927:52:21"},{"expression":{"arguments":[{"id":5513,"name":"_balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"13998:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5514,"name":"_balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"14009:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5515,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"14020:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5516,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"14031:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5512,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[4950,568],"referencedDeclaration":4950,"src":"13990:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13990:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5518,"nodeType":"ExpressionStatement","src":"13990:51:21"},{"eventCall":{"arguments":[{"expression":{"id":5520,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14061:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14065:6:21","memberName":"sender","nodeType":"MemberAccess","src":"14061:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5522,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"14073:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5523,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"14077:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5524,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"14086:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5519,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"14056:4:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14056:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5526,"nodeType":"EmitStatement","src":"14051:43:21"}]},"documentation":{"id":5370,"nodeType":"StructuredDocumentation","src":"12846:21:21","text":"@inheritdoc IPool"},"functionSelector":"89afcb44","id":5528,"implemented":true,"kind":"function","modifiers":[{"id":5375,"kind":"modifierInvocation","modifierName":{"id":5374,"name":"nonReentrant","nameLocations":["12907:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"12907:12:21"},"nodeType":"ModifierInvocation","src":"12907:12:21"}],"name":"burn","nameLocation":"12881:4:21","nodeType":"FunctionDefinition","parameters":{"id":5373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5372,"mutability":"mutable","name":"to","nameLocation":"12894:2:21","nodeType":"VariableDeclaration","scope":5528,"src":"12886:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5371,"name":"address","nodeType":"ElementaryTypeName","src":"12886:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12885:12:21"},"returnParameters":{"id":5380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"amount0","nameLocation":"12937:7:21","nodeType":"VariableDeclaration","scope":5528,"src":"12929:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5376,"name":"uint256","nodeType":"ElementaryTypeName","src":"12929:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5379,"mutability":"mutable","name":"amount1","nameLocation":"12954:7:21","nodeType":"VariableDeclaration","scope":5528,"src":"12946:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5378,"name":"uint256","nodeType":"ElementaryTypeName","src":"12946:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12928:34:21"},"scope":6412,"src":"12872:1229:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7399],"body":{"id":5821,"nodeType":"Block","src":"14242:2477:21","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5543,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"14269:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5542,"name":"IPoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"14256:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPoolFactory_$8143_$","typeString":"type(contract IPoolFactory)"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14256:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPoolFactory_$8143","typeString":"contract IPoolFactory"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14278:8:21","memberName":"isPaused","nodeType":"MemberAccess","referencedDeclaration":8132,"src":"14256:30:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bool_$","typeString":"function () view external returns (bool)"}},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14256:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5550,"nodeType":"IfStatement","src":"14252:55:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5547,"name":"IsPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"14297:8:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14297:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5549,"nodeType":"RevertStatement","src":"14290:17:21"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5551,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"14321:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14335:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14321:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5554,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"14340:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14354:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14340:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14321:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5561,"nodeType":"IfStatement","src":"14317:73:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5558,"name":"InsufficientOutputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"14364:24:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14364:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5560,"nodeType":"RevertStatement","src":"14357:33:21"}},{"assignments":[5563,5565],"declarations":[{"constant":false,"id":5563,"mutability":"mutable","name":"_reserve0","nameLocation":"14409:9:21","nodeType":"VariableDeclaration","scope":5821,"src":"14401:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5562,"name":"uint256","nodeType":"ElementaryTypeName","src":"14401:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5565,"mutability":"mutable","name":"_reserve1","nameLocation":"14428:9:21","nodeType":"VariableDeclaration","scope":5821,"src":"14420:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5564,"name":"uint256","nodeType":"ElementaryTypeName","src":"14420:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5569,"initialValue":{"components":[{"id":5566,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"14442:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5567,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"14452:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14441:20:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"14400:61:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5570,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"14475:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5571,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"14489:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14475:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5573,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"14502:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5574,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"14516:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14502:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14475:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5580,"nodeType":"IfStatement","src":"14471:86:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5577,"name":"InsufficientLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"14534:21:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14534:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5579,"nodeType":"RevertStatement","src":"14527:30:21"}},{"assignments":[5582],"declarations":[{"constant":false,"id":5582,"mutability":"mutable","name":"_balance0","nameLocation":"14576:9:21","nodeType":"VariableDeclaration","scope":5821,"src":"14568:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5581,"name":"uint256","nodeType":"ElementaryTypeName","src":"14568:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5583,"nodeType":"VariableDeclarationStatement","src":"14568:17:21"},{"assignments":[5585],"declarations":[{"constant":false,"id":5585,"mutability":"mutable","name":"_balance1","nameLocation":"14603:9:21","nodeType":"VariableDeclaration","scope":5821,"src":"14595:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5584,"name":"uint256","nodeType":"ElementaryTypeName","src":"14595:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5586,"nodeType":"VariableDeclarationStatement","src":"14595:17:21"},{"id":5670,"nodeType":"Block","src":"14622:700:21","statements":[{"assignments":[5588,5590],"declarations":[{"constant":false,"id":5588,"mutability":"mutable","name":"_token0","nameLocation":"14712:7:21","nodeType":"VariableDeclaration","scope":5670,"src":"14704:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5587,"name":"address","nodeType":"ElementaryTypeName","src":"14704:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5590,"mutability":"mutable","name":"_token1","nameLocation":"14729:7:21","nodeType":"VariableDeclaration","scope":5670,"src":"14721:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5589,"name":"address","nodeType":"ElementaryTypeName","src":"14721:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5594,"initialValue":{"components":[{"id":5591,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"14741:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5592,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"14749:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14740:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"14703:53:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5595,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"14774:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5596,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"14780:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14774:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5598,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"14791:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5599,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"14797:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14791:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14774:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5605,"nodeType":"IfStatement","src":"14770:54:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5602,"name":"InvalidTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"14813:9:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14813:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5604,"nodeType":"RevertStatement","src":"14806:18:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"14842:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14855:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14842:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5617,"nodeType":"IfStatement","src":"14838:64:21","trueBody":{"expression":{"arguments":[{"id":5613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"14887:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5614,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"14891:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5610,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"14865:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5609,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"14858:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14858:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14874:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"14858:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$839_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14858:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5616,"nodeType":"ExpressionStatement","src":"14858:44:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5618,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"14954:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14967:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14954:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5629,"nodeType":"IfStatement","src":"14950:64:21","trueBody":{"expression":{"arguments":[{"id":5625,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"14999:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5626,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"15003:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5622,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"14977:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5621,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"14970:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14970:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14986:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"14970:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$839_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14970:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5628,"nodeType":"ExpressionStatement","src":"14970:44:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5630,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"15066:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15071:6:21","memberName":"length","nodeType":"MemberAccess","src":"15066:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15080:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15066:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5645,"nodeType":"IfStatement","src":"15062:83:21","trueBody":{"expression":{"arguments":[{"expression":{"id":5638,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15104:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15108:6:21","memberName":"sender","nodeType":"MemberAccess","src":"15104:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5640,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"15116:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5641,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"15128:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5642,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"15140:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":5635,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"15095:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5634,"name":"IPoolCallee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7472,"src":"15083:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPoolCallee_$7472_$","typeString":"type(contract IPoolCallee)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15083:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPoolCallee_$7472","typeString":"contract IPoolCallee"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15099:4:21","memberName":"hook","nodeType":"MemberAccess","referencedDeclaration":7471,"src":"15083:20:21","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory) external"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15083:62:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5644,"nodeType":"ExpressionStatement","src":"15083:62:21"}},{"expression":{"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5646,"name":"_balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"15193:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5653,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15239:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15231:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5651,"name":"address","nodeType":"ElementaryTypeName","src":"15231:7:21","typeDescriptions":{}}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15231:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5648,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"15212:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5647,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"15205:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15205:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15221:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"15205:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15205:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15193:52:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5657,"nodeType":"ExpressionStatement","src":"15193:52:21"},{"expression":{"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5658,"name":"_balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"15259:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5665,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15305:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15297:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5663,"name":"address","nodeType":"ElementaryTypeName","src":"15297:7:21","typeDescriptions":{}}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15297:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5660,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5590,"src":"15278:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5659,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"15271:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15271:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15287:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"15271:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15271:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15259:52:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5669,"nodeType":"ExpressionStatement","src":"15259:52:21"}]},{"assignments":[5672],"declarations":[{"constant":false,"id":5672,"mutability":"mutable","name":"amount0In","nameLocation":"15339:9:21","nodeType":"VariableDeclaration","scope":5821,"src":"15331:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5671,"name":"uint256","nodeType":"ElementaryTypeName","src":"15331:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5686,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5673,"name":"_balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"15351:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5674,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15363:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5675,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"15375:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15363:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15351:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15427:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15351:77:21","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5678,"name":"_balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"15388:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5679,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"15401:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5680,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"15413:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15401:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15400:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15388:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15331:97:21"},{"assignments":[5688],"declarations":[{"constant":false,"id":5688,"mutability":"mutable","name":"amount1In","nameLocation":"15446:9:21","nodeType":"VariableDeclaration","scope":5821,"src":"15438:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5687,"name":"uint256","nodeType":"ElementaryTypeName","src":"15438:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5702,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5689,"name":"_balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"15458:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5690,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"15470:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5691,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"15482:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15470:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15458:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15534:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15458:77:21","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5694,"name":"_balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"15495:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5695,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"15508:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5696,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"15520:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15508:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15507:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15495:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15438:97:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"amount0In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"15549:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15562:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15549:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5706,"name":"amount1In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"15567:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15580:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15567:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15549:32:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5713,"nodeType":"IfStatement","src":"15545:70:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5710,"name":"InsufficientInputAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"15590:23:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15590:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5712,"nodeType":"RevertStatement","src":"15583:32:21"}},{"id":5803,"nodeType":"Block","src":"15625:945:21","statements":[{"assignments":[5715,5717],"declarations":[{"constant":false,"id":5715,"mutability":"mutable","name":"_token0","nameLocation":"15724:7:21","nodeType":"VariableDeclaration","scope":5803,"src":"15716:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5714,"name":"address","nodeType":"ElementaryTypeName","src":"15716:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5717,"mutability":"mutable","name":"_token1","nameLocation":"15741:7:21","nodeType":"VariableDeclaration","scope":5803,"src":"15733:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5716,"name":"address","nodeType":"ElementaryTypeName","src":"15733:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5721,"initialValue":{"components":[{"id":5718,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"15753:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5719,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"15761:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15752:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"15715:53:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5722,"name":"amount0In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"15786:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15798:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15786:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5743,"nodeType":"IfStatement","src":"15782:102:21","trueBody":{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5726,"name":"amount0In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"15811:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5733,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15860:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15852:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5731,"name":"address","nodeType":"ElementaryTypeName","src":"15852:7:21","typeDescriptions":{}}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15852:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5735,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"15867:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":5728,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"15836:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5727,"name":"IPoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"15823:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPoolFactory_$8143_$","typeString":"type(contract IPoolFactory)"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15823:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPoolFactory_$8143","typeString":"contract IPoolFactory"}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15845:6:21","memberName":"getFee","nodeType":"MemberAccess","referencedDeclaration":8103,"src":"15823:28:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,bool) view external returns (uint256)"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15823:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15811:63:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15810:65:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15878:5:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"15810:73:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5725,"name":"_update0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"15801:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15801:83:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5742,"nodeType":"ExpressionStatement","src":"15801:83:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5744,"name":"amount1In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"15954:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15966:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15954:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5765,"nodeType":"IfStatement","src":"15950:102:21","trueBody":{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5748,"name":"amount1In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"15979:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5755,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16028:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16020:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5753,"name":"address","nodeType":"ElementaryTypeName","src":"16020:7:21","typeDescriptions":{}}},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16020:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5757,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"16035:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":5750,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"16004:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5749,"name":"IPoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"15991:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPoolFactory_$8143_$","typeString":"type(contract IPoolFactory)"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15991:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPoolFactory_$8143","typeString":"contract IPoolFactory"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16013:6:21","memberName":"getFee","nodeType":"MemberAccess","referencedDeclaration":8103,"src":"15991:28:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,bool) view external returns (uint256)"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15991:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15979:63:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15978:65:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":5761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16046:5:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"15978:73:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5747,"name":"_update1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"15969:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:83:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5764,"nodeType":"ExpressionStatement","src":"15969:83:21"}},{"expression":{"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5766,"name":"_balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"16118:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5773,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16164:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16156:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5771,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:21","typeDescriptions":{}}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16156:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5768,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"16137:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5767,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"16130:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16130:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16146:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"16130:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16130:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16118:52:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5777,"nodeType":"ExpressionStatement","src":"16118:52:21"},{"expression":{"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5778,"name":"_balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"16341:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":5785,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16387:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16379:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5783,"name":"address","nodeType":"ElementaryTypeName","src":"16379:7:21","typeDescriptions":{}}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16379:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5780,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5717,"src":"16360:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5779,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"16353:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16353:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16369:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"16353:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16353:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16341:52:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5789,"nodeType":"ExpressionStatement","src":"16341:52:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5791,"name":"_balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"16499:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5792,"name":"_balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"16510:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5790,"name":"_k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"16496:2:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16496:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":5795,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"16526:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5796,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"16537:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5794,"name":"_k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"16523:2:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16523:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16496:51:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5802,"nodeType":"IfStatement","src":"16492:67:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5799,"name":"K","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"16556:1:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16556:3:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5801,"nodeType":"RevertStatement","src":"16549:10:21"}}]},{"expression":{"arguments":[{"id":5805,"name":"_balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"16588:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5806,"name":"_balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"16599:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5807,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5563,"src":"16610:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5808,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"16621:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5804,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[4950,568],"referencedDeclaration":4950,"src":"16580:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16580:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5810,"nodeType":"ExpressionStatement","src":"16580:51:21"},{"eventCall":{"arguments":[{"expression":{"id":5812,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16651:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16655:6:21","memberName":"sender","nodeType":"MemberAccess","src":"16651:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5814,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"16663:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5815,"name":"amount0In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"16667:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5816,"name":"amount1In","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"16678:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5817,"name":"amount0Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5531,"src":"16689:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5818,"name":"amount1Out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"16701:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5811,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"16646:4:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256,uint256)"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16646:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5820,"nodeType":"EmitStatement","src":"16641:71:21"}]},"documentation":{"id":5529,"nodeType":"StructuredDocumentation","src":"14107:21:21","text":"@inheritdoc IPool"},"functionSelector":"022c0d9f","id":5822,"implemented":true,"kind":"function","modifiers":[{"id":5540,"kind":"modifierInvocation","modifierName":{"id":5539,"name":"nonReentrant","nameLocations":["14229:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"14229:12:21"},"nodeType":"ModifierInvocation","src":"14229:12:21"}],"name":"swap","nameLocation":"14142:4:21","nodeType":"FunctionDefinition","parameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5531,"mutability":"mutable","name":"amount0Out","nameLocation":"14155:10:21","nodeType":"VariableDeclaration","scope":5822,"src":"14147:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5530,"name":"uint256","nodeType":"ElementaryTypeName","src":"14147:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5533,"mutability":"mutable","name":"amount1Out","nameLocation":"14175:10:21","nodeType":"VariableDeclaration","scope":5822,"src":"14167:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5532,"name":"uint256","nodeType":"ElementaryTypeName","src":"14167:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5535,"mutability":"mutable","name":"to","nameLocation":"14195:2:21","nodeType":"VariableDeclaration","scope":5822,"src":"14187:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5534,"name":"address","nodeType":"ElementaryTypeName","src":"14187:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5537,"mutability":"mutable","name":"data","nameLocation":"14214:4:21","nodeType":"VariableDeclaration","scope":5822,"src":"14199:19:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5536,"name":"bytes","nodeType":"ElementaryTypeName","src":"14199:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14146:73:21"},"returnParameters":{"id":5541,"nodeType":"ParameterList","parameters":[],"src":"14242:0:21"},"scope":6412,"src":"14133:2586:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7443],"body":{"id":5876,"nodeType":"Block","src":"16799:264:21","statements":[{"assignments":[5831,5833],"declarations":[{"constant":false,"id":5831,"mutability":"mutable","name":"_token0","nameLocation":"16818:7:21","nodeType":"VariableDeclaration","scope":5876,"src":"16810:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5830,"name":"address","nodeType":"ElementaryTypeName","src":"16810:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5833,"mutability":"mutable","name":"_token1","nameLocation":"16835:7:21","nodeType":"VariableDeclaration","scope":5876,"src":"16827:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5832,"name":"address","nodeType":"ElementaryTypeName","src":"16827:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5837,"initialValue":{"components":[{"id":5834,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"16847:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5835,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"16855:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16846:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"16809:53:21"},{"expression":{"arguments":[{"id":5842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"16901:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5849,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16939:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16931:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5847,"name":"address","nodeType":"ElementaryTypeName","src":"16931:7:21","typeDescriptions":{}}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16931:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5844,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"16912:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5843,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"16905:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16905:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16921:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"16905:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16905:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"id":5852,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"16949:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16948:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16905:53:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5839,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5831,"src":"16879:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5838,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"16872:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16872:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16888:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"16872:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$839_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16872:87:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5856,"nodeType":"ExpressionStatement","src":"16872:87:21"},{"expression":{"arguments":[{"id":5861,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"16998:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5868,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17036:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17028:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5866,"name":"address","nodeType":"ElementaryTypeName","src":"17028:7:21","typeDescriptions":{}}},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17028:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5863,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"17009:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5862,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"17002:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17002:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17018:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"17002:25:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17002:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"id":5871,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"17046:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17045:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17002:53:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5858,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"16976:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5857,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"16969:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16969:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16985:12:21","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"16969:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$839_$","typeString":"function (contract IERC20,address,uint256)"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16969:87:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5875,"nodeType":"ExpressionStatement","src":"16969:87:21"}]},"documentation":{"id":5823,"nodeType":"StructuredDocumentation","src":"16725:21:21","text":"@inheritdoc IPool"},"functionSelector":"bc25cf77","id":5877,"implemented":true,"kind":"function","modifiers":[{"id":5828,"kind":"modifierInvocation","modifierName":{"id":5827,"name":"nonReentrant","nameLocations":["16786:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"16786:12:21"},"nodeType":"ModifierInvocation","src":"16786:12:21"}],"name":"skim","nameLocation":"16760:4:21","nodeType":"FunctionDefinition","parameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"to","nameLocation":"16773:2:21","nodeType":"VariableDeclaration","scope":5877,"src":"16765:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5824,"name":"address","nodeType":"ElementaryTypeName","src":"16765:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16764:12:21"},"returnParameters":{"id":5829,"nodeType":"ParameterList","parameters":[],"src":"16799:0:21"},"scope":6412,"src":"16751:312:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7447],"body":{"id":5914,"nodeType":"Block","src":"17133:190:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5883,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"17147:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17147:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17164:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17147:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5890,"nodeType":"IfStatement","src":"17143:54:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5887,"name":"InsufficientLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"17174:21:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17174:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5889,"nodeType":"RevertStatement","src":"17167:30:21"}},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":5898,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17248:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17240:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5896,"name":"address","nodeType":"ElementaryTypeName","src":"17240:7:21","typeDescriptions":{}}},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17240:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5893,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"17222:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5892,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"17215:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17215:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17230:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"17215:24:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17215:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":5907,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17289:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":5906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17281:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5905,"name":"address","nodeType":"ElementaryTypeName","src":"17281:7:21","typeDescriptions":{}}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17281:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5902,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"17263:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5901,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"17256:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17256:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17271:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":796,"src":"17256:24:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17256:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5910,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"17297:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5911,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"17307:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5891,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[4950,568],"referencedDeclaration":4950,"src":"17207:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17207:109:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5913,"nodeType":"ExpressionStatement","src":"17207:109:21"}]},"documentation":{"id":5878,"nodeType":"StructuredDocumentation","src":"17069:21:21","text":"@inheritdoc IPool"},"functionSelector":"fff6cae9","id":5915,"implemented":true,"kind":"function","modifiers":[{"id":5881,"kind":"modifierInvocation","modifierName":{"id":5880,"name":"nonReentrant","nameLocations":["17120:12:21"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"17120:12:21"},"nodeType":"ModifierInvocation","src":"17120:12:21"}],"name":"sync","nameLocation":"17104:4:21","nodeType":"FunctionDefinition","parameters":{"id":5879,"nodeType":"ParameterList","parameters":[],"src":"17108:2:21"},"returnParameters":{"id":5882,"nodeType":"ParameterList","parameters":[],"src":"17133:0:21"},"scope":6412,"src":"17095:228:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5957,"nodeType":"Block","src":"17396:136:21","statements":[{"assignments":[5925],"declarations":[{"constant":false,"id":5925,"mutability":"mutable","name":"_a","nameLocation":"17414:2:21","nodeType":"VariableDeclaration","scope":5957,"src":"17406:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5924,"name":"uint256","nodeType":"ElementaryTypeName","src":"17406:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5932,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5926,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"17420:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5927,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"17425:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17419:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":5930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17430:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"17419:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17406:28:21"},{"assignments":[5934],"declarations":[{"constant":false,"id":5934,"mutability":"mutable","name":"_b","nameLocation":"17452:2:21","nodeType":"VariableDeclaration","scope":5957,"src":"17444:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"17444:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5949,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5935,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"17459:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5936,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"17464:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17459:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17458:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17470:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"17458:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5941,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"17478:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5942,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"17482:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17478:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17477:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":5945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17487:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"17477:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17458:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17457:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17444:48:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5950,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"17510:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5951,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"17515:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17510:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17509:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17521:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"17509:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5923,"id":5956,"nodeType":"Return","src":"17502:23:21"}]},"id":5958,"implemented":true,"kind":"function","modifiers":[],"name":"_f","nameLocation":"17338:2:21","nodeType":"FunctionDefinition","parameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"x0","nameLocation":"17349:2:21","nodeType":"VariableDeclaration","scope":5958,"src":"17341:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5916,"name":"uint256","nodeType":"ElementaryTypeName","src":"17341:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5919,"mutability":"mutable","name":"y","nameLocation":"17361:1:21","nodeType":"VariableDeclaration","scope":5958,"src":"17353:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5918,"name":"uint256","nodeType":"ElementaryTypeName","src":"17353:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17340:23:21"},"returnParameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5958,"src":"17387:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"17387:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17386:9:21"},"scope":6412,"src":"17329:203:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5996,"nodeType":"Block","src":"17605:95:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17623:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5968,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"17627:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17623:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5970,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"17634:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5971,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"17638:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17634:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":5974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17643:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"17633:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17632:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17623:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17622:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":5979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17652:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"17622:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5981,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"17663:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5982,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"17668:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17663:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17662:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17674:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"17662:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17661:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5988,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"17682:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17661:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5990,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17688:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"17660:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17659:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17622:71:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5966,"id":5995,"nodeType":"Return","src":"17615:78:21"}]},"id":5997,"implemented":true,"kind":"function","modifiers":[],"name":"_d","nameLocation":"17547:2:21","nodeType":"FunctionDefinition","parameters":{"id":5963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5960,"mutability":"mutable","name":"x0","nameLocation":"17558:2:21","nodeType":"VariableDeclaration","scope":5997,"src":"17550:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5959,"name":"uint256","nodeType":"ElementaryTypeName","src":"17550:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5962,"mutability":"mutable","name":"y","nameLocation":"17570:1:21","nodeType":"VariableDeclaration","scope":5997,"src":"17562:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5961,"name":"uint256","nodeType":"ElementaryTypeName","src":"17562:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17549:23:21"},"returnParameters":{"id":5966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5997,"src":"17596:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5964,"name":"uint256","nodeType":"ElementaryTypeName","src":"17596:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17595:9:21"},"scope":6412,"src":"17538:162:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6134,"nodeType":"Block","src":"17789:1792:21","statements":[{"body":{"id":6128,"nodeType":"Block","src":"17833:1720:21","statements":[{"assignments":[6019],"declarations":[{"constant":false,"id":6019,"mutability":"mutable","name":"k","nameLocation":"17855:1:21","nodeType":"VariableDeclaration","scope":6128,"src":"17847:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6018,"name":"uint256","nodeType":"ElementaryTypeName","src":"17847:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6024,"initialValue":{"arguments":[{"id":6021,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"17862:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6022,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"17866:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6020,"name":"_f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"17859:2:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17859:9:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17847:21:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6025,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"17886:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6026,"name":"xy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"17890:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17886:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6126,"nodeType":"Block","src":"18826:717:21","statements":[{"assignments":[6081],"declarations":[{"constant":false,"id":6081,"mutability":"mutable","name":"dy","nameLocation":"18852:2:21","nodeType":"VariableDeclaration","scope":6126,"src":"18844:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6080,"name":"uint256","nodeType":"ElementaryTypeName","src":"18844:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6094,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6082,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"18859:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6083,"name":"xy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"18863:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18859:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18858:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18869:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"18858:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18857:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":6090,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"18880:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6091,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"18884:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6089,"name":"_d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"18877:2:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18877:9:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18857:29:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18844:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6095,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"18908:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18914:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18908:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6119,"nodeType":"IfStatement","src":"18904:597:21","trueBody":{"id":6118,"nodeType":"Block","src":"18917:584:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6098,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"18943:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6099,"name":"xy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"18948:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18943:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6102,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"18957:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6103,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"18961:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18965:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18961:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6101,"name":"_f","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"18954:2:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18954:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6107,"name":"xy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"18970:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18954:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18943:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6113,"nodeType":"IfStatement","src":"18939:516:21","trueBody":{"id":6112,"nodeType":"Block","src":"18974:481:21","statements":[{"expression":{"id":6110,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"19431:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6007,"id":6111,"nodeType":"Return","src":"19424:8:21"}]}},{"expression":{"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6114,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"19476:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19481:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19476:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6117,"nodeType":"ExpressionStatement","src":"19476:6:21"}]}},{"expression":{"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6120,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"19518:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6121,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"19522:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6122,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6081,"src":"19526:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19522:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19518:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6125,"nodeType":"ExpressionStatement","src":"19518:10:21"}]},"id":6127,"nodeType":"IfStatement","src":"17882:1661:21","trueBody":{"id":6079,"nodeType":"Block","src":"17894:926:21","statements":[{"assignments":[6029],"declarations":[{"constant":false,"id":6029,"mutability":"mutable","name":"dy","nameLocation":"18250:2:21","nodeType":"VariableDeclaration","scope":6079,"src":"18242:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6028,"name":"uint256","nodeType":"ElementaryTypeName","src":"18242:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6042,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6030,"name":"xy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"18257:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6031,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"18262:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18257:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18256:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18267:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"18256:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18255:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":6038,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"18278:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6039,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"18282:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6037,"name":"_d","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"18275:2:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18275:9:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18255:29:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18242:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6043,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"18306:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18312:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18306:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6072,"nodeType":"IfStatement","src":"18302:476:21","trueBody":{"id":6071,"nodeType":"Block","src":"18315:463:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6046,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"18341:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6047,"name":"xy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"18346:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18341:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6052,"nodeType":"IfStatement","src":"18337:135:21","trueBody":{"id":6051,"nodeType":"Block","src":"18350:122:21","statements":[{"expression":{"id":6049,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"18448:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6007,"id":6050,"nodeType":"Return","src":"18441:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6054,"name":"x0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"18500:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6055,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"18504:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18508:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18504:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6053,"name":"_k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"18497:2:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18497:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6059,"name":"xy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"18513:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18497:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6066,"nodeType":"IfStatement","src":"18493:239:21","trueBody":{"id":6065,"nodeType":"Block","src":"18517:215:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6061,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"18704:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18708:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18704:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6007,"id":6064,"nodeType":"Return","src":"18697:12:21"}]}},{"expression":{"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6067,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"18753:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":6068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18758:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18753:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6070,"nodeType":"ExpressionStatement","src":"18753:6:21"}]}},{"expression":{"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6073,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"18795:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6074,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"18799:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6075,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"18803:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18799:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18795:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6078,"nodeType":"ExpressionStatement","src":"18795:10:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6012,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"17819:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"323535","id":6013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17823:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"17819:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6129,"initializationExpression":{"assignments":[6009],"declarations":[{"constant":false,"id":6009,"mutability":"mutable","name":"i","nameLocation":"17812:1:21","nodeType":"VariableDeclaration","scope":6129,"src":"17804:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6008,"name":"uint256","nodeType":"ElementaryTypeName","src":"17804:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6011,"initialValue":{"hexValue":"30","id":6010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17816:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17804:13:21"},"loopExpression":{"expression":{"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17828:3:21","subExpression":{"id":6015,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"17828:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6017,"nodeType":"ExpressionStatement","src":"17828:3:21"},"nodeType":"ForStatement","src":"17799:1754:21"},{"expression":{"arguments":[{"hexValue":"2179","id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19569:4:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_28a82b0fd0eeee66f0b46b4a5160dc0d8287acf5ea44e590f41ff5ddc21516b9","typeString":"literal_string \"!y\""},"value":"!y"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_28a82b0fd0eeee66f0b46b4a5160dc0d8287acf5ea44e590f41ff5ddc21516b9","typeString":"literal_string \"!y\""}],"id":6130,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"19562:6:21","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19562:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6133,"nodeType":"ExpressionStatement","src":"19562:12:21"}]},"id":6135,"implemented":true,"kind":"function","modifiers":[],"name":"_get_y","nameLocation":"17715:6:21","nodeType":"FunctionDefinition","parameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5999,"mutability":"mutable","name":"x0","nameLocation":"17730:2:21","nodeType":"VariableDeclaration","scope":6135,"src":"17722:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5998,"name":"uint256","nodeType":"ElementaryTypeName","src":"17722:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6001,"mutability":"mutable","name":"xy","nameLocation":"17742:2:21","nodeType":"VariableDeclaration","scope":6135,"src":"17734:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6000,"name":"uint256","nodeType":"ElementaryTypeName","src":"17734:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6003,"mutability":"mutable","name":"y","nameLocation":"17754:1:21","nodeType":"VariableDeclaration","scope":6135,"src":"17746:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6002,"name":"uint256","nodeType":"ElementaryTypeName","src":"17746:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17721:35:21"},"returnParameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6135,"src":"17780:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"17780:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17779:9:21"},"scope":6412,"src":"17706:1875:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[7437],"body":{"id":6178,"nodeType":"Block","src":"19702:278:21","statements":[{"assignments":[6146,6148],"declarations":[{"constant":false,"id":6146,"mutability":"mutable","name":"_reserve0","nameLocation":"19721:9:21","nodeType":"VariableDeclaration","scope":6178,"src":"19713:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6145,"name":"uint256","nodeType":"ElementaryTypeName","src":"19713:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6148,"mutability":"mutable","name":"_reserve1","nameLocation":"19740:9:21","nodeType":"VariableDeclaration","scope":6178,"src":"19732:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6147,"name":"uint256","nodeType":"ElementaryTypeName","src":"19732:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6152,"initialValue":{"components":[{"id":6149,"name":"reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"19754:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6150,"name":"reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"19764:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19753:20:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"19712:61:21"},{"expression":{"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6153,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"19783:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6154,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"19796:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6161,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19844:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":6160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19836:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6159,"name":"address","nodeType":"ElementaryTypeName","src":"19836:7:21","typeDescriptions":{}}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19836:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6163,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"19851:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":6156,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"19820:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6155,"name":"IPoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"19807:12:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPoolFactory_$8143_$","typeString":"type(contract IPoolFactory)"}},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19807:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPoolFactory_$8143","typeString":"contract IPoolFactory"}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19829:6:21","memberName":"getFee","nodeType":"MemberAccess","referencedDeclaration":8103,"src":"19807:28:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,bool) view external returns (uint256)"}},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19807:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19796:62:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19795:64:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19862:5:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"19795:72:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19783:84:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6170,"nodeType":"ExpressionStatement","src":"19783:84:21"},{"expression":{"arguments":[{"id":6172,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"19933:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6173,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"19943:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6174,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"19952:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6175,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"19963:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6171,"name":"_getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"19919:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,address,uint256,uint256) view returns (uint256)"}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19919:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6144,"id":6177,"nodeType":"Return","src":"19912:61:21"}]},"documentation":{"id":6136,"nodeType":"StructuredDocumentation","src":"19587:21:21","text":"@inheritdoc IPool"},"functionSelector":"f140a35a","id":6179,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"19622:12:21","nodeType":"FunctionDefinition","parameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6138,"mutability":"mutable","name":"amountIn","nameLocation":"19643:8:21","nodeType":"VariableDeclaration","scope":6179,"src":"19635:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6137,"name":"uint256","nodeType":"ElementaryTypeName","src":"19635:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6140,"mutability":"mutable","name":"tokenIn","nameLocation":"19661:7:21","nodeType":"VariableDeclaration","scope":6179,"src":"19653:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6139,"name":"address","nodeType":"ElementaryTypeName","src":"19653:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19634:35:21"},"returnParameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6179,"src":"19693:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6142,"name":"uint256","nodeType":"ElementaryTypeName","src":"19693:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19692:9:21"},"scope":6412,"src":"19613:367:21","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6305,"nodeType":"Block","src":"20152:786:21","statements":[{"condition":{"id":6192,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"20166:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6303,"nodeType":"Block","src":"20735:197:21","statements":[{"assignments":[6279,6281],"declarations":[{"constant":false,"id":6279,"mutability":"mutable","name":"reserveA","nameLocation":"20758:8:21","nodeType":"VariableDeclaration","scope":6303,"src":"20750:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6278,"name":"uint256","nodeType":"ElementaryTypeName","src":"20750:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6281,"mutability":"mutable","name":"reserveB","nameLocation":"20776:8:21","nodeType":"VariableDeclaration","scope":6303,"src":"20768:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6280,"name":"uint256","nodeType":"ElementaryTypeName","src":"20768:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6292,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6282,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"20788:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6283,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"20799:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20788:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":6288,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"20834:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6289,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"20845:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20833:22:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20788:67:21","trueExpression":{"components":[{"id":6285,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"20809:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6286,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"20820:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20808:22:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"20749:106:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6293,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"20877:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6294,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"20888:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20877:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20876:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6297,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"20901:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6298,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"20912:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20901:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20900:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20876:45:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6191,"id":6302,"nodeType":"Return","src":"20869:52:21"}]},"id":6304,"nodeType":"IfStatement","src":"20162:770:21","trueBody":{"id":6277,"nodeType":"Block","src":"20174:555:21","statements":[{"assignments":[6194],"declarations":[{"constant":false,"id":6194,"mutability":"mutable","name":"xy","nameLocation":"20196:2:21","nodeType":"VariableDeclaration","scope":6277,"src":"20188:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6193,"name":"uint256","nodeType":"ElementaryTypeName","src":"20188:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6199,"initialValue":{"arguments":[{"id":6196,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"20204:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6197,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"20215:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6195,"name":"_k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"20201:2:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20201:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20188:37:21"},{"expression":{"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6200,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"20239:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6201,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"20252:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":6202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20264:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"20252:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20251:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6205,"name":"decimals0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"20272:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20251:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20239:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6208,"nodeType":"ExpressionStatement","src":"20239:42:21"},{"expression":{"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6209,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"20295:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6210,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"20308:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20320:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"20308:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20307:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6214,"name":"decimals1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"20328:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20307:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20295:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6217,"nodeType":"ExpressionStatement","src":"20295:42:21"},{"assignments":[6219,6221],"declarations":[{"constant":false,"id":6219,"mutability":"mutable","name":"reserveA","nameLocation":"20360:8:21","nodeType":"VariableDeclaration","scope":6277,"src":"20352:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6218,"name":"uint256","nodeType":"ElementaryTypeName","src":"20352:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6221,"mutability":"mutable","name":"reserveB","nameLocation":"20378:8:21","nodeType":"VariableDeclaration","scope":6277,"src":"20370:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6220,"name":"uint256","nodeType":"ElementaryTypeName","src":"20370:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6232,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6222,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"20390:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6223,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"20401:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20390:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":6228,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"20436:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6229,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"20447:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20435:22:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20390:67:21","trueExpression":{"components":[{"id":6225,"name":"_reserve0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"20411:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6226,"name":"_reserve1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"20422:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20410:22:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"20351:106:21"},{"expression":{"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6233,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"20471:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6234,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"20482:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6235,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"20493:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20482:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6243,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"20535:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":6244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20546:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"20535:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20534:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6247,"name":"decimals1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"20554:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20534:29:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20482:81:21","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6237,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"20503:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":6238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20514:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"20503:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20502:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6241,"name":"decimals0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"20522:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20502:29:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20471:92:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6251,"nodeType":"ExpressionStatement","src":"20471:92:21"},{"assignments":[6253],"declarations":[{"constant":false,"id":6253,"mutability":"mutable","name":"y","nameLocation":"20585:1:21","nodeType":"VariableDeclaration","scope":6277,"src":"20577:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6252,"name":"uint256","nodeType":"ElementaryTypeName","src":"20577:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6263,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6254,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"20589:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6256,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"20607:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6257,"name":"reserveA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"20618:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20607:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6259,"name":"xy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"20628:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6260,"name":"reserveB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"20632:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6255,"name":"_get_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"20600:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20600:41:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20589:52:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20577:64:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6264,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"20663:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6265,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"20668:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6266,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"20679:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20668:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6269,"name":"decimals0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"20700:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20668:41:21","trueExpression":{"id":6268,"name":"decimals1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"20688:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20667:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20663:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20662:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":6274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20714:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"20662:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6191,"id":6276,"nodeType":"Return","src":"20655:63:21"}]}}]},"id":6306,"implemented":true,"kind":"function","modifiers":[],"name":"_getAmountOut","nameLocation":"19995:13:21","nodeType":"FunctionDefinition","parameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"amountIn","nameLocation":"20026:8:21","nodeType":"VariableDeclaration","scope":6306,"src":"20018:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6180,"name":"uint256","nodeType":"ElementaryTypeName","src":"20018:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6183,"mutability":"mutable","name":"tokenIn","nameLocation":"20052:7:21","nodeType":"VariableDeclaration","scope":6306,"src":"20044:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6182,"name":"address","nodeType":"ElementaryTypeName","src":"20044:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6185,"mutability":"mutable","name":"_reserve0","nameLocation":"20077:9:21","nodeType":"VariableDeclaration","scope":6306,"src":"20069:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6184,"name":"uint256","nodeType":"ElementaryTypeName","src":"20069:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6187,"mutability":"mutable","name":"_reserve1","nameLocation":"20104:9:21","nodeType":"VariableDeclaration","scope":6306,"src":"20096:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6186,"name":"uint256","nodeType":"ElementaryTypeName","src":"20096:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20008:111:21"},"returnParameters":{"id":6191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6306,"src":"20143:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6189,"name":"uint256","nodeType":"ElementaryTypeName","src":"20143:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20142:9:21"},"scope":6412,"src":"19986:952:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6374,"nodeType":"Block","src":"21010:351:21","statements":[{"condition":{"id":6315,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"21024:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6372,"nodeType":"Block","src":"21307:48:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6368,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"21328:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6369,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"21332:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21328:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6314,"id":6371,"nodeType":"Return","src":"21321:12:21"}]},"id":6373,"nodeType":"IfStatement","src":"21020:335:21","trueBody":{"id":6367,"nodeType":"Block","src":"21032:269:21","statements":[{"assignments":[6317],"declarations":[{"constant":false,"id":6317,"mutability":"mutable","name":"_x","nameLocation":"21054:2:21","nodeType":"VariableDeclaration","scope":6367,"src":"21046:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6316,"name":"uint256","nodeType":"ElementaryTypeName","src":"21046:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6324,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6318,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"21060:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":6319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21064:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"21060:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21059:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6322,"name":"decimals0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"21072:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21059:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21046:35:21"},{"assignments":[6326],"declarations":[{"constant":false,"id":6326,"mutability":"mutable","name":"_y","nameLocation":"21103:2:21","nodeType":"VariableDeclaration","scope":6367,"src":"21095:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6325,"name":"uint256","nodeType":"ElementaryTypeName","src":"21095:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6333,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6327,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"21109:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":6328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21113:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"21109:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21108:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6331,"name":"decimals1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4233,"src":"21121:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21108:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21095:35:21"},{"assignments":[6335],"declarations":[{"constant":false,"id":6335,"mutability":"mutable","name":"_a","nameLocation":"21152:2:21","nodeType":"VariableDeclaration","scope":6367,"src":"21144:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6334,"name":"uint256","nodeType":"ElementaryTypeName","src":"21144:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6342,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6336,"name":"_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"21158:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6337,"name":"_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"21163:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21158:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21157:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21169:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"21157:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21144:29:21"},{"assignments":[6344],"declarations":[{"constant":false,"id":6344,"mutability":"mutable","name":"_b","nameLocation":"21195:2:21","nodeType":"VariableDeclaration","scope":6367,"src":"21187:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6343,"name":"uint256","nodeType":"ElementaryTypeName","src":"21187:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6359,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6345,"name":"_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"21202:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6346,"name":"_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"21207:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21202:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21201:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":6349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21213:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"21201:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6351,"name":"_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"21221:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6352,"name":"_y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"21226:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21221:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21220:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21232:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"21220:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21201:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21200:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21187:50:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6360,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"21259:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6361,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"21264:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21259:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6363,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21258:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":6364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21270:4:21","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"21258:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6314,"id":6366,"nodeType":"Return","src":"21251:23:21"}]}}]},"id":6375,"implemented":true,"kind":"function","modifiers":[],"name":"_k","nameLocation":"20953:2:21","nodeType":"FunctionDefinition","parameters":{"id":6311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"x","nameLocation":"20964:1:21","nodeType":"VariableDeclaration","scope":6375,"src":"20956:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6307,"name":"uint256","nodeType":"ElementaryTypeName","src":"20956:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6310,"mutability":"mutable","name":"y","nameLocation":"20975:1:21","nodeType":"VariableDeclaration","scope":6375,"src":"20967:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6309,"name":"uint256","nodeType":"ElementaryTypeName","src":"20967:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20955:22:21"},"returnParameters":{"id":6314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6375,"src":"21001:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6312,"name":"uint256","nodeType":"ElementaryTypeName","src":"21001:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21000:9:21"},"scope":6412,"src":"20944:417:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[307],"body":{"id":6383,"nodeType":"Block","src":"21614:29:21","statements":[{"expression":{"id":6381,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"21631:5:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":6380,"id":6382,"nodeType":"Return","src":"21624:12:21"}]},"functionSelector":"06fdde03","id":6384,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"21562:4:21","nodeType":"FunctionDefinition","overrides":{"id":6377,"nodeType":"OverrideSpecifier","overrides":[],"src":"21581:8:21"},"parameters":{"id":6376,"nodeType":"ParameterList","parameters":[],"src":"21566:2:21"},"returnParameters":{"id":6380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6384,"src":"21599:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6378,"name":"string","nodeType":"ElementaryTypeName","src":"21599:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21598:15:21"},"scope":6412,"src":"21553:90:21","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[316],"body":{"id":6392,"nodeType":"Block","src":"21712:31:21","statements":[{"expression":{"id":6390,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"21729:7:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":6389,"id":6391,"nodeType":"Return","src":"21722:14:21"}]},"functionSelector":"95d89b41","id":6393,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"21658:6:21","nodeType":"FunctionDefinition","overrides":{"id":6386,"nodeType":"OverrideSpecifier","overrides":[],"src":"21679:8:21"},"parameters":{"id":6385,"nodeType":"ParameterList","parameters":[],"src":"21664:2:21"},"returnParameters":{"id":6389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6393,"src":"21697:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6387,"name":"string","nodeType":"ElementaryTypeName","src":"21697:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21696:15:21"},"scope":6412,"src":"21649:94:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6410,"nodeType":"Block","src":"21824:57:21","statements":[{"expression":{"arguments":[{"id":6403,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"21845:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6402,"name":"_updateFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"21834:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21834:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6405,"nodeType":"ExpressionStatement","src":"21834:16:21"},{"expression":{"arguments":[{"id":6407,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"21871:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6406,"name":"_updateFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"21860:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21860:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6409,"nodeType":"ExpressionStatement","src":"21860:14:21"}]},"id":6411,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"21758:20:21","nodeType":"FunctionDefinition","parameters":{"id":6400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"from","nameLocation":"21787:4:21","nodeType":"VariableDeclaration","scope":6411,"src":"21779:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6394,"name":"address","nodeType":"ElementaryTypeName","src":"21779:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6397,"mutability":"mutable","name":"to","nameLocation":"21801:2:21","nodeType":"VariableDeclaration","scope":6411,"src":"21793:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6396,"name":"address","nodeType":"ElementaryTypeName","src":"21793:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6411,"src":"21805:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6398,"name":"uint256","nodeType":"ElementaryTypeName","src":"21805:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21778:35:21"},"returnParameters":{"id":6401,"nodeType":"ParameterList","parameters":[],"src":"21824:0:21"},"scope":6412,"src":"21749:132:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6413,"src":"932:20951:21","usedErrors":[36,41,46,55,60,65,870,877,1072,1353,1358,1361,1638,1710,1779,1781,2358,2363,2368,7083,7085,7087,7089,7091,7093,7095,7097,7099,7101,7103,7105],"usedEvents":[4,773,782,7113,7121,7131,7145,7151,7161]}],"src":"37:21847:21"}},"contracts/PoolFees.sol":{"id":22,"ast":{"absolutePath":"contracts/PoolFees.sol","exportedSymbols":{"IERC20":[839],"PoolFees":[6496],"SafeERC20":[1345]},"id":6497,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":6414,"literals":["solidity","^","0.8",".19","||","0.8",".20"],"nodeType":"PragmaDirective","src":"37:34:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6497,"sourceUnit":840,"src":"72:70:22","symbolAliases":[{"foreign":{"id":6415,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"80:6:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":6418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6497,"sourceUnit":1346,"src":"143:82:22","symbolAliases":[{"foreign":{"id":6417,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"151:9:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"PoolFees","contractDependencies":[],"contractKind":"contract","documentation":{"id":6419,"nodeType":"StructuredDocumentation","src":"227:160:22","text":"@title PoolFees\n @notice Contract used as 1:1 pool relationship to split out fees.\n @notice Ensures curve does not need to be modified for LP shares."},"fullyImplemented":true,"id":6496,"linearizedBaseContracts":[6496],"name":"PoolFees","nameLocation":"396:8:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6423,"libraryName":{"id":6420,"name":"SafeERC20","nameLocations":["417:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":1345,"src":"417:9:22"},"nodeType":"UsingForDirective","src":"411:27:22","typeName":{"id":6422,"nodeType":"UserDefinedTypeName","pathNode":{"id":6421,"name":"IERC20","nameLocations":["431:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":839,"src":"431:6:22"},"referencedDeclaration":839,"src":"431:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}}},{"constant":false,"id":6425,"mutability":"immutable","name":"pool","nameLocation":"470:4:22","nodeType":"VariableDeclaration","scope":6496,"src":"443:31:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6424,"name":"address","nodeType":"ElementaryTypeName","src":"443:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6427,"mutability":"immutable","name":"token0","nameLocation":"535:6:22","nodeType":"VariableDeclaration","scope":6496,"src":"508:33:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6426,"name":"address","nodeType":"ElementaryTypeName","src":"508:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6429,"mutability":"immutable","name":"token1","nameLocation":"642:6:22","nodeType":"VariableDeclaration","scope":6496,"src":"615:33:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6428,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"errorSelector":"6f61f641","id":6431,"name":"NotPool","nameLocation":"729:7:22","nodeType":"ErrorDefinition","parameters":{"id":6430,"nodeType":"ParameterList","parameters":[],"src":"736:2:22"},"src":"723:16:22"},{"body":{"id":6451,"nodeType":"Block","src":"791:86:22","statements":[{"expression":{"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6438,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"801:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6439,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"808:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"812:6:22","memberName":"sender","nodeType":"MemberAccess","src":"808:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"801:17:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6442,"nodeType":"ExpressionStatement","src":"801:17:22"},{"expression":{"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6443,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"828:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6444,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"837:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"828:16:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6446,"nodeType":"ExpressionStatement","src":"828:16:22"},{"expression":{"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6447,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6429,"src":"854:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6448,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"863:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"854:16:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6450,"nodeType":"ExpressionStatement","src":"854:16:22"}]},"id":6452,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"_token0","nameLocation":"765:7:22","nodeType":"VariableDeclaration","scope":6452,"src":"757:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6432,"name":"address","nodeType":"ElementaryTypeName","src":"757:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6435,"mutability":"mutable","name":"_token1","nameLocation":"782:7:22","nodeType":"VariableDeclaration","scope":6452,"src":"774:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6434,"name":"address","nodeType":"ElementaryTypeName","src":"774:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"756:34:22"},"returnParameters":{"id":6437,"nodeType":"ParameterList","parameters":[],"src":"791:0:22"},"scope":6496,"src":"745:132:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6494,"nodeType":"Block","src":"1027:211:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6462,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1041:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1045:6:22","memberName":"sender","nodeType":"MemberAccess","src":"1041:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6464,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"1055:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1041:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6469,"nodeType":"IfStatement","src":"1037:40:22","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6466,"name":"NotPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"1068:7:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1068:9:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6468,"nodeType":"RevertStatement","src":"1061:16:22"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6470,"name":"_amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6457,"src":"1091:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1102:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1091:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6481,"nodeType":"IfStatement","src":"1087:67:22","trueBody":{"expression":{"arguments":[{"id":6477,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"1133:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6478,"name":"_amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6457,"src":"1145:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6474,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"1112:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6473,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"1105:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1105:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1120:12:22","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"1105:27:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$839_$","typeString":"function (contract IERC20,address,uint256)"}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1105:49:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6480,"nodeType":"ExpressionStatement","src":"1105:49:22"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6482,"name":"_amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"1168:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1179:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1168:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6493,"nodeType":"IfStatement","src":"1164:67:22","trueBody":{"expression":{"arguments":[{"id":6489,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"1210:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6490,"name":"_amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"1222:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6486,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6429,"src":"1189:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6485,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"1182:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$839_$","typeString":"type(contract IERC20)"}},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1182:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$839","typeString":"contract IERC20"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1197:12:22","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"1182:27:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$839_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$839_$","typeString":"function (contract IERC20,address,uint256)"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1182:49:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6492,"nodeType":"ExpressionStatement","src":"1182:49:22"}}]},"documentation":{"id":6453,"nodeType":"StructuredDocumentation","src":"883:52:22","text":"@notice Allow the pool to transfer fees to users"},"functionSelector":"533cf5ce","id":6495,"implemented":true,"kind":"function","modifiers":[],"name":"claimFeesFor","nameLocation":"949:12:22","nodeType":"FunctionDefinition","parameters":{"id":6460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6455,"mutability":"mutable","name":"_recipient","nameLocation":"970:10:22","nodeType":"VariableDeclaration","scope":6495,"src":"962:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6454,"name":"address","nodeType":"ElementaryTypeName","src":"962:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6457,"mutability":"mutable","name":"_amount0","nameLocation":"990:8:22","nodeType":"VariableDeclaration","scope":6495,"src":"982:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6456,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6459,"mutability":"mutable","name":"_amount1","nameLocation":"1008:8:22","nodeType":"VariableDeclaration","scope":6495,"src":"1000:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"961:56:22"},"returnParameters":{"id":6461,"nodeType":"ParameterList","parameters":[],"src":"1027:0:22"},"scope":6496,"src":"940:298:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6497,"src":"387:853:22","usedErrors":[1072,1353,1358,1361,6431],"usedEvents":[]}],"src":"37:1204:22"}},"contracts/factories/PoolFactory.sol":{"id":23,"ast":{"absolutePath":"contracts/factories/PoolFactory.sol","exportedSymbols":{"Clones":[246],"IPool":[7458],"IPoolFactory":[8143],"Pool":[6412],"PoolFactory":[7079]},"id":7080,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":6498,"literals":["solidity","^","0.8",".19","||","0.8",".20"],"nodeType":"PragmaDirective","src":"37:34:23"},{"absolutePath":"contracts/interfaces/factories/IPoolFactory.sol","file":"../interfaces/factories/IPoolFactory.sol","id":6500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7080,"sourceUnit":8144,"src":"72:70:23","symbolAliases":[{"foreign":{"id":6499,"name":"IPoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8143,"src":"80:12:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPool.sol","file":"../interfaces/IPool.sol","id":6502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7080,"sourceUnit":7459,"src":"143:46:23","symbolAliases":[{"foreign":{"id":6501,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7458,"src":"151:5:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/Pool.sol","file":"../Pool.sol","id":6504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7080,"sourceUnit":6413,"src":"190:33:23","symbolAliases":[{"foreign":{"id":6503,"name":"Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"198:4:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":6506,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7080,"sourceUnit":247,"src":"224:64:23","symbolAliases":[{"foreign":{"id":6505,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"232:6:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6507,"name":"IPoolFactory","nameLocations":["314:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":8143,"src":"314:12:23"},"id":6508,"nodeType":"InheritanceSpecifier","src":"314:12:23"}],"canonicalName":"PoolFactory","contractDependencies":[6412],"contractKind":"contract","fullyImplemented":true,"id":7079,"linearizedBaseContracts":[7079,8143],"name":"PoolFactory","nameLocation":"299:11:23","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[8142],"constant":false,"functionSelector":"5c60da1b","id":6510,"mutability":"immutable","name":"implementation","nameLocation":"358:14:23","nodeType":"VariableDeclaration","scope":7079,"src":"333:39:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6509,"name":"address","nodeType":"ElementaryTypeName","src":"333:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[8132],"constant":false,"functionSelector":"b187bd26","id":6512,"mutability":"mutable","name":"isPaused","nameLocation":"391:8:23","nodeType":"VariableDeclaration","scope":7079,"src":"379:20:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6511,"name":"bool","nodeType":"ElementaryTypeName","src":"379:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"9fd0506d","id":6514,"mutability":"mutable","name":"pauser","nameLocation":"420:6:23","nodeType":"VariableDeclaration","scope":7079,"src":"405:21:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6513,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"40bbd775","id":6516,"mutability":"mutable","name":"stableFee","nameLocation":"448:9:23","nodeType":"VariableDeclaration","scope":7079,"src":"433:24:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6515,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5084ed03","id":6518,"mutability":"mutable","name":"volatileFee","nameLocation":"478:11:23","nodeType":"VariableDeclaration","scope":7079,"src":"463:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6517,"name":"uint256","nodeType":"ElementaryTypeName","src":"463:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"bc063e1a","id":6521,"mutability":"constant","name":"MAX_FEE","nameLocation":"519:7:23","nodeType":"VariableDeclaration","scope":7079,"src":"495:37:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6519,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"333030","id":6520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"529:3:23","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"300"},"visibility":"public"},{"constant":true,"functionSelector":"38c55d46","id":6524,"mutability":"constant","name":"ZERO_FEE_INDICATOR","nameLocation":"713:18:23","nodeType":"VariableDeclaration","scope":7079,"src":"689:48:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6522,"name":"uint256","nodeType":"ElementaryTypeName","src":"689:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343230","id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"734:3:23","typeDescriptions":{"typeIdentifier":"t_rational_420_by_1","typeString":"int_const 420"},"value":"420"},"visibility":"public"},{"constant":false,"functionSelector":"d0fb0203","id":6526,"mutability":"mutable","name":"feeManager","nameLocation":"758:10:23","nodeType":"VariableDeclaration","scope":7079,"src":"743:25:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6525,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[8137],"constant":false,"documentation":{"id":6527,"nodeType":"StructuredDocumentation","src":"775:79:23","text":"@dev used to change the name/symbol of the pool by calling emergencyCouncil"},"functionSelector":"46c96aac","id":6529,"mutability":"mutable","name":"voter","nameLocation":"874:5:23","nodeType":"VariableDeclaration","scope":7079,"src":"859:20:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6528,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":6537,"mutability":"mutable","name":"_getPool","nameLocation":"959:8:23","nodeType":"VariableDeclaration","scope":7079,"src":"886:81:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$","typeString":"mapping(address => mapping(address => mapping(bool => address)))"},"typeName":{"id":6536,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6530,"name":"address","nodeType":"ElementaryTypeName","src":"894:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"886:64:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$","typeString":"mapping(address => mapping(address => mapping(bool => address)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6535,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6531,"name":"address","nodeType":"ElementaryTypeName","src":"913:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"905:44:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$","typeString":"mapping(address => mapping(bool => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6534,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6532,"name":"bool","nodeType":"ElementaryTypeName","src":"932:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Mapping","src":"924:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bool_$_t_address_$","typeString":"mapping(bool => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6533,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}}},"visibility":"private"},{"constant":false,"functionSelector":"41d1de97","id":6540,"mutability":"mutable","name":"allPools","nameLocation":"990:8:23","nodeType":"VariableDeclaration","scope":7079,"src":"973:25:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":6538,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6539,"nodeType":"ArrayTypeName","src":"973:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"id":6544,"mutability":"mutable","name":"_isPool","nameLocation":"1037:7:23","nodeType":"VariableDeclaration","scope":7079,"src":"1004:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6543,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6541,"name":"address","nodeType":"ElementaryTypeName","src":"1012:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1004:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6542,"name":"bool","nodeType":"ElementaryTypeName","src":"1023:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"functionSelector":"4d419abc","id":6548,"mutability":"mutable","name":"customFee","nameLocation":"1183:9:23","nodeType":"VariableDeclaration","scope":7079,"src":"1148:44:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6547,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6545,"name":"address","nodeType":"ElementaryTypeName","src":"1156:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1148:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6546,"name":"uint256","nodeType":"ElementaryTypeName","src":"1167:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":6550,"mutability":"mutable","name":"_temp0","nameLocation":"1244:6:23","nodeType":"VariableDeclaration","scope":7079,"src":"1227:23:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6549,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6552,"mutability":"mutable","name":"_temp1","nameLocation":"1273:6:23","nodeType":"VariableDeclaration","scope":7079,"src":"1256:23:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6551,"name":"address","nodeType":"ElementaryTypeName","src":"1256:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6554,"mutability":"mutable","name":"_temp","nameLocation":"1299:5:23","nodeType":"VariableDeclaration","scope":7079,"src":"1285:19:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6553,"name":"bool","nodeType":"ElementaryTypeName","src":"1285:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"body":{"id":6590,"nodeType":"Block","src":"1348:231:23","statements":[{"expression":{"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6559,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"1358:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6560,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"1375:15:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1358:32:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6562,"nodeType":"ExpressionStatement","src":"1358:32:23"},{"expression":{"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6563,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"1400:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6564,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1408:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1412:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1408:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1400:18:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6567,"nodeType":"ExpressionStatement","src":"1400:18:23"},{"expression":{"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6568,"name":"pauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"1428:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6569,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1437:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1441:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1437:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1428:19:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6572,"nodeType":"ExpressionStatement","src":"1428:19:23"},{"expression":{"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6573,"name":"feeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"1457:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6574,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1470:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1474:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1470:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1457:23:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6577,"nodeType":"ExpressionStatement","src":"1457:23:23"},{"expression":{"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6578,"name":"isPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"1490:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1501:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1490:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6581,"nodeType":"ExpressionStatement","src":"1490:16:23"},{"expression":{"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6582,"name":"stableFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"1516:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"35","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1528:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1516:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6585,"nodeType":"ExpressionStatement","src":"1516:13:23"},{"expression":{"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6586,"name":"volatileFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"1548:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3330","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1562:2:23","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"1548:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6589,"nodeType":"ExpressionStatement","src":"1548:16:23"}]},"id":6591,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6556,"mutability":"mutable","name":"_implementation","nameLocation":"1331:15:23","nodeType":"VariableDeclaration","scope":6591,"src":"1323:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6555,"name":"address","nodeType":"ElementaryTypeName","src":"1323:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1322:25:23"},"returnParameters":{"id":6558,"nodeType":"ParameterList","parameters":[],"src":"1348:0:23"},"scope":7079,"src":"1311:268:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8024],"body":{"id":6600,"nodeType":"Block","src":"1676:39:23","statements":[{"expression":{"expression":{"id":6597,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"1693:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1702:6:23","memberName":"length","nodeType":"MemberAccess","src":"1693:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6596,"id":6599,"nodeType":"Return","src":"1686:22:23"}]},"documentation":{"id":6592,"nodeType":"StructuredDocumentation","src":"1585:28:23","text":"@inheritdoc IPoolFactory"},"functionSelector":"efde4e64","id":6601,"implemented":true,"kind":"function","modifiers":[],"name":"allPoolsLength","nameLocation":"1627:14:23","nodeType":"FunctionDefinition","parameters":{"id":6593,"nodeType":"ParameterList","parameters":[],"src":"1641:2:23"},"returnParameters":{"id":6596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6601,"src":"1667:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6594,"name":"uint256","nodeType":"ElementaryTypeName","src":"1667:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1666:9:23"},"scope":7079,"src":"1618:97:23","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[8056],"body":{"id":6640,"nodeType":"Block","src":"1847:122:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6613,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"1864:3:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":6614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1870:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1864:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6620,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"1887:3:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1894:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1887:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":6630,"name":"_getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"1931:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$","typeString":"mapping(address => mapping(address => mapping(bool => address)))"}},"id":6632,"indexExpression":{"id":6631,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"1940:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1931:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$","typeString":"mapping(address => mapping(bool => address))"}},"id":6634,"indexExpression":{"id":6633,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"1948:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1931:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bool_$_t_address_$","typeString":"mapping(bool => address)"}},"id":6636,"indexExpression":{"hexValue":"66616c7365","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1956:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1931:31:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1887:75:23","trueExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":6623,"name":"_getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"1898:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$","typeString":"mapping(address => mapping(address => mapping(bool => address)))"}},"id":6625,"indexExpression":{"id":6624,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"1907:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1898:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$","typeString":"mapping(address => mapping(bool => address))"}},"id":6627,"indexExpression":{"id":6626,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"1915:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1898:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bool_$_t_address_$","typeString":"mapping(bool => address)"}},"id":6629,"indexExpression":{"hexValue":"74727565","id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1923:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1898:30:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1864:98:23","trueExpression":{"arguments":[{"hexValue":"30","id":6618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1882:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1874:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6616,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:23","typeDescriptions":{}}},"id":6619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1874:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6612,"id":6639,"nodeType":"Return","src":"1857:105:23"}]},"documentation":{"id":6602,"nodeType":"StructuredDocumentation","src":"1721:28:23","text":"@inheritdoc IPoolFactory"},"functionSelector":"1698ee82","id":6641,"implemented":true,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"1763:7:23","nodeType":"FunctionDefinition","parameters":{"id":6609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"tokenA","nameLocation":"1779:6:23","nodeType":"VariableDeclaration","scope":6641,"src":"1771:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6603,"name":"address","nodeType":"ElementaryTypeName","src":"1771:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6606,"mutability":"mutable","name":"tokenB","nameLocation":"1795:6:23","nodeType":"VariableDeclaration","scope":6641,"src":"1787:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6605,"name":"address","nodeType":"ElementaryTypeName","src":"1787:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6608,"mutability":"mutable","name":"fee","nameLocation":"1810:3:23","nodeType":"VariableDeclaration","scope":6641,"src":"1803:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6607,"name":"uint24","nodeType":"ElementaryTypeName","src":"1803:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1770:44:23"},"returnParameters":{"id":6612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6641,"src":"1838:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6610,"name":"address","nodeType":"ElementaryTypeName","src":"1838:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1837:9:23"},"scope":7079,"src":"1754:215:23","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[8044],"body":{"id":6661,"nodeType":"Block","src":"2102:56:23","statements":[{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":6653,"name":"_getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"2119:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$","typeString":"mapping(address => mapping(address => mapping(bool => address)))"}},"id":6655,"indexExpression":{"id":6654,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"2128:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2119:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$","typeString":"mapping(address => mapping(bool => address))"}},"id":6657,"indexExpression":{"id":6656,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"2136:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2119:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bool_$_t_address_$","typeString":"mapping(bool => address)"}},"id":6659,"indexExpression":{"id":6658,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"2144:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2119:32:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6652,"id":6660,"nodeType":"Return","src":"2112:39:23"}]},"documentation":{"id":6642,"nodeType":"StructuredDocumentation","src":"1975:28:23","text":"@inheritdoc IPoolFactory"},"functionSelector":"79bc57d5","id":6662,"implemented":true,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"2017:7:23","nodeType":"FunctionDefinition","parameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6644,"mutability":"mutable","name":"tokenA","nameLocation":"2033:6:23","nodeType":"VariableDeclaration","scope":6662,"src":"2025:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6643,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6646,"mutability":"mutable","name":"tokenB","nameLocation":"2049:6:23","nodeType":"VariableDeclaration","scope":6662,"src":"2041:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6645,"name":"address","nodeType":"ElementaryTypeName","src":"2041:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6648,"mutability":"mutable","name":"stable","nameLocation":"2062:6:23","nodeType":"VariableDeclaration","scope":6662,"src":"2057:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6647,"name":"bool","nodeType":"ElementaryTypeName","src":"2057:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2024:45:23"},"returnParameters":{"id":6652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6662,"src":"2093:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6650,"name":"address","nodeType":"ElementaryTypeName","src":"2093:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2092:9:23"},"scope":7079,"src":"2008:150:23","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[8032],"body":{"id":6674,"nodeType":"Block","src":"2256:37:23","statements":[{"expression":{"baseExpression":{"id":6670,"name":"_isPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2273:7:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6672,"indexExpression":{"id":6671,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"2281:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2273:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6669,"id":6673,"nodeType":"Return","src":"2266:20:23"}]},"documentation":{"id":6663,"nodeType":"StructuredDocumentation","src":"2164:28:23","text":"@inheritdoc IPoolFactory"},"functionSelector":"5b16ebb7","id":6675,"implemented":true,"kind":"function","modifiers":[],"name":"isPool","nameLocation":"2206:6:23","nodeType":"FunctionDefinition","parameters":{"id":6666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6665,"mutability":"mutable","name":"pool","nameLocation":"2221:4:23","nodeType":"VariableDeclaration","scope":6675,"src":"2213:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6664,"name":"address","nodeType":"ElementaryTypeName","src":"2213:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2212:14:23"},"returnParameters":{"id":6669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6675,"src":"2250:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6667,"name":"bool","nodeType":"ElementaryTypeName","src":"2250:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2249:6:23"},"scope":7079,"src":"2197:96:23","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[8062],"body":{"id":6697,"nodeType":"Block","src":"2375:114:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6681,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2389:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2393:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2389:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6683,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"2403:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2389:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6688,"nodeType":"IfStatement","src":"2385:42:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6685,"name":"NotVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"2417:8:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2417:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6687,"nodeType":"RevertStatement","src":"2410:17:23"}},{"expression":{"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6689,"name":"voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"2437:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6690,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"2445:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2437:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6692,"nodeType":"ExpressionStatement","src":"2437:14:23"},{"eventCall":{"arguments":[{"id":6694,"name":"_voter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"2475:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6693,"name":"SetVoter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"2466:8:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2466:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6696,"nodeType":"EmitStatement","src":"2461:21:23"}]},"documentation":{"id":6676,"nodeType":"StructuredDocumentation","src":"2299:28:23","text":"@inheritdoc IPoolFactory"},"functionSelector":"4bc2a657","id":6698,"implemented":true,"kind":"function","modifiers":[],"name":"setVoter","nameLocation":"2341:8:23","nodeType":"FunctionDefinition","parameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"_voter","nameLocation":"2358:6:23","nodeType":"VariableDeclaration","scope":6698,"src":"2350:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6677,"name":"address","nodeType":"ElementaryTypeName","src":"2350:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2349:16:23"},"returnParameters":{"id":6680,"nodeType":"ParameterList","parameters":[],"src":"2375:0:23"},"scope":7079,"src":"2332:157:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[8067],"body":{"id":6729,"nodeType":"Block","src":"2540:177:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6703,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2554:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2558:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2554:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6705,"name":"pauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"2568:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2554:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6710,"nodeType":"IfStatement","src":"2550:44:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6707,"name":"NotPauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"2583:9:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6709,"nodeType":"RevertStatement","src":"2576:18:23"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6711,"name":"_pauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"2608:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2619:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6712,"name":"address","nodeType":"ElementaryTypeName","src":"2619:7:23","typeDescriptions":{}}},"id":6715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2619:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2608:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6720,"nodeType":"IfStatement","src":"2604:47:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6717,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"2638:11:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2638:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6719,"nodeType":"RevertStatement","src":"2631:20:23"}},{"expression":{"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6721,"name":"pauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"2661:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6722,"name":"_pauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"2670:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2661:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6724,"nodeType":"ExpressionStatement","src":"2661:16:23"},{"eventCall":{"arguments":[{"id":6726,"name":"_pauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"2702:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6725,"name":"SetPauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7964,"src":"2692:9:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6728,"nodeType":"EmitStatement","src":"2687:23:23"}]},"functionSelector":"2d88af4a","id":6730,"implemented":true,"kind":"function","modifiers":[],"name":"setPauser","nameLocation":"2504:9:23","nodeType":"FunctionDefinition","parameters":{"id":6701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6700,"mutability":"mutable","name":"_pauser","nameLocation":"2522:7:23","nodeType":"VariableDeclaration","scope":6730,"src":"2514:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6699,"name":"address","nodeType":"ElementaryTypeName","src":"2514:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2513:17:23"},"returnParameters":{"id":6702,"nodeType":"ParameterList","parameters":[],"src":"2540:0:23"},"scope":7079,"src":"2495:222:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[8072],"body":{"id":6751,"nodeType":"Block","src":"2768:124:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6735,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2782:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2786:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2782:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6737,"name":"pauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6514,"src":"2796:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2782:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6742,"nodeType":"IfStatement","src":"2778:44:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6739,"name":"NotPauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8008,"src":"2811:9:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6741,"nodeType":"RevertStatement","src":"2804:18:23"}},{"expression":{"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6743,"name":"isPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"2832:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6744,"name":"_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"2843:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2832:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6746,"nodeType":"ExpressionStatement","src":"2832:17:23"},{"eventCall":{"arguments":[{"id":6748,"name":"_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"2878:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6747,"name":"SetPauseState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7968,"src":"2864:13:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6750,"nodeType":"EmitStatement","src":"2859:26:23"}]},"functionSelector":"cdb88ad1","id":6752,"implemented":true,"kind":"function","modifiers":[],"name":"setPauseState","nameLocation":"2732:13:23","nodeType":"FunctionDefinition","parameters":{"id":6733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6732,"mutability":"mutable","name":"_state","nameLocation":"2751:6:23","nodeType":"VariableDeclaration","scope":6752,"src":"2746:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6731,"name":"bool","nodeType":"ElementaryTypeName","src":"2746:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2745:13:23"},"returnParameters":{"id":6734,"nodeType":"ParameterList","parameters":[],"src":"2768:0:23"},"scope":7079,"src":"2723:169:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[8077],"body":{"id":6783,"nodeType":"Block","src":"2951:205:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6757,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2965:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2965:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6759,"name":"feeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"2979:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2965:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6764,"nodeType":"IfStatement","src":"2961:52:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6761,"name":"NotFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8006,"src":"2998:13:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2998:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6763,"nodeType":"RevertStatement","src":"2991:22:23"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6765,"name":"_feeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"3027:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3050:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3042:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6766,"name":"address","nodeType":"ElementaryTypeName","src":"3042:7:23","typeDescriptions":{}}},"id":6769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3042:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3027:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6774,"nodeType":"IfStatement","src":"3023:51:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6771,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"3061:11:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3061:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6773,"nodeType":"RevertStatement","src":"3054:20:23"}},{"expression":{"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6775,"name":"feeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"3084:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6776,"name":"_feeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"3097:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3084:24:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6778,"nodeType":"ExpressionStatement","src":"3084:24:23"},{"eventCall":{"arguments":[{"id":6780,"name":"_feeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"3137:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6779,"name":"SetFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"3123:13:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3123:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6782,"nodeType":"EmitStatement","src":"3118:31:23"}]},"functionSelector":"472d35b9","id":6784,"implemented":true,"kind":"function","modifiers":[],"name":"setFeeManager","nameLocation":"2907:13:23","nodeType":"FunctionDefinition","parameters":{"id":6755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6754,"mutability":"mutable","name":"_feeManager","nameLocation":"2929:11:23","nodeType":"VariableDeclaration","scope":6784,"src":"2921:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6753,"name":"address","nodeType":"ElementaryTypeName","src":"2921:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2920:21:23"},"returnParameters":{"id":6756,"nodeType":"ParameterList","parameters":[],"src":"2951:0:23"},"scope":7079,"src":"2898:258:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[8085],"body":{"id":6826,"nodeType":"Block","src":"3248:271:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6792,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3262:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3266:6:23","memberName":"sender","nodeType":"MemberAccess","src":"3262:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6794,"name":"feeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"3276:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3262:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6799,"nodeType":"IfStatement","src":"3258:52:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6796,"name":"NotFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8006,"src":"3295:13:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3295:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6798,"nodeType":"RevertStatement","src":"3288:22:23"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6800,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"3324:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6801,"name":"MAX_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"3331:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3324:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6806,"nodeType":"IfStatement","src":"3320:39:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6803,"name":"FeeTooHigh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8002,"src":"3347:10:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3347:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6805,"nodeType":"RevertStatement","src":"3340:19:23"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6807,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"3373:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3381:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3373:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6813,"nodeType":"IfStatement","src":"3369:31:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6810,"name":"ZeroFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8016,"src":"3391:7:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3391:9:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6812,"nodeType":"RevertStatement","src":"3384:16:23"}},{"condition":{"id":6814,"name":"_stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"3414:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6824,"nodeType":"Block","src":"3470:43:23","statements":[{"expression":{"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6820,"name":"volatileFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"3484:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6821,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"3498:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3484:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6823,"nodeType":"ExpressionStatement","src":"3484:18:23"}]},"id":6825,"nodeType":"IfStatement","src":"3410:103:23","trueBody":{"id":6819,"nodeType":"Block","src":"3423:41:23","statements":[{"expression":{"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6815,"name":"stableFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"3437:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6816,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6789,"src":"3449:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3437:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6818,"nodeType":"ExpressionStatement","src":"3437:16:23"}]}}]},"documentation":{"id":6785,"nodeType":"StructuredDocumentation","src":"3162:28:23","text":"@inheritdoc IPoolFactory"},"functionSelector":"e1f76b44","id":6827,"implemented":true,"kind":"function","modifiers":[],"name":"setFee","nameLocation":"3204:6:23","nodeType":"FunctionDefinition","parameters":{"id":6790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6787,"mutability":"mutable","name":"_stable","nameLocation":"3216:7:23","nodeType":"VariableDeclaration","scope":6827,"src":"3211:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6786,"name":"bool","nodeType":"ElementaryTypeName","src":"3211:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6789,"mutability":"mutable","name":"_fee","nameLocation":"3233:4:23","nodeType":"VariableDeclaration","scope":6827,"src":"3225:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6788,"name":"uint256","nodeType":"ElementaryTypeName","src":"3225:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:28:23"},"returnParameters":{"id":6791,"nodeType":"ParameterList","parameters":[],"src":"3248:0:23"},"scope":7079,"src":"3195:324:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[8093],"body":{"id":6873,"nodeType":"Block","src":"3616:266:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6835,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3630:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3634:6:23","memberName":"sender","nodeType":"MemberAccess","src":"3630:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6837,"name":"feeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6526,"src":"3644:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3630:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6842,"nodeType":"IfStatement","src":"3626:52:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6839,"name":"NotFeeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8006,"src":"3663:13:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3663:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6841,"nodeType":"RevertStatement","src":"3656:22:23"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6843,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"3692:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6844,"name":"MAX_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"3698:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3692:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6846,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"3709:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6847,"name":"ZERO_FEE_INDICATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"3716:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3709:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3692:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6853,"nodeType":"IfStatement","src":"3688:67:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6850,"name":"FeeTooHigh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8002,"src":"3743:10:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3743:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6852,"nodeType":"RevertStatement","src":"3736:19:23"}},{"condition":{"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3769:14:23","subExpression":{"baseExpression":{"id":6854,"name":"_isPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"3770:7:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6856,"indexExpression":{"id":6855,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"3778:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3770:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6861,"nodeType":"IfStatement","src":"3765:40:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6858,"name":"InvalidPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"3792:11:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6860,"nodeType":"RevertStatement","src":"3785:20:23"}},{"expression":{"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6862,"name":"customFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"3816:9:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6864,"indexExpression":{"id":6863,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"3826:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3816:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6865,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"3834:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3816:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6867,"nodeType":"ExpressionStatement","src":"3816:21:23"},{"eventCall":{"arguments":[{"id":6869,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"3865:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6870,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"3871:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6868,"name":"SetCustomFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7998,"src":"3852:12:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3852:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6872,"nodeType":"EmitStatement","src":"3847:28:23"}]},"documentation":{"id":6828,"nodeType":"StructuredDocumentation","src":"3525:28:23","text":"@inheritdoc IPoolFactory"},"functionSelector":"d49466a8","id":6874,"implemented":true,"kind":"function","modifiers":[],"name":"setCustomFee","nameLocation":"3567:12:23","nodeType":"FunctionDefinition","parameters":{"id":6833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6830,"mutability":"mutable","name":"pool","nameLocation":"3588:4:23","nodeType":"VariableDeclaration","scope":6874,"src":"3580:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6829,"name":"address","nodeType":"ElementaryTypeName","src":"3580:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6832,"mutability":"mutable","name":"fee","nameLocation":"3602:3:23","nodeType":"VariableDeclaration","scope":6874,"src":"3594:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6831,"name":"uint256","nodeType":"ElementaryTypeName","src":"3594:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3579:27:23"},"returnParameters":{"id":6834,"nodeType":"ParameterList","parameters":[],"src":"3616:0:23"},"scope":7079,"src":"3558:324:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[8103],"body":{"id":6905,"nodeType":"Block","src":"3995:145:23","statements":[{"assignments":[6885],"declarations":[{"constant":false,"id":6885,"mutability":"mutable","name":"fee","nameLocation":"4013:3:23","nodeType":"VariableDeclaration","scope":6905,"src":"4005:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6884,"name":"uint256","nodeType":"ElementaryTypeName","src":"4005:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6889,"initialValue":{"baseExpression":{"id":6886,"name":"customFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"4019:9:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6888,"indexExpression":{"id":6887,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"4029:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4019:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4005:29:23"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6890,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6885,"src":"4051:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6891,"name":"ZERO_FEE_INDICATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"4058:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4051:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6894,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6885,"src":"4083:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4090:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4083:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"id":6898,"name":"_stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"4100:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6900,"name":"volatileFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"4122:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4100:33:23","trueExpression":{"id":6899,"name":"stableFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"4110:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4083:50:23","trueExpression":{"id":6897,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6885,"src":"4094:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4051:82:23","trueExpression":{"hexValue":"30","id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4079:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6883,"id":6904,"nodeType":"Return","src":"4044:89:23"}]},"documentation":{"id":6875,"nodeType":"StructuredDocumentation","src":"3888:28:23","text":"@inheritdoc IPoolFactory"},"functionSelector":"cc56b2c5","id":6906,"implemented":true,"kind":"function","modifiers":[],"name":"getFee","nameLocation":"3930:6:23","nodeType":"FunctionDefinition","parameters":{"id":6880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6877,"mutability":"mutable","name":"pool","nameLocation":"3945:4:23","nodeType":"VariableDeclaration","scope":6906,"src":"3937:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6876,"name":"address","nodeType":"ElementaryTypeName","src":"3937:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6879,"mutability":"mutable","name":"_stable","nameLocation":"3956:7:23","nodeType":"VariableDeclaration","scope":6906,"src":"3951:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6878,"name":"bool","nodeType":"ElementaryTypeName","src":"3951:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3936:28:23"},"returnParameters":{"id":6883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6906,"src":"3986:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6881,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:9:23"},"scope":7079,"src":"3921:219:23","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8127],"body":{"id":6937,"nodeType":"Block","src":"4275:132:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6918,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"4289:3:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4289:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6924,"nodeType":"IfStatement","src":"4285:32:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6921,"name":"FeeInvalid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"4305:10:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4305:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6923,"nodeType":"RevertStatement","src":"4298:19:23"}},{"assignments":[6926],"declarations":[{"constant":false,"id":6926,"mutability":"mutable","name":"stable","nameLocation":"4332:6:23","nodeType":"VariableDeclaration","scope":6937,"src":"4327:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6925,"name":"bool","nodeType":"ElementaryTypeName","src":"4327:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6930,"initialValue":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6927,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6913,"src":"4341:3:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4348:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4341:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4327:22:23"},{"expression":{"arguments":[{"id":6932,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"4377:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6933,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"4385:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6934,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"4393:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6931,"name":"createPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"4366:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$_t_address_$","typeString":"function (address,address,bool) returns (address)"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6917,"id":6936,"nodeType":"Return","src":"4359:41:23"}]},"documentation":{"id":6907,"nodeType":"StructuredDocumentation","src":"4146:28:23","text":"@inheritdoc IPoolFactory"},"functionSelector":"a1671295","id":6938,"implemented":true,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"4188:10:23","nodeType":"FunctionDefinition","parameters":{"id":6914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"tokenA","nameLocation":"4207:6:23","nodeType":"VariableDeclaration","scope":6938,"src":"4199:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6908,"name":"address","nodeType":"ElementaryTypeName","src":"4199:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6911,"mutability":"mutable","name":"tokenB","nameLocation":"4223:6:23","nodeType":"VariableDeclaration","scope":6938,"src":"4215:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6910,"name":"address","nodeType":"ElementaryTypeName","src":"4215:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6913,"mutability":"mutable","name":"fee","nameLocation":"4238:3:23","nodeType":"VariableDeclaration","scope":6938,"src":"4231:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6912,"name":"uint24","nodeType":"ElementaryTypeName","src":"4231:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"4198:44:23"},"returnParameters":{"id":6917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6916,"mutability":"mutable","name":"pool","nameLocation":"4269:4:23","nodeType":"VariableDeclaration","scope":6938,"src":"4261:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6915,"name":"address","nodeType":"ElementaryTypeName","src":"4261:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4260:14:23"},"scope":7079,"src":"4179:228:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[8115],"body":{"id":7077,"nodeType":"Block","src":"4541:919:23","statements":[{"eventCall":{"arguments":[{"id":6951,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"4568:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6952,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"4576:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6953,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"4584:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6950,"name":"PoolStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"4556:11:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4556:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6955,"nodeType":"EmitStatement","src":"4551:40:23"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6956,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"4605:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6957,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"4615:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4605:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6962,"nodeType":"IfStatement","src":"4601:42:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6959,"name":"SameAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8014,"src":"4630:11:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4630:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6961,"nodeType":"RevertStatement","src":"4623:20:23"}},{"assignments":[6964,6966],"declarations":[{"constant":false,"id":6964,"mutability":"mutable","name":"token0","nameLocation":"4662:6:23","nodeType":"VariableDeclaration","scope":7077,"src":"4654:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6963,"name":"address","nodeType":"ElementaryTypeName","src":"4654:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6966,"mutability":"mutable","name":"token1","nameLocation":"4678:6:23","nodeType":"VariableDeclaration","scope":7077,"src":"4670:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6965,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6977,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6967,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"4688:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6968,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"4697:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4688:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":6973,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"4726:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6974,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"4734:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4725:16:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4688:53:23","trueExpression":{"components":[{"id":6970,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"4707:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6971,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6943,"src":"4715:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4706:16:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"4653:88:23"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6978,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"4755:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4773:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4765:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6979,"name":"address","nodeType":"ElementaryTypeName","src":"4765:7:23","typeDescriptions":{}}},"id":6982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4765:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4755:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6987,"nodeType":"IfStatement","src":"4751:46:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6984,"name":"ZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"4784:11:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6986,"nodeType":"RevertStatement","src":"4777:20:23"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":6988,"name":"_getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"4811:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$","typeString":"mapping(address => mapping(address => mapping(bool => address)))"}},"id":6990,"indexExpression":{"id":6989,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"4820:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4811:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$","typeString":"mapping(address => mapping(bool => address))"}},"id":6992,"indexExpression":{"id":6991,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"4828:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4811:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bool_$_t_address_$","typeString":"mapping(bool => address)"}},"id":6994,"indexExpression":{"id":6993,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"4836:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4811:32:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4855:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4847:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6995,"name":"address","nodeType":"ElementaryTypeName","src":"4847:7:23","typeDescriptions":{}}},"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4847:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4811:46:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7003,"nodeType":"IfStatement","src":"4807:78:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7000,"name":"PoolAlreadyExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8012,"src":"4866:17:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4866:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7002,"nodeType":"RevertStatement","src":"4859:26:23"}},{"assignments":[7005],"declarations":[{"constant":false,"id":7005,"mutability":"mutable","name":"salt","nameLocation":"4903:4:23","nodeType":"VariableDeclaration","scope":7077,"src":"4895:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4895:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7014,"initialValue":{"arguments":[{"arguments":[{"id":7009,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"4937:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7010,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"4945:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7011,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"4953:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7007,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4920:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4924:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"4920:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4920:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7006,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4910:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4895:66:23"},{"expression":{"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7015,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"5084:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"5099:8:23","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_Pool_$6412_$","typeString":"function () returns (contract Pool)"},"typeName":{"id":7019,"nodeType":"UserDefinedTypeName","pathNode":{"id":7018,"name":"Pool","nameLocations":["5103:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":6412,"src":"5103:4:23"},"referencedDeclaration":6412,"src":"5103:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["salt"],"nodeType":"FunctionCallOptions","options":[{"id":7021,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"5114:4:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"src":"5099:20:23","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_Pool_$6412_$salt","typeString":"function () returns (contract Pool)"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5099:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6412","typeString":"contract Pool"}],"id":7017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7016,"name":"address","nodeType":"ElementaryTypeName","src":"5091:7:23","typeDescriptions":{}}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5084:38:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7026,"nodeType":"ExpressionStatement","src":"5084:38:23"},{"expression":{"arguments":[{"id":7031,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"5155:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7032,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"5163:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7033,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"5171:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":7028,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"5138:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7027,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7458,"src":"5132:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPool_$7458_$","typeString":"type(contract IPool)"}},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5132:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$7458","typeString":"contract IPool"}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5144:10:23","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":7457,"src":"5132:22:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool) external"}},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5132:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7035,"nodeType":"ExpressionStatement","src":"5132:46:23"},{"expression":{"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":7036,"name":"_getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"5188:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$","typeString":"mapping(address => mapping(address => mapping(bool => address)))"}},"id":7040,"indexExpression":{"id":7037,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"5197:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5188:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$","typeString":"mapping(address => mapping(bool => address))"}},"id":7041,"indexExpression":{"id":7038,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"5205:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5188:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bool_$_t_address_$","typeString":"mapping(bool => address)"}},"id":7042,"indexExpression":{"id":7039,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"5213:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5188:32:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7043,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"5223:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5188:39:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7045,"nodeType":"ExpressionStatement","src":"5188:39:23"},{"expression":{"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":7046,"name":"_getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"5237:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$","typeString":"mapping(address => mapping(address => mapping(bool => address)))"}},"id":7050,"indexExpression":{"id":7047,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"5246:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5237:16:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$","typeString":"mapping(address => mapping(bool => address))"}},"id":7051,"indexExpression":{"id":7048,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"5254:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5237:24:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bool_$_t_address_$","typeString":"mapping(bool => address)"}},"id":7052,"indexExpression":{"id":7049,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"5262:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5237:32:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7053,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"5272:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5237:39:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7055,"nodeType":"ExpressionStatement","src":"5237:39:23"},{"expression":{"arguments":[{"id":7059,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"5345:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7056,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"5331:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5340:4:23","memberName":"push","nodeType":"MemberAccess","src":"5331:13:23","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5331:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7061,"nodeType":"ExpressionStatement","src":"5331:19:23"},{"expression":{"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7062,"name":"_isPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"5360:7:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7064,"indexExpression":{"id":7063,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"5368:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5360:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5376:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5360:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7067,"nodeType":"ExpressionStatement","src":"5360:20:23"},{"eventCall":{"arguments":[{"id":7069,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"5407:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7070,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6966,"src":"5415:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7071,"name":"stable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"5423:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7072,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"5431:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7073,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6540,"src":"5437:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5446:6:23","memberName":"length","nodeType":"MemberAccess","src":"5437:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7068,"name":"PoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"5395:11:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,bool,address,uint256)"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5395:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7076,"nodeType":"EmitStatement","src":"5390:63:23"}]},"documentation":{"id":6939,"nodeType":"StructuredDocumentation","src":"4413:28:23","text":"@inheritdoc IPoolFactory"},"functionSelector":"36bf95a0","id":7078,"implemented":true,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"4455:10:23","nodeType":"FunctionDefinition","parameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"tokenA","nameLocation":"4474:6:23","nodeType":"VariableDeclaration","scope":7078,"src":"4466:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6940,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6943,"mutability":"mutable","name":"tokenB","nameLocation":"4490:6:23","nodeType":"VariableDeclaration","scope":7078,"src":"4482:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6942,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6945,"mutability":"mutable","name":"stable","nameLocation":"4503:6:23","nodeType":"VariableDeclaration","scope":7078,"src":"4498:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6944,"name":"bool","nodeType":"ElementaryTypeName","src":"4498:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4465:45:23"},"returnParameters":{"id":6949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6948,"mutability":"mutable","name":"pool","nameLocation":"4535:4:23","nodeType":"VariableDeclaration","scope":7078,"src":"4527:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6947,"name":"address","nodeType":"ElementaryTypeName","src":"4527:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4526:14:23"},"scope":7079,"src":"4446:1014:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7080,"src":"290:5177:23","usedErrors":[8000,8002,8004,8006,8008,8010,8012,8014,8016,8018],"usedEvents":[7960,7964,7968,7972,7984,7992,7998]}],"src":"37:5431:23"}},"contracts/interfaces/IPool.sol":{"id":24,"ast":{"absolutePath":"contracts/interfaces/IPool.sol","exportedSymbols":{"IPool":[7458]},"id":7459,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7081,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IPool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7458,"linearizedBaseContracts":[7458],"name":"IPool","nameLocation":"67:5:24","nodeType":"ContractDefinition","nodes":[{"errorSelector":"0a04d7fa","id":7083,"name":"DepositsNotEqual","nameLocation":"85:16:24","nodeType":"ErrorDefinition","parameters":{"id":7082,"nodeType":"ParameterList","parameters":[],"src":"101:2:24"},"src":"79:25:24"},{"errorSelector":"438d3ade","id":7085,"name":"BelowMinimumK","nameLocation":"115:13:24","nodeType":"ErrorDefinition","parameters":{"id":7084,"nodeType":"ParameterList","parameters":[],"src":"128:2:24"},"src":"109:22:24"},{"errorSelector":"154c51b8","id":7087,"name":"FactoryAlreadySet","nameLocation":"142:17:24","nodeType":"ErrorDefinition","parameters":{"id":7086,"nodeType":"ParameterList","parameters":[],"src":"159:2:24"},"src":"136:26:24"},{"errorSelector":"bb55fd27","id":7089,"name":"InsufficientLiquidity","nameLocation":"173:21:24","nodeType":"ErrorDefinition","parameters":{"id":7088,"nodeType":"ParameterList","parameters":[],"src":"194:2:24"},"src":"167:30:24"},{"errorSelector":"d226f9d4","id":7091,"name":"InsufficientLiquidityMinted","nameLocation":"208:27:24","nodeType":"ErrorDefinition","parameters":{"id":7090,"nodeType":"ParameterList","parameters":[],"src":"235:2:24"},"src":"202:36:24"},{"errorSelector":"749383ad","id":7093,"name":"InsufficientLiquidityBurned","nameLocation":"249:27:24","nodeType":"ErrorDefinition","parameters":{"id":7092,"nodeType":"ParameterList","parameters":[],"src":"276:2:24"},"src":"243:36:24"},{"errorSelector":"42301c23","id":7095,"name":"InsufficientOutputAmount","nameLocation":"290:24:24","nodeType":"ErrorDefinition","parameters":{"id":7094,"nodeType":"ParameterList","parameters":[],"src":"314:2:24"},"src":"284:33:24"},{"errorSelector":"098fb561","id":7097,"name":"InsufficientInputAmount","nameLocation":"328:23:24","nodeType":"ErrorDefinition","parameters":{"id":7096,"nodeType":"ParameterList","parameters":[],"src":"351:2:24"},"src":"322:32:24"},{"errorSelector":"1309a563","id":7099,"name":"IsPaused","nameLocation":"365:8:24","nodeType":"ErrorDefinition","parameters":{"id":7098,"nodeType":"ParameterList","parameters":[],"src":"373:2:24"},"src":"359:17:24"},{"errorSelector":"290fa188","id":7101,"name":"InvalidTo","nameLocation":"387:9:24","nodeType":"ErrorDefinition","parameters":{"id":7100,"nodeType":"ParameterList","parameters":[],"src":"396:2:24"},"src":"381:18:24"},{"errorSelector":"a932492f","id":7103,"name":"K","nameLocation":"410:1:24","nodeType":"ErrorDefinition","parameters":{"id":7102,"nodeType":"ParameterList","parameters":[],"src":"411:2:24"},"src":"404:10:24"},{"errorSelector":"c5601293","id":7105,"name":"NotEmergencyCouncil","nameLocation":"425:19:24","nodeType":"ErrorDefinition","parameters":{"id":7104,"nodeType":"ParameterList","parameters":[],"src":"444:2:24"},"src":"419:28:24"},{"anonymous":false,"eventSelector":"112c256902bf554b6ed882d2936687aaeb4225e8cd5b51303c90ca6cf43a8602","id":7113,"name":"Fees","nameLocation":"459:4:24","nodeType":"EventDefinition","parameters":{"id":7112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7107,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"480:6:24","nodeType":"VariableDeclaration","scope":7113,"src":"464:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7106,"name":"address","nodeType":"ElementaryTypeName","src":"464:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7109,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"496:7:24","nodeType":"VariableDeclaration","scope":7113,"src":"488:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7108,"name":"uint256","nodeType":"ElementaryTypeName","src":"488:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7111,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"513:7:24","nodeType":"VariableDeclaration","scope":7113,"src":"505:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7110,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"463:58:24"},"src":"453:69:24"},{"anonymous":false,"eventSelector":"4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f","id":7121,"name":"Mint","nameLocation":"533:4:24","nodeType":"EventDefinition","parameters":{"id":7120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7115,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"554:6:24","nodeType":"VariableDeclaration","scope":7121,"src":"538:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7114,"name":"address","nodeType":"ElementaryTypeName","src":"538:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7117,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"570:7:24","nodeType":"VariableDeclaration","scope":7121,"src":"562:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7116,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7119,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"587:7:24","nodeType":"VariableDeclaration","scope":7121,"src":"579:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7118,"name":"uint256","nodeType":"ElementaryTypeName","src":"579:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"537:58:24"},"src":"527:69:24"},{"anonymous":false,"eventSelector":"5d624aa9c148153ab3446c1b154f660ee7701e549fe9b62dab7171b1c80e6fa2","id":7131,"name":"Burn","nameLocation":"607:4:24","nodeType":"EventDefinition","parameters":{"id":7130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7123,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"628:6:24","nodeType":"VariableDeclaration","scope":7131,"src":"612:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7122,"name":"address","nodeType":"ElementaryTypeName","src":"612:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7125,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"652:2:24","nodeType":"VariableDeclaration","scope":7131,"src":"636:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7124,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7127,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"664:7:24","nodeType":"VariableDeclaration","scope":7131,"src":"656:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7126,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7129,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"681:7:24","nodeType":"VariableDeclaration","scope":7131,"src":"673:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7128,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:78:24"},"src":"601:89:24"},{"anonymous":false,"eventSelector":"b3e2773606abfd36b5bd91394b3a54d1398336c65005baf7bf7a05efeffaf75b","id":7145,"name":"Swap","nameLocation":"701:4:24","nodeType":"EventDefinition","parameters":{"id":7144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7133,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"731:6:24","nodeType":"VariableDeclaration","scope":7145,"src":"715:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7132,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7135,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"763:2:24","nodeType":"VariableDeclaration","scope":7145,"src":"747:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7134,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7137,"indexed":false,"mutability":"mutable","name":"amount0In","nameLocation":"783:9:24","nodeType":"VariableDeclaration","scope":7145,"src":"775:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7136,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7139,"indexed":false,"mutability":"mutable","name":"amount1In","nameLocation":"810:9:24","nodeType":"VariableDeclaration","scope":7145,"src":"802:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7138,"name":"uint256","nodeType":"ElementaryTypeName","src":"802:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7141,"indexed":false,"mutability":"mutable","name":"amount0Out","nameLocation":"837:10:24","nodeType":"VariableDeclaration","scope":7145,"src":"829:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7140,"name":"uint256","nodeType":"ElementaryTypeName","src":"829:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7143,"indexed":false,"mutability":"mutable","name":"amount1Out","nameLocation":"865:10:24","nodeType":"VariableDeclaration","scope":7145,"src":"857:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7142,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"705:176:24"},"src":"695:187:24"},{"anonymous":false,"eventSelector":"cf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a","id":7151,"name":"Sync","nameLocation":"893:4:24","nodeType":"EventDefinition","parameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7147,"indexed":false,"mutability":"mutable","name":"reserve0","nameLocation":"906:8:24","nodeType":"VariableDeclaration","scope":7151,"src":"898:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7146,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7149,"indexed":false,"mutability":"mutable","name":"reserve1","nameLocation":"924:8:24","nodeType":"VariableDeclaration","scope":7151,"src":"916:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7148,"name":"uint256","nodeType":"ElementaryTypeName","src":"916:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"897:36:24"},"src":"887:47:24"},{"anonymous":false,"eventSelector":"865ca08d59f5cb456e85cd2f7ef63664ea4f73327414e9d8152c4158b0e94645","id":7161,"name":"Claim","nameLocation":"945:5:24","nodeType":"EventDefinition","parameters":{"id":7160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7153,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"967:6:24","nodeType":"VariableDeclaration","scope":7161,"src":"951:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7152,"name":"address","nodeType":"ElementaryTypeName","src":"951:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7155,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"991:9:24","nodeType":"VariableDeclaration","scope":7161,"src":"975:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7154,"name":"address","nodeType":"ElementaryTypeName","src":"975:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7157,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1010:7:24","nodeType":"VariableDeclaration","scope":7161,"src":"1002:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7159,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1027:7:24","nodeType":"VariableDeclaration","scope":7161,"src":"1019:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1019:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"950:85:24"},"src":"939:97:24"},{"canonicalName":"IPool.Observation","id":7168,"members":[{"constant":false,"id":7163,"mutability":"mutable","name":"timestamp","nameLocation":"1169:9:24","nodeType":"VariableDeclaration","scope":7168,"src":"1161:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1161:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7165,"mutability":"mutable","name":"reserve0Cumulative","nameLocation":"1196:18:24","nodeType":"VariableDeclaration","scope":7168,"src":"1188:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1188:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7167,"mutability":"mutable","name":"reserve1Cumulative","nameLocation":"1232:18:24","nodeType":"VariableDeclaration","scope":7168,"src":"1224:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Observation","nameLocation":"1139:11:24","nodeType":"StructDefinition","scope":7458,"src":"1132:125:24","visibility":"public"},{"documentation":{"id":7169,"nodeType":"StructuredDocumentation","src":"1263:101:24","text":"@notice Returns the decimal (dec), reserves (r), stable (st), and tokens (t) of token0 and token1"},"functionSelector":"392f37e9","id":7186,"implemented":false,"kind":"function","modifiers":[],"name":"metadata","nameLocation":"1378:8:24","nodeType":"FunctionDefinition","parameters":{"id":7170,"nodeType":"ParameterList","parameters":[],"src":"1386:2:24"},"returnParameters":{"id":7185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"dec0","nameLocation":"1444:4:24","nodeType":"VariableDeclaration","scope":7186,"src":"1436:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1436:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7174,"mutability":"mutable","name":"dec1","nameLocation":"1458:4:24","nodeType":"VariableDeclaration","scope":7186,"src":"1450:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1450:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7176,"mutability":"mutable","name":"r0","nameLocation":"1472:2:24","nodeType":"VariableDeclaration","scope":7186,"src":"1464:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7178,"mutability":"mutable","name":"r1","nameLocation":"1484:2:24","nodeType":"VariableDeclaration","scope":7186,"src":"1476:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7180,"mutability":"mutable","name":"st","nameLocation":"1493:2:24","nodeType":"VariableDeclaration","scope":7186,"src":"1488:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7179,"name":"bool","nodeType":"ElementaryTypeName","src":"1488:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7182,"mutability":"mutable","name":"t0","nameLocation":"1505:2:24","nodeType":"VariableDeclaration","scope":7186,"src":"1497:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7181,"name":"address","nodeType":"ElementaryTypeName","src":"1497:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7184,"mutability":"mutable","name":"t1","nameLocation":"1517:2:24","nodeType":"VariableDeclaration","scope":7186,"src":"1509:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7183,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1435:85:24"},"scope":7458,"src":"1369:152:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7187,"nodeType":"StructuredDocumentation","src":"1527:76:24","text":"@notice Claim accumulated but unclaimed fees (claimable0 and claimable1)"},"functionSelector":"d294f093","id":7194,"implemented":false,"kind":"function","modifiers":[],"name":"claimFees","nameLocation":"1617:9:24","nodeType":"FunctionDefinition","parameters":{"id":7188,"nodeType":"ParameterList","parameters":[],"src":"1626:2:24"},"returnParameters":{"id":7193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7194,"src":"1647:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1647:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7194,"src":"1656:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1656:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1646:18:24"},"scope":7458,"src":"1608:57:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7195,"nodeType":"StructuredDocumentation","src":"1671:36:24","text":"@notice Returns [token0, token1]"},"functionSelector":"9d63848a","id":7202,"implemented":false,"kind":"function","modifiers":[],"name":"tokens","nameLocation":"1721:6:24","nodeType":"FunctionDefinition","parameters":{"id":7196,"nodeType":"ParameterList","parameters":[],"src":"1727:2:24"},"returnParameters":{"id":7201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7202,"src":"1753:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7197,"name":"address","nodeType":"ElementaryTypeName","src":"1753:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7202,"src":"1762:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7199,"name":"address","nodeType":"ElementaryTypeName","src":"1762:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1752:18:24"},"scope":7458,"src":"1712:59:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7203,"nodeType":"StructuredDocumentation","src":"1777:69:24","text":"@notice Address of token in the pool with the lower address value"},"functionSelector":"0dfe1681","id":7208,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"1860:6:24","nodeType":"FunctionDefinition","parameters":{"id":7204,"nodeType":"ParameterList","parameters":[],"src":"1866:2:24"},"returnParameters":{"id":7207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7208,"src":"1892:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7205,"name":"address","nodeType":"ElementaryTypeName","src":"1892:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1891:9:24"},"scope":7458,"src":"1851:50:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7209,"nodeType":"StructuredDocumentation","src":"1907:71:24","text":"@notice Address of token in the poool with the higher address value"},"functionSelector":"d21220a7","id":7214,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"1992:6:24","nodeType":"FunctionDefinition","parameters":{"id":7210,"nodeType":"ParameterList","parameters":[],"src":"1998:2:24"},"returnParameters":{"id":7213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7214,"src":"2024:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7211,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2023:9:24"},"scope":7458,"src":"1983:50:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7215,"nodeType":"StructuredDocumentation","src":"2039:42:24","text":"@notice Address of linked PoolFees.sol"},"functionSelector":"33580959","id":7220,"implemented":false,"kind":"function","modifiers":[],"name":"poolFees","nameLocation":"2095:8:24","nodeType":"FunctionDefinition","parameters":{"id":7216,"nodeType":"ParameterList","parameters":[],"src":"2103:2:24"},"returnParameters":{"id":7219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7220,"src":"2129:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7217,"name":"address","nodeType":"ElementaryTypeName","src":"2129:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2128:9:24"},"scope":7458,"src":"2086:52:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7221,"nodeType":"StructuredDocumentation","src":"2144:61:24","text":"@notice Address of PoolFactory that created this contract"},"functionSelector":"c45a0155","id":7226,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"2219:7:24","nodeType":"FunctionDefinition","parameters":{"id":7222,"nodeType":"ParameterList","parameters":[],"src":"2226:2:24"},"returnParameters":{"id":7225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7226,"src":"2252:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7223,"name":"address","nodeType":"ElementaryTypeName","src":"2252:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2251:9:24"},"scope":7458,"src":"2210:51:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7227,"nodeType":"StructuredDocumentation","src":"2267:66:24","text":"@notice Capture oracle reading every 30 minutes (1800 seconds)"},"functionSelector":"e4463eb2","id":7232,"implemented":false,"kind":"function","modifiers":[],"name":"periodSize","nameLocation":"2347:10:24","nodeType":"FunctionDefinition","parameters":{"id":7228,"nodeType":"ParameterList","parameters":[],"src":"2357:2:24"},"returnParameters":{"id":7231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7232,"src":"2383:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2383:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2382:9:24"},"scope":7458,"src":"2338:54:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7233,"nodeType":"StructuredDocumentation","src":"2398:36:24","text":"@notice Amount of token0 in pool"},"functionSelector":"443cb4bc","id":7238,"implemented":false,"kind":"function","modifiers":[],"name":"reserve0","nameLocation":"2448:8:24","nodeType":"FunctionDefinition","parameters":{"id":7234,"nodeType":"ParameterList","parameters":[],"src":"2456:2:24"},"returnParameters":{"id":7237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7238,"src":"2482:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7235,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2481:9:24"},"scope":7458,"src":"2439:52:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7239,"nodeType":"StructuredDocumentation","src":"2497:36:24","text":"@notice Amount of token1 in pool"},"functionSelector":"5a76f25e","id":7244,"implemented":false,"kind":"function","modifiers":[],"name":"reserve1","nameLocation":"2547:8:24","nodeType":"FunctionDefinition","parameters":{"id":7240,"nodeType":"ParameterList","parameters":[],"src":"2555:2:24"},"returnParameters":{"id":7243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7244,"src":"2581:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2580:9:24"},"scope":7458,"src":"2538:52:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7245,"nodeType":"StructuredDocumentation","src":"2596:44:24","text":"@notice Timestamp of last update to pool"},"functionSelector":"c5700a02","id":7250,"implemented":false,"kind":"function","modifiers":[],"name":"blockTimestampLast","nameLocation":"2654:18:24","nodeType":"FunctionDefinition","parameters":{"id":7246,"nodeType":"ParameterList","parameters":[],"src":"2672:2:24"},"returnParameters":{"id":7249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7250,"src":"2698:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2698:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2697:9:24"},"scope":7458,"src":"2645:62:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7251,"nodeType":"StructuredDocumentation","src":"2713:60:24","text":"@notice Cumulative of reserve0 factoring in time elapsed"},"functionSelector":"bf944dbc","id":7256,"implemented":false,"kind":"function","modifiers":[],"name":"reserve0CumulativeLast","nameLocation":"2787:22:24","nodeType":"FunctionDefinition","parameters":{"id":7252,"nodeType":"ParameterList","parameters":[],"src":"2809:2:24"},"returnParameters":{"id":7255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7256,"src":"2835:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2835:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2834:9:24"},"scope":7458,"src":"2778:66:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7257,"nodeType":"StructuredDocumentation","src":"2850:60:24","text":"@notice Cumulative of reserve1 factoring in time elapsed"},"functionSelector":"c245febc","id":7262,"implemented":false,"kind":"function","modifiers":[],"name":"reserve1CumulativeLast","nameLocation":"2924:22:24","nodeType":"FunctionDefinition","parameters":{"id":7258,"nodeType":"ParameterList","parameters":[],"src":"2946:2:24"},"returnParameters":{"id":7261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7262,"src":"2972:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2972:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2971:9:24"},"scope":7458,"src":"2915:66:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7263,"nodeType":"StructuredDocumentation","src":"2987:47:24","text":"@notice Accumulated fees of token0 (global)"},"functionSelector":"32c0defd","id":7268,"implemented":false,"kind":"function","modifiers":[],"name":"index0","nameLocation":"3048:6:24","nodeType":"FunctionDefinition","parameters":{"id":7264,"nodeType":"ParameterList","parameters":[],"src":"3054:2:24"},"returnParameters":{"id":7267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7268,"src":"3080:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7265,"name":"uint256","nodeType":"ElementaryTypeName","src":"3080:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3079:9:24"},"scope":7458,"src":"3039:50:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7269,"nodeType":"StructuredDocumentation","src":"3095:47:24","text":"@notice Accumulated fees of token1 (global)"},"functionSelector":"bda39cad","id":7274,"implemented":false,"kind":"function","modifiers":[],"name":"index1","nameLocation":"3156:6:24","nodeType":"FunctionDefinition","parameters":{"id":7270,"nodeType":"ParameterList","parameters":[],"src":"3162:2:24"},"returnParameters":{"id":7273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7274,"src":"3188:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7271,"name":"uint256","nodeType":"ElementaryTypeName","src":"3188:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3187:9:24"},"scope":7458,"src":"3147:50:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7275,"nodeType":"StructuredDocumentation","src":"3203:49:24","text":"@notice Get an LP's relative index0 to index0"},"functionSelector":"9f767c88","id":7282,"implemented":false,"kind":"function","modifiers":[],"name":"supplyIndex0","nameLocation":"3266:12:24","nodeType":"FunctionDefinition","parameters":{"id":7278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7282,"src":"3279:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7276,"name":"address","nodeType":"ElementaryTypeName","src":"3279:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3278:9:24"},"returnParameters":{"id":7281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7282,"src":"3311:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7279,"name":"uint256","nodeType":"ElementaryTypeName","src":"3311:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3310:9:24"},"scope":7458,"src":"3257:63:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7283,"nodeType":"StructuredDocumentation","src":"3326:49:24","text":"@notice Get an LP's relative index1 to index1"},"functionSelector":"205aabf1","id":7290,"implemented":false,"kind":"function","modifiers":[],"name":"supplyIndex1","nameLocation":"3389:12:24","nodeType":"FunctionDefinition","parameters":{"id":7286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7290,"src":"3402:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7284,"name":"address","nodeType":"ElementaryTypeName","src":"3402:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3401:9:24"},"returnParameters":{"id":7289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7290,"src":"3434:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7287,"name":"uint256","nodeType":"ElementaryTypeName","src":"3434:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3433:9:24"},"scope":7458,"src":"3380:63:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7291,"nodeType":"StructuredDocumentation","src":"3449:83:24","text":"@notice Amount of unclaimed, but claimable tokens from fees of token0 for an LP"},"functionSelector":"4d5a9f8a","id":7298,"implemented":false,"kind":"function","modifiers":[],"name":"claimable0","nameLocation":"3546:10:24","nodeType":"FunctionDefinition","parameters":{"id":7294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7298,"src":"3557:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7292,"name":"address","nodeType":"ElementaryTypeName","src":"3557:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3556:9:24"},"returnParameters":{"id":7297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7298,"src":"3589:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7295,"name":"uint256","nodeType":"ElementaryTypeName","src":"3589:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3588:9:24"},"scope":7458,"src":"3537:61:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7299,"nodeType":"StructuredDocumentation","src":"3604:83:24","text":"@notice Amount of unclaimed, but claimable tokens from fees of token1 for an LP"},"functionSelector":"a1ac4d13","id":7306,"implemented":false,"kind":"function","modifiers":[],"name":"claimable1","nameLocation":"3701:10:24","nodeType":"FunctionDefinition","parameters":{"id":7302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7306,"src":"3712:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7300,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3711:9:24"},"returnParameters":{"id":7305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7306,"src":"3744:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7303,"name":"uint256","nodeType":"ElementaryTypeName","src":"3744:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:9:24"},"scope":7458,"src":"3692:61:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7307,"nodeType":"StructuredDocumentation","src":"3759:124:24","text":"@notice Set pool name\n         Only callable by Voter.emergencyCouncil()\n @param __name String of new name"},"functionSelector":"c47f0027","id":7312,"implemented":false,"kind":"function","modifiers":[],"name":"setName","nameLocation":"3897:7:24","nodeType":"FunctionDefinition","parameters":{"id":7310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7309,"mutability":"mutable","name":"__name","nameLocation":"3921:6:24","nodeType":"VariableDeclaration","scope":7312,"src":"3905:22:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7308,"name":"string","nodeType":"ElementaryTypeName","src":"3905:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3904:24:24"},"returnParameters":{"id":7311,"nodeType":"ParameterList","parameters":[],"src":"3937:0:24"},"scope":7458,"src":"3888:50:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7313,"nodeType":"StructuredDocumentation","src":"3944:130:24","text":"@notice Set pool symbol\n         Only callable by Voter.emergencyCouncil()\n @param __symbol String of new symbol"},"functionSelector":"b84c8246","id":7318,"implemented":false,"kind":"function","modifiers":[],"name":"setSymbol","nameLocation":"4088:9:24","nodeType":"FunctionDefinition","parameters":{"id":7316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7315,"mutability":"mutable","name":"__symbol","nameLocation":"4114:8:24","nodeType":"VariableDeclaration","scope":7318,"src":"4098:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7314,"name":"string","nodeType":"ElementaryTypeName","src":"4098:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4097:26:24"},"returnParameters":{"id":7317,"nodeType":"ParameterList","parameters":[],"src":"4132:0:24"},"scope":7458,"src":"4079:54:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7319,"nodeType":"StructuredDocumentation","src":"4139:51:24","text":"@notice Get the number of observations recorded"},"functionSelector":"ebeb31db","id":7324,"implemented":false,"kind":"function","modifiers":[],"name":"observationLength","nameLocation":"4204:17:24","nodeType":"FunctionDefinition","parameters":{"id":7320,"nodeType":"ParameterList","parameters":[],"src":"4221:2:24"},"returnParameters":{"id":7323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7324,"src":"4247:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7321,"name":"uint256","nodeType":"ElementaryTypeName","src":"4247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4246:9:24"},"scope":7458,"src":"4195:61:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7325,"nodeType":"StructuredDocumentation","src":"4262:56:24","text":"@notice Get the value of the most recent observation"},"functionSelector":"8a7b8cf2","id":7331,"implemented":false,"kind":"function","modifiers":[],"name":"lastObservation","nameLocation":"4332:15:24","nodeType":"FunctionDefinition","parameters":{"id":7326,"nodeType":"ParameterList","parameters":[],"src":"4347:2:24"},"returnParameters":{"id":7330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7331,"src":"4373:18:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_memory_ptr","typeString":"struct IPool.Observation"},"typeName":{"id":7328,"nodeType":"UserDefinedTypeName","pathNode":{"id":7327,"name":"Observation","nameLocations":["4373:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":7168,"src":"4373:11:24"},"referencedDeclaration":7168,"src":"4373:11:24","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$7168_storage_ptr","typeString":"struct IPool.Observation"}},"visibility":"internal"}],"src":"4372:20:24"},"scope":7458,"src":"4323:70:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7332,"nodeType":"StructuredDocumentation","src":"4399:53:24","text":"@notice True if pool is stable, false if volatile"},"functionSelector":"22be3de1","id":7337,"implemented":false,"kind":"function","modifiers":[],"name":"stable","nameLocation":"4466:6:24","nodeType":"FunctionDefinition","parameters":{"id":7333,"nodeType":"ParameterList","parameters":[],"src":"4472:2:24"},"returnParameters":{"id":7336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7337,"src":"4498:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7334,"name":"bool","nodeType":"ElementaryTypeName","src":"4498:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4497:6:24"},"scope":7458,"src":"4457:47:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7338,"nodeType":"StructuredDocumentation","src":"4510:101:24","text":"@notice Produces the cumulative price using counterfactuals to save gas and avoid a call to sync."},"functionSelector":"1df8c717","id":7347,"implemented":false,"kind":"function","modifiers":[],"name":"currentCumulativePrices","nameLocation":"4625:23:24","nodeType":"FunctionDefinition","parameters":{"id":7339,"nodeType":"ParameterList","parameters":[],"src":"4648:2:24"},"returnParameters":{"id":7346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7341,"mutability":"mutable","name":"reserve0Cumulative","nameLocation":"4706:18:24","nodeType":"VariableDeclaration","scope":7347,"src":"4698:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7340,"name":"uint256","nodeType":"ElementaryTypeName","src":"4698:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7343,"mutability":"mutable","name":"reserve1Cumulative","nameLocation":"4734:18:24","nodeType":"VariableDeclaration","scope":7347,"src":"4726:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7342,"name":"uint256","nodeType":"ElementaryTypeName","src":"4726:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7345,"mutability":"mutable","name":"blockTimestamp","nameLocation":"4762:14:24","nodeType":"VariableDeclaration","scope":7347,"src":"4754:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7344,"name":"uint256","nodeType":"ElementaryTypeName","src":"4754:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4697:80:24"},"scope":7458,"src":"4616:162:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7348,"nodeType":"StructuredDocumentation","src":"4784:200:24","text":"@notice Provides twap price with user configured granularity, up to the full window size\n @param tokenIn .\n @param amountIn .\n @param granularity .\n @return amountOut ."},"functionSelector":"9e8cc04b","id":7359,"implemented":false,"kind":"function","modifiers":[],"name":"quote","nameLocation":"4998:5:24","nodeType":"FunctionDefinition","parameters":{"id":7355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7350,"mutability":"mutable","name":"tokenIn","nameLocation":"5012:7:24","nodeType":"VariableDeclaration","scope":7359,"src":"5004:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7349,"name":"address","nodeType":"ElementaryTypeName","src":"5004:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7352,"mutability":"mutable","name":"amountIn","nameLocation":"5029:8:24","nodeType":"VariableDeclaration","scope":7359,"src":"5021:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7351,"name":"uint256","nodeType":"ElementaryTypeName","src":"5021:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7354,"mutability":"mutable","name":"granularity","nameLocation":"5047:11:24","nodeType":"VariableDeclaration","scope":7359,"src":"5039:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7353,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5003:56:24"},"returnParameters":{"id":7358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7357,"mutability":"mutable","name":"amountOut","nameLocation":"5091:9:24","nodeType":"VariableDeclaration","scope":7359,"src":"5083:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7356,"name":"uint256","nodeType":"ElementaryTypeName","src":"5083:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5082:19:24"},"scope":7458,"src":"4989:113:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7360,"nodeType":"StructuredDocumentation","src":"5108:253:24","text":"@notice Returns a memory set of TWAP prices\n         Same as calling sample(tokenIn, amountIn, points, 1)\n @param tokenIn .\n @param amountIn .\n @param points Number of points to return\n @return Array of TWAP prices"},"functionSelector":"5881c475","id":7372,"implemented":false,"kind":"function","modifiers":[],"name":"prices","nameLocation":"5375:6:24","nodeType":"FunctionDefinition","parameters":{"id":7367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7362,"mutability":"mutable","name":"tokenIn","nameLocation":"5390:7:24","nodeType":"VariableDeclaration","scope":7372,"src":"5382:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7361,"name":"address","nodeType":"ElementaryTypeName","src":"5382:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7364,"mutability":"mutable","name":"amountIn","nameLocation":"5407:8:24","nodeType":"VariableDeclaration","scope":7372,"src":"5399:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7363,"name":"uint256","nodeType":"ElementaryTypeName","src":"5399:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7366,"mutability":"mutable","name":"points","nameLocation":"5425:6:24","nodeType":"VariableDeclaration","scope":7372,"src":"5417:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7365,"name":"uint256","nodeType":"ElementaryTypeName","src":"5417:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5381:51:24"},"returnParameters":{"id":7371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7372,"src":"5456:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7368,"name":"uint256","nodeType":"ElementaryTypeName","src":"5456:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7369,"nodeType":"ArrayTypeName","src":"5456:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5455:18:24"},"scope":7458,"src":"5366:108:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7373,"nodeType":"StructuredDocumentation","src":"5480:277:24","text":"@notice Same as prices with with an additional window argument.\n         Window = 2 means 2 * 30min (or 1 hr) between observations\n @param tokenIn .\n @param amountIn .\n @param points .\n @param window .\n @return Array of TWAP prices"},"functionSelector":"13345fe1","id":7387,"implemented":false,"kind":"function","modifiers":[],"name":"sample","nameLocation":"5771:6:24","nodeType":"FunctionDefinition","parameters":{"id":7382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7375,"mutability":"mutable","name":"tokenIn","nameLocation":"5795:7:24","nodeType":"VariableDeclaration","scope":7387,"src":"5787:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7374,"name":"address","nodeType":"ElementaryTypeName","src":"5787:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7377,"mutability":"mutable","name":"amountIn","nameLocation":"5820:8:24","nodeType":"VariableDeclaration","scope":7387,"src":"5812:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7376,"name":"uint256","nodeType":"ElementaryTypeName","src":"5812:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7379,"mutability":"mutable","name":"points","nameLocation":"5846:6:24","nodeType":"VariableDeclaration","scope":7387,"src":"5838:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7378,"name":"uint256","nodeType":"ElementaryTypeName","src":"5838:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7381,"mutability":"mutable","name":"window","nameLocation":"5870:6:24","nodeType":"VariableDeclaration","scope":7387,"src":"5862:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7380,"name":"uint256","nodeType":"ElementaryTypeName","src":"5862:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5777:105:24"},"returnParameters":{"id":7386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7387,"src":"5906:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7383,"name":"uint256","nodeType":"ElementaryTypeName","src":"5906:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7384,"nodeType":"ArrayTypeName","src":"5906:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5905:18:24"},"scope":7458,"src":"5762:162:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7388,"nodeType":"StructuredDocumentation","src":"5930:358:24","text":"@notice This low-level function should be called from a contract which performs important safety checks\n @param amount0Out   Amount of token0 to send to `to`\n @param amount1Out   Amount of token1 to send to `to`\n @param to           Address to recieve the swapped output\n @param data         Additional calldata for flashloans"},"functionSelector":"022c0d9f","id":7399,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"6302:4:24","nodeType":"FunctionDefinition","parameters":{"id":7397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7390,"mutability":"mutable","name":"amount0Out","nameLocation":"6315:10:24","nodeType":"VariableDeclaration","scope":7399,"src":"6307:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7389,"name":"uint256","nodeType":"ElementaryTypeName","src":"6307:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7392,"mutability":"mutable","name":"amount1Out","nameLocation":"6335:10:24","nodeType":"VariableDeclaration","scope":7399,"src":"6327:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7391,"name":"uint256","nodeType":"ElementaryTypeName","src":"6327:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7394,"mutability":"mutable","name":"to","nameLocation":"6355:2:24","nodeType":"VariableDeclaration","scope":7399,"src":"6347:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7393,"name":"address","nodeType":"ElementaryTypeName","src":"6347:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7396,"mutability":"mutable","name":"data","nameLocation":"6374:4:24","nodeType":"VariableDeclaration","scope":7399,"src":"6359:19:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7395,"name":"bytes","nodeType":"ElementaryTypeName","src":"6359:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6306:73:24"},"returnParameters":{"id":7398,"nodeType":"ParameterList","parameters":[],"src":"6388:0:24"},"scope":7458,"src":"6293:96:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7400,"nodeType":"StructuredDocumentation","src":"6395:341:24","text":"@notice This low-level function should be called from a contract which performs important safety checks\n         standard uniswap v2 implementation\n @param to Address to receive token0 and token1 from burning the pool token\n @return amount0 Amount of token0 returned\n @return amount1 Amount of token1 returned"},"functionSelector":"89afcb44","id":7409,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"6750:4:24","nodeType":"FunctionDefinition","parameters":{"id":7403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7402,"mutability":"mutable","name":"to","nameLocation":"6763:2:24","nodeType":"VariableDeclaration","scope":7409,"src":"6755:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7401,"name":"address","nodeType":"ElementaryTypeName","src":"6755:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6754:12:24"},"returnParameters":{"id":7408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7405,"mutability":"mutable","name":"amount0","nameLocation":"6793:7:24","nodeType":"VariableDeclaration","scope":7409,"src":"6785:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7404,"name":"uint256","nodeType":"ElementaryTypeName","src":"6785:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7407,"mutability":"mutable","name":"amount1","nameLocation":"6810:7:24","nodeType":"VariableDeclaration","scope":7409,"src":"6802:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7406,"name":"uint256","nodeType":"ElementaryTypeName","src":"6802:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6784:34:24"},"scope":7458,"src":"6741:78:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7410,"nodeType":"StructuredDocumentation","src":"6825:304:24","text":"@notice This low-level function should be called by addLiquidity functions in Router.sol, which performs important safety checks\n         standard uniswap v2 implementation\n @param to           Address to receive the minted LP token\n @return liquidity   Amount of LP token minted"},"functionSelector":"6a627842","id":7417,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"7143:4:24","nodeType":"FunctionDefinition","parameters":{"id":7413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7412,"mutability":"mutable","name":"to","nameLocation":"7156:2:24","nodeType":"VariableDeclaration","scope":7417,"src":"7148:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7411,"name":"address","nodeType":"ElementaryTypeName","src":"7148:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7147:12:24"},"returnParameters":{"id":7416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7415,"mutability":"mutable","name":"liquidity","nameLocation":"7186:9:24","nodeType":"VariableDeclaration","scope":7417,"src":"7178:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7414,"name":"uint256","nodeType":"ElementaryTypeName","src":"7178:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7177:19:24"},"scope":7458,"src":"7134:63:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7418,"nodeType":"StructuredDocumentation","src":"7203:174:24","text":"@notice Update reserves and, on the first call per block, price accumulators\n @return _reserve0 .\n @return _reserve1 .\n @return _blockTimestampLast ."},"functionSelector":"0902f1ac","id":7427,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"7391:11:24","nodeType":"FunctionDefinition","parameters":{"id":7419,"nodeType":"ParameterList","parameters":[],"src":"7402:2:24"},"returnParameters":{"id":7426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7421,"mutability":"mutable","name":"_reserve0","nameLocation":"7436:9:24","nodeType":"VariableDeclaration","scope":7427,"src":"7428:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7420,"name":"uint256","nodeType":"ElementaryTypeName","src":"7428:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7423,"mutability":"mutable","name":"_reserve1","nameLocation":"7455:9:24","nodeType":"VariableDeclaration","scope":7427,"src":"7447:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7422,"name":"uint256","nodeType":"ElementaryTypeName","src":"7447:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7425,"mutability":"mutable","name":"_blockTimestampLast","nameLocation":"7474:19:24","nodeType":"VariableDeclaration","scope":7427,"src":"7466:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7424,"name":"uint256","nodeType":"ElementaryTypeName","src":"7466:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7427:67:24"},"scope":7458,"src":"7382:113:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7428,"nodeType":"StructuredDocumentation","src":"7501:177:24","text":"@notice Get the amount of tokenOut given the amount of tokenIn\n @param amountIn Amount of token in\n @param tokenIn  Address of token\n @return Amount out"},"functionSelector":"f140a35a","id":7437,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"7692:12:24","nodeType":"FunctionDefinition","parameters":{"id":7433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7430,"mutability":"mutable","name":"amountIn","nameLocation":"7713:8:24","nodeType":"VariableDeclaration","scope":7437,"src":"7705:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7429,"name":"uint256","nodeType":"ElementaryTypeName","src":"7705:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7432,"mutability":"mutable","name":"tokenIn","nameLocation":"7731:7:24","nodeType":"VariableDeclaration","scope":7437,"src":"7723:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7431,"name":"address","nodeType":"ElementaryTypeName","src":"7723:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7704:35:24"},"returnParameters":{"id":7436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7437,"src":"7763:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7434,"name":"uint256","nodeType":"ElementaryTypeName","src":"7763:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7762:9:24"},"scope":7458,"src":"7683:89:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7438,"nodeType":"StructuredDocumentation","src":"7778:101:24","text":"@notice Force balances to match reserves\n @param to Address to receive any skimmed rewards"},"functionSelector":"bc25cf77","id":7443,"implemented":false,"kind":"function","modifiers":[],"name":"skim","nameLocation":"7893:4:24","nodeType":"FunctionDefinition","parameters":{"id":7441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7440,"mutability":"mutable","name":"to","nameLocation":"7906:2:24","nodeType":"VariableDeclaration","scope":7443,"src":"7898:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7439,"name":"address","nodeType":"ElementaryTypeName","src":"7898:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7897:12:24"},"returnParameters":{"id":7442,"nodeType":"ParameterList","parameters":[],"src":"7918:0:24"},"scope":7458,"src":"7884:35:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7444,"nodeType":"StructuredDocumentation","src":"7925:44:24","text":"@notice Force reserves to match balances"},"functionSelector":"fff6cae9","id":7447,"implemented":false,"kind":"function","modifiers":[],"name":"sync","nameLocation":"7983:4:24","nodeType":"FunctionDefinition","parameters":{"id":7445,"nodeType":"ParameterList","parameters":[],"src":"7987:2:24"},"returnParameters":{"id":7446,"nodeType":"ParameterList","parameters":[],"src":"7998:0:24"},"scope":7458,"src":"7974:25:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7448,"nodeType":"StructuredDocumentation","src":"8005:189:24","text":"@notice Called on pool creation by PoolFactory\n @param _token0 Address of token0\n @param _token1 Address of token1\n @param _stable True if stable, false if volatile"},"functionSelector":"e4bbb5a8","id":7457,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"8208:10:24","nodeType":"FunctionDefinition","parameters":{"id":7455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7450,"mutability":"mutable","name":"_token0","nameLocation":"8227:7:24","nodeType":"VariableDeclaration","scope":7457,"src":"8219:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7449,"name":"address","nodeType":"ElementaryTypeName","src":"8219:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7452,"mutability":"mutable","name":"_token1","nameLocation":"8244:7:24","nodeType":"VariableDeclaration","scope":7457,"src":"8236:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7451,"name":"address","nodeType":"ElementaryTypeName","src":"8236:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7454,"mutability":"mutable","name":"_stable","nameLocation":"8258:7:24","nodeType":"VariableDeclaration","scope":7457,"src":"8253:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7453,"name":"bool","nodeType":"ElementaryTypeName","src":"8253:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8218:48:24"},"returnParameters":{"id":7456,"nodeType":"ParameterList","parameters":[],"src":"8275:0:24"},"scope":7458,"src":"8199:77:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7459,"src":"57:8221:24","usedErrors":[7083,7085,7087,7089,7091,7093,7095,7097,7099,7101,7103,7105],"usedEvents":[7113,7121,7131,7145,7151,7161]}],"src":"32:8247:24"}},"contracts/interfaces/IPoolCallee.sol":{"id":25,"ast":{"absolutePath":"contracts/interfaces/IPoolCallee.sol","exportedSymbols":{"IPoolCallee":[7472]},"id":7473,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7460,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IPoolCallee","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7472,"linearizedBaseContracts":[7472],"name":"IPoolCallee","nameLocation":"67:11:25","nodeType":"ContractDefinition","nodes":[{"functionSelector":"9a7bff79","id":7471,"implemented":false,"kind":"function","modifiers":[],"name":"hook","nameLocation":"94:4:25","nodeType":"FunctionDefinition","parameters":{"id":7469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7462,"mutability":"mutable","name":"sender","nameLocation":"107:6:25","nodeType":"VariableDeclaration","scope":7471,"src":"99:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7461,"name":"address","nodeType":"ElementaryTypeName","src":"99:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7464,"mutability":"mutable","name":"amount0","nameLocation":"123:7:25","nodeType":"VariableDeclaration","scope":7471,"src":"115:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7463,"name":"uint256","nodeType":"ElementaryTypeName","src":"115:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7466,"mutability":"mutable","name":"amount1","nameLocation":"140:7:25","nodeType":"VariableDeclaration","scope":7471,"src":"132:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7465,"name":"uint256","nodeType":"ElementaryTypeName","src":"132:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7468,"mutability":"mutable","name":"data","nameLocation":"164:4:25","nodeType":"VariableDeclaration","scope":7471,"src":"149:19:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7467,"name":"bytes","nodeType":"ElementaryTypeName","src":"149:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"98:71:25"},"returnParameters":{"id":7470,"nodeType":"ParameterList","parameters":[],"src":"178:0:25"},"scope":7472,"src":"85:94:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7473,"src":"57:124:25","usedErrors":[],"usedEvents":[]}],"src":"32:150:25"}},"contracts/interfaces/IVoter.sol":{"id":26,"ast":{"absolutePath":"contracts/interfaces/IVoter.sol","exportedSymbols":{"IVoter":[7954]},"id":7955,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7474,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"IVoter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7954,"linearizedBaseContracts":[7954],"name":"IVoter","nameLocation":"67:6:26","nodeType":"ContractDefinition","nodes":[{"errorSelector":"cade311f","id":7476,"name":"AlreadyVotedOrDeposited","nameLocation":"86:23:26","nodeType":"ErrorDefinition","parameters":{"id":7475,"nodeType":"ParameterList","parameters":[],"src":"109:2:26"},"src":"80:32:26"},{"errorSelector":"5a780bad","id":7478,"name":"DistributeWindow","nameLocation":"123:16:26","nodeType":"ErrorDefinition","parameters":{"id":7477,"nodeType":"ParameterList","parameters":[],"src":"139:2:26"},"src":"117:25:26"},{"errorSelector":"4fe2017f","id":7480,"name":"FactoryPathNotApproved","nameLocation":"153:22:26","nodeType":"ErrorDefinition","parameters":{"id":7479,"nodeType":"ParameterList","parameters":[],"src":"175:2:26"},"src":"147:31:26"},{"errorSelector":"fe236944","id":7482,"name":"GaugeAlreadyKilled","nameLocation":"189:18:26","nodeType":"ErrorDefinition","parameters":{"id":7481,"nodeType":"ParameterList","parameters":[],"src":"207:2:26"},"src":"183:27:26"},{"errorSelector":"beb49052","id":7484,"name":"GaugeAlreadyRevived","nameLocation":"221:19:26","nodeType":"ErrorDefinition","parameters":{"id":7483,"nodeType":"ParameterList","parameters":[],"src":"240:2:26"},"src":"215:28:26"},{"errorSelector":"91fc82b6","id":7486,"name":"GaugeExists","nameLocation":"254:11:26","nodeType":"ErrorDefinition","parameters":{"id":7485,"nodeType":"ParameterList","parameters":[],"src":"265:2:26"},"src":"248:20:26"},{"errorSelector":"4c890185","id":7490,"name":"GaugeDoesNotExist","nameLocation":"279:17:26","nodeType":"ErrorDefinition","parameters":{"id":7489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7488,"mutability":"mutable","name":"_pool","nameLocation":"305:5:26","nodeType":"VariableDeclaration","scope":7490,"src":"297:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7487,"name":"address","nodeType":"ElementaryTypeName","src":"297:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"296:15:26"},"src":"273:39:26"},{"errorSelector":"ac2e7b40","id":7494,"name":"GaugeNotAlive","nameLocation":"323:13:26","nodeType":"ErrorDefinition","parameters":{"id":7493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7492,"mutability":"mutable","name":"_gauge","nameLocation":"345:6:26","nodeType":"VariableDeclaration","scope":7494,"src":"337:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7491,"name":"address","nodeType":"ElementaryTypeName","src":"337:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"336:16:26"},"src":"317:36:26"},{"errorSelector":"08910b25","id":7496,"name":"InactiveManagedNFT","nameLocation":"364:18:26","nodeType":"ErrorDefinition","parameters":{"id":7495,"nodeType":"ParameterList","parameters":[],"src":"382:2:26"},"src":"358:27:26"},{"errorSelector":"5b69bb82","id":7498,"name":"MaximumVotingNumberTooLow","nameLocation":"396:25:26","nodeType":"ErrorDefinition","parameters":{"id":7497,"nodeType":"ParameterList","parameters":[],"src":"421:2:26"},"src":"390:34:26"},{"errorSelector":"315f6a3d","id":7500,"name":"NonZeroVotes","nameLocation":"435:12:26","nodeType":"ErrorDefinition","parameters":{"id":7499,"nodeType":"ParameterList","parameters":[],"src":"447:2:26"},"src":"429:21:26"},{"errorSelector":"2bab4241","id":7502,"name":"NotAPool","nameLocation":"461:8:26","nodeType":"ErrorDefinition","parameters":{"id":7501,"nodeType":"ParameterList","parameters":[],"src":"469:2:26"},"src":"455:17:26"},{"errorSelector":"e433766c","id":7504,"name":"NotApprovedOrOwner","nameLocation":"483:18:26","nodeType":"ErrorDefinition","parameters":{"id":7503,"nodeType":"ParameterList","parameters":[],"src":"501:2:26"},"src":"477:27:26"},{"errorSelector":"ee3675d4","id":7506,"name":"NotGovernor","nameLocation":"515:11:26","nodeType":"ErrorDefinition","parameters":{"id":7505,"nodeType":"ParameterList","parameters":[],"src":"526:2:26"},"src":"509:20:26"},{"errorSelector":"c5601293","id":7508,"name":"NotEmergencyCouncil","nameLocation":"540:19:26","nodeType":"ErrorDefinition","parameters":{"id":7507,"nodeType":"ParameterList","parameters":[],"src":"559:2:26"},"src":"534:28:26"},{"errorSelector":"f8d2906c","id":7510,"name":"NotMinter","nameLocation":"573:9:26","nodeType":"ErrorDefinition","parameters":{"id":7509,"nodeType":"ParameterList","parameters":[],"src":"582:2:26"},"src":"567:18:26"},{"errorSelector":"392978d0","id":7512,"name":"NotWhitelistedNFT","nameLocation":"596:17:26","nodeType":"ErrorDefinition","parameters":{"id":7511,"nodeType":"ParameterList","parameters":[],"src":"613:2:26"},"src":"590:26:26"},{"errorSelector":"65a9cebb","id":7514,"name":"NotWhitelistedToken","nameLocation":"627:19:26","nodeType":"ErrorDefinition","parameters":{"id":7513,"nodeType":"ParameterList","parameters":[],"src":"646:2:26"},"src":"621:28:26"},{"errorSelector":"c23f6ccb","id":7516,"name":"SameValue","nameLocation":"660:9:26","nodeType":"ErrorDefinition","parameters":{"id":7515,"nodeType":"ParameterList","parameters":[],"src":"669:2:26"},"src":"654:18:26"},{"errorSelector":"7cfb3d6c","id":7518,"name":"SpecialVotingWindow","nameLocation":"683:19:26","nodeType":"ErrorDefinition","parameters":{"id":7517,"nodeType":"ParameterList","parameters":[],"src":"702:2:26"},"src":"677:28:26"},{"errorSelector":"ebcfae4b","id":7520,"name":"TooManyPools","nameLocation":"716:12:26","nodeType":"ErrorDefinition","parameters":{"id":7519,"nodeType":"ParameterList","parameters":[],"src":"728:2:26"},"src":"710:21:26"},{"errorSelector":"ccab218c","id":7522,"name":"UnequalLengths","nameLocation":"742:14:26","nodeType":"ErrorDefinition","parameters":{"id":7521,"nodeType":"ParameterList","parameters":[],"src":"756:2:26"},"src":"736:23:26"},{"errorSelector":"669567ea","id":7524,"name":"ZeroBalance","nameLocation":"770:11:26","nodeType":"ErrorDefinition","parameters":{"id":7523,"nodeType":"ParameterList","parameters":[],"src":"781:2:26"},"src":"764:20:26"},{"errorSelector":"d92e233d","id":7526,"name":"ZeroAddress","nameLocation":"795:11:26","nodeType":"ErrorDefinition","parameters":{"id":7525,"nodeType":"ParameterList","parameters":[],"src":"806:2:26"},"src":"789:20:26"},{"anonymous":false,"eventSelector":"ef9f7d1ffff3b249c6b9bf2528499e935f7d96bb6d6ec4e7da504d1d3c6279e1","id":7544,"name":"GaugeCreated","nameLocation":"821:12:26","nodeType":"EventDefinition","parameters":{"id":7543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7528,"indexed":true,"mutability":"mutable","name":"poolFactory","nameLocation":"859:11:26","nodeType":"VariableDeclaration","scope":7544,"src":"843:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7527,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7530,"indexed":true,"mutability":"mutable","name":"votingRewardsFactory","nameLocation":"896:20:26","nodeType":"VariableDeclaration","scope":7544,"src":"880:36:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7529,"name":"address","nodeType":"ElementaryTypeName","src":"880:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7532,"indexed":true,"mutability":"mutable","name":"gaugeFactory","nameLocation":"942:12:26","nodeType":"VariableDeclaration","scope":7544,"src":"926:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7531,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7534,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"972:4:26","nodeType":"VariableDeclaration","scope":7544,"src":"964:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7533,"name":"address","nodeType":"ElementaryTypeName","src":"964:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7536,"indexed":false,"mutability":"mutable","name":"bribeVotingReward","nameLocation":"994:17:26","nodeType":"VariableDeclaration","scope":7544,"src":"986:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7535,"name":"address","nodeType":"ElementaryTypeName","src":"986:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7538,"indexed":false,"mutability":"mutable","name":"feeVotingReward","nameLocation":"1029:15:26","nodeType":"VariableDeclaration","scope":7544,"src":"1021:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7537,"name":"address","nodeType":"ElementaryTypeName","src":"1021:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7540,"indexed":false,"mutability":"mutable","name":"gauge","nameLocation":"1062:5:26","nodeType":"VariableDeclaration","scope":7544,"src":"1054:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7539,"name":"address","nodeType":"ElementaryTypeName","src":"1054:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7542,"indexed":false,"mutability":"mutable","name":"creator","nameLocation":"1085:7:26","nodeType":"VariableDeclaration","scope":7544,"src":"1077:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7541,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"833:265:26"},"src":"815:284:26"},{"anonymous":false,"eventSelector":"04a5d3f5d80d22d9345acc80618f4a4e7e663cf9e1aed23b57d975acec002ba7","id":7548,"name":"GaugeKilled","nameLocation":"1110:11:26","nodeType":"EventDefinition","parameters":{"id":7547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7546,"indexed":true,"mutability":"mutable","name":"gauge","nameLocation":"1138:5:26","nodeType":"VariableDeclaration","scope":7548,"src":"1122:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7545,"name":"address","nodeType":"ElementaryTypeName","src":"1122:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1121:23:26"},"src":"1104:41:26"},{"anonymous":false,"eventSelector":"ed18e9faa3dccfd8aa45f69c4de40546b2ca9cccc4538a2323531656516db1aa","id":7552,"name":"GaugeRevived","nameLocation":"1156:12:26","nodeType":"EventDefinition","parameters":{"id":7551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7550,"indexed":true,"mutability":"mutable","name":"gauge","nameLocation":"1185:5:26","nodeType":"VariableDeclaration","scope":7552,"src":"1169:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7549,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1168:23:26"},"src":"1150:42:26"},{"anonymous":false,"eventSelector":"452d440efc30dfa14a0ef803ccb55936af860ec6a6960ed27f129bef913f296a","id":7566,"name":"Voted","nameLocation":"1203:5:26","nodeType":"EventDefinition","parameters":{"id":7565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7554,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1234:5:26","nodeType":"VariableDeclaration","scope":7566,"src":"1218:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7553,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7556,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"1265:4:26","nodeType":"VariableDeclaration","scope":7566,"src":"1249:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7555,"name":"address","nodeType":"ElementaryTypeName","src":"1249:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7558,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1295:7:26","nodeType":"VariableDeclaration","scope":7566,"src":"1279:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1279:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7560,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"1320:6:26","nodeType":"VariableDeclaration","scope":7566,"src":"1312:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1312:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7562,"indexed":false,"mutability":"mutable","name":"totalWeight","nameLocation":"1344:11:26","nodeType":"VariableDeclaration","scope":7566,"src":"1336:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7564,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1373:9:26","nodeType":"VariableDeclaration","scope":7566,"src":"1365:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1208:180:26"},"src":"1197:192:26"},{"anonymous":false,"eventSelector":"adab630928b1d46214641293704a312ee7ad87e03ae14a7fd95e7308b93998df","id":7580,"name":"Abstained","nameLocation":"1400:9:26","nodeType":"EventDefinition","parameters":{"id":7579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7568,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1435:5:26","nodeType":"VariableDeclaration","scope":7580,"src":"1419:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7567,"name":"address","nodeType":"ElementaryTypeName","src":"1419:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7570,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"1466:4:26","nodeType":"VariableDeclaration","scope":7580,"src":"1450:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7569,"name":"address","nodeType":"ElementaryTypeName","src":"1450:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7572,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1496:7:26","nodeType":"VariableDeclaration","scope":7580,"src":"1480:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1480:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7574,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"1521:6:26","nodeType":"VariableDeclaration","scope":7580,"src":"1513:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1513:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7576,"indexed":false,"mutability":"mutable","name":"totalWeight","nameLocation":"1545:11:26","nodeType":"VariableDeclaration","scope":7580,"src":"1537:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1537:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7578,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1574:9:26","nodeType":"VariableDeclaration","scope":7580,"src":"1566:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1566:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1409:180:26"},"src":"1394:196:26"},{"anonymous":false,"eventSelector":"f70d5c697de7ea828df48e5c4573cb2194c659f1901f70110c52b066dcf50826","id":7588,"name":"NotifyReward","nameLocation":"1601:12:26","nodeType":"EventDefinition","parameters":{"id":7587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1630:6:26","nodeType":"VariableDeclaration","scope":7588,"src":"1614:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7581,"name":"address","nodeType":"ElementaryTypeName","src":"1614:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7584,"indexed":true,"mutability":"mutable","name":"reward","nameLocation":"1654:6:26","nodeType":"VariableDeclaration","scope":7588,"src":"1638:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7583,"name":"address","nodeType":"ElementaryTypeName","src":"1638:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7586,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1670:6:26","nodeType":"VariableDeclaration","scope":7588,"src":"1662:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1662:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1613:64:26"},"src":"1595:83:26"},{"anonymous":false,"eventSelector":"4fa9693cae526341d334e2862ca2413b2e503f1266255f9e0869fb36e6d89b17","id":7596,"name":"DistributeReward","nameLocation":"1689:16:26","nodeType":"EventDefinition","parameters":{"id":7595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1722:6:26","nodeType":"VariableDeclaration","scope":7596,"src":"1706:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7589,"name":"address","nodeType":"ElementaryTypeName","src":"1706:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7592,"indexed":true,"mutability":"mutable","name":"gauge","nameLocation":"1746:5:26","nodeType":"VariableDeclaration","scope":7596,"src":"1730:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7591,"name":"address","nodeType":"ElementaryTypeName","src":"1730:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7594,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1761:6:26","nodeType":"VariableDeclaration","scope":7596,"src":"1753:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1705:63:26"},"src":"1683:86:26"},{"anonymous":false,"eventSelector":"44948130cf88523dbc150908a47dd6332c33a01a3869d7f2fa78e51d5a5f9c57","id":7604,"name":"WhitelistToken","nameLocation":"1780:14:26","nodeType":"EventDefinition","parameters":{"id":7603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7598,"indexed":true,"mutability":"mutable","name":"whitelister","nameLocation":"1811:11:26","nodeType":"VariableDeclaration","scope":7604,"src":"1795:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7597,"name":"address","nodeType":"ElementaryTypeName","src":"1795:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7600,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1840:5:26","nodeType":"VariableDeclaration","scope":7604,"src":"1824:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7599,"name":"address","nodeType":"ElementaryTypeName","src":"1824:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7602,"indexed":true,"mutability":"mutable","name":"_bool","nameLocation":"1860:5:26","nodeType":"VariableDeclaration","scope":7604,"src":"1847:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7601,"name":"bool","nodeType":"ElementaryTypeName","src":"1847:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1794:72:26"},"src":"1774:93:26"},{"anonymous":false,"eventSelector":"8a6ff732c8641e1e34d771e1f8b1673e988c1abdfb694ebdf6c910a5e3d0d853","id":7612,"name":"WhitelistNFT","nameLocation":"1878:12:26","nodeType":"EventDefinition","parameters":{"id":7611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7606,"indexed":true,"mutability":"mutable","name":"whitelister","nameLocation":"1907:11:26","nodeType":"VariableDeclaration","scope":7612,"src":"1891:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7605,"name":"address","nodeType":"ElementaryTypeName","src":"1891:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7608,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1936:7:26","nodeType":"VariableDeclaration","scope":7612,"src":"1920:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7607,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7610,"indexed":true,"mutability":"mutable","name":"_bool","nameLocation":"1958:5:26","nodeType":"VariableDeclaration","scope":7612,"src":"1945:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7609,"name":"bool","nodeType":"ElementaryTypeName","src":"1945:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1890:74:26"},"src":"1872:93:26"},{"documentation":{"id":7613,"nodeType":"StructuredDocumentation","src":"1971:66:26","text":"@notice Store trusted forwarder address to pass into factories"},"functionSelector":"f645d4f9","id":7618,"implemented":false,"kind":"function","modifiers":[],"name":"forwarder","nameLocation":"2051:9:26","nodeType":"FunctionDefinition","parameters":{"id":7614,"nodeType":"ParameterList","parameters":[],"src":"2060:2:26"},"returnParameters":{"id":7617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7618,"src":"2086:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7615,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2085:9:26"},"scope":7954,"src":"2042:53:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7619,"nodeType":"StructuredDocumentation","src":"2101:53:26","text":"@notice The ve token that governs these contracts"},"functionSelector":"1f850716","id":7624,"implemented":false,"kind":"function","modifiers":[],"name":"ve","nameLocation":"2168:2:26","nodeType":"FunctionDefinition","parameters":{"id":7620,"nodeType":"ParameterList","parameters":[],"src":"2170:2:26"},"returnParameters":{"id":7623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7624,"src":"2196:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7621,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2195:9:26"},"scope":7954,"src":"2159:46:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7625,"nodeType":"StructuredDocumentation","src":"2211:71:26","text":"@notice Factory registry for valid pool / gauge / rewards factories"},"functionSelector":"3bf0c9fb","id":7630,"implemented":false,"kind":"function","modifiers":[],"name":"factoryRegistry","nameLocation":"2296:15:26","nodeType":"FunctionDefinition","parameters":{"id":7626,"nodeType":"ParameterList","parameters":[],"src":"2311:2:26"},"returnParameters":{"id":7629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7630,"src":"2337:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7627,"name":"address","nodeType":"ElementaryTypeName","src":"2337:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2336:9:26"},"scope":7954,"src":"2287:59:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7631,"nodeType":"StructuredDocumentation","src":"2352:33:26","text":"@notice Address of Minter.sol"},"functionSelector":"07546172","id":7636,"implemented":false,"kind":"function","modifiers":[],"name":"minter","nameLocation":"2399:6:26","nodeType":"FunctionDefinition","parameters":{"id":7632,"nodeType":"ParameterList","parameters":[],"src":"2405:2:26"},"returnParameters":{"id":7635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7636,"src":"2431:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7633,"name":"address","nodeType":"ElementaryTypeName","src":"2431:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:9:26"},"scope":7954,"src":"2390:50:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7637,"nodeType":"StructuredDocumentation","src":"2446:60:26","text":"@notice Standard OZ IGovernor using ve for vote weights."},"functionSelector":"0c340a24","id":7642,"implemented":false,"kind":"function","modifiers":[],"name":"governor","nameLocation":"2520:8:26","nodeType":"FunctionDefinition","parameters":{"id":7638,"nodeType":"ParameterList","parameters":[],"src":"2528:2:26"},"returnParameters":{"id":7641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7642,"src":"2554:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7639,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2553:9:26"},"scope":7954,"src":"2511:52:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7643,"nodeType":"StructuredDocumentation","src":"2569:60:26","text":"@notice Custom Epoch Governor using ve for vote weights."},"functionSelector":"3aae971f","id":7648,"implemented":false,"kind":"function","modifiers":[],"name":"epochGovernor","nameLocation":"2643:13:26","nodeType":"FunctionDefinition","parameters":{"id":7644,"nodeType":"ParameterList","parameters":[],"src":"2656:2:26"},"returnParameters":{"id":7647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7648,"src":"2682:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7645,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2681:9:26"},"scope":7954,"src":"2634:57:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7649,"nodeType":"StructuredDocumentation","src":"2697:67:26","text":"@notice credibly neutral party similar to Curve's Emergency DAO"},"functionSelector":"7778960e","id":7654,"implemented":false,"kind":"function","modifiers":[],"name":"emergencyCouncil","nameLocation":"2778:16:26","nodeType":"FunctionDefinition","parameters":{"id":7650,"nodeType":"ParameterList","parameters":[],"src":"2794:2:26"},"returnParameters":{"id":7653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7654,"src":"2820:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7651,"name":"address","nodeType":"ElementaryTypeName","src":"2820:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2819:9:26"},"scope":7954,"src":"2769:60:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7655,"nodeType":"StructuredDocumentation","src":"2835:29:26","text":"@dev Total Voting Weights"},"functionSelector":"96c82e57","id":7660,"implemented":false,"kind":"function","modifiers":[],"name":"totalWeight","nameLocation":"2878:11:26","nodeType":"FunctionDefinition","parameters":{"id":7656,"nodeType":"ParameterList","parameters":[],"src":"2889:2:26"},"returnParameters":{"id":7659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7660,"src":"2915:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2915:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2914:9:26"},"scope":7954,"src":"2869:55:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7661,"nodeType":"StructuredDocumentation","src":"2930:60:26","text":"@dev Most number of pools one voter can vote for at once"},"functionSelector":"e8b3fd57","id":7666,"implemented":false,"kind":"function","modifiers":[],"name":"maxVotingNum","nameLocation":"3004:12:26","nodeType":"FunctionDefinition","parameters":{"id":7662,"nodeType":"ParameterList","parameters":[],"src":"3016:2:26"},"returnParameters":{"id":7665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7666,"src":"3042:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7663,"name":"uint256","nodeType":"ElementaryTypeName","src":"3042:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3041:9:26"},"scope":7954,"src":"2995:56:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7667,"nodeType":"StructuredDocumentation","src":"3073:22:26","text":"@dev Pool => Gauge"},"functionSelector":"b9a09fd5","id":7674,"implemented":false,"kind":"function","modifiers":[],"name":"gauges","nameLocation":"3109:6:26","nodeType":"FunctionDefinition","parameters":{"id":7670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7669,"mutability":"mutable","name":"pool","nameLocation":"3124:4:26","nodeType":"VariableDeclaration","scope":7674,"src":"3116:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7668,"name":"address","nodeType":"ElementaryTypeName","src":"3116:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3115:14:26"},"returnParameters":{"id":7673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7674,"src":"3153:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7671,"name":"address","nodeType":"ElementaryTypeName","src":"3153:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3152:9:26"},"scope":7954,"src":"3100:62:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7675,"nodeType":"StructuredDocumentation","src":"3168:22:26","text":"@dev Gauge => Pool"},"functionSelector":"06d6a1b2","id":7682,"implemented":false,"kind":"function","modifiers":[],"name":"poolForGauge","nameLocation":"3204:12:26","nodeType":"FunctionDefinition","parameters":{"id":7678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7677,"mutability":"mutable","name":"gauge","nameLocation":"3225:5:26","nodeType":"VariableDeclaration","scope":7682,"src":"3217:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7676,"name":"address","nodeType":"ElementaryTypeName","src":"3217:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3216:15:26"},"returnParameters":{"id":7681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7682,"src":"3255:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7679,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3254:9:26"},"scope":7954,"src":"3195:69:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7683,"nodeType":"StructuredDocumentation","src":"3270:36:26","text":"@dev Gauge => Fees Voting Reward"},"functionSelector":"c4f08165","id":7690,"implemented":false,"kind":"function","modifiers":[],"name":"gaugeToFees","nameLocation":"3320:11:26","nodeType":"FunctionDefinition","parameters":{"id":7686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7685,"mutability":"mutable","name":"gauge","nameLocation":"3340:5:26","nodeType":"VariableDeclaration","scope":7690,"src":"3332:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7684,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3331:15:26"},"returnParameters":{"id":7689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7690,"src":"3370:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7687,"name":"address","nodeType":"ElementaryTypeName","src":"3370:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3369:9:26"},"scope":7954,"src":"3311:68:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7691,"nodeType":"StructuredDocumentation","src":"3385:38:26","text":"@dev Gauge => Bribes Voting Reward"},"functionSelector":"929c8dcd","id":7698,"implemented":false,"kind":"function","modifiers":[],"name":"gaugeToBribe","nameLocation":"3437:12:26","nodeType":"FunctionDefinition","parameters":{"id":7694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7693,"mutability":"mutable","name":"gauge","nameLocation":"3458:5:26","nodeType":"VariableDeclaration","scope":7698,"src":"3450:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7692,"name":"address","nodeType":"ElementaryTypeName","src":"3450:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3449:15:26"},"returnParameters":{"id":7697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7698,"src":"3488:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7695,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3487:9:26"},"scope":7954,"src":"3428:69:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7699,"nodeType":"StructuredDocumentation","src":"3503:24:26","text":"@dev Pool => Weights"},"functionSelector":"a7cac846","id":7706,"implemented":false,"kind":"function","modifiers":[],"name":"weights","nameLocation":"3541:7:26","nodeType":"FunctionDefinition","parameters":{"id":7702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7701,"mutability":"mutable","name":"pool","nameLocation":"3557:4:26","nodeType":"VariableDeclaration","scope":7706,"src":"3549:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7700,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3548:14:26"},"returnParameters":{"id":7705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7706,"src":"3586:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7703,"name":"uint256","nodeType":"ElementaryTypeName","src":"3586:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3585:9:26"},"scope":7954,"src":"3532:63:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7707,"nodeType":"StructuredDocumentation","src":"3601:29:26","text":"@dev NFT => Pool => Votes"},"functionSelector":"d23254b4","id":7716,"implemented":false,"kind":"function","modifiers":[],"name":"votes","nameLocation":"3644:5:26","nodeType":"FunctionDefinition","parameters":{"id":7712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7709,"mutability":"mutable","name":"tokenId","nameLocation":"3658:7:26","nodeType":"VariableDeclaration","scope":7716,"src":"3650:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7708,"name":"uint256","nodeType":"ElementaryTypeName","src":"3650:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7711,"mutability":"mutable","name":"pool","nameLocation":"3675:4:26","nodeType":"VariableDeclaration","scope":7716,"src":"3667:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7710,"name":"address","nodeType":"ElementaryTypeName","src":"3667:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3649:31:26"},"returnParameters":{"id":7715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7716,"src":"3704:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7713,"name":"uint256","nodeType":"ElementaryTypeName","src":"3704:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3703:9:26"},"scope":7954,"src":"3635:78:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7717,"nodeType":"StructuredDocumentation","src":"3719:42:26","text":"@dev NFT => Total voting weight of NFT"},"functionSelector":"79e93824","id":7724,"implemented":false,"kind":"function","modifiers":[],"name":"usedWeights","nameLocation":"3775:11:26","nodeType":"FunctionDefinition","parameters":{"id":7720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7719,"mutability":"mutable","name":"tokenId","nameLocation":"3795:7:26","nodeType":"VariableDeclaration","scope":7724,"src":"3787:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3787:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3786:17:26"},"returnParameters":{"id":7723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7724,"src":"3827:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7721,"name":"uint256","nodeType":"ElementaryTypeName","src":"3827:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3826:9:26"},"scope":7954,"src":"3766:70:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7725,"nodeType":"StructuredDocumentation","src":"3842:70:26","text":"@dev Nft => Timestamp of last vote (ensures single vote per epoch)"},"functionSelector":"f3594be0","id":7732,"implemented":false,"kind":"function","modifiers":[],"name":"lastVoted","nameLocation":"3926:9:26","nodeType":"FunctionDefinition","parameters":{"id":7728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7727,"mutability":"mutable","name":"tokenId","nameLocation":"3944:7:26","nodeType":"VariableDeclaration","scope":7732,"src":"3936:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7726,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3935:17:26"},"returnParameters":{"id":7731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7732,"src":"3976:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7729,"name":"uint256","nodeType":"ElementaryTypeName","src":"3976:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3975:9:26"},"scope":7954,"src":"3917:68:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7733,"nodeType":"StructuredDocumentation","src":"3991:25:26","text":"@dev Address => Gauge"},"functionSelector":"aa79979b","id":7740,"implemented":false,"kind":"function","modifiers":[],"name":"isGauge","nameLocation":"4030:7:26","nodeType":"FunctionDefinition","parameters":{"id":7736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7740,"src":"4038:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7734,"name":"address","nodeType":"ElementaryTypeName","src":"4038:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4037:9:26"},"returnParameters":{"id":7739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7740,"src":"4070:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7737,"name":"bool","nodeType":"ElementaryTypeName","src":"4070:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4069:6:26"},"scope":7954,"src":"4021:55:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7741,"nodeType":"StructuredDocumentation","src":"4082:36:26","text":"@dev Token => Whitelisted status"},"functionSelector":"ab37f486","id":7748,"implemented":false,"kind":"function","modifiers":[],"name":"isWhitelistedToken","nameLocation":"4132:18:26","nodeType":"FunctionDefinition","parameters":{"id":7744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7743,"mutability":"mutable","name":"token","nameLocation":"4159:5:26","nodeType":"VariableDeclaration","scope":7748,"src":"4151:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7742,"name":"address","nodeType":"ElementaryTypeName","src":"4151:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4150:15:26"},"returnParameters":{"id":7747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7748,"src":"4189:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7745,"name":"bool","nodeType":"ElementaryTypeName","src":"4189:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4188:6:26"},"scope":7954,"src":"4123:72:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7749,"nodeType":"StructuredDocumentation","src":"4201:38:26","text":"@dev TokenId => Whitelisted status"},"functionSelector":"d4e2616f","id":7756,"implemented":false,"kind":"function","modifiers":[],"name":"isWhitelistedNFT","nameLocation":"4253:16:26","nodeType":"FunctionDefinition","parameters":{"id":7752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7751,"mutability":"mutable","name":"tokenId","nameLocation":"4278:7:26","nodeType":"VariableDeclaration","scope":7756,"src":"4270:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7750,"name":"uint256","nodeType":"ElementaryTypeName","src":"4270:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4269:17:26"},"returnParameters":{"id":7755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7756,"src":"4310:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7753,"name":"bool","nodeType":"ElementaryTypeName","src":"4310:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4309:6:26"},"scope":7954,"src":"4244:72:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7757,"nodeType":"StructuredDocumentation","src":"4322:33:26","text":"@dev Gauge => Liveness status"},"functionSelector":"1703e5f9","id":7764,"implemented":false,"kind":"function","modifiers":[],"name":"isAlive","nameLocation":"4369:7:26","nodeType":"FunctionDefinition","parameters":{"id":7760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7759,"mutability":"mutable","name":"gauge","nameLocation":"4385:5:26","nodeType":"VariableDeclaration","scope":7764,"src":"4377:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7758,"name":"address","nodeType":"ElementaryTypeName","src":"4377:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4376:15:26"},"returnParameters":{"id":7763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7764,"src":"4415:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7761,"name":"bool","nodeType":"ElementaryTypeName","src":"4415:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4414:6:26"},"scope":7954,"src":"4360:61:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7765,"nodeType":"StructuredDocumentation","src":"4427:34:26","text":"@dev Gauge => Amount claimable"},"functionSelector":"402914f5","id":7772,"implemented":false,"kind":"function","modifiers":[],"name":"claimable","nameLocation":"4475:9:26","nodeType":"FunctionDefinition","parameters":{"id":7768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7767,"mutability":"mutable","name":"gauge","nameLocation":"4493:5:26","nodeType":"VariableDeclaration","scope":7772,"src":"4485:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7766,"name":"address","nodeType":"ElementaryTypeName","src":"4485:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4484:15:26"},"returnParameters":{"id":7771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7772,"src":"4523:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7769,"name":"uint256","nodeType":"ElementaryTypeName","src":"4523:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4522:9:26"},"scope":7954,"src":"4466:66:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7773,"nodeType":"StructuredDocumentation","src":"4538:40:26","text":"@notice Number of pools with a Gauge"},"functionSelector":"1f7b6d32","id":7778,"implemented":false,"kind":"function","modifiers":[],"name":"length","nameLocation":"4592:6:26","nodeType":"FunctionDefinition","parameters":{"id":7774,"nodeType":"ParameterList","parameters":[],"src":"4598:2:26"},"returnParameters":{"id":7777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7778,"src":"4624:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7775,"name":"uint256","nodeType":"ElementaryTypeName","src":"4624:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4623:9:26"},"scope":7954,"src":"4583:50:26","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7779,"nodeType":"StructuredDocumentation","src":"4639:289:26","text":"@notice Called by Minter to distribute weekly emissions rewards for disbursement amongst gauges.\n @dev Assumes totalWeight != 0 (Will never be zero as long as users are voting).\n      Throws if not called by minter.\n @param _amount Amount of rewards to distribute."},"functionSelector":"3c6b16ab","id":7784,"implemented":false,"kind":"function","modifiers":[],"name":"notifyRewardAmount","nameLocation":"4942:18:26","nodeType":"FunctionDefinition","parameters":{"id":7782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7781,"mutability":"mutable","name":"_amount","nameLocation":"4969:7:26","nodeType":"VariableDeclaration","scope":7784,"src":"4961:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7780,"name":"uint256","nodeType":"ElementaryTypeName","src":"4961:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4960:17:26"},"returnParameters":{"id":7783,"nodeType":"ParameterList","parameters":[],"src":"4986:0:26"},"scope":7954,"src":"4933:54:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7785,"nodeType":"StructuredDocumentation","src":"4993:209:26","text":"@dev Utility to distribute to gauges of pools in range _start to _finish.\n @param _start   Starting index of gauges to distribute to.\n @param _finish  Ending index of gauges to distribute to."},"functionSelector":"7625391a","id":7792,"implemented":false,"kind":"function","modifiers":[],"name":"distribute","nameLocation":"5216:10:26","nodeType":"FunctionDefinition","parameters":{"id":7790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7787,"mutability":"mutable","name":"_start","nameLocation":"5235:6:26","nodeType":"VariableDeclaration","scope":7792,"src":"5227:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7786,"name":"uint256","nodeType":"ElementaryTypeName","src":"5227:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7789,"mutability":"mutable","name":"_finish","nameLocation":"5251:7:26","nodeType":"VariableDeclaration","scope":7792,"src":"5243:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7788,"name":"uint256","nodeType":"ElementaryTypeName","src":"5243:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5226:33:26"},"returnParameters":{"id":7791,"nodeType":"ParameterList","parameters":[],"src":"5268:0:26"},"scope":7954,"src":"5207:62:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7793,"nodeType":"StructuredDocumentation","src":"5275:116:26","text":"@dev Utility to distribute to gauges of pools in array.\n @param _gauges Array of gauges to distribute to."},"functionSelector":"6138889b","id":7799,"implemented":false,"kind":"function","modifiers":[],"name":"distribute","nameLocation":"5405:10:26","nodeType":"FunctionDefinition","parameters":{"id":7797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7796,"mutability":"mutable","name":"_gauges","nameLocation":"5433:7:26","nodeType":"VariableDeclaration","scope":7799,"src":"5416:24:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7794,"name":"address","nodeType":"ElementaryTypeName","src":"5416:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7795,"nodeType":"ArrayTypeName","src":"5416:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5415:26:26"},"returnParameters":{"id":7798,"nodeType":"ParameterList","parameters":[],"src":"5450:0:26"},"scope":7954,"src":"5396:55:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7800,"nodeType":"StructuredDocumentation","src":"5457:152:26","text":"@notice Called by users to update voting balances in voting rewards contracts.\n @param _tokenId Id of veNFT whose balance you wish to update."},"functionSelector":"32145f90","id":7805,"implemented":false,"kind":"function","modifiers":[],"name":"poke","nameLocation":"5623:4:26","nodeType":"FunctionDefinition","parameters":{"id":7803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7802,"mutability":"mutable","name":"_tokenId","nameLocation":"5636:8:26","nodeType":"VariableDeclaration","scope":7805,"src":"5628:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7801,"name":"uint256","nodeType":"ElementaryTypeName","src":"5628:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5627:18:26"},"returnParameters":{"id":7804,"nodeType":"ParameterList","parameters":[],"src":"5654:0:26"},"scope":7954,"src":"5614:41:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7806,"nodeType":"StructuredDocumentation","src":"5661:571:26","text":"@notice Called by users to vote for pools. Votes distributed proportionally based on weights.\n         Can only vote or deposit into a managed NFT once per epoch.\n         Can only vote for gauges that have not been killed.\n @dev Weights are distributed proportional to the sum of the weights in the array.\n      Throws if length of _poolVote and _weights do not match.\n @param _tokenId     Id of veNFT you are voting with.\n @param _poolVote    Array of pools you are voting for.\n @param _weights     Weights of pools."},"functionSelector":"7ac09bf7","id":7817,"implemented":false,"kind":"function","modifiers":[],"name":"vote","nameLocation":"6246:4:26","nodeType":"FunctionDefinition","parameters":{"id":7815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7808,"mutability":"mutable","name":"_tokenId","nameLocation":"6259:8:26","nodeType":"VariableDeclaration","scope":7817,"src":"6251:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7807,"name":"uint256","nodeType":"ElementaryTypeName","src":"6251:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7811,"mutability":"mutable","name":"_poolVote","nameLocation":"6288:9:26","nodeType":"VariableDeclaration","scope":7817,"src":"6269:28:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7809,"name":"address","nodeType":"ElementaryTypeName","src":"6269:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7810,"nodeType":"ArrayTypeName","src":"6269:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7814,"mutability":"mutable","name":"_weights","nameLocation":"6318:8:26","nodeType":"VariableDeclaration","scope":7817,"src":"6299:27:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7812,"name":"uint256","nodeType":"ElementaryTypeName","src":"6299:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7813,"nodeType":"ArrayTypeName","src":"6299:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6250:77:26"},"returnParameters":{"id":7816,"nodeType":"ParameterList","parameters":[],"src":"6336:0:26"},"scope":7954,"src":"6237:100:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7818,"nodeType":"StructuredDocumentation","src":"6343:359:26","text":"@notice Called by users to reset voting state. Required if you wish to make changes to\n         veNFT state (e.g. merge, split, deposit into managed etc).\n         Cannot reset in the same epoch that you voted in.\n         Can vote or deposit into a managed NFT again after reset.\n @param _tokenId Id of veNFT you are reseting."},"functionSelector":"310bd74b","id":7823,"implemented":false,"kind":"function","modifiers":[],"name":"reset","nameLocation":"6716:5:26","nodeType":"FunctionDefinition","parameters":{"id":7821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7820,"mutability":"mutable","name":"_tokenId","nameLocation":"6730:8:26","nodeType":"VariableDeclaration","scope":7823,"src":"6722:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6721:18:26"},"returnParameters":{"id":7822,"nodeType":"ParameterList","parameters":[],"src":"6748:0:26"},"scope":7954,"src":"6707:42:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7824,"nodeType":"StructuredDocumentation","src":"6755:453:26","text":"@notice Called by users to deposit into a managed NFT.\n         Can only vote or deposit into a managed NFT once per epoch.\n         Note that NFTs deposited into a managed NFT will be re-locked\n         to the maximum lock time on withdrawal.\n @dev Throws if not approved or owner.\n      Throws if managed NFT is inactive.\n      Throws if depositing within privileged window (one hour prior to epoch flip)."},"functionSelector":"e0c11f9a","id":7831,"implemented":false,"kind":"function","modifiers":[],"name":"depositManaged","nameLocation":"7222:14:26","nodeType":"FunctionDefinition","parameters":{"id":7829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7826,"mutability":"mutable","name":"_tokenId","nameLocation":"7245:8:26","nodeType":"VariableDeclaration","scope":7831,"src":"7237:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7825,"name":"uint256","nodeType":"ElementaryTypeName","src":"7237:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7828,"mutability":"mutable","name":"_mTokenId","nameLocation":"7263:9:26","nodeType":"VariableDeclaration","scope":7831,"src":"7255:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7827,"name":"uint256","nodeType":"ElementaryTypeName","src":"7255:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7236:37:26"},"returnParameters":{"id":7830,"nodeType":"ParameterList","parameters":[],"src":"7282:0:26"},"scope":7954,"src":"7213:70:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7832,"nodeType":"StructuredDocumentation","src":"7289:308:26","text":"@notice Called by users to withdraw from a managed NFT.\n         Cannot do it in the same epoch that you deposited into a managed NFT.\n         Can vote or deposit into a managed NFT again after withdrawing.\n         Note that the NFT withdrawn is re-locked to the maximum lock time."},"functionSelector":"370fb5fa","id":7837,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawManaged","nameLocation":"7611:15:26","nodeType":"FunctionDefinition","parameters":{"id":7835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7834,"mutability":"mutable","name":"_tokenId","nameLocation":"7635:8:26","nodeType":"VariableDeclaration","scope":7837,"src":"7627:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7833,"name":"uint256","nodeType":"ElementaryTypeName","src":"7627:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7626:18:26"},"returnParameters":{"id":7836,"nodeType":"ParameterList","parameters":[],"src":"7653:0:26"},"scope":7954,"src":"7602:52:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7838,"nodeType":"StructuredDocumentation","src":"7660:106:26","text":"@notice Claim emissions from gauges.\n @param _gauges Array of gauges to collect emissions from."},"functionSelector":"f9f031df","id":7844,"implemented":false,"kind":"function","modifiers":[],"name":"claimRewards","nameLocation":"7780:12:26","nodeType":"FunctionDefinition","parameters":{"id":7842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7841,"mutability":"mutable","name":"_gauges","nameLocation":"7810:7:26","nodeType":"VariableDeclaration","scope":7844,"src":"7793:24:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7839,"name":"address","nodeType":"ElementaryTypeName","src":"7793:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7840,"nodeType":"ArrayTypeName","src":"7793:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7792:26:26"},"returnParameters":{"id":7843,"nodeType":"ParameterList","parameters":[],"src":"7827:0:26"},"scope":7954,"src":"7771:57:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7845,"nodeType":"StructuredDocumentation","src":"7834:304:26","text":"@notice Claim bribes for a given NFT.\n @dev Utility to help batch bribe claims.\n @param _bribes  Array of BribeVotingReward contracts to collect from.\n @param _tokens  Array of tokens that are used as bribes.\n @param _tokenId Id of veNFT that you wish to claim bribes for."},"functionSelector":"7715ee75","id":7857,"implemented":false,"kind":"function","modifiers":[],"name":"claimBribes","nameLocation":"8152:11:26","nodeType":"FunctionDefinition","parameters":{"id":7855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7848,"mutability":"mutable","name":"_bribes","nameLocation":"8181:7:26","nodeType":"VariableDeclaration","scope":7857,"src":"8164:24:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7846,"name":"address","nodeType":"ElementaryTypeName","src":"8164:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7847,"nodeType":"ArrayTypeName","src":"8164:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7852,"mutability":"mutable","name":"_tokens","nameLocation":"8209:7:26","nodeType":"VariableDeclaration","scope":7857,"src":"8190:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"address[][]"},"typeName":{"baseType":{"baseType":{"id":7849,"name":"address","nodeType":"ElementaryTypeName","src":"8190:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7850,"nodeType":"ArrayTypeName","src":"8190:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"id":7851,"nodeType":"ArrayTypeName","src":"8190:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr","typeString":"address[][]"}},"visibility":"internal"},{"constant":false,"id":7854,"mutability":"mutable","name":"_tokenId","nameLocation":"8226:8:26","nodeType":"VariableDeclaration","scope":7857,"src":"8218:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7853,"name":"uint256","nodeType":"ElementaryTypeName","src":"8218:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8163:72:26"},"returnParameters":{"id":7856,"nodeType":"ParameterList","parameters":[],"src":"8244:0:26"},"scope":7954,"src":"8143:102:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7858,"nodeType":"StructuredDocumentation","src":"8251:295:26","text":"@notice Claim fees for a given NFT.\n @dev Utility to help batch fee claims.\n @param _fees    Array of FeesVotingReward contracts to collect from.\n @param _tokens  Array of tokens that are used as fees.\n @param _tokenId Id of veNFT that you wish to claim fees for."},"functionSelector":"666256aa","id":7870,"implemented":false,"kind":"function","modifiers":[],"name":"claimFees","nameLocation":"8560:9:26","nodeType":"FunctionDefinition","parameters":{"id":7868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7861,"mutability":"mutable","name":"_fees","nameLocation":"8587:5:26","nodeType":"VariableDeclaration","scope":7870,"src":"8570:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7859,"name":"address","nodeType":"ElementaryTypeName","src":"8570:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7860,"nodeType":"ArrayTypeName","src":"8570:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7865,"mutability":"mutable","name":"_tokens","nameLocation":"8613:7:26","nodeType":"VariableDeclaration","scope":7870,"src":"8594:26:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"address[][]"},"typeName":{"baseType":{"baseType":{"id":7862,"name":"address","nodeType":"ElementaryTypeName","src":"8594:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7863,"nodeType":"ArrayTypeName","src":"8594:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"id":7864,"nodeType":"ArrayTypeName","src":"8594:11:26","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr","typeString":"address[][]"}},"visibility":"internal"},{"constant":false,"id":7867,"mutability":"mutable","name":"_tokenId","nameLocation":"8630:8:26","nodeType":"VariableDeclaration","scope":7870,"src":"8622:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7866,"name":"uint256","nodeType":"ElementaryTypeName","src":"8622:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:70:26"},"returnParameters":{"id":7869,"nodeType":"ParameterList","parameters":[],"src":"8648:0:26"},"scope":7954,"src":"8551:98:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7871,"nodeType":"StructuredDocumentation","src":"8655:103:26","text":"@notice Set new governor.\n @dev Throws if not called by governor.\n @param _governor ."},"functionSelector":"c42cf535","id":7876,"implemented":false,"kind":"function","modifiers":[],"name":"setGovernor","nameLocation":"8772:11:26","nodeType":"FunctionDefinition","parameters":{"id":7874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7873,"mutability":"mutable","name":"_governor","nameLocation":"8792:9:26","nodeType":"VariableDeclaration","scope":7876,"src":"8784:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7872,"name":"address","nodeType":"ElementaryTypeName","src":"8784:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8783:19:26"},"returnParameters":{"id":7875,"nodeType":"ParameterList","parameters":[],"src":"8811:0:26"},"scope":7954,"src":"8763:49:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7877,"nodeType":"StructuredDocumentation","src":"8818:120:26","text":"@notice Set new epoch based governor.\n @dev Throws if not called by governor.\n @param _epochGovernor ."},"functionSelector":"598d521b","id":7882,"implemented":false,"kind":"function","modifiers":[],"name":"setEpochGovernor","nameLocation":"8952:16:26","nodeType":"FunctionDefinition","parameters":{"id":7880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7879,"mutability":"mutable","name":"_epochGovernor","nameLocation":"8977:14:26","nodeType":"VariableDeclaration","scope":7882,"src":"8969:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7878,"name":"address","nodeType":"ElementaryTypeName","src":"8969:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8968:24:26"},"returnParameters":{"id":7881,"nodeType":"ParameterList","parameters":[],"src":"9001:0:26"},"scope":7954,"src":"8943:59:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7883,"nodeType":"StructuredDocumentation","src":"9008:129:26","text":"@notice Set new emergency council.\n @dev Throws if not called by emergency council.\n @param _emergencyCouncil ."},"functionSelector":"e586875f","id":7888,"implemented":false,"kind":"function","modifiers":[],"name":"setEmergencyCouncil","nameLocation":"9151:19:26","nodeType":"FunctionDefinition","parameters":{"id":7886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7885,"mutability":"mutable","name":"_emergencyCouncil","nameLocation":"9179:17:26","nodeType":"VariableDeclaration","scope":7888,"src":"9171:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7884,"name":"address","nodeType":"ElementaryTypeName","src":"9171:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9170:27:26"},"returnParameters":{"id":7887,"nodeType":"ParameterList","parameters":[],"src":"9206:0:26"},"scope":7954,"src":"9142:65:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7889,"nodeType":"StructuredDocumentation","src":"9213:238:26","text":"@notice Set maximum number of gauges that can be voted for.\n @dev Throws if not called by governor.\n      Throws if _maxVotingNum is too low.\n      Throws if the values are the same.\n @param _maxVotingNum ."},"functionSelector":"30331b2f","id":7894,"implemented":false,"kind":"function","modifiers":[],"name":"setMaxVotingNum","nameLocation":"9465:15:26","nodeType":"FunctionDefinition","parameters":{"id":7892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7891,"mutability":"mutable","name":"_maxVotingNum","nameLocation":"9489:13:26","nodeType":"VariableDeclaration","scope":7894,"src":"9481:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7890,"name":"uint256","nodeType":"ElementaryTypeName","src":"9481:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9480:23:26"},"returnParameters":{"id":7893,"nodeType":"ParameterList","parameters":[],"src":"9512:0:26"},"scope":7954,"src":"9456:57:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7895,"nodeType":"StructuredDocumentation","src":"9519:157:26","text":"@notice Whitelist (or unwhitelist) token for use in bribes.\n @dev Throws if not called by governor.\n @param _token .\n @param _bool ."},"functionSelector":"0ffb1d8b","id":7902,"implemented":false,"kind":"function","modifiers":[],"name":"whitelistToken","nameLocation":"9690:14:26","nodeType":"FunctionDefinition","parameters":{"id":7900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7897,"mutability":"mutable","name":"_token","nameLocation":"9713:6:26","nodeType":"VariableDeclaration","scope":7902,"src":"9705:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7896,"name":"address","nodeType":"ElementaryTypeName","src":"9705:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7899,"mutability":"mutable","name":"_bool","nameLocation":"9726:5:26","nodeType":"VariableDeclaration","scope":7902,"src":"9721:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7898,"name":"bool","nodeType":"ElementaryTypeName","src":"9721:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9704:28:26"},"returnParameters":{"id":7901,"nodeType":"ParameterList","parameters":[],"src":"9741:0:26"},"scope":7954,"src":"9681:61:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7903,"nodeType":"StructuredDocumentation","src":"9748:232:26","text":"@notice Whitelist (or unwhitelist) token id for voting in last hour prior to epoch flip.\n @dev Throws if not called by governor.\n      Throws if already whitelisted.\n @param _tokenId .\n @param _bool ."},"functionSelector":"e2819d5c","id":7910,"implemented":false,"kind":"function","modifiers":[],"name":"whitelistNFT","nameLocation":"9994:12:26","nodeType":"FunctionDefinition","parameters":{"id":7908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7905,"mutability":"mutable","name":"_tokenId","nameLocation":"10015:8:26","nodeType":"VariableDeclaration","scope":7910,"src":"10007:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7904,"name":"uint256","nodeType":"ElementaryTypeName","src":"10007:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7907,"mutability":"mutable","name":"_bool","nameLocation":"10030:5:26","nodeType":"VariableDeclaration","scope":7910,"src":"10025:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7906,"name":"bool","nodeType":"ElementaryTypeName","src":"10025:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10006:30:26"},"returnParameters":{"id":7909,"nodeType":"ParameterList","parameters":[],"src":"10045:0:26"},"scope":7954,"src":"9985:61:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7911,"nodeType":"StructuredDocumentation","src":"10052:175:26","text":"@notice Create a new gauge (unpermissioned).\n @dev Governor can create a new gauge for a pool with any address.\n @param _poolFactory .\n @param _pool ."},"functionSelector":"794cea3c","id":7920,"implemented":false,"kind":"function","modifiers":[],"name":"createGauge","nameLocation":"10241:11:26","nodeType":"FunctionDefinition","parameters":{"id":7916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7913,"mutability":"mutable","name":"_poolFactory","nameLocation":"10261:12:26","nodeType":"VariableDeclaration","scope":7920,"src":"10253:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7912,"name":"address","nodeType":"ElementaryTypeName","src":"10253:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7915,"mutability":"mutable","name":"_pool","nameLocation":"10283:5:26","nodeType":"VariableDeclaration","scope":7920,"src":"10275:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7914,"name":"address","nodeType":"ElementaryTypeName","src":"10275:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10252:37:26"},"returnParameters":{"id":7919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7920,"src":"10308:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7917,"name":"address","nodeType":"ElementaryTypeName","src":"10308:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10307:9:26"},"scope":7954,"src":"10232:85:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7921,"nodeType":"StructuredDocumentation","src":"10323:273:26","text":"@notice Kills a gauge. The gauge will not receive any new emissions and cannot be deposited into.\n         Can still withdraw from gauge.\n @dev Throws if not called by emergency council.\n      Throws if gauge already killed.\n @param _gauge ."},"functionSelector":"992a7933","id":7926,"implemented":false,"kind":"function","modifiers":[],"name":"killGauge","nameLocation":"10610:9:26","nodeType":"FunctionDefinition","parameters":{"id":7924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7923,"mutability":"mutable","name":"_gauge","nameLocation":"10628:6:26","nodeType":"VariableDeclaration","scope":7926,"src":"10620:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7922,"name":"address","nodeType":"ElementaryTypeName","src":"10620:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10619:16:26"},"returnParameters":{"id":7925,"nodeType":"ParameterList","parameters":[],"src":"10644:0:26"},"scope":7954,"src":"10601:44:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7927,"nodeType":"StructuredDocumentation","src":"10651:212:26","text":"@notice Revives a killed gauge. Gauge will can receive emissions and deposits again.\n @dev Throws if not called by emergency council.\n      Throws if gauge is not killed.\n @param _gauge ."},"functionSelector":"9f06247b","id":7932,"implemented":false,"kind":"function","modifiers":[],"name":"reviveGauge","nameLocation":"10877:11:26","nodeType":"FunctionDefinition","parameters":{"id":7930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7929,"mutability":"mutable","name":"_gauge","nameLocation":"10897:6:26","nodeType":"VariableDeclaration","scope":7932,"src":"10889:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7928,"name":"address","nodeType":"ElementaryTypeName","src":"10889:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10888:16:26"},"returnParameters":{"id":7931,"nodeType":"ParameterList","parameters":[],"src":"10913:0:26"},"scope":7954,"src":"10868:46:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7933,"nodeType":"StructuredDocumentation","src":"10920:123:26","text":"@dev Update claims to emissions for an array of gauges.\n @param _gauges Array of gauges to update emissions for."},"functionSelector":"d560b0d7","id":7939,"implemented":false,"kind":"function","modifiers":[],"name":"updateFor","nameLocation":"11057:9:26","nodeType":"FunctionDefinition","parameters":{"id":7937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7936,"mutability":"mutable","name":"_gauges","nameLocation":"11084:7:26","nodeType":"VariableDeclaration","scope":7939,"src":"11067:24:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7934,"name":"address","nodeType":"ElementaryTypeName","src":"11067:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7935,"nodeType":"ArrayTypeName","src":"11067:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11066:26:26"},"returnParameters":{"id":7938,"nodeType":"ParameterList","parameters":[],"src":"11101:0:26"},"scope":7954,"src":"11048:54:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7940,"nodeType":"StructuredDocumentation","src":"11108:185:26","text":"@dev Update claims to emissions for gauges based on their pool id as stored in Voter.\n @param _start   Starting index of pools.\n @param _end     Ending index of pools."},"functionSelector":"c9ff6f4d","id":7947,"implemented":false,"kind":"function","modifiers":[],"name":"updateFor","nameLocation":"11307:9:26","nodeType":"FunctionDefinition","parameters":{"id":7945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7942,"mutability":"mutable","name":"_start","nameLocation":"11325:6:26","nodeType":"VariableDeclaration","scope":7947,"src":"11317:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7941,"name":"uint256","nodeType":"ElementaryTypeName","src":"11317:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7944,"mutability":"mutable","name":"_end","nameLocation":"11341:4:26","nodeType":"VariableDeclaration","scope":7947,"src":"11333:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7943,"name":"uint256","nodeType":"ElementaryTypeName","src":"11333:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11316:30:26"},"returnParameters":{"id":7946,"nodeType":"ParameterList","parameters":[],"src":"11355:0:26"},"scope":7954,"src":"11298:58:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7948,"nodeType":"StructuredDocumentation","src":"11362:76:26","text":"@dev Update claims to emissions for single gauge\n @param _gauge ."},"functionSelector":"0e0a5968","id":7953,"implemented":false,"kind":"function","modifiers":[],"name":"updateFor","nameLocation":"11452:9:26","nodeType":"FunctionDefinition","parameters":{"id":7951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7950,"mutability":"mutable","name":"_gauge","nameLocation":"11470:6:26","nodeType":"VariableDeclaration","scope":7953,"src":"11462:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7949,"name":"address","nodeType":"ElementaryTypeName","src":"11462:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11461:16:26"},"returnParameters":{"id":7952,"nodeType":"ParameterList","parameters":[],"src":"11486:0:26"},"scope":7954,"src":"11443:44:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7955,"src":"57:11432:26","usedErrors":[7476,7478,7480,7482,7484,7486,7490,7494,7496,7498,7500,7502,7504,7506,7508,7510,7512,7514,7516,7518,7520,7522,7524,7526],"usedEvents":[7544,7548,7552,7566,7580,7588,7596,7604,7612]}],"src":"32:11458:26"}},"contracts/interfaces/factories/IPoolFactory.sol":{"id":27,"ast":{"absolutePath":"contracts/interfaces/factories/IPoolFactory.sol","exportedSymbols":{"IPoolFactory":[8143]},"id":8144,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7956,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IPoolFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":8143,"linearizedBaseContracts":[8143],"name":"IPoolFactory","nameLocation":"67:12:27","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"5d0517e3a4eabea892d9750138cd21d4a6cf3b935b43d0598df7055f463819b2","id":7960,"name":"SetFeeManager","nameLocation":"92:13:27","nodeType":"EventDefinition","parameters":{"id":7959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7958,"indexed":false,"mutability":"mutable","name":"feeManager","nameLocation":"114:10:27","nodeType":"VariableDeclaration","scope":7960,"src":"106:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7957,"name":"address","nodeType":"ElementaryTypeName","src":"106:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"105:20:27"},"src":"86:40:27"},{"anonymous":false,"eventSelector":"e02efb9e8f0fc21546730ab32d594f62d586e1bbb15bb5045edd0b1878a77b35","id":7964,"name":"SetPauser","nameLocation":"137:9:27","nodeType":"EventDefinition","parameters":{"id":7963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7962,"indexed":false,"mutability":"mutable","name":"pauser","nameLocation":"155:6:27","nodeType":"VariableDeclaration","scope":7964,"src":"147:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7961,"name":"address","nodeType":"ElementaryTypeName","src":"147:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"146:16:27"},"src":"131:32:27"},{"anonymous":false,"eventSelector":"0d76538efc408318a051137c2720a9e82902acdbd46b802d488b74ca3a09a116","id":7968,"name":"SetPauseState","nameLocation":"174:13:27","nodeType":"EventDefinition","parameters":{"id":7967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7966,"indexed":false,"mutability":"mutable","name":"state","nameLocation":"193:5:27","nodeType":"VariableDeclaration","scope":7968,"src":"188:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7965,"name":"bool","nodeType":"ElementaryTypeName","src":"188:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"187:12:27"},"src":"168:32:27"},{"anonymous":false,"eventSelector":"c6ff127433b785c51da9ae4088ee184c909b1a55b9afd82ae6c64224d3bc15d2","id":7972,"name":"SetVoter","nameLocation":"211:8:27","nodeType":"EventDefinition","parameters":{"id":7971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7970,"indexed":false,"mutability":"mutable","name":"voter","nameLocation":"228:5:27","nodeType":"VariableDeclaration","scope":7972,"src":"220:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7969,"name":"address","nodeType":"ElementaryTypeName","src":"220:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"219:15:27"},"src":"205:30:27"},{"anonymous":false,"eventSelector":"2128d88d14c80cb081c1252a5acff7a264671bf199ce226b53788fb26065005e","id":7984,"name":"PoolCreated","nameLocation":"246:11:27","nodeType":"EventDefinition","parameters":{"id":7983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7974,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"274:6:27","nodeType":"VariableDeclaration","scope":7984,"src":"258:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7973,"name":"address","nodeType":"ElementaryTypeName","src":"258:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7976,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"298:6:27","nodeType":"VariableDeclaration","scope":7984,"src":"282:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7975,"name":"address","nodeType":"ElementaryTypeName","src":"282:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7978,"indexed":true,"mutability":"mutable","name":"stable","nameLocation":"319:6:27","nodeType":"VariableDeclaration","scope":7984,"src":"306:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7977,"name":"bool","nodeType":"ElementaryTypeName","src":"306:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7980,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"335:4:27","nodeType":"VariableDeclaration","scope":7984,"src":"327:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7979,"name":"address","nodeType":"ElementaryTypeName","src":"327:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7982,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7984,"src":"341:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7981,"name":"uint256","nodeType":"ElementaryTypeName","src":"341:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"257:92:27"},"src":"240:110:27"},{"anonymous":false,"eventSelector":"770c6122f274fc8dbb2e39aacd540eccd995cab58ed8d8ffb6b8bd3053d49106","id":7992,"name":"PoolStarted","nameLocation":"361:11:27","nodeType":"EventDefinition","parameters":{"id":7991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7986,"indexed":true,"mutability":"mutable","name":"tokenA","nameLocation":"389:6:27","nodeType":"VariableDeclaration","scope":7992,"src":"373:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7985,"name":"address","nodeType":"ElementaryTypeName","src":"373:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7988,"indexed":true,"mutability":"mutable","name":"tokenB","nameLocation":"413:6:27","nodeType":"VariableDeclaration","scope":7992,"src":"397:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7987,"name":"address","nodeType":"ElementaryTypeName","src":"397:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7990,"indexed":true,"mutability":"mutable","name":"stable","nameLocation":"434:6:27","nodeType":"VariableDeclaration","scope":7992,"src":"421:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7989,"name":"bool","nodeType":"ElementaryTypeName","src":"421:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"372:69:27"},"src":"355:87:27"},{"anonymous":false,"eventSelector":"ae468ce586f9a87660fdffc1448cee942042c16ae2f02046b134b5224f31936b","id":7998,"name":"SetCustomFee","nameLocation":"453:12:27","nodeType":"EventDefinition","parameters":{"id":7997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7994,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"482:4:27","nodeType":"VariableDeclaration","scope":7998,"src":"466:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7993,"name":"address","nodeType":"ElementaryTypeName","src":"466:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7996,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"496:3:27","nodeType":"VariableDeclaration","scope":7998,"src":"488:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7995,"name":"uint256","nodeType":"ElementaryTypeName","src":"488:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"465:35:27"},"src":"447:54:27"},{"errorSelector":"52dadcf9","id":8000,"name":"FeeInvalid","nameLocation":"513:10:27","nodeType":"ErrorDefinition","parameters":{"id":7999,"nodeType":"ParameterList","parameters":[],"src":"523:2:27"},"src":"507:19:27"},{"errorSelector":"cd4e6167","id":8002,"name":"FeeTooHigh","nameLocation":"537:10:27","nodeType":"ErrorDefinition","parameters":{"id":8001,"nodeType":"ParameterList","parameters":[],"src":"547:2:27"},"src":"531:19:27"},{"errorSelector":"2083cd40","id":8004,"name":"InvalidPool","nameLocation":"561:11:27","nodeType":"ErrorDefinition","parameters":{"id":8003,"nodeType":"ParameterList","parameters":[],"src":"572:2:27"},"src":"555:20:27"},{"errorSelector":"f5d267eb","id":8006,"name":"NotFeeManager","nameLocation":"586:13:27","nodeType":"ErrorDefinition","parameters":{"id":8005,"nodeType":"ParameterList","parameters":[],"src":"599:2:27"},"src":"580:22:27"},{"errorSelector":"492f6781","id":8008,"name":"NotPauser","nameLocation":"613:9:27","nodeType":"ErrorDefinition","parameters":{"id":8007,"nodeType":"ParameterList","parameters":[],"src":"622:2:27"},"src":"607:18:27"},{"errorSelector":"c18384c1","id":8010,"name":"NotVoter","nameLocation":"636:8:27","nodeType":"ErrorDefinition","parameters":{"id":8009,"nodeType":"ParameterList","parameters":[],"src":"644:2:27"},"src":"630:17:27"},{"errorSelector":"03119322","id":8012,"name":"PoolAlreadyExists","nameLocation":"658:17:27","nodeType":"ErrorDefinition","parameters":{"id":8011,"nodeType":"ParameterList","parameters":[],"src":"675:2:27"},"src":"652:26:27"},{"errorSelector":"367558c3","id":8014,"name":"SameAddress","nameLocation":"689:11:27","nodeType":"ErrorDefinition","parameters":{"id":8013,"nodeType":"ParameterList","parameters":[],"src":"700:2:27"},"src":"683:20:27"},{"errorSelector":"af13986d","id":8016,"name":"ZeroFee","nameLocation":"714:7:27","nodeType":"ErrorDefinition","parameters":{"id":8015,"nodeType":"ParameterList","parameters":[],"src":"721:2:27"},"src":"708:16:27"},{"errorSelector":"d92e233d","id":8018,"name":"ZeroAddress","nameLocation":"735:11:27","nodeType":"ErrorDefinition","parameters":{"id":8017,"nodeType":"ParameterList","parameters":[],"src":"746:2:27"},"src":"729:20:27"},{"documentation":{"id":8019,"nodeType":"StructuredDocumentation","src":"755:65:27","text":"@notice returns the number of pools created from this factory"},"functionSelector":"efde4e64","id":8024,"implemented":false,"kind":"function","modifiers":[],"name":"allPoolsLength","nameLocation":"834:14:27","nodeType":"FunctionDefinition","parameters":{"id":8020,"nodeType":"ParameterList","parameters":[],"src":"848:2:27"},"returnParameters":{"id":8023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8024,"src":"874:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8021,"name":"uint256","nodeType":"ElementaryTypeName","src":"874:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"873:9:27"},"scope":8143,"src":"825:58:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":8025,"nodeType":"StructuredDocumentation","src":"889:69:27","text":"@notice Is a valid pool created by this factory.\n @param ."},"functionSelector":"5b16ebb7","id":8032,"implemented":false,"kind":"function","modifiers":[],"name":"isPool","nameLocation":"972:6:27","nodeType":"FunctionDefinition","parameters":{"id":8028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8027,"mutability":"mutable","name":"pool","nameLocation":"987:4:27","nodeType":"VariableDeclaration","scope":8032,"src":"979:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8026,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:14:27"},"returnParameters":{"id":8031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8032,"src":"1016:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8029,"name":"bool","nodeType":"ElementaryTypeName","src":"1016:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1015:6:27"},"scope":8143,"src":"963:59:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":8033,"nodeType":"StructuredDocumentation","src":"1028:162:27","text":"@notice Return address of pool created by this factory\n @param tokenA .\n @param tokenB .\n @param stable True if stable, false if volatile"},"functionSelector":"79bc57d5","id":8044,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"1204:7:27","nodeType":"FunctionDefinition","parameters":{"id":8040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8035,"mutability":"mutable","name":"tokenA","nameLocation":"1220:6:27","nodeType":"VariableDeclaration","scope":8044,"src":"1212:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8034,"name":"address","nodeType":"ElementaryTypeName","src":"1212:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8037,"mutability":"mutable","name":"tokenB","nameLocation":"1236:6:27","nodeType":"VariableDeclaration","scope":8044,"src":"1228:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8036,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8039,"mutability":"mutable","name":"stable","nameLocation":"1249:6:27","nodeType":"VariableDeclaration","scope":8044,"src":"1244:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8038,"name":"bool","nodeType":"ElementaryTypeName","src":"1244:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1211:45:27"},"returnParameters":{"id":8043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8044,"src":"1280:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8041,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1279:9:27"},"scope":8143,"src":"1195:94:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":8045,"nodeType":"StructuredDocumentation","src":"1295:256:27","text":"@notice Support for v3-style pools which wraps around getPool(tokenA,tokenB,stable)\n @dev fee is converted to stable boolean.\n @param tokenA .\n @param tokenB .\n @param fee  1 if stable, 0 if volatile, else returns address(0)"},"functionSelector":"1698ee82","id":8056,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"1565:7:27","nodeType":"FunctionDefinition","parameters":{"id":8052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8047,"mutability":"mutable","name":"tokenA","nameLocation":"1581:6:27","nodeType":"VariableDeclaration","scope":8056,"src":"1573:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8046,"name":"address","nodeType":"ElementaryTypeName","src":"1573:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8049,"mutability":"mutable","name":"tokenB","nameLocation":"1597:6:27","nodeType":"VariableDeclaration","scope":8056,"src":"1589:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8048,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8051,"mutability":"mutable","name":"fee","nameLocation":"1612:3:27","nodeType":"VariableDeclaration","scope":8056,"src":"1605:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8050,"name":"uint24","nodeType":"ElementaryTypeName","src":"1605:6:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1572:44:27"},"returnParameters":{"id":8055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8056,"src":"1640:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8053,"name":"address","nodeType":"ElementaryTypeName","src":"1640:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1639:9:27"},"scope":8143,"src":"1556:93:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":8057,"nodeType":"StructuredDocumentation","src":"1655:263:27","text":"@dev Only called once to set to Voter.sol - Voter does not have a function\n      to call this contract method, so once set it's immutable.\n      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol\n @param _voter ."},"functionSelector":"4bc2a657","id":8062,"implemented":false,"kind":"function","modifiers":[],"name":"setVoter","nameLocation":"1932:8:27","nodeType":"FunctionDefinition","parameters":{"id":8060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8059,"mutability":"mutable","name":"_voter","nameLocation":"1949:6:27","nodeType":"VariableDeclaration","scope":8062,"src":"1941:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8058,"name":"address","nodeType":"ElementaryTypeName","src":"1941:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1940:16:27"},"returnParameters":{"id":8061,"nodeType":"ParameterList","parameters":[],"src":"1965:0:27"},"scope":8143,"src":"1923:43:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2d88af4a","id":8067,"implemented":false,"kind":"function","modifiers":[],"name":"setPauser","nameLocation":"1981:9:27","nodeType":"FunctionDefinition","parameters":{"id":8065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8064,"mutability":"mutable","name":"_pauser","nameLocation":"1999:7:27","nodeType":"VariableDeclaration","scope":8067,"src":"1991:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8063,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1990:17:27"},"returnParameters":{"id":8066,"nodeType":"ParameterList","parameters":[],"src":"2016:0:27"},"scope":8143,"src":"1972:45:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"cdb88ad1","id":8072,"implemented":false,"kind":"function","modifiers":[],"name":"setPauseState","nameLocation":"2032:13:27","nodeType":"FunctionDefinition","parameters":{"id":8070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8069,"mutability":"mutable","name":"_state","nameLocation":"2051:6:27","nodeType":"VariableDeclaration","scope":8072,"src":"2046:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8068,"name":"bool","nodeType":"ElementaryTypeName","src":"2046:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2045:13:27"},"returnParameters":{"id":8071,"nodeType":"ParameterList","parameters":[],"src":"2067:0:27"},"scope":8143,"src":"2023:45:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"472d35b9","id":8077,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeManager","nameLocation":"2083:13:27","nodeType":"FunctionDefinition","parameters":{"id":8075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8074,"mutability":"mutable","name":"_feeManager","nameLocation":"2105:11:27","nodeType":"VariableDeclaration","scope":8077,"src":"2097:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8073,"name":"address","nodeType":"ElementaryTypeName","src":"2097:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2096:21:27"},"returnParameters":{"id":8076,"nodeType":"ParameterList","parameters":[],"src":"2126:0:27"},"scope":8143,"src":"2074:53:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":8078,"nodeType":"StructuredDocumentation","src":"2133:212:27","text":"@notice Set default fee for stable and volatile pools.\n @dev Throws if higher than maximum fee.\n      Throws if fee is zero.\n @param _stable Stable or volatile pool.\n @param _fee ."},"functionSelector":"e1f76b44","id":8085,"implemented":false,"kind":"function","modifiers":[],"name":"setFee","nameLocation":"2359:6:27","nodeType":"FunctionDefinition","parameters":{"id":8083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8080,"mutability":"mutable","name":"_stable","nameLocation":"2371:7:27","nodeType":"VariableDeclaration","scope":8085,"src":"2366:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8079,"name":"bool","nodeType":"ElementaryTypeName","src":"2366:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8082,"mutability":"mutable","name":"_fee","nameLocation":"2388:4:27","nodeType":"VariableDeclaration","scope":8085,"src":"2380:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8081,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2365:28:27"},"returnParameters":{"id":8084,"nodeType":"ParameterList","parameters":[],"src":"2402:0:27"},"scope":8143,"src":"2350:53:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":8086,"nodeType":"StructuredDocumentation","src":"2409:128:27","text":"@notice Set overriding fee for a pool from the default\n @dev A custom fee of zero means the default fee will be used."},"functionSelector":"d49466a8","id":8093,"implemented":false,"kind":"function","modifiers":[],"name":"setCustomFee","nameLocation":"2551:12:27","nodeType":"FunctionDefinition","parameters":{"id":8091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8088,"mutability":"mutable","name":"_pool","nameLocation":"2572:5:27","nodeType":"VariableDeclaration","scope":8093,"src":"2564:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8087,"name":"address","nodeType":"ElementaryTypeName","src":"2564:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8090,"mutability":"mutable","name":"_fee","nameLocation":"2587:4:27","nodeType":"VariableDeclaration","scope":8093,"src":"2579:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2579:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2563:29:27"},"returnParameters":{"id":8092,"nodeType":"ParameterList","parameters":[],"src":"2601:0:27"},"scope":8143,"src":"2542:60:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":8094,"nodeType":"StructuredDocumentation","src":"2608:64:27","text":"@notice Returns fee for a pool, as custom fees are possible."},"functionSelector":"cc56b2c5","id":8103,"implemented":false,"kind":"function","modifiers":[],"name":"getFee","nameLocation":"2686:6:27","nodeType":"FunctionDefinition","parameters":{"id":8099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8096,"mutability":"mutable","name":"_pool","nameLocation":"2701:5:27","nodeType":"VariableDeclaration","scope":8103,"src":"2693:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8095,"name":"address","nodeType":"ElementaryTypeName","src":"2693:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8098,"mutability":"mutable","name":"_stable","nameLocation":"2713:7:27","nodeType":"VariableDeclaration","scope":8103,"src":"2708:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8097,"name":"bool","nodeType":"ElementaryTypeName","src":"2708:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2692:29:27"},"returnParameters":{"id":8102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8103,"src":"2745:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2745:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2744:9:27"},"scope":8143,"src":"2677:77:27","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":8104,"nodeType":"StructuredDocumentation","src":"2760:186:27","text":"@notice Create a pool given two tokens and if they're stable/volatile\n @dev token order does not matter\n @param tokenA .\n @param tokenB .\n @param stable ."},"functionSelector":"36bf95a0","id":8115,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"2960:10:27","nodeType":"FunctionDefinition","parameters":{"id":8111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8106,"mutability":"mutable","name":"tokenA","nameLocation":"2979:6:27","nodeType":"VariableDeclaration","scope":8115,"src":"2971:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8105,"name":"address","nodeType":"ElementaryTypeName","src":"2971:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8108,"mutability":"mutable","name":"tokenB","nameLocation":"2995:6:27","nodeType":"VariableDeclaration","scope":8115,"src":"2987:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8107,"name":"address","nodeType":"ElementaryTypeName","src":"2987:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8110,"mutability":"mutable","name":"stable","nameLocation":"3008:6:27","nodeType":"VariableDeclaration","scope":8115,"src":"3003:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8109,"name":"bool","nodeType":"ElementaryTypeName","src":"3003:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2970:45:27"},"returnParameters":{"id":8114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8113,"mutability":"mutable","name":"pool","nameLocation":"3042:4:27","nodeType":"VariableDeclaration","scope":8115,"src":"3034:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8112,"name":"address","nodeType":"ElementaryTypeName","src":"3034:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3033:14:27"},"scope":8143,"src":"2951:97:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":8116,"nodeType":"StructuredDocumentation","src":"3054:286:27","text":"@notice Support for v3-style pools which wraps around createPool(tokena,tokenB,stable)\n @dev fee is converted to stable boolean\n @dev token order does not matter\n @param tokenA .\n @param tokenB .\n @param fee 1 if stable, 0 if volatile, else revert"},"functionSelector":"a1671295","id":8127,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"3354:10:27","nodeType":"FunctionDefinition","parameters":{"id":8123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8118,"mutability":"mutable","name":"tokenA","nameLocation":"3373:6:27","nodeType":"VariableDeclaration","scope":8127,"src":"3365:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8117,"name":"address","nodeType":"ElementaryTypeName","src":"3365:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8120,"mutability":"mutable","name":"tokenB","nameLocation":"3389:6:27","nodeType":"VariableDeclaration","scope":8127,"src":"3381:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8119,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8122,"mutability":"mutable","name":"fee","nameLocation":"3404:3:27","nodeType":"VariableDeclaration","scope":8127,"src":"3397:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8121,"name":"uint24","nodeType":"ElementaryTypeName","src":"3397:6:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3364:44:27"},"returnParameters":{"id":8126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8125,"mutability":"mutable","name":"pool","nameLocation":"3435:4:27","nodeType":"VariableDeclaration","scope":8127,"src":"3427:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8124,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:14:27"},"scope":8143,"src":"3345:96:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b187bd26","id":8132,"implemented":false,"kind":"function","modifiers":[],"name":"isPaused","nameLocation":"3456:8:27","nodeType":"FunctionDefinition","parameters":{"id":8128,"nodeType":"ParameterList","parameters":[],"src":"3464:2:27"},"returnParameters":{"id":8131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8132,"src":"3490:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8129,"name":"bool","nodeType":"ElementaryTypeName","src":"3490:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3489:6:27"},"scope":8143,"src":"3447:49:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"46c96aac","id":8137,"implemented":false,"kind":"function","modifiers":[],"name":"voter","nameLocation":"3511:5:27","nodeType":"FunctionDefinition","parameters":{"id":8133,"nodeType":"ParameterList","parameters":[],"src":"3516:2:27"},"returnParameters":{"id":8136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8137,"src":"3542:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8134,"name":"address","nodeType":"ElementaryTypeName","src":"3542:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3541:9:27"},"scope":8143,"src":"3502:49:27","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5c60da1b","id":8142,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"3566:14:27","nodeType":"FunctionDefinition","parameters":{"id":8138,"nodeType":"ParameterList","parameters":[],"src":"3580:2:27"},"returnParameters":{"id":8141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8142,"src":"3606:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8139,"name":"address","nodeType":"ElementaryTypeName","src":"3606:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3605:9:27"},"scope":8143,"src":"3557:58:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8144,"src":"57:3560:27","usedErrors":[8000,8002,8004,8006,8008,8010,8012,8014,8016,8018],"usedEvents":[7960,7964,7968,7972,7984,7992,7998]}],"src":"32:3586:27"}}},"contracts":{"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[{"inputs":[],"name":"ERC1167FailedCreateClone","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC1167FailedCreateClone\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"errors\":{\"ERC1167FailedCreateClone()\":[{\"details\":\"A clone instance deployment failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xd18408af8a91bedb3d56343eeb9b30eb852e6dea93a5e2d5c6db9ca4cb905155\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://061475b7302a732dc598907790f407417551c2b13e89daa57b3698489ef5484b\",\"dweb:/ipfs/QmdX5qmk3VSniSErFuD4aVawQxUi2MuUbP7spPcHddPfcX\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Clones.sol:Clones\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000b8699f8f26b707d682cfcf4fc10bd421ee56616ca7f2945d3b6d6a383239a9a2"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 2:\"@openzeppelin/contracts/proxy/Clones.sol\"\nobject \"Clones_246\" {\n    code {\n        {\n            /// @src 2:726:4159  \"library Clones {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Clones_246_deployed\")\n            codecopy(_1, dataoffset(\"Clones_246_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 2:\"@openzeppelin/contracts/proxy/Clones.sol\"\n    object \"Clones_246_deployed\" {\n        code {\n            {\n                /// @src 2:726:4159  \"library Clones {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122035703d2628cfdc053f453c6bc40fad35e81827468b32488b8417757b938b35f864736f6c63430008140033\"\n    }\n}\n","hash":"01000007f68e0d12386d0fceb26c1cd5b278de837771816cc7195998c0c3de22","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeERC20.sol:SafeERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000002fed86493d114b487da0c8040dd9f18f5989a61f8c74141d818209313d761115"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 8:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\nobject \"SafeERC20_1345\" {\n    code {\n        {\n            /// @src 8:751:5769  \"library SafeERC20 {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeERC20_1345_deployed\")\n            codecopy(_1, dataoffset(\"SafeERC20_1345_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 8:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\n    object \"SafeERC20_1345_deployed\" {\n        code {\n            {\n                /// @src 8:751:5769  \"library SafeERC20 {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220980fd779f4a57e1aba6f23f28dea54db2896167b7ad4a61162cdb65ce884f82564736f6c63430008140033\"\n    }\n}\n","hash":"010000076abe071e3877db6950d04086c734b3f6fd507c217d64999ef022f25d","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000be171a903f2528c4d79bc0e5054ca5f445f9aa5e8a12cc820d034061ca13ee50"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 9:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_1598\" {\n    code {\n        {\n            /// @src 9:195:6261  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_1598_deployed\")\n            codecopy(_1, dataoffset(\"Address_1598_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 9:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_1598_deployed\" {\n        code {\n            {\n                /// @src 9:195:6261  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212208e61db75823a541c03362263b6bf1359b5573c22dcff8da904b96999c998005c64736f6c63430008140033\"\n    }\n}\n","hash":"010000074c62fa64700d18e32b2c329b2a42d112583c607f30414a7ca40aa517","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"irOptimized":""}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ShortStrings.sol:ShortStrings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000016561e74864756eb2500b802128933f14c343c0b8914c65a652b51091fef6e9f"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 13:\"@openzeppelin/contracts/utils/ShortStrings.sol\"\nobject \"ShortStrings_1982\" {\n    code {\n        {\n            /// @src 13:1255:4308  \"library ShortStrings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ShortStrings_1982_deployed\")\n            codecopy(_1, dataoffset(\"ShortStrings_1982_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 13:\"@openzeppelin/contracts/utils/ShortStrings.sol\"\n    object \"ShortStrings_1982_deployed\" {\n        code {\n            {\n                /// @src 13:1255:4308  \"library ShortStrings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212203835cd095a397054d55048230373c9da4eb0f4afb4a60f5c57d41156c83b46e064736f6c63430008140033\"\n    }\n}\n","hash":"01000007f25bed4946496153fafa08eeab015407d1ed6773c6cce4a74633cd09","factoryDependencies":{}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"StorageSlot.sol:StorageSlot\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000bd6f9aaf9268381d648d49b2f08a224c3134f4eec1d1cd8ac52bc61daa5bf35e"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"StorageSlot_2092\" {\n    code {\n        {\n            /// @src 14:1245:3930  \"library StorageSlot {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"StorageSlot_2092_deployed\")\n            codecopy(_1, dataoffset(\"StorageSlot_2092_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"StorageSlot_2092_deployed\" {\n        code {\n            {\n                /// @src 14:1245:3930  \"library StorageSlot {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212208a29f0ea9791ba6b5439b3b1d4d58010c4c4ade5c17733debad511471ff434d464736f6c63430008140033\"\n    }\n}\n","hash":"010000079a6a93e354daba05b3a028f1bcf8e87a4d0782de56bf38a27cbb07f3","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000001da7b34ff4a1ba7da5491aa12b540857ccb9bc8a90904ee045980a54976327e"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 15:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_2347\" {\n    code {\n        {\n            /// @src 15:251:3098  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_2347_deployed\")\n            codecopy(_1, dataoffset(\"Strings_2347_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 15:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_2347_deployed\" {\n        code {\n            {\n                /// @src 15:251:3098  \"library Strings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212206aaeb04e5fb34f764ecbc63b657f4c9d2a90656e17d04b4a7c4d4f4ec048404d64736f6c63430008140033\"\n    }\n}\n","hash":"0100000748ee9b42391dc5666eab7d0c347818b22ca01aac98c0e75a4ff14204","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ECDSA.sol:ECDSA\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000006a8734db648e7e51dac17c68a853e55f16812b4821d392dd4100712b7fdb85e"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 16:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\nobject \"ECDSA_2695\" {\n    code {\n        {\n            /// @src 16:344:7730  \"library ECDSA {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ECDSA_2695_deployed\")\n            codecopy(_1, dataoffset(\"ECDSA_2695_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 16:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"\n    object \"ECDSA_2695_deployed\" {\n        code {\n            {\n                /// @src 16:344:7730  \"library ECDSA {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220ba08f65a84c404f73f07158e227b5b49ef9f0882c9b2df1043425933f6d38fcd64736f6c63430008140033\"\n    }\n}\n","hash":"01000007fc3f42a86e1a5f447cd359f662e3894b2ce58de7c8952fef478d1e07","factoryDependencies":{}}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"irOptimized":""}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"MessageHashUtils.sol:MessageHashUtils\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000009057ba148b453c54e2091101dada21b4ec4f2adcbe712637adcdafa7a3d08623"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 18:\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\"\nobject \"MessageHashUtils_2996\" {\n    code {\n        {\n            /// @src 18:521:3756  \"library MessageHashUtils {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"MessageHashUtils_2996_deployed\")\n            codecopy(_1, dataoffset(\"MessageHashUtils_2996_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 18:\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\"\n    object \"MessageHashUtils_2996_deployed\" {\n        code {\n            {\n                /// @src 18:521:3756  \"library MessageHashUtils {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220d1327ae12c1833c57d86185084fc1f08c2555a993b0ddea21e4bbbaa6a79cfca64736f6c63430008140033\"\n    }\n}\n","hash":"0100000708a118c70c003476bd5db1f5f3345172bb5cd422d42aec498adb0684","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000729c012a87117b153d26134d109fce877e8d78a5b38fe185b50a2d6a2eddd21a"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 19:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_4050\" {\n    code {\n        {\n            /// @src 19:203:15117  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_4050_deployed\")\n            codecopy(_1, dataoffset(\"Math_4050_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 19:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_4050_deployed\" {\n        code {\n            {\n                /// @src 19:203:15117  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212203bc3350b9898bee9cbabcb325e561d70550998058d418a57dfddd3ead3d058d464736f6c63430008140033\"\n    }\n}\n","hash":"01000007889067f996cf9e04a59c78d4492076158426ba818403a82d25e79cd5","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SignedMath.sol:SignedMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000d44c819ee1d010a3484f136dbb0dc151454830f39e547cf0596223594e2b434"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 20:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\nobject \"SignedMath_4155\" {\n    code {\n        {\n            /// @src 20:216:1263  \"library SignedMath {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SignedMath_4155_deployed\")\n            codecopy(_1, dataoffset(\"SignedMath_4155_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 20:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\n    object \"SignedMath_4155_deployed\" {\n        code {\n            {\n                /// @src 20:216:1263  \"library SignedMath {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212208af3734ec1a78859eef6acced733ee03d7cbd5a8d129c385c4b66a9dd40b457c64736f6c63430008140033\"\n    }\n}\n","hash":"01000007e83e1003014ceba5e048746d6bdbf7d883cd0462350c0574ac23d749","factoryDependencies":{}}},"contracts/Pool.sol":{"Pool":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"BelowMinimumK","type":"error"},{"inputs":[],"name":"DepositsNotEqual","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"FactoryAlreadySet","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InsufficientInputAmount","type":"error"},{"inputs":[],"name":"InsufficientLiquidity","type":"error"},{"inputs":[],"name":"InsufficientLiquidityBurned","type":"error"},{"inputs":[],"name":"InsufficientLiquidityMinted","type":"error"},{"inputs":[],"name":"InsufficientOutputAmount","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[],"name":"InvalidTo","type":"error"},{"inputs":[],"name":"IsPaused","type":"error"},{"inputs":[],"name":"K","type":"error"},{"inputs":[],"name":"NotEmergencyCouncil","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Claim","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Fees","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0Out","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1Out","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reserve0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reserve1","type":"uint256"}],"name":"Sync","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"blockTimestampLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimFees","outputs":[{"internalType":"uint256","name":"claimed0","type":"uint256"},{"internalType":"uint256","name":"claimed1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimable0","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimable1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentCumulativePrices","outputs":[{"internalType":"uint256","name":"reserve0Cumulative","type":"uint256"},{"internalType":"uint256","name":"reserve1Cumulative","type":"uint256"},{"internalType":"uint256","name":"blockTimestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256","name":"_reserve0","type":"uint256"},{"internalType":"uint256","name":"_reserve1","type":"uint256"},{"internalType":"uint256","name":"_blockTimestampLast","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"index0","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"index1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token0","type":"address"},{"internalType":"address","name":"_token1","type":"address"},{"internalType":"bool","name":"_stable","type":"bool"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lastObservation","outputs":[{"components":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"reserve0Cumulative","type":"uint256"},{"internalType":"uint256","name":"reserve1Cumulative","type":"uint256"}],"internalType":"struct IPool.Observation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"metadata","outputs":[{"internalType":"uint256","name":"dec0","type":"uint256"},{"internalType":"uint256","name":"dec1","type":"uint256"},{"internalType":"uint256","name":"r0","type":"uint256"},{"internalType":"uint256","name":"r1","type":"uint256"},{"internalType":"bool","name":"st","type":"bool"},{"internalType":"address","name":"t0","type":"address"},{"internalType":"address","name":"t1","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"observationLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"reserve0Cumulative","type":"uint256"},{"internalType":"uint256","name":"reserve1Cumulative","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"periodSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"poolFees","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"points","type":"uint256"}],"name":"prices","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"granularity","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserve0","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserve0CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserve1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserve1CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"points","type":"uint256"},{"internalType":"uint256","name":"window","type":"uint256"}],"name":"sample","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"__name","type":"string"}],"name":"setName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"__symbol","type":"string"}],"name":"setSymbol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"skim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"supplyIndex0","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"supplyIndex1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0Out","type":"uint256"},{"internalType":"uint256","name":"amount1Out","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokens","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BelowMinimumK\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositsNotEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FactoryAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidityBurned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidityMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutputAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTo\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IsPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"K\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEmergencyCouncil\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Fees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockTimestampLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimed0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimable0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimable1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentCumulativePrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve0Cumulative\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1Cumulative\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_blockTimestampLast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_stable\",\"type\":\"bool\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastObservation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve0Cumulative\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1Cumulative\",\"type\":\"uint256\"}],\"internalType\":\"struct IPool.Observation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dec0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dec1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r1\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"st\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"observationLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve0Cumulative\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1Cumulative\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFees\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"name\":\"prices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"granularity\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"sample\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"__name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"__symbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplyIndex0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplyIndex1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"velodrome.finance, @figs999, @pegahcarter\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address)\":{\"params\":{\"to\":\"Address to receive token0 and token1 from burning the pool token\"},\"returns\":{\"amount0\":\"Amount of token0 returned\",\"amount1\":\"Amount of token1 returned\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getAmountOut(uint256,address)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"tokenIn\":\"Address of token\"},\"returns\":{\"_0\":\"Amount out\"}},\"getReserves()\":{\"returns\":{\"_blockTimestampLast\":\".\",\"_reserve0\":\".\",\"_reserve1\":\".\"}},\"initialize(address,address,bool)\":{\"params\":{\"_stable\":\"True if stable, false if volatile\",\"_token0\":\"Address of token0\",\"_token1\":\"Address of token1\"}},\"mint(address)\":{\"params\":{\"to\":\"Address to receive the minted LP token\"},\"returns\":{\"liquidity\":\"  Amount of LP token minted\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"prices(address,uint256,uint256)\":{\"params\":{\"amountIn\":\".\",\"points\":\"Number of points to return\",\"tokenIn\":\".\"},\"returns\":{\"_0\":\"Array of TWAP prices\"}},\"quote(address,uint256,uint256)\":{\"params\":{\"amountIn\":\".\",\"granularity\":\".\",\"tokenIn\":\".\"},\"returns\":{\"amountOut\":\".\"}},\"sample(address,uint256,uint256,uint256)\":{\"params\":{\"amountIn\":\".\",\"points\":\".\",\"tokenIn\":\".\",\"window\":\".\"},\"returns\":{\"_0\":\"Array of TWAP prices\"}},\"setName(string)\":{\"params\":{\"__name\":\"String of new name\"}},\"setSymbol(string)\":{\"params\":{\"__symbol\":\"String of new symbol\"}},\"skim(address)\":{\"params\":{\"to\":\"Address to receive any skimmed rewards\"}},\"swap(uint256,uint256,address,bytes)\":{\"params\":{\"amount0Out\":\"Amount of token0 to send to `to`\",\"amount1Out\":\"Amount of token1 to send to `to`\",\"data\":\"Additional calldata for flashloans\",\"to\":\"Address to recieve the swapped output\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"blockTimestampLast()\":{\"notice\":\"Timestamp of last update to pool\"},\"burn(address)\":{\"notice\":\"This low-level function should be called from a contract which performs important safety checks         standard uniswap v2 implementation\"},\"claimFees()\":{\"notice\":\"Claim accumulated but unclaimed fees (claimable0 and claimable1)\"},\"claimable0(address)\":{\"notice\":\"Amount of unclaimed, but claimable tokens from fees of token0 for an LP\"},\"claimable1(address)\":{\"notice\":\"Amount of unclaimed, but claimable tokens from fees of token1 for an LP\"},\"currentCumulativePrices()\":{\"notice\":\"Produces the cumulative price using counterfactuals to save gas and avoid a call to sync.\"},\"factory()\":{\"notice\":\"Address of PoolFactory that created this contract\"},\"getAmountOut(uint256,address)\":{\"notice\":\"Get the amount of tokenOut given the amount of tokenIn\"},\"getReserves()\":{\"notice\":\"Update reserves and, on the first call per block, price accumulators\"},\"index0()\":{\"notice\":\"Accumulated fees of token0 (global)\"},\"index1()\":{\"notice\":\"Accumulated fees of token1 (global)\"},\"initialize(address,address,bool)\":{\"notice\":\"Called on pool creation by PoolFactory\"},\"lastObservation()\":{\"notice\":\"Get the value of the most recent observation\"},\"metadata()\":{\"notice\":\"Returns the decimal (dec), reserves (r), stable (st), and tokens (t) of token0 and token1\"},\"mint(address)\":{\"notice\":\"This low-level function should be called by addLiquidity functions in Router.sol, which performs important safety checks         standard uniswap v2 implementation\"},\"observationLength()\":{\"notice\":\"Get the number of observations recorded\"},\"periodSize()\":{\"notice\":\"Capture oracle reading every 30 minutes (1800 seconds)\"},\"poolFees()\":{\"notice\":\"Address of linked PoolFees.sol\"},\"prices(address,uint256,uint256)\":{\"notice\":\"Returns a memory set of TWAP prices         Same as calling sample(tokenIn, amountIn, points, 1)\"},\"quote(address,uint256,uint256)\":{\"notice\":\"Provides twap price with user configured granularity, up to the full window size\"},\"reserve0()\":{\"notice\":\"Amount of token0 in pool\"},\"reserve0CumulativeLast()\":{\"notice\":\"Cumulative of reserve0 factoring in time elapsed\"},\"reserve1()\":{\"notice\":\"Amount of token1 in pool\"},\"reserve1CumulativeLast()\":{\"notice\":\"Cumulative of reserve1 factoring in time elapsed\"},\"sample(address,uint256,uint256,uint256)\":{\"notice\":\"Same as prices with with an additional window argument.         Window = 2 means 2 * 30min (or 1 hr) between observations\"},\"setName(string)\":{\"notice\":\"Set pool name         Only callable by Voter.emergencyCouncil()\"},\"setSymbol(string)\":{\"notice\":\"Set pool symbol         Only callable by Voter.emergencyCouncil()\"},\"skim(address)\":{\"notice\":\"Force balances to match reserves\"},\"stable()\":{\"notice\":\"True if pool is stable, false if volatile\"},\"supplyIndex0(address)\":{\"notice\":\"Get an LP's relative index0 to index0\"},\"supplyIndex1(address)\":{\"notice\":\"Get an LP's relative index1 to index1\"},\"swap(uint256,uint256,address,bytes)\":{\"notice\":\"This low-level function should be called from a contract which performs important safety checks\"},\"sync()\":{\"notice\":\"Force reserves to match balances\"},\"token0()\":{\"notice\":\"Address of token in the pool with the lower address value\"},\"token1()\":{\"notice\":\"Address of token in the poool with the higher address value\"},\"tokens()\":{\"notice\":\"Returns [token0, token1]\"}},\"notice\":\"Veldrome V2 token pool, either stable or volatile\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pool.sol\":\"Pool\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Pool.sol\":{\"keccak256\":\"0x79252064840dbbf21ac090f85dfd8c109781f1916fc41294583716ceae91a854\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eef501482ecc96c062b71200ddee6c0f25b21bbca69be79b5f4438ec81317b69\",\"dweb:/ipfs/QmVEAE7gpM1tgmN4VQ9V9zDXvJpEncJhha4N3zaqJzSLXL\"]},\"contracts/PoolFees.sol\":{\"keccak256\":\"0xb6bc4b754345cc6343e2600134733095f3ef52da3004e127fee2b572fe13d89c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fa0853c12ebbf047dace7fe84a0b69e0499a33c96822c907a3e2e029aea30dad\",\"dweb:/ipfs/Qmbmwo1Nb2A3kB4Qv7N26kpkJ6VMCo4ew8tmzKpNFJ63UB\"]},\"contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x8d099692dcb8e82df0b0921c8af8aab339050b177dc19806e58f7cc5bb181ccd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60a2085df66cee4a8c2f4b3c26b54c2734e40ddaefa51208bd5b5f052d4701dd\",\"dweb:/ipfs/Qmeo6yFpUgz54Karohx3DCZwuvXkb7RXg7a5NGgiaZnvL1\"]},\"contracts/interfaces/IPoolCallee.sol\":{\"keccak256\":\"0xacfd7476bc6cff1b1ce9f584a051a3b4979371a37c70daa3c97921748cc15a46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6281b9677a2712a552ffae6485c935483463806dba2d92ea623681b3c1d65acb\",\"dweb:/ipfs/QmZScNqf5BgThhdunzEG9PXW67iSTjiF66RxmTeLfP6xMV\"]},\"contracts/interfaces/IVoter.sol\":{\"keccak256\":\"0x23eb6f7da0291d983ddf81d97673fd14b89793218e33a9c1b3180d0fc79ebc80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7b8998845c380241317fbc7b105d5d6fa8010dfb5a3e3c2983d2c796b0d0c29\",\"dweb:/ipfs/QmXa7D1PkAkJnYxK7mVXXqjjBi3BFcjPRPERxbMeeifqiS\"]},\"contracts/interfaces/factories/IPoolFactory.sol\":{\"keccak256\":\"0xb071c9e435d796bb22f7a5beb9960461126dead2f5890e84474993384f7c84c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://766c10c022a7ab9496475948061f3e3a6712c652f9dd0e1345a5c0b11ee899f1\",\"dweb:/ipfs/QmQeSHRcEcufdqFphciXaeD8LA9LPzUShqYL1sG2sB8cQ9\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Pool.sol:Pool\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[19]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r8\n\tst.1\t64, r8\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.gt\t@.BB0_104\n\tsub.s!\t@CPI0_47[0], r2, r4\n\tjump.le\t@.BB0_72\n\tsub.s!\t@CPI0_48[0], r2, r4\n\tjump.le\t@.BB0_88\n\tsub.s!\t@CPI0_49[0], r2, r4\n\tjump.le\t@.BB0_96\n\tsub.s!\t@CPI0_50[0], r2, r4\n\tjump.gt\t@.BB0_102\n\tsub.s!\t@CPI0_53[0], r2, r4\n\tjump.eq\t@.BB0_600\n\tsub.s!\t@CPI0_54[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_81[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tjump\t@.BB0_551\n.BB0_1:\n\tadd\t352, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tst.1\t352, r0\n\tst.1\t384, r0\n\tst.1\t416, r0\n\tadd\t512, r0, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r6\n\tst.1\t448, r6\n\tadd\t@CPI0_1[0], r0, r1\n\tst.1\t480, r1\n\tadd\t3, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_165[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_104:\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.le\t@.BB0_105\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.le\t@.BB0_121\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.le\t@.BB0_129\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.gt\t@.BB0_135\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.eq\t@.BB0_1037\n\tsub.s!\t@CPI0_21[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t16, r0, r1\n\tjump\t@.BB0_533\n.BB0_6:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_11\n\tadd\tr3, r0, stack-[16]\n\tadd\tr6, r0, stack-[18]\n\tadd\tr4, r0, stack-[17]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[18], r0, r6\n\tadd\tstack-[17], r0, r4\n\tjump.ge\t@.BB0_11\n.BB0_10:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_10\n.BB0_11:\n\tsstore\tr4, r0\n\tld.1\t416, r5\n\tsub.s!\t@CPI0_3[0], r5, r1\n\tjump.lt\t@.BB0_13\n.BB0_12:\n\tadd\t@CPI0_165[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_83[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_72:\n\tsub.s!\t@CPI0_65[0], r2, r4\n\tjump.gt\t@.BB0_80\n\tsub.s!\t@CPI0_73[0], r2, r4\n\tjump.gt\t@.BB0_77\n\tsub.s!\t@CPI0_77[0], r2, r4\n\tjump.eq\t@.BB0_137\n\tsub.s!\t@CPI0_78[0], r2, r1\n\tjump.eq\t@.BB0_389\n\tsub.s!\t@CPI0_79[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t21, r0, r1\n\tsload\tr1, r1\n\tadd\t20, r0, r2\n\tsload\tr2, r2\n\tadd\t19, r0, r3\n\tsload\tr3, r3\n\tst.1\t128, r3\n\tst.1\t160, r2\n\tst.1\t192, r1\n\tadd\t@CPI0_166[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_105:\n\tsub.s!\t@CPI0_32[0], r2, r4\n\tjump.gt\t@.BB0_113\n\tsub.s!\t@CPI0_40[0], r2, r4\n\tjump.gt\t@.BB0_110\n\tsub.s!\t@CPI0_44[0], r2, r4\n\tjump.eq\t@.BB0_723\n\tsub.s!\t@CPI0_45[0], r2, r1\n\tjump.eq\t@.BB0_801\n\tsub.s!\t@CPI0_46[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t10, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_809\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n\tjump\t@.BB0_807\n.BB0_13:\n\tadd\t4, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r3, r1\n\tadd\tr6, r0, stack-[18]\n\tjump.lt\t@.BB0_18\n\tadd\tr3, r0, stack-[15]\n\tadd\tr5, r0, stack-[16]\n\tadd\tr4, r0, stack-[17]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[15], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[17], r0, r4\n\tjump.ge\t@.BB0_18\n.BB0_19:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_19\n.BB0_18:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB0_65\n\tadd\tr5, r0, stack-[16]\n\tadd\tr4, r0, stack-[17]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t32, r0, r2\n\tadd\tstack-[16], r0, r7\n\tand!\tr7, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_62\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_61:\n\tadd\t416, r2, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_61\n.BB0_62:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB0_64\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\t416, r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_64:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[17], r0, r4\n\tjump\t@.BB0_20\n.BB0_88:\n\tsub.s!\t@CPI0_58[0], r2, r1\n\tjump.gt\t@.BB0_92\n\tsub.s!\t@CPI0_62[0], r2, r1\n\tjump.eq\t@.BB0_579\n\tsub.s!\t@CPI0_63[0], r2, r1\n\tjump.eq\t@.BB0_582\n\tsub.s!\t@CPI0_64[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t14, r0, r1\n\tjump\t@.BB0_408\n.BB0_121:\n\tsub.s!\t@CPI0_25[0], r2, r4\n\tjump.gt\t@.BB0_125\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_914\n\tsub.s!\t@CPI0_30[0], r2, r4\n\tjump.eq\t@.BB0_916\n\tsub.s!\t@CPI0_31[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_100[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_100[0], r4, r4\n\tsub!\tr4, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_100[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, stack-[17]\n\tptr.add.s\tstack-[17], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t36, r2, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\tstack-[18], r2, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\t11, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_131[0], r0, r1\n\tst.1\t128, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_81[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_926\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_936\n.BB0_80:\n\tsub.s!\t@CPI0_66[0], r2, r4\n\tjump.gt\t@.BB0_84\n\tsub.s!\t@CPI0_70[0], r2, r4\n\tjump.eq\t@.BB0_531\n\tsub.s!\t@CPI0_71[0], r2, r4\n\tjump.eq\t@.BB0_534\n\tsub.s!\t@CPI0_72[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_81[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t27, r0, r1\n\tjump\t@.BB0_550\n.BB0_113:\n\tsub.s!\t@CPI0_33[0], r2, r4\n\tjump.gt\t@.BB0_117\n\tsub.s!\t@CPI0_37[0], r2, r4\n\tjump.eq\t@.BB0_828\n\tsub.s!\t@CPI0_38[0], r2, r4\n\tjump.eq\t@.BB0_832\n\tsub.s!\t@CPI0_39[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_100[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_100[0], r4, r4\n\tsub!\tr4, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_100[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, stack-[17]\n\tptr.add.s\tstack-[17], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t36, r2, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\tstack-[18], r2, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\t11, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_131[0], r0, r1\n\tst.1\t128, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_81[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_844\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_854\n.BB0_96:\n\tsub.s!\t@CPI0_55[0], r2, r4\n\tjump.eq\t@.BB0_592\n\tsub.s!\t@CPI0_56[0], r2, r1\n\tjump.eq\t@.BB0_596\n\tsub.s!\t@CPI0_57[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t20, r0, r1\n\tjump\t@.BB0_533\n.BB0_129:\n\tsub.s!\t@CPI0_22[0], r2, r4\n\tjump.eq\t@.BB0_1001\n\tsub.s!\t@CPI0_23[0], r2, r4\n\tjump.eq\t@.BB0_1030\n\tsub.s!\t@CPI0_24[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1800, r0, r1\n\tjump\t@.BB0_581\n.BB0_92:\n\tsub.s!\t@CPI0_59[0], r2, r1\n\tjump.eq\t@.BB0_586\n\tsub.s!\t@CPI0_60[0], r2, r1\n\tjump.eq\t@.BB0_588\n\tsub.s!\t@CPI0_61[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t19, r0, r1\n\tjump\t@.BB0_533\n.BB0_125:\n\tsub.s!\t@CPI0_26[0], r2, r1\n\tjump.eq\t@.BB0_957\n\tsub.s!\t@CPI0_27[0], r2, r1\n\tjump.eq\t@.BB0_959\n\tsub.s!\t@CPI0_28[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[18]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_970\n\tadd\t24, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t26, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tsstore\tr1, r2\n\tadd\t25, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t27, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tsstore\tr1, r2\n.BB0_964:\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\t28, r0, r1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t29, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[14]\n\tor!\tstack-[16], r2, r1\n\tjump.eq\t@.BB0_990\n\tadd\tstack-[17], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsstore\tr1, r0\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsstore\tr1, r0\n\tadd\t14, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_125[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_81[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_126[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_127[0], r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\tstack-[18], r0, r1\n\tand\t@CPI0_81[0], r1, r1\n\tadd\tr3, r0, stack-[15]\n\tadd\t4, r3, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_999\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[15], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_128[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_994\n.BB0_999:\n\tadd\tstack-[15], r0, r1\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_12\n\tadd\tstack-[15], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[16], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_129[0], r0, r4\n\tadd\tstack-[18], r0, r5\n\tadd\tr5, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_990:\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n.BB0_991:\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_130[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_77:\n\tsub.s!\t@CPI0_74[0], r2, r4\n\tjump.eq\t@.BB0_400\n\tsub.s!\t@CPI0_75[0], r2, r4\n\tjump.eq\t@.BB0_406\n\tsub.s!\t@CPI0_76[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_81[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[9]\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_12\n\tshl.s\t5, r2, r5\n\tadd\t191, r5, r4\n\tsub.s\t32, r0, r6\n\tand\tr4, r6, r4\n\tsub.s!\t@CPI0_4[0], r4, r6\n\tjump.gt\t@.BB0_12\n\tst.1\t64, r4\n\tst.1\t128, r2\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB0_1320\n\tptr.add\tr1, r3, r1\n\tadd\tr0, r0, r3\n.BB0_416:\n\tshl.s\t5, r3, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r3, r3\n\tsub!\tr3, r5, r6\n\tjump.lt\t@.BB0_416\n.BB0_1320:\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB0_418\n.BB0_418:\n\tadd\t16, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_225\n\tadd\tstack-[8], r0, r1\n\tsub.s\t1, r1, stack-[3]\n\tmul\tstack-[4], r2, r1, r3\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_422\n\tdiv\tr1, r2, r2, r3\n\tsub.s!\tstack-[4], r2, r2\n\tjump.ne\t@.BB0_225\n.BB0_422:\n\tsub!\tstack-[3], r1, r2\n\tjump.lt\t@.BB0_225\n\tsub\tstack-[3], r1, r1\n\tsub.s!\tstack-[3], r1, r2\n\tjump.ge\t@.BB0_527\n\tadd\tstack-[9], r0, r2\n\tmul\t@CPI0_124[0], r2, stack-[5], r2\n\tadd\tr0, r0, stack-[11]\n.BB0_425:\n\tadd\tstack-[4], r1, stack-[12]\n\tsub!\tstack-[12], r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_225\n\tadd\tstack-[12], r0, r3\n\tsub!\tstack-[8], r3, r2\n\tjump.le\t@.BB0_427\n\tmul\t3, r3, r3, r2\n\tadd\t@CPI0_160[0], r3, r2\n\tsub!\tstack-[8], r1, r4\n\tjump.le\t@.BB0_427\n\tsload\tr2, r2\n\tmul\t3, r1, r4, r1\n\tadd\t@CPI0_160[0], r4, r1\n\tsload\tr1, r1\n\tsub!\tr2, r1, r5\n\tjump.lt\t@.BB0_225\n\tadd\t@CPI0_161[0], r4, r5\n\tsload\tr5, r5\n\tadd\t@CPI0_161[0], r3, r6\n\tsload\tr6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_225\n\tsub!\tr2, r1, r7\n\tjump.eq\t@.BB0_276\n\tadd\t@CPI0_162[0], r3, r3\n\tsload\tr3, r7\n\tadd\tstack-[2], r0, r3\n\tst.1\t0, r3\n\tadd\t@CPI0_162[0], r4, r3\n\tsload\tr3, r4\n\tsub!\tr7, r4, r3\n\tjump.lt\t@.BB0_225\n\tsub\tr2, r1, r3\n\tsub\tr6, r5, r6\n\tdiv\tr6, r3, r2, r1\n\tsub\tr7, r4, r5\n\tdiv\tr5, r3, r1, r4\n\tadd\t11, r0, r4\n\tsload\tr4, r4\n\tand!\t@CPI0_87[0], r4, r4\n\tjump.eq\t@.BB0_434\n\tmul\t@CPI0_124[0], r2, r7, r4\n\tsub!\tr3, r6, r4\n\tjump.gt\t@.BB0_441\n\tdiv\tr7, r2, r4, r8\n\tsub.s!\t@CPI0_124[0], r4, r4\n\tjump.ne\t@.BB0_225\n.BB0_441:\n\tadd\t17, r0, r4\n\tsload\tr4, r14\n\tsub!\tr14, r0, r4\n\tjump.eq\t@.BB0_276\n\tmul\t@CPI0_124[0], r1, r8, r4\n\tsub!\tr3, r5, r4\n\tjump.gt\t@.BB0_444\n\tdiv\tr8, r1, r4, r9\n\tsub.s!\t@CPI0_124[0], r4, r4\n\tjump.ne\t@.BB0_225\n.BB0_444:\n\tadd\t18, r0, r4\n\tsload\tr4, r4\n\tadd\tr4, r0, stack-[17]\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_276\n\tdiv\tr7, r14, r4, r9\n\tdiv.s\tstack-[17], r8, r9, r10\n\tsub!\tr14, r7, r10\n\tadd\tr0, r0, r12\n\tadd\tr0, r0, r10\n\tjump.gt\t@.BB0_448\n\tmul\tr9, r4, r10, r11\n\tdiv\tr10, r4, r11, r12\n\tsub!\tr11, r9, r11\n\tjump.ne\t@.BB0_225\n\tdiv.s\t@CPI0_124[0], r10, r10, r11\n\tmul\tr4, r4, r12, r11\n\tdiv\tr12, r4, r11, r13\n\tsub!\tr11, r4, r11\n\tjump.ne\t@.BB0_225\n.BB0_448:\n\tmul\tr9, r9, r13, r11\n\tdiv.s\t@CPI0_124[0], r12, r11, r12\n\tsub!\tstack-[17], r8, r12\n\tadd\tr14, r0, stack-[13]\n\tjump.gt\t@.BB0_450\n\tdiv\tr13, r9, r12, r14\n\tadd\tstack-[13], r0, r14\n\tsub!\tr12, r9, r12\n\tjump.ne\t@.BB0_225\n.BB0_450:\n\tdiv.s\t@CPI0_124[0], r13, r12, r13\n\tadd\tr11, r12, r12\n\tmul\tr12, r10, r11, r13\n\tsub!\tr10, r0, r13\n\tjump.eq\t@.BB0_452\n\tdiv\tr11, r10, r10, r13\n\tsub!\tr10, r12, r10\n\tjump.ne\t@.BB0_225\n.BB0_452:\n\tdiv.s\t@CPI0_124[0], r11, r12, r10\n\tsub!\tr3, r6, r6\n\tjump.gt\t@.BB0_454\n\tdiv\tr7, r2, r2, r6\n\tsub.s!\t@CPI0_124[0], r2, r2\n\tjump.ne\t@.BB0_225\n.BB0_454:\n\tsub!\tr3, r5, r2\n\tjump.gt\t@.BB0_456\n\tdiv\tr8, r1, r1, r2\n\tsub.s!\t@CPI0_124[0], r1, r1\n\tjump.ne\t@.BB0_225\n.BB0_456:\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\txor\tstack-[6], r1, r1\n\tand!\t@CPI0_81[0], r1, stack-[7]\n\tadd\tr4, r0, r1\n\tadd.eq\tr9, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tadd.ne\tr9, r0, r4\n\tjump.eq\t@.BB0_523\n\tsub!\tstack-[9], r0, r1\n\tadd\tstack-[17], r0, r1\n\tjump.eq\t@.BB0_457\n\tadd\tstack-[5], r0, r2\n\tdiv.s\tstack-[9], r2, r1, r2\n\tsub.s!\t@CPI0_124[0], r1, r1\n\tadd\tstack-[17], r0, r1\n\tjump.eq\t@.BB0_457\n\tjump\t@.BB0_225\n.BB0_434:\n\tadd\t12, r0, r3\n\tsload\tr3, r3\n\txor\tstack-[6], r3, r3\n\tand!\t@CPI0_81[0], r3, r3\n\tadd\tr1, r0, r3\n\tadd.eq\tr2, r0, r3\n\tadd.ne\tr2, r0, r1\n\tmul\tstack-[9], r1, r2, r4\n\tsub!\tstack-[9], r0, r4\n\tjump.eq\t@.BB0_436\n\tdiv.s\tstack-[9], r2, r4, r5\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB0_225\n.BB0_436:\n\tadd\tstack-[9], r3, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_225\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_276\n\tdiv\tr2, r1, r1, r2\n\tjump\t@.BB0_525\n.BB0_523:\n\tsub!\tstack-[9], r0, r1\n\tadd\tr14, r0, r1\n\tjump.eq\t@.BB0_457\n\tadd\tstack-[5], r0, r2\n\tdiv.s\tstack-[9], r2, r1, r2\n\tsub.s!\t@CPI0_124[0], r1, r1\n\tadd\tr14, r0, r1\n\tjump.ne\t@.BB0_225\n.BB0_457:\n\tdiv\tstack-[5], r1, r1, r2\n\tadd\tr1, r4, r15\n\tsub!\tr15, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_225\n\tmul\t@CPI0_124[0], r15, stack-[16], r1\n\tmul\tr15, r15, r2, r1\n\tdiv.s\t@CPI0_124[0], r2, r1, r3\n\tmul\tr1, r15, stack-[15], r3\n\tmul\t3, r15, r7, r3\n\tdiv.s\t3, r7, stack-[14], r3\n\tsub!\tstack-[14], r15, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tadd\tr3, r0, stack-[18]\n\tadd\tr0, r0, r5\n\tadd\tstack-[10], r0, r13\n\tjump\t@.BB0_459\n.BB0_503:\n\tdiv\tr3, r4, r3, r4\n\tadd\tr3, r13, r9\n.BB0_505:\n\tsub!\tr9, r13, r3\n\tadd\tr9, r0, r13\n\tjump.lt\t@.BB0_225\n.BB0_468:\n\tsub.s!\t254, r5, r3\n\tadd\t1, r5, r5\n\tjump.ge\t@.BB0_467\n.BB0_459:\n\tmul\tr13, r15, r8, r3\n\tsub!\tr15, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_462\n\tdiv\tr8, r15, r3, r4\n\tsub!\tr3, r13, r3\n\tjump.ne\t@.BB0_225\n\tdiv.s\t@CPI0_124[0], r8, r3, r4\n\tdiv\tr2, r15, r4, r6\n\tsub!\tr4, r15, r4\n\tjump.ne\t@.BB0_225\n.BB0_462:\n\tmul\tr13, r13, r10, r4\n\tsub!\tr13, r0, r4\n\tjump.eq\t@.BB0_464\n\tdiv\tr10, r13, r4, r6\n\tsub!\tr4, r13, r4\n\tjump.ne\t@.BB0_225\n.BB0_464:\n\tdiv.s\t@CPI0_124[0], r10, r9, r4\n\tadd\tr9, r1, r6\n\tmul\tr3, r6, r4, r11\n\tsub!\tr3, r0, r11\n\tjump.eq\t@.BB0_466\n\tdiv\tr4, r3, r3, r11\n\tsub!\tr3, r6, r3\n\tjump.ne\t@.BB0_225\n.BB0_466:\n\tdiv.s\t@CPI0_124[0], r4, r3, r4\n\tsub!\tr3, r12, r4\n\tjump.ge\t@.BB0_469\n\tsub\tr12, r3, r4\n\tmul\t@CPI0_124[0], r4, r3, r6\n\tdiv\tr3, r4, r4, r6\n\tsub.s!\t@CPI0_124[0], r4, r4\n\tadd\tstack-[18], r0, r4\n\tor.ne\t1, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_225\n\tsub!\tr13, r0, r4\n\tjump.eq\t@.BB0_496\n\tdiv\tr10, r13, r4, r6\n\tsub!\tr4, r13, r4\n\tjump.ne\t@.BB0_225\n.BB0_496:\n\tmul\tr9, r7, r4, r6\n\tsub!\tr15, r0, r6\n\tadd\tr0, r0, r6\n\tjump.eq\t@.BB0_501\n\tdiv\tr4, r7, r6, r8\n\tsub!\tr6, r9, r6\n\tjump.ne\t@.BB0_225\n\tdiv\tr2, r15, r6, r8\n\tsub!\tr6, r15, r6\n\tjump.ne\t@.BB0_225\n\tsub.s!\t@CPI0_124[0], r2, r6\n\tadd\tr0, r0, r6\n\tjump.lt\t@.BB0_501\n\tdiv\tstack-[15], r1, r6, r8\n\tsub!\tr6, r15, r6\n\tadd\tstack-[15], r0, r6\n\tjump.ne\t@.BB0_225\n.BB0_501:\n\tdiv.s\t@CPI0_124[0], r4, r4, r8\n\tdiv.s\t@CPI0_124[0], r6, r6, r8\n\tadd!\tr6, r4, r4\n\tjump.eq\t@.BB0_276\n\tsub!\tr4, r3, r6\n\tjump.le\t@.BB0_503\n\tadd!\t1, r13, r9\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_225\n\tsub!\tr15, r0, r3\n\tjump.eq\t@.BB0_508\n\tdiv\tstack-[16], r15, r3, r4\n\tsub.s!\t@CPI0_124[0], r3, r3\n\tjump.ne\t@.BB0_225\n.BB0_508:\n\tmul\t@CPI0_124[0], r9, r3, r4\n\tdiv\tr3, r9, r4, r6\n\tsub.s!\t@CPI0_124[0], r4, r4\n\tjump.ne\t@.BB0_225\n\tdiv.s\tstack-[17], r3, r4, r6\n\tsub.s!\tstack-[16], r14, r6\n\tadd\tr0, r0, r10\n\tadd\tr0, r0, r8\n\tjump.gt\t@.BB0_512\n\tdiv\tstack-[16], r14, r6, r8\n\tmul\tr4, r6, r8, r10\n\tdiv\tr8, r6, r10, r11\n\tsub!\tr10, r4, r10\n\tjump.ne\t@.BB0_225\n\tdiv.s\t@CPI0_124[0], r8, r8, r10\n\tmul\tr6, r6, r10, r11\n\tdiv\tr10, r6, r11, r14\n\tadd\tstack-[13], r0, r14\n\tsub!\tr11, r6, r6\n\tjump.ne\t@.BB0_225\n.BB0_512:\n\tmul\tr4, r4, r11, r6\n\tdiv.s\t@CPI0_124[0], r10, r6, r10\n\tsub!\tstack-[17], r3, r3\n\tjump.gt\t@.BB0_514\n\tdiv\tr11, r4, r3, r10\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB0_225\n.BB0_514:\n\tdiv.s\t@CPI0_124[0], r11, r3, r4\n\tadd\tr6, r3, r4\n\tmul\tr4, r8, r3, r6\n\tsub!\tr8, r0, r6\n\tjump.eq\t@.BB0_516\n\tdiv\tr3, r8, r6, r8\n\tsub!\tr6, r4, r4\n\tjump.ne\t@.BB0_225\n.BB0_516:\n\tdiv.s\t@CPI0_124[0], r3, r3, r4\n\tsub!\tr3, r12, r3\n\tjump.le\t@.BB0_505\n\tjump\t@.BB0_517\n.BB0_469:\n\tsub\tr3, r12, r6\n\tmul\t@CPI0_124[0], r6, r4, r11\n\tsub!\tr3, r12, r11\n\tjump.ne\t@.BB0_470\n\tsub!\tstack-[14], r15, r6\n\tjump.eq\t@.BB0_472\n\tjump\t@.BB0_225\n.BB0_470:\n\tdiv\tr4, r6, r6, r11\n\tsub.s!\t@CPI0_124[0], r6, r6\n\tadd\tstack-[18], r0, r6\n\tor.ne\t1, r6, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_225\n.BB0_472:\n\tsub!\tr13, r0, r6\n\tjump.eq\t@.BB0_474\n\tdiv\tr10, r13, r6, r10\n\tsub!\tr6, r13, r6\n\tjump.ne\t@.BB0_225\n.BB0_474:\n\tmul\tr9, r7, r10, r6\n\tsub!\tr15, r0, r6\n\tadd\tr0, r0, r6\n\tjump.eq\t@.BB0_479\n\tdiv\tr10, r7, r6, r11\n\tsub!\tr6, r9, r6\n\tjump.ne\t@.BB0_225\n\tdiv\tr2, r15, r6, r9\n\tsub!\tr6, r15, r6\n\tjump.ne\t@.BB0_225\n\tsub.s!\t@CPI0_124[0], r2, r6\n\tadd\tr0, r0, r6\n\tjump.lt\t@.BB0_479\n\tdiv\tstack-[15], r1, r6, r9\n\tsub!\tr6, r15, r6\n\tadd\tstack-[15], r0, r6\n\tjump.ne\t@.BB0_225\n.BB0_479:\n\tdiv.s\t@CPI0_124[0], r10, r9, r10\n\tdiv.s\t@CPI0_124[0], r6, r6, r10\n\tadd!\tr6, r9, r6\n\tjump.eq\t@.BB0_276\n\tdiv\tr4, r6, r10, r9\n\tsub!\tr6, r4, r4\n\tjump.le\t@.BB0_482\n\tsub!\tr3, r12, r3\n\tadd\tr13, r0, r9\n\tjump.eq\t@.BB0_517\n\tsub!\tr13, r0, r3\n\tjump.eq\t@.BB0_225\n\tsub.s\t1, r13, r4\n\tsub!\tr15, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_489\n\tsub\tr8, r15, r3\n\tdiv\tr3, r15, r6, r8\n\tsub!\tr6, r4, r6\n\tjump.ne\t@.BB0_225\n\tdiv.s\t@CPI0_124[0], r3, r3, r6\n\tdiv\tr2, r15, r6, r8\n\tsub!\tr6, r15, r6\n\tjump.ne\t@.BB0_225\n.BB0_489:\n\tmul\tr4, r4, r6, r8\n\tsub!\tr4, r0, r8\n\tjump.eq\t@.BB0_491\n\tdiv\tr6, r4, r8, r9\n\tsub!\tr8, r4, r4\n\tjump.ne\t@.BB0_225\n.BB0_491:\n\tdiv.s\t@CPI0_124[0], r6, r4, r6\n\tadd\tr4, r1, r6\n\tmul\tr3, r6, r4, r8\n\tsub!\tr3, r0, r8\n\tjump.eq\t@.BB0_485\n\tdiv\tr4, r3, r3, r8\n\tsub!\tr3, r6, r3\n\tjump.ne\t@.BB0_225\n.BB0_485:\n\tadd\t1, r0, r10\n\tdiv.s\t@CPI0_124[0], r4, r3, r4\n\tsub!\tr3, r12, r3\n\tadd\tr13, r0, r9\n\tjump.lt\t@.BB0_517\n.BB0_482:\n\tsub!\tr13, r10, r3\n\tjump.lt\t@.BB0_225\n\tsub\tr13, r10, r13\n\tjump\t@.BB0_468\n.BB0_517:\n\tsub!\tstack-[10], r9, r1\n\tjump.lt\t@.BB0_225\n\tsub!\tstack-[7], r0, r1\n\tadd\tr14, r0, r1\n\tadd.eq\tstack-[17], r0, r1\n\tsub\tstack-[10], r9, r2\n\tadd\tr1, r0, r4\n\tmul\tr2, r1, r1, r3\n\tsub!\tstack-[10], r9, r3\n\tjump.eq\t@.BB0_520\n\tdiv\tr1, r2, r2, r3\n\tsub!\tr2, r4, r2\n\tjump.ne\t@.BB0_225\n.BB0_520:\n\tdiv.s\t@CPI0_124[0], r1, r1, r2\n.BB0_525:\n\tld.1\t128, r2\n\tsub.s!\tstack-[11], r2, r2\n\tadd\tstack-[12], r0, r4\n\tjump.le\t@.BB0_427\n\tadd\tstack-[11], r0, r3\n\tshl.s\t5, r3, r2\n\tadd\t160, r2, r2\n\tst.1\tr2, r1\n\tadd\t1, r3, stack-[11]\n\tsub.s!\tstack-[3], r4, r1\n\tadd\tr4, r0, r1\n\tjump.lt\t@.BB0_425\n.BB0_527:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[18]\n\tadd\t32, r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\t128, r0, r1\n\tjump\t@.BB0_528\n.BB0_110:\n\tsub.s!\t@CPI0_41[0], r2, r4\n\tjump.eq\t@.BB0_813\n\tsub.s!\t@CPI0_42[0], r2, r4\n\tjump.eq\t@.BB0_815\n\tsub.s!\t@CPI0_43[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_81[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t26, r0, r1\n\tjump\t@.BB0_550\n.BB0_84:\n\tsub.s!\t@CPI0_67[0], r2, r4\n\tjump.eq\t@.BB0_553\n\tsub.s!\t@CPI0_68[0], r2, r4\n\tjump.eq\t@.BB0_555\n\tsub.s!\t@CPI0_69[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t16, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_2\n\tnear_call\tr0, @storage_array_index_access_struct_Observation__dyn, @DEFAULT_UNWIND\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsload\tr1, r3\n\tadd\t2, r1, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t64, r4, r5\n\tst.1\tr5, r1\n\tadd\t32, r4, r1\n\tst.1\tr1, r2\n\tst.1\tr4, r3\n\tjump\t@.BB0_803\n.BB0_117:\n\tsub.s!\t@CPI0_34[0], r2, r4\n\tjump.eq\t@.BB0_875\n\tsub.s!\t@CPI0_35[0], r2, r1\n\tjump.eq\t@.BB0_910\n\tsub.s!\t@CPI0_36[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t22, r0, r1\n\tjump\t@.BB0_533\n.BB0_102:\n\tsub.s!\t@CPI0_51[0], r2, r4\n\tjump.eq\t@.BB0_686\n\tsub.s!\t@CPI0_52[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_140[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[18]\n\tst.2\t4, r1\n\tadd\t160, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_141[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld.1\t64, r7\n\tld\tr1, r1\n\tsub.s!\t255, r1, r2\n\tjump.ne\t@.BB0_702\n\tadd\t5, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r5\n\tshr.s\t1, r3, r2\n\tand\t127, r2, r1\n\tadd.ne\tr2, r0, r1\n\tsub.s!\t31, r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr3, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1.inc\tr7, r1, r2\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB0_698\n\tst.1\t0, r4\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_695\n\tadd\t@CPI0_144[0], r0, r4\n\tadd\tr0, r0, r3\n.BB0_701:\n\tadd\tr2, r3, r5\n\tsload\tr4, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB0_701\n\tjump\t@.BB0_695\n.BB0_135:\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_1251\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t2, r1, r1\n\tjump.eq\t@.BB0_145\n\tadd\t2, r0, r1\n\tsstore\tr2, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_1275\n\tadd\t@CPI0_84[0], r0, r1\n\tjump\t@.BB0_146\n.BB0_65:\n\tsub!\tr5, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_67\n\tld.1\t448, r1\n.BB0_67:\n\tshl.s\t3, r5, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB0_20:\n\tsstore\tr4, r1\n\tld.1\t352, r4\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_36\n\tadd\tr4, r0, stack-[17]\n\tsub.s!\t@CPI0_4[0], r4, r1\n\tjump.gt\t@.BB0_12\n\tadd\t5, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[16]\n\tjump.lt\t@.BB0_28\n\tadd\tr3, r0, stack-[15]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\tstack-[17], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr2, r1, r1\n\tadd\tstack-[15], r0, r3\n\tadd\t31, r3, r3\n\tshr.s\t5, r3, r3\n\tadd\tr2, r3, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[16], r0, r4\n\tjump.ge\t@.BB0_28\n.BB0_27:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_27\n.BB0_28:\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t32, r0, r2\n\tadd\tstack-[17], r0, r7\n\tand!\tr7, r2, r2\n\tadd\t384, r0, r3\n\tld\tr1, r1\n\tjump.eq\t@.BB0_33\n\tadd\t32, r0, r4\n\tadd\tr0, r0, r3\n.BB0_31:\n\tadd\tr4, r0, r5\n\tadd\t352, r5, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r5, r4\n\tadd\t1, r1, r1\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r6\n\tjump.lt\t@.BB0_31\n\tadd\t384, r5, r3\n.BB0_33:\n\tsub!\tr2, r7, r2\n\tjump.ge\t@.BB0_35\n\tshl.s\t3, r7, r2\n\tand\t248, r2, r2\n\tsub.s\t1, r0, r4\n\tshr\tr4, r2, r2\n\txor\tr2, r4, r2\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_35:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[16], r0, r2\n\tsstore\tr2, r1\n\tadd\t255, r0, r1\n\tjump\t@.BB0_37\n.BB0_36:\n\tshl.s\t3, r4, r1\n\tsub\t256, r1, r2\n\tsub.s\t1, r0, r3\n\tshl\tr3, r2, r2\n\tsub\t0, r1, r1\n\tsub.s\t256, r0, r3\n\tsub!\tr1, r3, r1\n\tadd.lt\tr0, r0, r2\n\tld.1\t384, r1\n\tand\tr1, r2, r1\n\tor\tr1, r4, r1\n.BB0_37:\n\tst.1\t288, r1\n\tld.1\t448, r1\n\tsub.s!\t32, r1, r2\n\tjump.lt\t@.BB0_51\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_12\n\tadd\t6, r0, r2\n\tsload\tr2, r4\n\tand!\t1, r4, r3\n\tshr.s\t1, r4, r5\n\tand\t127, r5, r3\n\tadd.ne\tr5, r0, r3\n\tsub.s!\t31, r3, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr4, r5, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r3, r4\n\tjump.lt\t@.BB0_45\n\tadd\t31, r3, r3\n\tshr.s\t5, r3, r5\n\tadd\t@CPI0_5[0], r5, r3\n\tadd\t31, r1, r4\n\tshr.s\t5, r4, r4\n\tsub!\tr4, r5, r5\n\tjump.ge\t@.BB0_45\n\tadd\t@CPI0_5[0], r4, r4\n.BB0_43:\n\tsstore\tr4, r0\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_43\n.BB0_45:\n\tst.1\t0, r2\n\tsub.s\t32, r0, r3\n\tand!\tr1, r3, r4\n\tadd\t480, r0, r5\n\tadd\t@CPI0_5[0], r0, r3\n\tjump.eq\t@.BB0_49\n\tadd\t@CPI0_5[0], r0, r3\n\tadd\t32, r0, r7\n\tadd\tr0, r0, r5\n.BB0_47:\n\tadd\tr7, r0, r6\n\tadd\t448, r6, r7\n\tld.1\tr7, r7\n\tsstore\tr3, r7\n\tadd\t32, r6, r7\n\tadd\t1, r3, r3\n\tadd\t32, r5, r5\n\tsub!\tr5, r4, r8\n\tjump.lt\t@.BB0_47\n\tadd\t480, r6, r5\n.BB0_49:\n\tsub!\tr4, r1, r4\n\tjump.ge\t@.BB0_44\n\tshl.s\t3, r1, r4\n\tand\t248, r4, r4\n\tsub.s\t1, r0, r6\n\tshr\tr6, r4, r4\n\txor\tr4, r6, r4\n\tld.1\tr5, r5\n\tand\tr5, r4, r4\n\tsstore\tr3, r4\n.BB0_44:\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tsstore\tr2, r1\n\tadd\t255, r0, r1\n\tjump\t@.BB0_52\n.BB0_596:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256t_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_sample, @DEFAULT_UNWIND\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[18]\n\tst.1.inc\tr3, r2, r2\n.BB0_528:\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r4\n\tjump\t@.BB0_529\n.BB0_1030:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_81[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tsub.s!\t@CPI0_81[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[17]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[17], r0, r2\n\tjump\t@.BB0_552\n.BB0_582:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t24, r0, r1\n\tjump\t@.BB0_533\n.BB0_916:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t15, r0, r1\n\tjump\t@.BB0_408\n.BB0_588:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t13, r0, r1\n\tsload\tr1, r1\n\tadd\t12, r0, r2\n\tsload\tr2, r2\n\tadd\t11, r0, r3\n\tsload\tr3, r3\n\tadd\t20, r0, r4\n\tsload\tr4, r4\n\tadd\t19, r0, r5\n\tsload\tr5, r5\n\tadd\t18, r0, r6\n\tsload\tr6, r6\n\tadd\t17, r0, r7\n\tsload\tr7, r7\n\tst.1\t128, r7\n\tst.1\t160, r6\n\tst.1\t192, r5\n\tst.1\t224, r4\n\tand!\t@CPI0_87[0], r3, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1\t256, r3\n\tand\t@CPI0_81[0], r2, r2\n\tst.1\t288, r2\n\tand\t@CPI0_81[0], r1, r1\n\tst.1\t320, r1\n\tadd\t@CPI0_156[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_959:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t13, r0, r1\n\tjump\t@.BB0_408\n.BB0_600:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tsub.s!\t@CPI0_81[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t8, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t2, r1, r1\n\tjump.eq\t@.BB0_145\n\tadd\t2, r0, r1\n\tadd\tr2, r0, stack-[12]\n\tadd\tr1, r0, stack-[13]\n\tsstore\tr2, r1\n\tadd\t20, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t19, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_80[0], r0, r1\n\tst.1\t128, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[16]\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_81[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_606\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_616\n.BB0_1037:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[18]\n\tsub.s!\t@CPI0_81[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_81[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t15, r0, r1\n\tsload\tr1, r2\n\tand!\t@CPI0_81[0], r2, r3\n\tjump.ne\t@.BB0_1043\n\tand\t@CPI0_92[0], r2, r3\n\tcontext.caller\tr2\n\tor\tr2, r3, r3\n\tsstore\tr1, r3\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t128, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1046\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1056\n.BB0_686:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_81[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tjump\t@.BB0_550\n.BB0_1251:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[18]\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_81[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t20, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t19, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t15, r0, r1\n\tsload\tr1, r2\n\tadd\t11, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_86[0], r0, r3\n\tst.1\t128, r3\n\tcontext.this\tr3\n\tand\t@CPI0_81[0], r3, r3\n\tst.1\t132, r3\n\tand!\t@CPI0_87[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t164, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_81[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1256\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1266\n.BB0_592:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_81[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t28, r0, r1\n\tjump\t@.BB0_550\n.BB0_1001:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t224, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[18]\n\tsub.s!\t@CPI0_81[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_81[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tptr.add.s\t132, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t255, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t@CPI0_110[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld\tr1, r1\n\tsub.s!\tstack-[16], r1, r1\n\tjump.le\t@.BB0_1009\n\tld.1\t64, r1\n\tadd\t@CPI0_123[0], r0, r2\n.BB0_257:\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[16], r0, r3\n\tst.1\tr2, r3\n\tjump\t@.BB0_569\n.BB0_579:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t18, r0, r1\n\tjump\t@.BB0_581\n.BB0_914:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t23, r0, r1\n\tjump\t@.BB0_533\n.BB0_586:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_domainSeparatorV4, @DEFAULT_UNWIND\n\tjump\t@.BB0_405\n.BB0_957:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t21, r0, r1\n\tjump\t@.BB0_533\n.BB0_389:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t9, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_393\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_392\n\tadd\t@CPI0_104[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_396:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_396\n\tadd\t192, r3, r2\n\tjump\t@.BB0_392\n.BB0_801:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_lastObservation, @DEFAULT_UNWIND\n\tld.1.inc\tr1, r2, r3\n\tld.1\t64, r4\n\tst.1.inc\tr4, r2, r2\n\tld.1\tr3, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tjump\t@.BB0_803\n.BB0_534:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t21, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t20, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t19, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t23, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t22, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_110[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld\tr1, r1\n\tsub!\tstack-[18], r1, r1\n\tadd\tstack-[17], r0, stack-[13]\n\tjump.ne\t@.BB0_537\n.BB0_545:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\t32779, r0, r1\n\tadd\t4, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t19, r4, r4\n\tmul\t32, r4, r4, r0\n\tadd\t@CPI0_110[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r4\n\tadd\t32, r4, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\tstack-[16], r0, r1\n\tst.1\tr4, r1\n.BB0_803:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_134[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_832:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_81[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tjump\t@.BB0_404\n.BB0_406:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n.BB0_408:\n\tsload\tr1, r1\n\tand\t@CPI0_81[0], r1, r1\n\tjump\t@.BB0_581\n.BB0_815:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_81[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r3\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tadd\tr4, r0, r1\n\tadd\tr3, r0, stack-[18]\n\tnear_call\tr0, @fun_sample, @DEFAULT_UNWIND\n\tld.1.inc\tr1, r1, r2\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_822\n\tadd\tr0, r0, r4\n\tadd\tr0, r0, r3\n.BB0_820:\n\tshl.s\t5, r4, r5\n\tadd\tr2, r5, r5\n\tld.1\tr5, r5\n\tadd\tr5, r3, r3\n\tsub!\tr3, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_225\n\tadd\t1, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_820\n.BB0_822:\n\tadd\tstack-[18], r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_823\n.BB0_276:\n\tadd\t@CPI0_165[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tjump\t@.BB0_5\n.BB0_555:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[18]\n\tsub.s!\t@CPI0_81[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_81[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[14]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_562\n.BB0_563:\n\tadd\tstack-[18], r0, r1\n\tadd\tstack-[17], r0, r2\n\tadd\tstack-[16], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n.BB0_681:\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_89[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_910:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t25, r0, r1\n\tjump\t@.BB0_533\n.BB0_137:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[18]\n\tsub.s!\t@CPI0_81[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_100[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_100[0], r4, r4\n\tsub!\tr4, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_100[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t36, r2, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\tstack-[17], r2, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\t8, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t2, r1, r1\n\tjump.eq\t@.BB0_145\n\tadd\tr8, r0, stack-[15]\n\tadd\t2, r0, r1\n\tadd\tr2, r0, stack-[13]\n\tadd\tr1, r0, stack-[12]\n\tsstore\tr2, r1\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tsload\tr1, r2\n\tadd\t@CPI0_167[0], r0, r1\n\tst.1\t128, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_81[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_149\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_159\n.BB0_723:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tsub.s!\t@CPI0_81[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t8, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t2, r1, r1\n\tjump.eq\t@.BB0_145\n\tadd\t2, r0, r1\n\tadd\tr2, r0, stack-[10]\n\tadd\tr1, r0, stack-[14]\n\tsstore\tr2, r1\n\tadd\t20, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t19, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tadd\t13, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_80[0], r0, r3\n\tst.1\t128, r3\n\tcontext.this\tr3\n\tadd\tr3, r0, stack-[17]\n\tst.1\t132, r3\n\tand\t@CPI0_81[0], r1, stack-[16]\n\tcontext.gas_left\tr1\n\tand\t@CPI0_81[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[13]\n\tjump.ne\t@.BB0_729\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_739\n.BB0_531:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tjump\t@.BB0_533\n.BB0_828:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_81[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t29, r0, r1\n.BB0_550:\n\tst.1\t32, r1\n.BB0_551:\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n.BB0_552:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_533:\n\tsload\tr1, r1\n.BB0_581:\n\tst.1\t128, r1\n\tadd\t@CPI0_90[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_400:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_81[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n.BB0_404:\n\tadd\t1, r0, r1\n.BB0_405:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_89[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_813:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t13, r0, r1\n\tsload\tr1, r1\n\tadd\t12, r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_81[0], r2, r2\n\tst.1\t128, r2\n\tand\t@CPI0_81[0], r1, r1\n\tst.1\t160, r1\n\tadd\t@CPI0_133[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_553:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t11, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_87[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_581\n.BB0_875:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[18]\n\tsub.s!\t@CPI0_81[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t8, r0, r2\n\tsload\tr2, r1\n\tsub.s!\t2, r1, r1\n\tjump.ne\t@.BB0_879\n.BB0_145:\n\tadd\t@CPI0_184[0], r0, r1\n.BB0_146:\n\tst.1\t128, r1\n\tadd\t@CPI0_85[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_51:\n\tshl.s\t3, r1, r2\n\tsub\t256, r2, r3\n\tsub.s\t1, r0, r4\n\tshl\tr4, r3, r3\n\tsub\t0, r2, r2\n\tsub.s\t256, r0, r4\n\tsub!\tr2, r4, r2\n\tadd.lt\tr0, r0, r3\n\tld.1\t480, r2\n\tand\tr2, r3, r2\n\tor\tr2, r1, r1\n.BB0_52:\n\tst.1\t320, r1\n\tld.1\t352, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t224, r1\n\tld.1\t448, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tst.1\t256, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld\tr1, r1\n\tst.1\t160, r1\n\tld.1\t64, r3\n\tadd\t96, r3, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\tr3, r0, stack-[17]\n\tadd\t32, r3, r2\n\tadd\t@CPI0_10[0], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r3\n\tadd\t128, r3, r2\n\tst.1\tr2, r1\n\tadd\t160, r3, r1\n\tcontext.this\tr2\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr1, r2\n\tadd\t160, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\tr3, r1\n\tsub.s!\t@CPI0_11[0], r3, r1\n\tjump.gt\t@.BB0_12\n\tadd\tstack-[17], r0, r2\n\tadd\t192, r2, r1\n\tst.1\t64, r1\n\tld.1\tr2, r2\n\tadd\tstack-[16], r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tst.1\t128, r1\n\tadd\tstack-[14], r0, r3\n\tst.1\t192, r3\n\tadd\t8, r0, r2\n\tadd\tstack-[18], r0, r4\n\tsstore\tr2, r4\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tld.1\t160, r2\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tadd\t64, r0, r2\n\tst.2\t448, r2\n\tst.2\t480, r3\n\tadd\t96, r0, r2\n\tld.1\t224, r3\n\tst.2\t512, r2\n\tst.2\t544, r3\n\tadd\t128, r0, r2\n\tld.1\t256, r3\n\tst.2\t576, r2\n\tst.2\t608, r3\n\tld.1\t288, r2\n\tadd\tstack-[15], r0, r3\n\tst.2\t640, r3\n\tst.2\t672, r2\n\tadd\t192, r0, r2\n\tld.1\t320, r3\n\tst.2\t704, r2\n\tst.2\t736, r3\n\tst.2\t256, r1\n\tadd\t7, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_970:\n\tadd\tr2, r0, stack-[16]\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\t26, r0, r1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t27, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t25, r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\t24, r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[17], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[13], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[13], r0, r2\n\tsub.s!\tstack-[14], r2, r1\n\tjump.lt\t@.BB0_225\n\tadd\tstack-[11], r0, r2\n\tsub!\tstack-[12], r2, r1\n\tjump.lt\t@.BB0_225\n\tadd\tstack-[13], r0, r2\n\tsub.s!\tstack-[14], r2, r1\n\tjump.ne\t@.BB0_977\n.BB0_981:\n\tadd\tstack-[11], r0, r2\n\tsub!\tstack-[12], r2, r1\n\tjump.eq\t@.BB0_964\n\tadd\tstack-[11], r0, r2\n\tsub\tstack-[12], r2, r1\n\tmul\tstack-[16], r1, r4, r2\n\tadd\tr4, r0, stack-[17]\n\tdiv.s\tstack-[16], r4, r2, r3\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_225\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\t29, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tdiv.s\t@CPI0_124[0], r2, r2, r3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_225\n\tsstore\tr1, r2\n\tjump\t@.BB0_964\n.BB0_702:\n\tand\t255, r1, r2\n\tsub.s!\t32, r2, r3\n\tjump.lt\t@.BB0_704\n\tadd\t@CPI0_143[0], r0, r1\n\tst.1\tr7, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r7, r2\n\tadd.ge\tr1, r0, r7\n\tshl.s\t64, r7, r1\n\tor\t@CPI0_99[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1275:\n\tadd\tr2, r0, stack-[16]\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_80[0], r0, r1\n\tst.1\t128, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[17]\n\tst.1\t132, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_81[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1277\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1287\n.BB0_809:\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_807\n\tadd\t@CPI0_106[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_811:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_811\n\tadd\t192, r3, r2\n.BB0_807:\n\tjump\t@.BB0_392\n.BB0_1256:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_88[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1356\n\tadd\tr0, r0, r7\n.BB0_1258:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1258\n.BB0_1356:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1260\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1260:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1261\n.BB0_1266:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tmul\tstack-[18], r2, r1, r3\n\tsub!\tstack-[18], r0, r3\n\tjump.eq\t@.BB0_1269\n\tdiv.s\tstack-[18], r1, r3, r4\n\tsub!\tr3, r2, r2\n\tjump.ne\t@.BB0_225\n.BB0_1269:\n\tdiv.s\t10000, r1, r1, r2\n\tsub!\tstack-[18], r1, r2\n\tjump.lt\t@.BB0_225\n\tsub\tstack-[18], r1, r1\n\tadd\tstack-[17], r0, r2\n\tadd\tstack-[15], r0, r3\n\tadd\tstack-[16], r0, r4\n\tnear_call\tr0, @fun_getAmountOut, @DEFAULT_UNWIND\n\tjump\t@.BB0_405\n.BB0_393:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n.BB0_392:\n\tsub.s\t128, r2, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[18]\n\tnear_call\tr0, @finalize_allocation.1, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[17]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[18], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n.BB0_529:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n.BB0_530:\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_537:\n\tadd\t@CPI0_110[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[18], r0, r2\n\tjump.eq\t@.BB0_55\n\tld\tr1, r1\n\tsub!\tr1, r2, r2\n\tjump.lt\t@.BB0_225\n\tsub.s\tstack-[18], r1, r1\n\tmul\tstack-[15], r1, r2, r3\n\tsub!\tstack-[15], r0, r3\n\tjump.eq\t@.BB0_541\n\tdiv.s\tstack-[15], r2, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.ne\t@.BB0_225\n.BB0_541:\n\tadd\tstack-[16], r2, stack-[16]\n\tsub!\tstack-[16], r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_225\n\tmul\tstack-[14], r1, r2, r3\n\tadd\tstack-[17], r2, stack-[13]\n\tsub!\tstack-[14], r0, r3\n\tjump.eq\t@.BB0_545\n\tdiv.s\tstack-[14], r2, r2, r3\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_225\n\tadd\tstack-[13], r0, r2\n\tsub.s!\tstack-[17], r2, r1\n\tjump.ge\t@.BB0_545\n\tjump\t@.BB0_225\n.BB0_879:\n\tadd\t2, r0, r1\n\tadd\tr2, r0, stack-[14]\n\tsstore\tr2, r1\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tadd\t13, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_80[0], r0, r3\n\tst.1\t128, r3\n\tcontext.this\tr3\n\tadd\tr3, r0, stack-[16]\n\tst.1\t132, r3\n\tand\t@CPI0_81[0], r1, stack-[17]\n\tcontext.gas_left\tr1\n\tand\t@CPI0_81[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[15]\n\tjump.ne\t@.BB0_881\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_891\n.BB0_823:\n\tdiv\tr3, r2, r1, r2\n\tjump\t@.BB0_405\n.BB0_704:\n\tadd\tr7, r0, stack-[17]\n\tsub.s!\t@CPI0_142[0], r7, r3\n\tjump.gt\t@.BB0_12\n\tadd\tstack-[17], r0, r4\n\tadd\t64, r4, r3\n\tst.1\t64, r3\n\tadd\t32, r4, r3\n\tst.1\tr3, r1\n\tst.1\tr4, r2\n\tjump\t@.BB0_706\n.BB0_1277:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_82[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1360\n\tadd\tr0, r0, r7\n.BB0_1279:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1279\n.BB0_1360:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1281\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1281:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1282\n.BB0_1287:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r2\n\tadd\tr2, r0, stack-[18]\n\tst.1\t64, r2\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\t13, r0, r2\n\tsload\tr2, r2\n\tld.1\t128, r3\n\tadd\tr3, r0, stack-[15]\n\tadd\t@CPI0_80[0], r0, r3\n\tadd\tstack-[18], r0, r5\n\tst.1\tr5, r3\n\tor\t132, r1, r3\n\tadd\tstack-[17], r0, r4\n\tst.1\tr3, r4\n\tcontext.gas_left\tr3\n\tand\t@CPI0_81[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1290\n\tadd\tr5, r1, r1\n\tst.1\t64, r1\n.BB0_1301:\n\tadd\t20, r0, r1\n\tsload\tr1, r4\n\tadd\t19, r0, r1\n\tsload\tr1, r3\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tnear_call\tr0, @fun_update, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tadd\tstack-[16], r0, r2\n.BB0_388:\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_606:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_82[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1324\n\tadd\tr0, r0, r7\n.BB0_608:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_608\n.BB0_1324:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_610\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_610:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_611\n.BB0_616:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r2\n\tadd\tr2, r0, stack-[17]\n\tst.1\t64, r2\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\t13, r0, r2\n\tsload\tr2, r2\n\tld.1\t128, r4\n\tadd\tr4, r0, stack-[11]\n\tadd\t@CPI0_80[0], r0, r4\n\tadd\tstack-[17], r0, r10\n\tst.1\tr10, r4\n\tor\t132, r1, r1\n\tadd\tstack-[16], r0, r4\n\tst.1\tr1, r4\n\tadd\t63, r0, r1\n\tcontext.gas_left\tr4\n\tand\t@CPI0_81[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.eq\t@.BB0_629\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr1, r0, r4\n\tshl.s\t192, r4, r1\n\tshl.s\t64, r10, r3\n\tor\tr1, r3, r1\n\tor\t@CPI0_83[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1322\n\tadd\tr0, r0, r7\n.BB0_620:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_620\n.BB0_1322:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_622\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_622:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_624\n\tadd\t31, r4, r1\n.BB0_629:\n\tand\t96, r1, r1\n\tadd\tr1, r10, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tsub.s!\tstack-[15], r2, r1\n\tjump.lt\t@.BB0_225\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\tstack-[14], r2, r1\n\tjump.lt\t@.BB0_225\n\tadd\tstack-[11], r0, r2\n\tsub.s\tstack-[15], r2, stack-[16]\n\tadd\tstack-[17], r0, r2\n\tsub.s\tstack-[14], r2, stack-[10]\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_634\n\tadd\tstack-[11], r0, r2\n\tsub.s!\tstack-[15], r2, r1\n\tjump.eq\t@.BB0_225\n\tadd\tstack-[10], r0, r2\n\tmul!\tstack-[16], r2, r1, r2\n\tjump.eq\t@.BB0_225\n\tdiv.s\tstack-[16], r1, r2, r3\n\tsub.s!\tstack-[10], r2, r2\n\tjump.ne\t@.BB0_225\n\tshr.s\t128, r1, r2\n\tsub.s!\t@CPI0_147[0], r1, r3\n\tadd.lt\tr1, r0, r2\n\tsub.s!\t@CPI0_147[0], r1, r3\n\tadd\t128, r0, r3\n\tadd.lt\t0, r0, r3\n\tor\t64, r3, r4\n\tsub.s!\t@CPI0_3[0], r2, r5\n\tadd.ge\tr4, r0, r3\n\tshr.s\t64, r2, r4\n\tsub.s!\t@CPI0_3[0], r2, r5\n\tadd.ge\tr4, r0, r2\n\tor\t32, r3, r4\n\tsub.s!\t@CPI0_148[0], r2, r5\n\tadd.ge\tr4, r0, r3\n\tshr.s\t32, r2, r4\n\tsub.s!\t@CPI0_148[0], r2, r5\n\tadd.ge\tr4, r0, r2\n\tor\t16, r3, r4\n\tsub.s!\t@CPI0_149[0], r2, r5\n\tadd.ge\tr4, r0, r3\n\tshr.s\t16, r2, r4\n\tsub.s!\t@CPI0_149[0], r2, r5\n\tadd.ge\tr4, r0, r2\n\tadd\t8, r3, r4\n\tsub.s!\t256, r2, r5\n\tadd.ge\tr4, r0, r3\n\tshr.s.ge\t8, r2, r2\n\tadd\t4, r3, r4\n\tsub.s!\t16, r2, r5\n\tadd.ge\tr4, r0, r3\n\tshr.s.ge\t4, r2, r2\n\tadd\t2, r3, r4\n\tsub.s!\t4, r2, r5\n\tadd.ge\tr4, r0, r3\n\tshr.s.ge\t2, r2, r2\n\tsub.s!\t1, r2, r2\n\tadd.gt\t1, r3, r3\n\tshr.s\t1, r3, r2\n\tshr\tr1, r2, r3\n\tshl\t1, r2, r2\n\tadd\tr2, r3, r2\n\tsub.s!\t2, r2, r3\n\tjump.lt\t@.BB0_276\n\tshr.s\t1, r2, r2\n\tdiv\tr1, r2, r3, r4\n\tadd\tr3, r2, r2\n\tsub.s!\t2, r2, r3\n\tjump.lt\t@.BB0_276\n\tshr.s\t1, r2, r2\n\tdiv\tr1, r2, r3, r4\n\tadd\tr3, r2, r2\n\tsub.s!\t2, r2, r3\n\tjump.lt\t@.BB0_276\n\tshr.s\t1, r2, r2\n\tdiv\tr1, r2, r3, r4\n\tadd\tr3, r2, r2\n\tsub.s!\t2, r2, r3\n\tjump.lt\t@.BB0_276\n\tshr.s\t1, r2, r2\n\tdiv\tr1, r2, r3, r4\n\tadd\tr3, r2, r2\n\tsub.s!\t2, r2, r3\n\tjump.lt\t@.BB0_276\n\tshr.s\t1, r2, r2\n\tdiv\tr1, r2, r3, r4\n\tadd\tr3, r2, r2\n\tsub.s!\t2, r2, r3\n\tjump.lt\t@.BB0_276\n\tshr.s\t1, r2, r2\n\tdiv\tr1, r2, r3, r4\n\tadd\tr3, r2, r2\n\tsub.s!\t2, r2, r3\n\tjump.lt\t@.BB0_276\n\tshr.s\t1, r2, r3\n\tdiv\tr1, r3, r1, r2\n\tsub!\tr3, r1, r2\n\tadd.ge\tr1, r0, r3\n\tadd\tr3, r0, stack-[9]\n\tsub.s!\t1000, r3, r1\n\tjump.lt\t@.BB0_225\n\tadd\t1000, r0, r2\n\tadd\tstack-[13], r0, r1\n\tadd\tr2, r0, stack-[8]\n\tsstore\tr1, r2\n\tadd\t1, r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1000, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t1, r0, r6\n\tadd\t@CPI0_135[0], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r1\n\tsub.s\t1000, r1, stack-[9]\n\tadd\t11, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_87[0], r1, r1\n\tjump.eq\t@.BB0_633\n\tadd\tstack-[16], r0, r3\n\tmul\t@CPI0_124[0], r3, r2, r1\n\tdiv\tr2, r3, r1, r3\n\tsub.s!\t@CPI0_124[0], r1, r1\n\tjump.ne\t@.BB0_225\n\tadd\t17, r0, r1\n\tsload\tr1, r3\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB0_276\n\tadd\tstack-[10], r0, r1\n\tmul\t@CPI0_124[0], r1, r1, r4\n\tadd\tstack-[17], r0, r5\n\tsub.s!\tstack-[14], r5, r4\n\tjump.eq\t@.BB0_659\n\tdiv.s\tstack-[10], r1, r4, r5\n\tsub.s!\t@CPI0_124[0], r4, r4\n\tjump.ne\t@.BB0_225\n.BB0_659:\n\tadd\t18, r0, r4\n\tsload\tr4, r5\n\tsub!\tr5, r0, r4\n\tjump.eq\t@.BB0_276\n\tdiv\tr2, r3, r4, r6\n\tdiv\tr1, r5, r6, r7\n\tsub!\tr4, r6, r6\n\tjump.ne\t@.BB0_661\n\tadd\tstack-[17], r0, r7\n\tsub.s!\tstack-[14], r7, r6\n\tjump.eq\t@.BB0_664\n\tdiv.s\tstack-[10], r1, r6, r7\n\tsub.s!\t@CPI0_124[0], r6, r6\n\tjump.ne\t@.BB0_225\n.BB0_664:\n\tmul\tr4, r4, r6, r7\n\tsub!\tr3, r2, r2\n\tadd\tr0, r0, r2\n\tjump.gt\t@.BB0_667\n\tdiv\tr6, r4, r2, r3\n\tsub!\tr2, r4, r2\n\tjump.ne\t@.BB0_225\n\tdiv.s\t@CPI0_124[0], r6, r2, r3\n.BB0_667:\n\tsub!\tr5, r1, r1\n\tjump.gt\t@.BB0_669\n\tdiv\tr6, r4, r1, r3\n\tsub!\tr1, r4, r1\n\tjump.ne\t@.BB0_225\n.BB0_669:\n\tdiv.s\t@CPI0_124[0], r6, r1, r3\n\tsub!\tr2, r0, r3\n\tjump.ne\t@.BB0_670\n.BB0_672:\n\tld.1\t64, r1\n\tadd\t@CPI0_152[0], r0, r2\n\tjump\t@.BB0_385\n.BB0_1261:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1355\n\tadd\tr0, r0, r6\n.BB0_1263:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1263\n.BB0_1355:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1265\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1265:\n\tjump\t@.BB0_158\n.BB0_729:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_82[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1332\n\tadd\tr0, r0, r7\n.BB0_731:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_731\n.BB0_1332:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_733\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_733:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_734\n.BB0_739:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r2\n\tadd\tr2, r0, stack-[15]\n\tst.1\t64, r2\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tadd\tr2, r0, stack-[9]\n\tadd\t@CPI0_80[0], r0, r2\n\tadd\tstack-[15], r0, r4\n\tst.1\tr4, r2\n\tor\t132, r1, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tcontext.gas_left\tr2\n\tadd\tstack-[16], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_742\n\tadd\tr4, r1, r1\n\tst.1\t64, r1\n.BB0_753:\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_755\n\tsub!\tstack-[8], r0, r1\n\tjump.eq\t@.BB0_276\n.BB0_761:\n\tld.1\t64, r1\n\tadd\t@CPI0_139[0], r0, r2\n.BB0_385:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tjump\t@.BB0_164\n.BB0_881:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_82[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1338\n\tadd\tr0, r0, r7\n.BB0_883:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_883\n.BB0_1338:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_885\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_885:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_886\n.BB0_891:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_2\n\tadd\t19, r0, r1\n\tsload\tr1, r1\n\tld.1\t128, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_893\n.BB0_225:\n\tadd\t@CPI0_165[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_5\n.BB0_698:\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tst.1\tr2, r3\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n.BB0_695:\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr7, r0, stack-[17]\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_12\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r1\n.BB0_706:\n\tadd\t@CPI0_140[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[18], r0, r1\n\tst.2\t4, r1\n\tadd\t192, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_141[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld.1\t64, r4\n\tld\tr1, r1\n\tsub.s!\t255, r1, r2\n\tjump.ne\t@.BB0_717\n\tadd\tr4, r0, stack-[18]\n\tadd\t6, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r5\n\tshr.s\t1, r3, r2\n\tand\t127, r2, r1\n\tadd.ne\tr2, r0, r1\n\tsub.s!\t31, r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr3, r2, r2\n\tand!\t1, r2, r2\n\tadd\tstack-[17], r0, r2\n\tjump.ne\t@.BB0_4\n\tadd\tr2, r0, stack-[17]\n\tadd\tstack-[18], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB0_713\n\tst.1\t0, r4\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_710\n\tadd\t@CPI0_5[0], r0, r4\n\tadd\tr0, r0, r3\n.BB0_716:\n\tadd\tr2, r3, r5\n\tsload\tr4, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB0_716\n\tjump\t@.BB0_710\n.BB0_1282:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1359\n\tadd\tr0, r0, r6\n.BB0_1284:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1284\n.BB0_1359:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1286\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1286:\n\tjump\t@.BB0_158\n.BB0_926:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_85[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1340\n\tadd\tr0, r0, r7\n.BB0_928:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_928\n.BB0_1340:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_930\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_930:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_931\n.BB0_936:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub.s!\t@CPI0_81[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr3\n\tsub!\tr3, r2, r2\n\tjump.ne\t@.BB0_939\n\tadd\t9, r0, r1\n\tsload\tr1, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r4\n\tand\t127, r4, r2\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr3, r4, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r2, r3\n\tjump.lt\t@.BB0_945\n\tadd\tstack-[18], r0, r5\n\tadd\t31, r5, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_104[0], r3, r4\n\tadd\t@CPI0_104[0], r0, r3\n\tsub.s!\t32, r5, r5\n\tadd.ge\tr4, r0, r3\n\tst.1\t0, r1\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\t@CPI0_104[0], r2, r2\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_945\n.BB0_944:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_944\n.BB0_945:\n\tadd\tstack-[18], r0, r2\n\tsub.s!\t31, r2, r2\n\tjump.le\t@.BB0_954\n\tsub.s\t32, r0, r2\n\tand!\tstack-[18], r2, r4\n\tadd\t@CPI0_104[0], r0, r2\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_951\n\tadd\t@CPI0_104[0], r0, r2\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tadd\tr0, r0, r3\n\tadd\tstack-[16], r0, r7\n.BB0_949:\n\tadd\tr3, r7, r6\n\tptr.add\tr5, r6, r6\n\tld\tr6, r6\n\tsstore\tr2, r6\n\tadd\t1, r2, r2\n\tadd\t32, r3, r3\n\tsub!\tr3, r4, r6\n\tjump.lt\t@.BB0_949\n.BB0_951:\n\tsub.s!\tstack-[18], r4, r4\n\tjump.ge\t@.BB0_953\n\tadd\tstack-[18], r0, r4\n\tshl.s\t3, r4, r4\n\tand\t248, r4, r4\n\tsub.s\t1, r0, r5\n\tshr\tr5, r4, r4\n\txor\tr4, r5, r4\n\tadd\tstack-[16], r3, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tand\tr3, r4, r3\n\tsstore\tr2, r3\n.BB0_953:\n\tadd\t1, r0, r2\n\tadd\tstack-[18], r0, r3\n\tshl.s\t1, r3, r3\n\tjump\t@.BB0_946\n.BB0_1043:\n\tadd\t@CPI0_91[0], r0, r1\n\tjump\t@.BB0_146\n.BB0_611:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1323\n\tadd\tr0, r0, r6\n.BB0_613:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_613\n.BB0_1323:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_615\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_615:\n\tjump\t@.BB0_158\n.BB0_844:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_85[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1334\n\tadd\tr0, r0, r7\n.BB0_846:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_846\n.BB0_1334:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_848\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_848:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_849\n.BB0_854:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub.s!\t@CPI0_81[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr3\n\tsub!\tr3, r2, r2\n\tjump.ne\t@.BB0_857\n\tadd\t10, r0, r1\n\tsload\tr1, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r4\n\tand\t127, r4, r2\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr3, r4, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r2, r3\n\tjump.lt\t@.BB0_863\n\tadd\tstack-[18], r0, r5\n\tadd\t31, r5, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_106[0], r3, r4\n\tadd\t@CPI0_106[0], r0, r3\n\tsub.s!\t32, r5, r5\n\tadd.ge\tr4, r0, r3\n\tst.1\t0, r1\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\t@CPI0_106[0], r2, r2\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_863\n.BB0_862:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_862\n.BB0_863:\n\tadd\tstack-[18], r0, r2\n\tsub.s!\t31, r2, r2\n\tjump.le\t@.BB0_872\n\tsub.s\t32, r0, r2\n\tand!\tstack-[18], r2, r4\n\tadd\t@CPI0_106[0], r0, r2\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_869\n\tadd\t@CPI0_106[0], r0, r2\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tadd\tr0, r0, r3\n\tadd\tstack-[16], r0, r7\n.BB0_867:\n\tadd\tr3, r7, r6\n\tptr.add\tr5, r6, r6\n\tld\tr6, r6\n\tsstore\tr2, r6\n\tadd\t1, r2, r2\n\tadd\t32, r3, r3\n\tsub!\tr3, r4, r6\n\tjump.lt\t@.BB0_867\n.BB0_869:\n\tsub.s!\tstack-[18], r4, r4\n\tjump.ge\t@.BB0_871\n\tadd\tstack-[18], r0, r4\n\tshl.s\t3, r4, r4\n\tand\t248, r4, r4\n\tsub.s\t1, r0, r5\n\tshr\tr5, r4, r4\n\txor\tr4, r5, r4\n\tadd\tstack-[16], r3, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tand\tr3, r4, r3\n\tsstore\tr2, r3\n.BB0_871:\n\tadd\t1, r0, r2\n\tadd\tstack-[18], r0, r3\n\tshl.s\t1, r3, r3\n\tjump\t@.BB0_864\n.BB0_734:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1331\n\tadd\tr0, r0, r6\n.BB0_736:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_736\n.BB0_1331:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_738\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_738:\n\tjump\t@.BB0_158\n.BB0_886:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1337\n\tadd\tr0, r0, r6\n.BB0_888:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_888\n.BB0_1337:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_890\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_890:\n\tjump\t@.BB0_158\n.BB0_1290:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tshl.s\t64, r5, r3\n\tor\tr1, r3, r1\n\tor\t@CPI0_83[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1358\n\tadd\tr0, r0, r7\n.BB0_1292:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1292\n.BB0_1358:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1294\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1294:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1295\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tjump\t@.BB0_1301\n.BB0_742:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tshl.s\t64, r4, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1330\n\tadd\tr0, r0, r7\n.BB0_744:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_744\n.BB0_1330:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_746\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_746:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_747\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tjump\t@.BB0_753\n.BB0_893:\n\tsub\tr2, r1, r3\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[18], r0, r2\n\tnear_call\tr0, @fun_safeTransfer, @DEFAULT_UNWIND\n\tadd\t@CPI0_80[0], r0, r1\n\tld.1\t64, r10\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_895\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_905\n.BB0_931:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1339\n\tadd\tr0, r0, r6\n.BB0_933:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_933\n.BB0_1339:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_935\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_935:\n\tjump\t@.BB0_158\n.BB0_717:\n\tand\t255, r1, r2\n\tsub.s!\t32, r2, r3\n\tjump.lt\t@.BB0_719\n\tadd\t@CPI0_143[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_99[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1046:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_85[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1354\n\tadd\tr0, r0, r7\n.BB0_1048:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1048\n.BB0_1354:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1050\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1050:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1051\n.BB0_1056:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tor\t128, r2, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r3\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r3\n\tsub.s!\t@CPI0_81[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[16], r0, r4\n\tshl.s\t160, r4, r4\n\tand\t@CPI0_87[0], r4, r4\n\tor\tr3, r4, r3\n\tadd\t11, r0, r4\n\tsload\tr4, r5\n\tand\t@CPI0_94[0], r5, r5\n\tor\tr3, r5, r3\n\tsstore\tr4, r3\n\tadd\t13, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_92[0], r4, r4\n\tadd\tstack-[17], r0, r5\n\tor\tr4, r5, r4\n\tsstore\tr3, r4\n\tadd\t12, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_92[0], r4, r4\n\tadd\tstack-[18], r0, r6\n\tor\tr4, r6, r4\n\tsstore\tr3, r4\n\tadd\t164, r2, r3\n\tadd\t@CPI0_95[0], r0, r4\n\tst.1\tr3, r4\n\tor\t260, r2, r3\n\tst.1\tr3, r6\n\tadd\t292, r2, r3\n\tst.1\tr3, r5\n\tadd\t@CPI0_96[0], r0, r3\n\tcontext.gas_left\tr4\n\tst.1\tr1, r3\n\tor\t132, r2, r3\n\tst.1\tr3, r0\n\tadd\t228, r2, r3\n\tadd\t64, r0, r5\n\tst.1\tr3, r5\n\tadd\t196, r2, r2\n\tadd\t96, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_97[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1058\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_1062\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_1064\n.BB0_1009:\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r3\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tadd\t192, r1, r3\n\tadd\tstack-[16], r0, r4\n\tst.1\tr3, r4\n\tadd\t160, r1, r3\n\tst.1\tr3, r2\n\tadd\t128, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[18], r0, r3\n\tst.1\tr2, r3\n\tadd\t192, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t@CPI0_112[0], r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_113[0], r1, r3\n\tjump.gt\t@.BB0_12\n\tadd\t224, r1, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_114[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tnear_call\tr0, @fun_domainSeparatorV4, @DEFAULT_UNWIND\n\tadd\t@CPI0_115[0], r0, r2\n\tld.1\t64, r3\n\tst.1\tr3, r2\n\tadd\t2, r3, r2\n\tst.1\tr2, r1\n\tadd\t34, r3, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t196, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tptr.add.s\t164, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tor\t@CPI0_116[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\tstack-[16], r0, r3\n\tsub.s!\t@CPI0_117[0], r3, r3\n\tjump.le\t@.BB0_1014\n\tadd\t@CPI0_122[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[16], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_849:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1333\n\tadd\tr0, r0, r6\n.BB0_851:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_851\n.BB0_1333:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_853\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_853:\n\tjump\t@.BB0_158\n.BB0_562:\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\tstack-[16], r2, r1\n\tjump.ge\t@.BB0_566\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[18]\n\tadd\t@CPI0_159[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[13], r0, r3\n\tadd\tstack-[16], r0, r4\n.BB0_565:\n\tnear_call\tr0, @abi_encode_address_uint256_uint256, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB0_261:\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1295:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1357\n\tadd\tr0, r0, r6\n.BB0_1297:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1297\n.BB0_1357:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1299\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1299:\n\tjump\t@.BB0_158\n.BB0_624:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1321\n\tadd\tr0, r0, r6\n.BB0_626:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_626\n.BB0_1321:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_628\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_628:\n\tjump\t@.BB0_158\n.BB0_747:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1329\n\tadd\tr0, r0, r6\n.BB0_749:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_749\n.BB0_1329:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_751\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_751:\n\tjump\t@.BB0_158\n.BB0_895:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd.lt\tr10, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tadd\tr10, r0, stack-[16]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1336\n\tadd\tr0, r0, r7\n.BB0_897:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_897\n.BB0_1336:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_899\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_899:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_900\n.BB0_905:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr10, r0, r5\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r3\n\tjump.gt\t@.BB0_12\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_2\n\tadd\t20, r0, r1\n\tsload\tr1, r1\n\tld.1\tr5, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_225\n\tsub\tr2, r1, r3\n\tadd\tstack-[17], r0, r1\n\tadd\tstack-[18], r0, r2\n\tnear_call\tr0, @fun_safeTransfer, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tadd\tstack-[14], r0, r2\n\tjump\t@.BB0_388\n.BB0_719:\n\tadd\tr4, r0, stack-[18]\n\tsub.s!\t@CPI0_142[0], r4, r3\n\tjump.gt\t@.BB0_12\n\tadd\tstack-[18], r0, r4\n\tadd\t64, r4, r3\n\tst.1\t64, r3\n\tadd\t32, r4, r3\n\tst.1\tr3, r1\n\tst.1\tr4, r2\n\tld.1\t64, r3\n\tjump\t@.BB0_721\n.BB0_1051:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1353\n\tadd\tr0, r0, r6\n.BB0_1053:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1053\n.BB0_1353:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1055\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1055:\n\tjump\t@.BB0_158\n.BB0_566:\n\tsub!\tstack-[18], r0, r1\n\tjump.ne\t@.BB0_570\n\tld.1\t64, r1\n\tadd\t@CPI0_158[0], r0, r2\n\tjump\t@.BB0_568\n.BB0_149:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_85[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1319\n\tadd\tr0, r0, r7\n.BB0_151:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_151\n.BB0_1319:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_153\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_153:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_154\n.BB0_159:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_162\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB0_168\n\tptr.add.s\t36, r2, r4\n\tld\tr4, r4\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_168\n\tadd\t@CPI0_183[0], r0, r2\n\tjump\t@.BB0_163\n.BB0_755:\n\tadd\tstack-[7], r0, r4\n\tmul\tstack-[9], r4, stack-[6], r1\n\tdiv\tstack-[6], r4, r1, r2\n\tsub.s!\tstack-[9], r1, r1\n\tjump.ne\t@.BB0_225\n\tsub!\tstack-[8], r0, r1\n\tjump.eq\t@.BB0_276\n\tadd\tstack-[15], r0, r4\n\tmul\tstack-[7], r4, r2, r1\n\tadd\tr2, r0, stack-[9]\n\tdiv.s\tstack-[7], r2, r1, r2\n\tsub!\tr1, r4, r1\n\tjump.ne\t@.BB0_225\n\tadd\tstack-[6], r0, r2\n\tsub!\tstack-[8], r2, r1\n\tjump.gt\t@.BB0_761\n\tadd\tstack-[9], r0, r2\n\tsub!\tstack-[8], r2, r1\n\tjump.gt\t@.BB0_761\n\tsub!\tstack-[17], r0, r1\n\tjump.ne\t@.BB0_764\n\tld.1\t64, r1\n\tadd\t@CPI0_138[0], r0, r2\n\tjump\t@.BB0_568\n.BB0_939:\n.BB0_857:\n\tadd\t@CPI0_132[0], r0, r2\n.BB0_163:\n\tst.1\tr1, r2\n.BB0_164:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_99[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_900:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1335\n\tadd\tr0, r0, r6\n.BB0_902:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_902\n.BB0_1335:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_904\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_904:\n\tjump\t@.BB0_158\n.BB0_713:\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tst.1\tr2, r3\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n.BB0_710:\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\tstack-[18], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, r3\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_12\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r3\n.BB0_721:\n\tsub.s!\t@CPI0_145[0], r3, r1\n\tjump.gt\t@.BB0_12\n\tadd\tr3, r0, stack-[15]\n\tadd\t32, r3, r1\n\tst.1\t64, r1\n\tst.1\tr3, r0\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[16]\n\tadd\t32, r3, r1\n\tadd\t224, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_146[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t224, r3, r2\n\tadd\tstack-[17], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[16], r0, r3\n\tsub\tr2, r3, r1\n\tadd\t64, r3, r3\n\tst.1\tr3, r1\n\tadd\tstack-[18], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[18]\n\tadd\t32779, r0, r1\n\tadd\t4, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t19, r4, r4\n\tmul\t32, r4, r4, r0\n\tadd\t@CPI0_8[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r4\n\tadd\t192, r4, r5\n\tadd\tstack-[18], r0, r2\n\tsub\tr2, r4, r3\n\tst.1\tr5, r3\n\tadd\t128, r4, r5\n\tcontext.this\tr3\n\tst.1\tr5, r3\n\tadd\t96, r4, r3\n\tst.1\tr3, r1\n\tadd\t160, r4, r1\n\tst.1\tr1, r0\n\tadd\tstack-[15], r0, r1\n\tnear_call\tr0, @abi_encode_array_uint256_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tjump\t@.BB0_530\n.BB0_570:\n\tsub!\tstack-[14], r0, r1\n\tjump.ne\t@.BB0_572\n\tld.1\t64, r1\n\tadd\t@CPI0_157[0], r0, r2\n.BB0_568:\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n.BB0_569:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_154:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1318\n\tadd\tr0, r0, r6\n.BB0_156:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_156\n.BB0_1318:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_158\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_158:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1058:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_1064:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_1352\n\tadd\tr0, r0, r6\n.BB0_1066:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1066\n.BB0_1352:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1068\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1068:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_634:\n\tmul\tstack-[16], r2, r1, r3\n\tadd\tstack-[11], r0, r4\n\tsub.s!\tstack-[15], r4, r3\n\tjump.eq\t@.BB0_636\n\tdiv.s\tstack-[16], r1, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_225\n.BB0_636:\n\tsub!\tstack-[15], r0, r3\n\tjump.eq\t@.BB0_276\n\tmul\tstack-[10], r2, r3, r4\n\tadd\tstack-[17], r0, r5\n\tsub.s!\tstack-[14], r5, r4\n\tjump.eq\t@.BB0_639\n\tdiv.s\tstack-[10], r3, r4, r5\n\tsub!\tr4, r2, r2\n\tjump.ne\t@.BB0_225\n.BB0_639:\n\tsub!\tstack-[14], r0, r2\n\tjump.eq\t@.BB0_276\n\tdiv.s\tstack-[15], r1, r4, r1\n\tdiv.s\tstack-[14], r3, r1, r2\n\tsub!\tr4, r1, r2\n\tadd.ge\tr1, r0, r4\n\tadd\tr4, r0, stack-[9]\n.BB0_633:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t1000, r1, r1\n\tjump.ge\t@.BB0_674\n\tld.1\t64, r1\n\tadd\t@CPI0_155[0], r0, r2\n\tjump\t@.BB0_385\n.BB0_572:\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[13], r0, r3\n\tsub.s\tstack-[16], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_563\n.BB0_954:\n\tsub!\tstack-[18], r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_956\n\tadd\tstack-[17], r0, r2\n\tadd\t32, r2, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n.BB0_956:\n\tadd\tstack-[18], r0, r5\n\tshl.s\t3, r5, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tand\tr2, r3, r3\n\tshl.s\t1, r5, r2\n.BB0_946:\n\tjump\t@.BB0_864\n.BB0_1062:\n\tand\t@CPI0_81[0], r1, r1\n\tadd\t14, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_92[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\t@CPI0_98[0], r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[18], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1069\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_1076\n.BB0_872:\n\tsub!\tstack-[18], r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_874\n\tadd\tstack-[17], r0, r2\n\tadd\t32, r2, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n.BB0_874:\n\tadd\tstack-[18], r0, r5\n\tshl.s\t3, r5, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tand\tr2, r3, r3\n\tshl.s\t1, r5, r2\n.BB0_864:\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_162:\n\tadd\t@CPI0_168[0], r0, r2\n\tjump\t@.BB0_163\n.BB0_168:\n\tadd\t19, r0, r4\n\tsload\tr4, r4\n\tadd\tr4, r0, stack-[11]\n\tsub!\tr3, r4, r4\n\tjump.ge\t@.BB0_170\n\tadd\t20, r0, r4\n\tsload\tr4, r5\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r4\n\tadd\tr5, r0, stack-[9]\n\tsub!\tr4, r5, r2\n\tjump.ge\t@.BB0_170\n\tadd\t13, r0, r2\n\tadd\tr2, r0, stack-[6]\n\tsload\tr2, r2\n\tand\t@CPI0_81[0], r2, stack-[10]\n\tadd\t12, r0, r2\n\tadd\tr2, r0, stack-[7]\n\tsload\tr2, r2\n\tand\t@CPI0_81[0], r2, r5\n\tadd\tr5, r0, stack-[8]\n\tsub!\tstack-[18], r5, r2\n\tjump.eq\t@.BB0_173\n\tadd\tstack-[10], r0, r5\n\tsub!\tstack-[18], r5, r2\n\tjump.eq\t@.BB0_173\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB0_176\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[18], r0, r2\n\tnear_call\tr0, @fun_safeTransfer, @DEFAULT_UNWIND\n\tadd\t36, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r4\n.BB0_176:\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB0_178\n\tadd\tstack-[10], r0, r1\n\tadd\tstack-[18], r0, r2\n\tadd\tr4, r0, r3\n\tnear_call\tr0, @fun_safeTransfer, @DEFAULT_UNWIND\n.BB0_178:\n\tsub!\tstack-[17], r0, r1\n\tjump.ne\t@.BB0_180\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t4, r1, stack-[5]\n.BB0_182:\n\tadd\t@CPI0_80[0], r0, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr2, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[5], r0, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_197\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_207\n.BB0_977:\n\tadd\tstack-[13], r0, r2\n\tsub.s\tstack-[14], r2, r1\n\tmul\tstack-[16], r1, r4, r2\n\tadd\tr4, r0, stack-[17]\n\tdiv.s\tstack-[16], r4, r2, r3\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_225\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\t28, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tdiv.s\t@CPI0_124[0], r2, r2, r3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_225\n\tsstore\tr1, r2\n\tjump\t@.BB0_981\n.BB0_170:\n\tadd\t@CPI0_84[0], r0, r2\n\tjump\t@.BB0_163\n.BB0_1069:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[15], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\tstack-[18], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1070\n.BB0_1076:\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tadd\tstack-[15], r0, r8\n\tjump.eq\t@.BB0_1350\n\tadd\tr0, r0, r5\n.BB0_1078:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_1078\n.BB0_1350:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_1080\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r5\n\tadd\tstack-[15], r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r6\n\tshl\tr6, r2, r6\n\tshr\tr6, r2, r6\n\tld\tr5, r5\n\tsub\t256, r2, r2\n\tshr\tr5, r2, r5\n\tshl\tr5, r2, r2\n\tor\tr2, r6, r2\n\tst.1\tr4, r2\n.BB0_1080:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, stack-[13]\n\tand\tstack-[13], r2, r2\n\tadd\tstack-[15], r2, r5\n\tsub!\tr5, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tadd\tr5, r0, stack-[14]\n\tsub.s!\t@CPI0_4[0], r5, r5\n\tjump.gt\t@.BB0_12\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_12\n\tadd\t@CPI0_100[0], r0, r4\n\tsub.s!\t32, r3, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_100[0], r3, r6\n\tsub!\tr6, r0, r7\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI0_100[0], r6, r6\n\tadd.ne\tr5, r0, r4\n\tadd\tstack-[14], r0, r5\n\tst.1\t64, r5\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[15], r0, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_4[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[15], r3, r6\n\tadd\tstack-[15], r4, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_100[0], r0, r7\n\tsub!\tr5, r6, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_100[0], r5, r5\n\tand\t@CPI0_100[0], r6, r9\n\tsub!\tr5, r9, r10\n\tadd.ge\tr0, r0, r7\n\txor\tr5, r9, r5\n\tsub.s!\t@CPI0_100[0], r5, r5\n\tadd.ne\tr8, r0, r7\n\tsub!\tr7, r0, r5\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr4, r4, r5\n\tsub.s!\t@CPI0_4[0], r4, r7\n\tjump.gt\t@.BB0_12\n\tadd\t63, r4, r7\n\tand\tstack-[13], r7, r7\n\tadd\tstack-[14], r7, r7\n\tsub.s!\t@CPI0_4[0], r7, r8\n\tjump.gt\t@.BB0_12\n\tst.1\t64, r7\n\tadd\tstack-[14], r0, r7\n\tst.1.inc\tr7, r4, r7\n\tadd\tr7, r0, stack-[15]\n\tadd\tr4, r5, r7\n\tsub!\tr7, r6, r6\n\tjump.gt\t@.BB0_2\n\tsub!\tr4, r0, r6\n\tadd\tstack-[15], r0, r9\n\tjump.eq\t@.BB0_1075\n\tadd\tr0, r0, r6\n.BB0_1090:\n\tadd\tr6, r9, r7\n\tadd\tr6, r5, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_1090\n.BB0_1075:\n\tadd\tr4, r9, r4\n\tst.1\tr4, r0\n\tadd\t@CPI0_98[0], r0, r4\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[12]\n\tst.1\tr5, r4\n\tcontext.gas_left\tr4\n\tadd\tstack-[17], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.eq\t@.BB0_1099\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tadd\tstack-[12], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.lt\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1093\n\tadd\t31, r3, r2\n\tand\t@CPI0_101[0], r2, r2\n.BB0_1099:\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tadd\tstack-[12], r0, r9\n\tjump.eq\t@.BB0_1348\n\tadd\tr0, r0, r6\n.BB0_1101:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1101\n.BB0_1348:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1103\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tstack-[12], r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1103:\n\tadd\tstack-[12], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r4\n\tjump.gt\t@.BB0_12\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_12\n\tadd\t@CPI0_100[0], r0, r2\n\tsub.s!\t32, r3, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI0_100[0], r3, r5\n\tsub!\tr5, r0, r6\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_100[0], r5, r5\n\tadd.ne\tr4, r0, r2\n\tst.1\t64, r1\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[12], r3, r6\n\tadd\tstack-[12], r2, r2\n\tadd\t31, r2, r4\n\tadd\t@CPI0_100[0], r0, r5\n\tsub!\tr4, r6, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr5, r0, r7\n\tand\t@CPI0_100[0], r4, r4\n\tand\t@CPI0_100[0], r6, r8\n\tsub!\tr4, r8, r9\n\tadd.ge\tr0, r0, r5\n\txor\tr4, r8, r4\n\tsub.s!\t@CPI0_100[0], r4, r4\n\tadd.ne\tr7, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr2, r4, r5\n\tsub.s!\t@CPI0_4[0], r4, r2\n\tjump.gt\t@.BB0_12\n\tadd\t63, r4, r2\n\tand\tstack-[13], r2, r2\n\tadd\tr2, r1, r2\n\tsub.s!\t@CPI0_4[0], r2, r7\n\tjump.gt\t@.BB0_12\n\tst.1\t64, r2\n\tst.1.inc\tr1, r4, r2\n\tadd\tr4, r5, r7\n\tsub!\tr7, r6, r6\n\tjump.gt\t@.BB0_2\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1098\n\tadd\tr0, r0, r6\n.BB0_1113:\n\tadd\tr6, r2, r7\n\tadd\tr6, r5, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_1113\n.BB0_1098:\n\tadd\tr4, r2, r4\n\tst.1\tr4, r0\n\tld.1\t64, r4\n\tadd\t32, r4, r6\n\tsub!\tstack-[16], r0, r5\n\tjump.ne\t@.BB0_1165\n\tadd\t@CPI0_107[0], r0, r5\n\tst.1\tr6, r5\n\tadd\t49, r4, r7\n\tadd\tstack-[14], r0, r5\n\tld.1\tr5, r5\n\tsub!\tr5, r0, r8\n\tadd\tstack-[15], r0, r11\n\tjump.eq\t@.BB0_1119\n\tadd\tr0, r0, r8\n.BB0_1118:\n\tadd\tr8, r7, r9\n\tadd\tr8, r11, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r5, r9\n\tjump.lt\t@.BB0_1118\n.BB0_1119:\n\tadd\tr5, r7, r7\n\tst.1\tr7, r0\n\tadd\tr5, r4, r7\n\tadd\t49, r7, r8\n\tadd\t@CPI0_103[0], r0, r9\n\tst.1\tr8, r9\n\tadd\t50, r7, r8\n\tld.1\tr1, r7\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_1122\n\tadd\tr0, r0, r9\n.BB0_1121:\n\tadd\tr9, r8, r10\n\tadd\tr9, r2, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_1121\n.BB0_1122:\n\tadd\tr7, r8, r8\n\tst.1\tr8, r0\n\tadd\tr7, r5, r5\n\tadd\t18, r5, r7\n\tst.1\tr4, r7\n\tadd\t81, r5, r5\n\tand\tstack-[13], r5, r7\n\tadd\tr7, r4, r5\n\tsub!\tr5, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r5, r8\n\tjump.gt\t@.BB0_12\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r5\n\tld.1\tr4, r8\n\tsub.s!\t@CPI0_4[0], r8, r7\n\tjump.gt\t@.BB0_12\n\tadd\t9, r0, r7\n\tsload\tr7, r10\n\tand!\t1, r10, r9\n\tshr.s\t1, r10, r11\n\tand\t127, r11, r9\n\tadd.ne\tr11, r0, r9\n\tsub.s!\t31, r9, r11\n\tadd\t0, r0, r11\n\tadd.gt\t1, r0, r11\n\txor\tr10, r11, r10\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r9, r10\n\tjump.lt\t@.BB0_1130\n\tadd\t31, r8, r10\n\tshr.s\t5, r10, r10\n\tadd\t@CPI0_104[0], r10, r11\n\tadd\t@CPI0_104[0], r0, r10\n\tsub.s!\t32, r8, r12\n\tadd.ge\tr11, r0, r10\n\tst.1\t0, r7\n\tadd\t31, r9, r9\n\tshr.s\t5, r9, r9\n\tadd\t@CPI0_104[0], r9, r9\n\tsub!\tr10, r9, r11\n\tjump.ge\t@.BB0_1130\n.BB0_1129:\n\tsstore\tr10, r0\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB0_1129\n.BB0_1130:\n\tsub.s!\t31, r8, r9\n\tjump.le\t@.BB0_1146\n\tst.1\t0, r7\n\tand!\tstack-[13], r8, r10\n\tadd\t32, r0, r9\n\tadd\t@CPI0_104[0], r0, r6\n\tjump.eq\t@.BB0_1143\n\tadd\t@CPI0_104[0], r0, r6\n\tadd\t32, r0, r9\n\tadd\tr0, r0, r11\n.BB0_1142:\n\tadd\tr9, r4, r12\n\tld.1\tr12, r12\n\tsstore\tr6, r12\n\tadd\t32, r9, r9\n\tadd\t1, r6, r6\n\tadd\t32, r11, r11\n\tsub!\tr11, r10, r12\n\tjump.lt\t@.BB0_1142\n.BB0_1143:\n\tsub!\tr10, r8, r10\n\tjump.ge\t@.BB0_1145\n\tshl.s\t3, r8, r10\n\tand\t248, r10, r10\n\tsub.s\t1, r0, r11\n\tshr\tr11, r10, r10\n\txor\tr10, r11, r10\n\tadd\tr9, r4, r4\n\tld.1\tr4, r4\n\tand\tr4, r10, r4\n\tsstore\tr6, r4\n.BB0_1145:\n\tshl.s\t1, r8, r4\n\tor\t1, r4, r4\n\tjump\t@.BB0_1131\n.BB0_467:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_163[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t2, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_164[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_128[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1014:\n\tld\tr1, r1\n\tadd\t96, r2, r3\n\tadd\tstack-[16], r0, r4\n\tst.1\tr3, r4\n\tadd\t64, r2, r3\n\tadd\tstack-[13], r0, r4\n\tst.1\tr3, r4\n\tadd\t32, r2, r3\n\tadd\tstack-[14], r0, r4\n\tst.1\tr3, r4\n\tst.1\tr2, r1\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_118[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_1343\n\tadd\tr0, r0, r6\n.BB0_1016:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_1016\n.BB0_1343:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_1018\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB0_1018:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1020\n\tld.1\t0, r1\n\tand!\t@CPI0_81[0], r1, r1\n\tjump.ne\t@.BB0_1027\n\tld.1\t64, r1\n\tadd\t@CPI0_121[0], r0, r2\n\tjump\t@.BB0_385\n.BB0_1070:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1351\n\tadd\tr0, r0, r6\n.BB0_1072:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1072\n.BB0_1351:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1074\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1074:\n\tjump\t@.BB0_158\n.BB0_1020:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1342\n\tadd\tr0, r0, r6\n.BB0_1022:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1022\n.BB0_1342:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1024\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1024:\n\tjump\t@.BB0_158\n.BB0_764:\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\tstack-[7], r2, r1\n\tjump.ge\t@.BB0_767\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[18]\n\tadd\t@CPI0_137[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[17], r0, r2\n\tadd\tstack-[15], r0, r3\n\tadd\tstack-[7], r0, r4\n\tjump\t@.BB0_565\n.BB0_674:\n\tsub!\tstack-[18], r0, r1\n\tjump.ne\t@.BB0_676\n\tld.1\t64, r1\n\tadd\t@CPI0_154[0], r0, r2\n\tjump\t@.BB0_568\n.BB0_173:\n\tadd\t@CPI0_182[0], r0, r2\n\tjump\t@.BB0_163\n.BB0_1027:\n\tsub.s!\tstack-[18], r1, r2\n\tjump.ne\t@.BB0_1028\n\tadd\tstack-[18], r0, r1\n\tadd\tstack-[17], r0, r2\n\tadd\tstack-[15], r0, r3\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_676:\n\tadd\tstack-[13], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[9], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_225\n\tadd\tstack-[13], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[9], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_135[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[18], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r1\n\tadd\tstack-[17], r0, r2\n\tadd\tstack-[15], r0, r3\n\tadd\tstack-[14], r0, r4\n\tnear_call\tr0, @fun_update, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tcontext.caller\tr5\n\tadd\t@CPI0_153[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tjump\t@.BB0_681\n.BB0_427:\n\tadd\t@CPI0_165[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tjump\t@.BB0_5\n.BB0_180:\n\tadd\t@CPI0_125[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[18], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_126[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[15], r0, r4\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r5\n\tadd\t@CPI0_169[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r2\n\tcontext.caller\tr1\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r1\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\t36, r5, r3\n\tst.1\tr3, r2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\t100, r5, r3\n\tst.1\tr3, r4\n\tadd\t68, r5, r3\n\tst.1\tr3, r2\n\tadd\t132, r5, r2\n\tadd\tstack-[17], r0, r4\n\tst.1\tr2, r4\n\tptr.add.s\tstack-[16], r1, r3\n\tand\t31, r4, r2\n\tadd\tr5, r0, stack-[16]\n\tadd\t164, r5, r1\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_1317\n\tadd\tr0, r0, r5\n.BB0_186:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_186\n.BB0_1317:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_188\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_188:\n\tadd\tstack-[17], r1, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[18], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_195\n\tadd\tstack-[17], r0, r2\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t@CPI0_170[0], r0, r3\n\tsub.s!\t@CPI0_170[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI0_171[0], r1, r1\n\tadd\tstack-[18], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_190\n.BB0_195:\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_12\n\tadd\tstack-[16], r0, r1\n\tst.1\t64, r1\n\tjump\t@.BB0_182\n.BB0_994:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1341\n\tadd\tr0, r0, r6\n.BB0_996:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_996\n.BB0_1341:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_998\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_998:\n\tjump\t@.BB0_158\n.BB0_1028:\n\tld.1\t64, r2\n\tadd\t36, r2, r3\n\tadd\tstack-[18], r0, r4\n\tst.1\tr3, r4\n\tadd\t@CPI0_119[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_120[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_767:\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r3\n\tsub\tstack-[15], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[14], r0, r2\n\tsload\tr2, r1\n\tsub\tr1, r3, r1\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_135[0], r0, r4\n\tadd\tstack-[17], r0, r5\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r1\n\tdiv.s\tstack-[8], r1, r3, r1\n\tadd\tstack-[9], r0, r1\n\tdiv.s\tstack-[8], r1, stack-[14], r1\n\tadd\tstack-[13], r0, r1\n\tadd\tstack-[18], r0, r2\n\tadd\tr3, r0, stack-[9]\n\tnear_call\tr0, @fun_safeTransfer, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r1\n\tadd\tstack-[18], r0, r2\n\tadd\tstack-[14], r0, r3\n\tnear_call\tr0, @fun_safeTransfer, @DEFAULT_UNWIND\n\tadd\t@CPI0_80[0], r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[15]\n\tadd\t4, r2, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[13], r0, r3\n\tadd\tr3, r0, r2\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_771\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_781\n.BB0_197:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[16], r0, r4\n\tadd\tr4, r0, stack-[16]\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1315\n\tadd\tr0, r0, r7\n.BB0_199:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_199\n.BB0_1315:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_201\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[16], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_201:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_202\n.BB0_207:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[16], r1, r4\n\tsub!\tr4, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[17]\n\tsub.s!\t@CPI0_4[0], r4, r4\n\tjump.gt\t@.BB0_12\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_12\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.ge\t@.BB0_210\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_202:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1314\n\tadd\tr0, r0, r6\n.BB0_204:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_204\n.BB0_1314:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_206\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_206:\n\tjump\t@.BB0_158\n.BB0_210:\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\t@CPI0_80[0], r0, r2\n\tadd\tstack-[17], r0, r4\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[4], r0, r4\n\tst.1\tr2, r4\n\tcontext.gas_left\tr2\n\tadd\tstack-[10], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_222\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1313\n\tadd\tr0, r0, r7\n.BB0_213:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_213\n.BB0_1313:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_215\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_215:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_217\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB0_222:\n\tadd\tstack-[17], r1, r2\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_12\n\tadd\tstack-[16], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tptr.add.s\t4, r4, r2\n\tld\tr2, r2\n\tsub!\tstack-[11], r2, r5\n\tjump.lt\t@.BB0_225\n\tsub\tstack-[11], r2, r2\n\tsub\tstack-[8], r2, r6\n\tsub.s!\tstack-[8], r6, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\tsub!\tr5, r0, r5\n\tadd.ne\tr0, r0, r6\n\tadd\tr6, r0, stack-[10]\n\tptr.add.s\t36, r4, r4\n\tld\tr4, r4\n\tsub!\tstack-[9], r4, r5\n\tjump.lt\t@.BB0_225\n\tsub\tstack-[9], r4, r5\n\tadd\tr5, r0, stack-[5]\n\tsub\tstack-[17], r5, r5\n\tsub.s!\tstack-[17], r5, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tsub!\tr4, r0, r4\n\tadd.ne\tr0, r0, r5\n\tadd\tr5, r0, stack-[3]\n\tsub!\tstack-[8], r2, r4\n\tjump.gt\t@.BB0_230\n\tadd\tstack-[5], r0, r5\n\tsub!\tstack-[17], r5, r4\n\tjump.gt\t@.BB0_230\n\tadd\t@CPI0_181[0], r0, r1\n\tadd\tstack-[16], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_99[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_771:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tadd\tstack-[15], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_83[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1328\n\tadd\tr0, r0, r7\n.BB0_773:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_773\n.BB0_1328:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_775\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[15], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_775:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_776\n.BB0_781:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[15], r1, r3\n\tsub!\tr3, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t@CPI0_4[0], r3, r3\n\tjump.gt\t@.BB0_12\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_12\n\tadd\tstack-[13], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r4, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\t@CPI0_80[0], r0, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr3, r2\n\tadd\t4, r3, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tcontext.gas_left\tr2\n\tadd\tstack-[16], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_785\n\tadd\tstack-[13], r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_12\n\tst.1\t64, r1\n\tjump\t@.BB0_799\n.BB0_190:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1316\n\tadd\tr0, r0, r6\n.BB0_192:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_192\n.BB0_1316:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_194\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_194:\n\tjump\t@.BB0_158\n.BB0_776:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1327\n\tadd\tr0, r0, r6\n.BB0_778:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_778\n.BB0_1327:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_780\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_780:\n\tjump\t@.BB0_158\n.BB0_217:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1312\n\tadd\tr0, r0, r6\n.BB0_219:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_219\n.BB0_1312:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_221\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_221:\n\tjump\t@.BB0_158\n.BB0_1093:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1349\n\tadd\tr0, r0, r6\n.BB0_1095:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1095\n.BB0_1349:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1097\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1097:\n\tjump\t@.BB0_158\n.BB0_785:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[13], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1326\n\tadd\tr0, r0, r7\n.BB0_787:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_787\n.BB0_1326:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_789\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_789:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_790\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[13], r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_12\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n.BB0_799:\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[11], r0, r3\n\tadd\tstack-[12], r0, r4\n\tnear_call\tr0, @fun_update, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tcontext.caller\tr5\n\tadd\t@CPI0_136[0], r0, r4\n\tadd\tstack-[18], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tjump\t@.BB0_991\n.BB0_790:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1325\n\tadd\tr0, r0, r6\n.BB0_792:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_792\n.BB0_1325:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_794\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_794:\n\tjump\t@.BB0_158\n.BB0_230:\n\tadd\tstack-[6], r0, r4\n\tsload\tr4, r4\n\tand\t@CPI0_81[0], r4, stack-[1]\n\tadd\tstack-[7], r0, r4\n\tsload\tr4, r4\n\tand\t@CPI0_81[0], r4, stack-[2]\n\tsub!\tstack-[8], r2, r2\n\tjump.gt\t@.BB0_231\n.BB0_232:\n\tadd\tstack-[5], r0, r2\n\tsub!\tstack-[17], r2, r1\n\tjump.gt\t@.BB0_281\n.BB0_283:\n\tld.1\t64, r2\n\tadd\t@CPI0_80[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[16]\n\tadd\t4, r2, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_329\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_339\n.BB0_231:\n\tadd\tstack-[14], r0, r2\n\tsload\tr2, r2\n\tadd\t11, r0, r4\n\tsload\tr4, r4\n\tadd\t@CPI0_86[0], r0, r5\n\tadd\tstack-[16], r0, r7\n\tst.1\tr7, r5\n\tadd\tstack-[4], r0, r5\n\tand\t@CPI0_81[0], r5, r5\n\tadd\t4, r7, r6\n\tst.1\tr6, r5\n\tadd\t36, r7, r5\n\tand!\t@CPI0_87[0], r4, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1\tr5, r4\n\tcontext.gas_left\tr4\n\tand\t@CPI0_81[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.eq\t@.BB0_244\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr1, r0, r4\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_120[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1311\n\tadd\tr0, r0, r7\n.BB0_235:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_235\n.BB0_1311:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_237\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[16], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_237:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_239\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB0_244:\n\tadd\tstack-[16], r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_12\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r4\n\tmul\tstack-[10], r4, r2, r5\n\tdiv.s\tstack-[10], r2, r5, r6\n\tsub!\tr5, r4, r4\n\tjump.ne\t@.BB0_225\n\tsub.s!\t10000, r2, r4\n\tjump.lt\t@.BB0_232\n\tdiv.s\t10000, r2, r6, r2\n\tadd\tstack-[7], r0, r2\n\tsload\tr2, r4\n\tadd\t14, r0, r2\n\tsload\tr2, r5\n\tadd\t68, r1, r2\n\tadd\tr6, r0, stack-[7]\n\tst.1\tr2, r6\n\tadd\t32, r1, r2\n\tadd\t@CPI0_172[0], r0, r6\n\tst.1\tr2, r6\n\tand\t@CPI0_81[0], r5, r5\n\tadd\t36, r1, r6\n\tst.1\tr6, r5\n\tadd\t68, r0, r5\n\tst.1\tr1, r5\n\tand\t@CPI0_81[0], r4, stack-[16]\n\tsub.s!\t@CPI0_173[0], r1, r4\n\tjump.gt\t@.BB0_12\n\tadd\t128, r1, r4\n\tadd\tr4, r0, stack-[8]\n\tst.1\t64, r4\n\tld.1\tr1, r4\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.ne\t@.BB0_250\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r3, r1\n\tjump.gt\t@.BB0_12\n\tjump\t@.BB0_264\n.BB0_281:\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\t11, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r5\n\tadd\t@CPI0_86[0], r0, r3\n\tst.1\tr5, r3\n\tadd\tstack-[4], r0, r3\n\tand\t@CPI0_81[0], r3, r3\n\tadd\t4, r5, r4\n\tst.1\tr4, r3\n\tand!\t@CPI0_87[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr5, r0, stack-[17]\n\tadd\t36, r5, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_81[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_285\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_295\n.BB0_329:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[16], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1305\n\tadd\tr0, r0, r7\n.BB0_331:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_331\n.BB0_1305:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_333\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[16], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_333:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_334\n.BB0_339:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[16], r1, r4\n\tsub!\tr4, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[17]\n\tsub.s!\t@CPI0_4[0], r4, r4\n\tjump.gt\t@.BB0_12\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_12\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tadd\t@CPI0_80[0], r0, r2\n\tadd\tstack-[17], r0, r4\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[4], r0, r4\n\tst.1\tr2, r4\n\tcontext.gas_left\tr2\n\tadd\tstack-[1], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_354\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_83[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1303\n\tadd\tr0, r0, r7\n.BB0_345:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_345\n.BB0_1303:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_347\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_347:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_349\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB0_354:\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_12\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tadd\t11, r0, r3\n\tsload\tr3, r3\n\tand!\t@CPI0_87[0], r3, r3\n\tjump.ne\t@.BB0_359\n\tsub!\tstack-[16], r0, r3\n\tadd\tr0, r0, r5\n\tjump.eq\t@.BB0_372\n\tmul\tstack-[16], r2, r5, r3\n\tdiv.s\tstack-[16], r5, r3, r4\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_225\n.BB0_372:\n\tadd\tstack-[9], r0, r7\n\tmul\tstack-[11], r7, r3, r4\n\tdiv.s\tstack-[11], r3, r4, r6\n\tsub!\tr4, r7, r4\n\tjump.ne\t@.BB0_225\n.BB0_383:\n\tsub!\tr5, r3, r3\n\tjump.ge\t@.BB0_386\n\tadd\t@CPI0_180[0], r0, r2\n\tjump\t@.BB0_385\n.BB0_285:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[17], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_120[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1308\n\tadd\tr0, r0, r7\n.BB0_287:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_287\n.BB0_1308:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_289\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_289:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_290\n.BB0_295:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[17], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r1, r4\n\tjump.gt\t@.BB0_12\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r4\n\tmul\tstack-[3], r4, r2, r5\n\tdiv.s\tstack-[3], r2, r5, r6\n\tsub!\tr5, r4, r4\n\tjump.ne\t@.BB0_225\n\tsub.s!\t10000, r2, r4\n\tjump.lt\t@.BB0_283\n\tdiv.s\t10000, r2, r6, r2\n\tadd\tstack-[6], r0, r2\n\tsload\tr2, r4\n\tadd\t14, r0, r2\n\tsload\tr2, r5\n\tadd\t68, r1, r2\n\tadd\tr6, r0, stack-[14]\n\tst.1\tr2, r6\n\tadd\t32, r1, r2\n\tadd\t@CPI0_172[0], r0, r6\n\tst.1\tr2, r6\n\tand\t@CPI0_81[0], r5, r5\n\tadd\t36, r1, r6\n\tst.1\tr6, r5\n\tadd\t68, r0, r5\n\tst.1\tr1, r5\n\tand\t@CPI0_81[0], r4, stack-[16]\n\tsub.s!\t@CPI0_173[0], r1, r4\n\tjump.gt\t@.BB0_12\n\tadd\t128, r1, r4\n\tadd\tr4, r0, stack-[15]\n\tst.1\t64, r4\n\tld.1\tr1, r4\n\tcontext.gas_left\tr1\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.ne\t@.BB0_302\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI0_4[0], r3, r1\n\tjump.gt\t@.BB0_12\n\tjump\t@.BB0_313\n.BB0_239:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1310\n\tadd\tr0, r0, r6\n.BB0_241:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_241\n.BB0_1310:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_243\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_243:\n\tjump\t@.BB0_158\n.BB0_1165:\n\tadd\t@CPI0_102[0], r0, r5\n\tst.1\tr6, r5\n\tadd\t47, r4, r7\n\tadd\tstack-[14], r0, r5\n\tld.1\tr5, r5\n\tsub!\tr5, r0, r8\n\tadd\tstack-[15], r0, r11\n\tjump.eq\t@.BB0_1168\n\tadd\tr0, r0, r8\n.BB0_1167:\n\tadd\tr8, r7, r9\n\tadd\tr8, r11, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r5, r9\n\tjump.lt\t@.BB0_1167\n.BB0_1168:\n\tadd\tr5, r7, r7\n\tst.1\tr7, r0\n\tadd\tr5, r4, r7\n\tadd\t47, r7, r8\n\tadd\t@CPI0_103[0], r0, r9\n\tst.1\tr8, r9\n\tadd\t48, r7, r8\n\tld.1\tr1, r7\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_1171\n\tadd\tr0, r0, r9\n.BB0_1170:\n\tadd\tr9, r8, r10\n\tadd\tr9, r2, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_1170\n.BB0_1171:\n\tadd\tr7, r8, r8\n\tst.1\tr8, r0\n\tadd\tr7, r5, r5\n\tadd\t16, r5, r7\n\tst.1\tr4, r7\n\tadd\t79, r5, r5\n\tand\tstack-[13], r5, r7\n\tadd\tr7, r4, r5\n\tsub!\tr5, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r5, r8\n\tjump.gt\t@.BB0_12\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r5\n\tld.1\tr4, r8\n\tsub.s!\t@CPI0_4[0], r8, r7\n\tjump.gt\t@.BB0_12\n\tadd\t9, r0, r7\n\tsload\tr7, r10\n\tand!\t1, r10, r9\n\tshr.s\t1, r10, r11\n\tand\t127, r11, r9\n\tadd.ne\tr11, r0, r9\n\tsub.s!\t31, r9, r11\n\tadd\t0, r0, r11\n\tadd.gt\t1, r0, r11\n\txor\tr10, r11, r10\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r9, r10\n\tjump.lt\t@.BB0_1179\n\tadd\t31, r8, r10\n\tshr.s\t5, r10, r10\n\tadd\t@CPI0_104[0], r10, r11\n\tadd\t@CPI0_104[0], r0, r10\n\tsub.s!\t32, r8, r12\n\tadd.ge\tr11, r0, r10\n\tst.1\t0, r7\n\tadd\t31, r9, r9\n\tshr.s\t5, r9, r9\n\tadd\t@CPI0_104[0], r9, r9\n\tsub!\tr10, r9, r11\n\tjump.ge\t@.BB0_1179\n.BB0_1178:\n\tsstore\tr10, r0\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB0_1178\n.BB0_1179:\n\tsub.s!\t31, r8, r9\n\tjump.le\t@.BB0_1195\n\tst.1\t0, r7\n\tand!\tstack-[13], r8, r10\n\tadd\t32, r0, r9\n\tadd\t@CPI0_104[0], r0, r6\n\tjump.eq\t@.BB0_1192\n\tadd\t@CPI0_104[0], r0, r6\n\tadd\t32, r0, r9\n\tadd\tr0, r0, r11\n.BB0_1191:\n\tadd\tr9, r4, r12\n\tld.1\tr12, r12\n\tsstore\tr6, r12\n\tadd\t32, r9, r9\n\tadd\t1, r6, r6\n\tadd\t32, r11, r11\n\tsub!\tr11, r10, r12\n\tjump.lt\t@.BB0_1191\n.BB0_1192:\n\tsub!\tr10, r8, r10\n\tjump.ge\t@.BB0_1194\n\tshl.s\t3, r8, r10\n\tand\t248, r10, r10\n\tsub.s\t1, r0, r11\n\tshr\tr11, r10, r10\n\txor\tr10, r11, r10\n\tadd\tr9, r4, r4\n\tld.1\tr4, r4\n\tand\tr4, r10, r4\n\tsstore\tr6, r4\n.BB0_1194:\n\tshl.s\t1, r8, r4\n\tor\t1, r4, r4\n\tjump\t@.BB0_1180\n.BB0_334:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1304\n\tadd\tr0, r0, r6\n.BB0_336:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_336\n.BB0_1304:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_338\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_338:\n\tjump\t@.BB0_158\n.BB0_290:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1307\n\tadd\tr0, r0, r6\n.BB0_292:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_292\n.BB0_1307:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_294\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_294:\n\tjump\t@.BB0_158\n.BB0_661:\n\tld.1\t64, r1\n\tadd\t@CPI0_150[0], r0, r2\n\tjump\t@.BB0_385\n.BB0_349:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1302\n\tadd\tr0, r0, r6\n.BB0_351:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_351\n.BB0_1302:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_353\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_353:\n\tjump\t@.BB0_158\n.BB0_670:\n\tadd\tr2, r1, r3\n\tmul\tr3, r2, r1, r4\n\tdiv\tr1, r2, r2, r4\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_225\n\tsub.s!\t@CPI0_151[0], r1, r1\n\tjump.gt\t@.BB0_633\n\tjump\t@.BB0_672\n.BB0_250:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr3, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\t96, r0, stack-[8]\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand!\t@CPI0_0[0], r1, r3\n\tjump.eq\t@.BB0_252\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n.BB0_264:\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r1\n\tadd\tstack-[8], r1, r1\n\tsub.s!\tstack-[8], r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_4[0], r1, r5\n\tjump.gt\t@.BB0_12\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r1\n\tand\t31, r3, r1\n\tadd\tstack-[8], r0, r4\n\tst.1.inc\tr4, r3, r4\n\tadd\tr4, r0, stack-[15]\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_1309\n\tadd\tr0, r0, r5\n.BB0_268:\n\tshl.s\t5, r5, r6\n\tadd\tstack-[15], r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_268\n.BB0_1309:\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_252\n\tshl.s\t5, r3, r3\n\tptr.add\tr4, r3, r4\n\tadd\tstack-[15], r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r5\n\tshl\tr5, r1, r5\n\tshr\tr5, r1, r5\n\tld\tr4, r4\n\tsub\t256, r1, r1\n\tshr\tr4, r1, r4\n\tshl\tr4, r1, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_252:\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_253\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_259\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[15], r0, r4\n\tjump\t@.BB0_261\n.BB0_359:\n\tadd\tstack-[16], r0, r4\n\tmul\t@CPI0_124[0], r4, r6, r3\n\tsub!\tr4, r0, r3\n\tjump.eq\t@.BB0_361\n\tdiv.s\tstack-[16], r6, r3, r4\n\tsub.s!\t@CPI0_124[0], r3, r3\n\tjump.ne\t@.BB0_225\n.BB0_361:\n\tadd\t17, r0, r3\n\tsload\tr3, r4\n\tsub!\tr4, r0, r3\n\tjump.eq\t@.BB0_276\n\tmul\t@CPI0_124[0], r2, r5, r3\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_364\n\tdiv\tr5, r2, r3, r7\n\tsub.s!\t@CPI0_124[0], r3, r3\n\tjump.ne\t@.BB0_225\n.BB0_364:\n\tadd\t18, r0, r3\n\tsload\tr3, r3\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB0_276\n\tdiv\tr5, r3, r7, r8\n\tsub!\tr4, r6, r8\n\tadd\tr0, r0, r9\n\tadd\tr0, r0, r8\n\tjump.gt\t@.BB0_368\n\tdiv\tr6, r4, r6, r8\n\tmul\tr7, r6, r8, r9\n\tdiv\tr8, r6, r9, r10\n\tsub!\tr9, r7, r9\n\tjump.ne\t@.BB0_225\n\tdiv.s\t@CPI0_124[0], r8, r8, r9\n\tmul\tr6, r6, r9, r10\n\tdiv\tr9, r6, r10, r11\n\tsub!\tr10, r6, r6\n\tjump.ne\t@.BB0_225\n.BB0_368:\n\tmul\tr7, r7, r10, r6\n\tdiv.s\t@CPI0_124[0], r9, r6, r9\n\tsub!\tr3, r5, r5\n\tjump.gt\t@.BB0_370\n\tdiv\tr10, r7, r5, r9\n\tsub!\tr5, r7, r5\n\tjump.ne\t@.BB0_225\n.BB0_370:\n\tdiv.s\t@CPI0_124[0], r10, r5, r7\n\tadd\tr6, r5, r6\n\tmul\tr6, r8, r5, r7\n\tsub!\tr8, r0, r7\n\tjump.eq\t@.BB0_373\n\tdiv\tr5, r8, r7, r8\n\tsub!\tr7, r6, r6\n\tjump.ne\t@.BB0_225\n.BB0_373:\n\tadd\tstack-[11], r0, r7\n\tmul\t@CPI0_124[0], r7, r9, r6\n\tdiv\tr9, r7, r6, r7\n\tdiv.s\t@CPI0_124[0], r5, r5, r7\n\tsub.s!\t@CPI0_124[0], r6, r6\n\tjump.ne\t@.BB0_225\n\tadd\tstack-[9], r0, r8\n\tmul\t@CPI0_124[0], r8, r6, r7\n\tdiv\tr6, r8, r7, r8\n\tsub.s!\t@CPI0_124[0], r7, r7\n\tjump.ne\t@.BB0_225\n\tdiv\tr6, r3, r7, r8\n\tsub!\tr4, r9, r8\n\tadd\tr0, r0, r10\n\tadd\tr0, r0, r8\n\tjump.le\t@.BB0_376\n.BB0_378:\n\tmul\tr7, r7, r9, r4\n\tdiv.s\t@CPI0_124[0], r10, r4, r10\n\tsub!\tr3, r6, r3\n\tjump.gt\t@.BB0_380\n\tdiv\tr9, r7, r3, r6\n\tsub!\tr3, r7, r3\n\tjump.ne\t@.BB0_225\n.BB0_380:\n\tdiv.s\t@CPI0_124[0], r9, r3, r6\n\tadd\tr4, r3, r4\n\tmul\tr4, r8, r3, r6\n\tsub!\tr8, r0, r6\n\tjump.eq\t@.BB0_382\n\tdiv\tr3, r8, r6, r7\n\tsub!\tr6, r4, r4\n\tjump.ne\t@.BB0_225\n.BB0_382:\n\tdiv.s\t@CPI0_124[0], r3, r3, r4\n\tjump\t@.BB0_383\n.BB0_1146:\n\tsub!\tr8, r0, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_1148\n\tld.1\tr6, r4\n.BB0_1148:\n\tshl.s\t3, r8, r6\n\tsub.s\t1, r0, r9\n\tshr\tr9, r6, r6\n\txor\tr6, r9, r6\n\tand\tr4, r6, r4\n\tshl.s\t1, r8, r6\n\tor\tr4, r6, r4\n.BB0_1131:\n\tsstore\tr7, r4\n\tadd\t32, r5, r4\n\tadd\t@CPI0_108[0], r0, r6\n\tst.1\tr4, r6\n\tadd\t39, r5, r7\n\tadd\tstack-[14], r0, r6\n\tld.1\tr6, r6\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_1134\n\tadd\tr0, r0, r8\n.BB0_1133:\n\tadd\tr8, r7, r9\n\tadd\tstack-[15], r8, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r6, r9\n\tjump.lt\t@.BB0_1133\n.BB0_1134:\n\tadd\tr6, r7, r7\n\tst.1\tr7, r0\n\tadd\tr6, r5, r7\n\tadd\t39, r7, r8\n\tadd\t@CPI0_103[0], r0, r9\n\tst.1\tr8, r9\n\tadd\t40, r7, r7\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r8\n\tjump.eq\t@.BB0_1137\n\tadd\tr0, r0, r8\n.BB0_1136:\n\tadd\tr8, r7, r9\n\tadd\tr8, r2, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r1, r9\n\tjump.lt\t@.BB0_1136\n.BB0_1137:\n\tadd\tr1, r7, r2\n\tst.1\tr2, r0\n\tadd\tr6, r1, r1\n\tadd\t8, r1, r2\n\tst.1\tr5, r2\n\tadd\t71, r1, r1\n\tand\tstack-[13], r1, r1\n\tadd\tr1, r5, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_12\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_12\n\tadd\tstack-[16], r0, r1\n\tst.1\t64, r1\n\tld.1\tr5, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_12\n\tadd\t10, r0, r6\n\tsload\tr6, r7\n\tand!\t1, r7, r2\n\tshr.s\t1, r7, r8\n\tand\t127, r8, r2\n\tadd.ne\tr8, r0, r2\n\tsub.s!\t31, r2, r8\n\tadd\t0, r0, r8\n\tadd.gt\t1, r0, r8\n\txor\tr7, r8, r7\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r2, r7\n\tjump.lt\t@.BB0_1154\n\tadd\t31, r1, r7\n\tshr.s\t5, r7, r7\n\tadd\t@CPI0_106[0], r7, r8\n\tadd\t@CPI0_106[0], r0, r7\n\tsub.s!\t32, r1, r9\n\tadd.ge\tr8, r0, r7\n\tst.1\t0, r6\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\t@CPI0_106[0], r2, r2\n\tsub!\tr7, r2, r8\n\tjump.ge\t@.BB0_1154\n.BB0_1153:\n\tsstore\tr7, r0\n\tadd\t1, r7, r7\n\tsub!\tr7, r2, r8\n\tjump.lt\t@.BB0_1153\n.BB0_1154:\n\tsub.s!\t32, r1, r2\n\tshl.s\t1, r1, r2\n\tjump.lt\t@.BB0_1162\n\tst.1\t0, r6\n\tand!\tstack-[13], r1, r7\n\tadd\t32, r0, r6\n\tadd\t@CPI0_106[0], r0, r4\n\tjump.eq\t@.BB0_1159\n\tadd\t@CPI0_106[0], r0, r4\n\tadd\t32, r0, r6\n\tadd\tr0, r0, r8\n.BB0_1157:\n\tadd\tr6, r5, r9\n\tld.1\tr9, r9\n\tsstore\tr4, r9\n\tadd\t32, r6, r6\n\tadd\t1, r4, r4\n\tadd\t32, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_1157\n.BB0_1159:\n\tsub!\tr7, r1, r7\n\tjump.ge\t@.BB0_1161\n\tshl.s\t3, r1, r1\n\tand\t248, r1, r1\n\tsub.s\t1, r0, r7\n\tshr\tr7, r1, r1\n\txor\tr1, r7, r1\n\tadd\tr6, r5, r5\n\tld.1\tr5, r5\n\tand\tr5, r1, r1\n\tsstore\tr4, r1\n.BB0_1161:\n\tor\t1, r2, r1\n\tjump\t@.BB0_1114\n.BB0_1195:\n\tsub!\tr8, r0, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_1197\n\tld.1\tr6, r4\n.BB0_1197:\n\tshl.s\t3, r8, r6\n\tsub.s\t1, r0, r9\n\tshr\tr9, r6, r6\n\txor\tr6, r9, r6\n\tand\tr4, r6, r4\n\tshl.s\t1, r8, r6\n\tor\tr4, r6, r4\n.BB0_1180:\n\tsstore\tr7, r4\n\tadd\t32, r5, r4\n\tadd\t@CPI0_105[0], r0, r6\n\tst.1\tr4, r6\n\tadd\t39, r5, r7\n\tadd\tstack-[14], r0, r6\n\tld.1\tr6, r6\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_1183\n\tadd\tr0, r0, r8\n.BB0_1182:\n\tadd\tr8, r7, r9\n\tadd\tstack-[15], r8, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r6, r9\n\tjump.lt\t@.BB0_1182\n.BB0_1183:\n\tadd\tr6, r7, r7\n\tst.1\tr7, r0\n\tadd\tr6, r5, r7\n\tadd\t39, r7, r8\n\tadd\t@CPI0_103[0], r0, r9\n\tst.1\tr8, r9\n\tadd\t40, r7, r7\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r8\n\tjump.eq\t@.BB0_1186\n\tadd\tr0, r0, r8\n.BB0_1185:\n\tadd\tr8, r7, r9\n\tadd\tr8, r2, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r1, r9\n\tjump.lt\t@.BB0_1185\n.BB0_1186:\n\tadd\tr1, r7, r2\n\tst.1\tr2, r0\n\tadd\tr6, r1, r1\n\tadd\t8, r1, r2\n\tst.1\tr5, r2\n\tadd\t71, r1, r1\n\tand\tstack-[13], r1, r1\n\tadd\tr1, r5, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_12\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_12\n\tadd\tstack-[16], r0, r1\n\tst.1\t64, r1\n\tld.1\tr5, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_12\n\tadd\t10, r0, r6\n\tsload\tr6, r7\n\tand!\t1, r7, r2\n\tshr.s\t1, r7, r8\n\tand\t127, r8, r2\n\tadd.ne\tr8, r0, r2\n\tsub.s!\t31, r2, r8\n\tadd\t0, r0, r8\n\tadd.gt\t1, r0, r8\n\txor\tr7, r8, r7\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r2, r7\n\tjump.lt\t@.BB0_1203\n\tadd\t31, r1, r7\n\tshr.s\t5, r7, r7\n\tadd\t@CPI0_106[0], r7, r8\n\tadd\t@CPI0_106[0], r0, r7\n\tsub.s!\t32, r1, r9\n\tadd.ge\tr8, r0, r7\n\tst.1\t0, r6\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\t@CPI0_106[0], r2, r2\n\tsub!\tr7, r2, r8\n\tjump.ge\t@.BB0_1203\n.BB0_1202:\n\tsstore\tr7, r0\n\tadd\t1, r7, r7\n\tsub!\tr7, r2, r8\n\tjump.lt\t@.BB0_1202\n.BB0_1203:\n\tsub.s!\t32, r1, r2\n\tshl.s\t1, r1, r2\n\tjump.lt\t@.BB0_1211\n\tst.1\t0, r6\n\tand!\tstack-[13], r1, r7\n\tadd\t32, r0, r6\n\tadd\t@CPI0_106[0], r0, r4\n\tjump.eq\t@.BB0_1208\n\tadd\t@CPI0_106[0], r0, r4\n\tadd\t32, r0, r6\n\tadd\tr0, r0, r8\n.BB0_1206:\n\tadd\tr6, r5, r9\n\tld.1\tr9, r9\n\tsstore\tr4, r9\n\tadd\t32, r6, r6\n\tadd\t1, r4, r4\n\tadd\t32, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_1206\n.BB0_1208:\n\tsub!\tr7, r1, r7\n\tjump.ge\t@.BB0_1210\n\tshl.s\t3, r1, r1\n\tand\t248, r1, r1\n\tsub.s\t1, r0, r7\n\tshr\tr7, r1, r1\n\txor\tr1, r7, r1\n\tadd\tr6, r5, r5\n\tld.1\tr5, r5\n\tand\tr5, r1, r1\n\tsstore\tr4, r1\n.BB0_1210:\n\tor\t1, r2, r1\n\tjump\t@.BB0_1114\n.BB0_302:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr3, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tstack-[16], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\t96, r0, stack-[15]\n\tadd\t128, r0, stack-[17]\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand!\t@CPI0_0[0], r1, r3\n\tjump.eq\t@.BB0_304\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[15]\n.BB0_313:\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r1\n\tadd\tstack-[15], r1, r1\n\tsub.s!\tstack-[15], r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_4[0], r1, r5\n\tjump.gt\t@.BB0_12\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_12\n\tst.1\t64, r1\n\tand\t31, r3, r1\n\tadd\tstack-[15], r0, r4\n\tst.1.inc\tr4, r3, r4\n\tadd\tr4, r0, stack-[17]\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_1306\n\tadd\tr0, r0, r5\n.BB0_317:\n\tshl.s\t5, r5, r6\n\tadd\tstack-[17], r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_317\n.BB0_1306:\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_304\n\tshl.s\t5, r3, r3\n\tptr.add\tr4, r3, r4\n\tadd\tstack-[17], r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r5\n\tshl\tr5, r1, r5\n\tshr\tr5, r1, r5\n\tld\tr4, r4\n\tsub\t256, r1, r1\n\tshr\tr4, r1, r4\n\tshl\tr4, r1, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_304:\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_305\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_310\n.BB0_259:\n\tld.1\t64, r1\n\tadd\t@CPI0_177[0], r0, r2\n\tjump\t@.BB0_385\n.BB0_253:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_270\n\tadd\t@CPI0_125[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[16], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_126[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_256\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_274\n.BB0_270:\n\tadd\t@CPI0_100[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_100[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_100[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tadd\tstack-[15], r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_273\n.BB0_274:\n\tadd\tstack-[7], r0, r3\n\tmul\t@CPI0_124[0], r3, r1, r2\n\tdiv\tr1, r3, r2, r3\n\tsub.s!\t@CPI0_124[0], r2, r2\n\tjump.ne\t@.BB0_225\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_276\n\tsub!\tr2, r1, r3\n\tjump.gt\t@.BB0_280\n\tdiv\tr1, r2, r2, r1\n\tadd\t24, r0, r1\n\tsload\tr1, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_225\n\tsstore\tr1, r2\n.BB0_280:\n\tld.1\t64, r1\n\tadd\tstack-[7], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tcontext.caller\tr5\n\tadd\t@CPI0_175[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_232\n.BB0_305:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_319\n\tadd\t@CPI0_125[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[16], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_126[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_55\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_311\n.BB0_256:\n\tld.1\t64, r1\n\tadd\t@CPI0_176[0], r0, r2\n\tjump\t@.BB0_257\n.BB0_55:\n\trevert\n.BB0_386:\n\tadd\tstack-[16], r0, r1\n\tadd\tstack-[11], r0, r3\n\tadd\tstack-[9], r0, r4\n\tnear_call\tr0, @fun_update, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tadd\t64, r1, r4\n\tst.1\tr4, r3\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tadd\t96, r1, r3\n\tst.1\tr3, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_178[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tcontext.caller\tr5\n\tadd\t@CPI0_179[0], r0, r4\n\tadd\tstack-[18], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r1\n\tadd\tstack-[13], r0, r2\n\tjump\t@.BB0_388\n.BB0_310:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tjump\t@.BB0_261\n.BB0_1162:\n\tsub!\tr1, r0, r5\n\tadd\tr0, r0, r5\n\tjump.eq\t@.BB0_1164\n\tld.1\tr4, r5\n\tjump\t@.BB0_1164\n.BB0_1211:\n\tsub!\tr1, r0, r5\n\tadd\tr0, r0, r5\n\tjump.eq\t@.BB0_1213\n\tld.1\tr4, r5\n.BB0_1213:\n.BB0_1164:\n\tshl.s\t3, r1, r1\n\tsub.s\t1, r0, r4\n\tshr\tr4, r1, r1\n\txor\tr1, r4, r1\n\tand\tr5, r1, r1\n\tor\tr1, r2, r1\n.BB0_1114:\n\tadd\t10, r0, r2\n\tadd\tr2, r0, stack-[15]\n\tsstore\tr2, r1\n\tadd\t@CPI0_109[0], r0, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[18], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_1214\n\tsub.s!\t32, r3, r1\n\tadd.ge\t32, r0, r3\n\tjump\t@.BB0_1224\n.BB0_1214:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[16], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\tstack-[18], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tsub.s!\t32, r4, r3\n\tadd\tr4, r0, r3\n\tadd.ge\t32, r0, r3\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_1347\n\tadd\tr0, r0, r7\n.BB0_1216:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[16], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1216\n.BB0_1347:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1218\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[16], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1218:\n\tadd\tr4, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1219\n.BB0_1224:\n\tadd\t31, r3, r1\n\tand\t96, r1, r1\n\tadd\tstack-[16], r1, r4\n\tsub!\tr4, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[18]\n\tsub.s!\t@CPI0_4[0], r4, r4\n\tjump.gt\t@.BB0_12\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_12\n\tadd\tstack-[18], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t255, r2, r4\n\tjump.gt\t@.BB0_2\n\tsub.s!\t77, r2, r4\n\tjump.gt\t@.BB0_225\n\tadd\t1, r0, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_1232\n\tadd\t1, r0, r4\n.BB0_1231:\n\tand!\t1, r2, r5\n\tadd\tstack-[15], r0, r6\n\tadd\tr6, r0, r5\n\tadd.eq\t1, r0, r5\n\tmul\tr5, r4, r4, r5\n\tsub.s!\t1, r2, r5\n\tshr.s\t1, r2, r2\n\tmul\tr6, r6, stack-[15], r5\n\tjump.gt\t@.BB0_1231\n.BB0_1232:\n\tadd\t17, r0, r2\n\tsstore\tr2, r4\n\tadd\t@CPI0_109[0], r0, r2\n\tadd\tstack-[18], r0, r4\n\tst.1\tr4, r2\n\tcontext.gas_left\tr2\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_1244\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[18], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_99[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tsub.s!\t32, r4, r3\n\tadd\tr4, r0, r3\n\tadd.ge\t32, r0, r3\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_1345\n\tadd\tr0, r0, r7\n.BB0_1235:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[18], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1235\n.BB0_1345:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1237\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[18], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1237:\n\tadd\tr4, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1239\n\tadd\t31, r3, r1\n\tand\t96, r1, r1\n.BB0_1244:\n\tadd\tstack-[18], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_12\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_12\n\tadd\t@CPI0_100[0], r0, r1\n\tsub.s!\t32, r3, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr1, r0, r4\n\tand\t@CPI0_100[0], r3, r3\n\tsub!\tr3, r0, r5\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI0_100[0], r3, r3\n\tadd.ne\tr4, r0, r1\n\tst.1\t64, r2\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t255, r1, r2\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @checked_exp_rational_by_uint8, @DEFAULT_UNWIND\n\tadd\t18, r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[18]\n\tnear_call\tr0, @finalize_allocation_35742, @DEFAULT_UNWIND\n\tadd\t32779, r0, r1\n\tadd\t4, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t19, r4, r4\n\tmul\t32, r4, r4, r0\n\tadd\t@CPI0_110[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r3\n\tst.1.inc\tr3, r1, r4\n\tadd\t64, r3, r2\n\tadd\tr3, r0, r1\n\tst.1\tr2, r0\n\tst.1\tr4, r0\n\tnear_call\tr0, @array_push_from_struct_Observation_to_array_struct_Observation_storage_dyn_ptr, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1219:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_1346\n\tadd\tr0, r0, r6\n.BB0_1221:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1221\n.BB0_1346:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_1223\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1223:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r4, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_311:\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_323\n.BB0_319:\n\tadd\t@CPI0_100[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_100[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_100[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_323\n.BB0_273:\n\tld.1\t64, r1\n\tadd\t@CPI0_174[0], r0, r2\n\tjump\t@.BB0_257\n.BB0_323:\n\tadd\tstack-[14], r0, r3\n\tmul\t@CPI0_124[0], r3, r1, r2\n\tdiv\tr1, r3, r2, r3\n\tsub.s!\t@CPI0_124[0], r2, r2\n\tjump.ne\t@.BB0_225\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_276\n\tsub!\tr2, r1, r3\n\tjump.gt\t@.BB0_328\n\tdiv\tr1, r2, r2, r1\n\tadd\t25, r0, r1\n\tsload\tr1, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_225\n\tsstore\tr1, r2\n.BB0_328:\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[14], r0, r3\n\tst.1\tr2, r3\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_111[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tcontext.caller\tr5\n\tadd\t@CPI0_175[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_283\n.BB0_376:\n\tdiv\tr9, r4, r4, r8\n\tmul\tr7, r4, r8, r9\n\tdiv\tr8, r4, r9, r10\n\tsub!\tr9, r7, r9\n\tjump.ne\t@.BB0_225\n\tdiv.s\t@CPI0_124[0], r8, r8, r9\n\tmul\tr4, r4, r10, r9\n\tdiv\tr10, r4, r9, r11\n\tsub!\tr9, r4, r4\n\tjump.ne\t@.BB0_225\n\tjump\t@.BB0_378\n.BB0_1239:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_1344\n\tadd\tr0, r0, r6\n.BB0_1241:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1241\n.BB0_1344:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_1243\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1243:\n\tjump\t@.BB0_1223\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr4, r2, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end1:\n\nabi_encode_array_uint256_dyn:\n.func_begin2:\n\tadd\tr1, r0, r3\n\tld.1\tr3, r4\n\tst.1.inc\tr2, r4, r1\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r2\n.BB2_2:\n\tadd\t32, r3, r3\n\tld.1\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tret\n.func_end2:\n\nstorage_array_index_access_struct_Observation__dyn:\n.func_begin3:\n\tadd\t16, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB3_1\n\tst.1\t0, r2\n\tmul\t3, r1, r1, r2\n\tadd\t@CPI3_2[0], r1, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nabi_decode_addresst_uint256t_uint256:\n.func_begin4:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI4_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB4_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tjump.gt\t@.BB4_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_transfer:\n.func_begin5:\n\tnop\tstack+=[5]\n\tadd\tr3, r0, stack-[5]\n\tand!\t@CPI5_0[0], r1, r3\n\tjump.eq\t@.BB5_1\n\tadd\tr1, r0, stack-[1]\n\tand!\t@CPI5_0[0], r2, stack-[3]\n\tjump.eq\t@.BB5_4\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[2]\n\tsub.s!\tstack-[5], r2, r1\n\tjump.lt\t@.BB5_8\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI5_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_6\n\tadd\tstack-[2], r0, r3\n\tsub.s\tstack-[5], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_1[0], r1, r2\n\tadd.ge\t@CPI5_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI5_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI5_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI5_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI5_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB5_6\n\tret\n.BB5_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_1:\n\tld.1\t64, r1\n\tadd\t@CPI5_8[0], r0, r2\n\tjump\t@.BB5_2\n.BB5_4:\n\tld.1\t64, r1\n\tadd\t@CPI5_6[0], r0, r2\n.BB5_2:\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_8:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[4]\n\tadd\t@CPI5_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tstack-[2], r0, r3\n\tadd\tstack-[5], r0, r4\n\tnear_call\tr0, @abi_encode_address_uint256_uint256, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI5_1[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nabi_encode_address_uint256_uint256:\n.func_begin6:\n\tadd\t64, r1, r5\n\tst.1\tr5, r4\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI6_0[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t96, r1, r1\n\tret\n.func_end6:\n\nfun_approve:\n.func_begin7:\n\tnop\tstack+=[3]\n\tand!\t@CPI7_0[0], r1, r1\n\tjump.eq\t@.BB7_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI7_0[0], r2, stack-[3]\n\tjump.eq\t@.BB7_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI7_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB7_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_1[0], r1, r2\n\tadd.ge\t@CPI7_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_6\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI7_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI7_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI7_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI7_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI7_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB7_6\n\tret\n.BB7_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_1:\n\tld.1\t64, r1\n\tadd\t@CPI7_7[0], r0, r2\n\tjump\t@.BB7_2\n.BB7_4:\n\tld.1\t64, r1\n\tadd\t@CPI7_5[0], r0, r2\n.BB7_2:\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI7_1[0], r0, r2\n\tsub.s!\t@CPI7_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfinalize_allocation_35742:\n.func_begin8:\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tjump.ge\t@.BB8_1\n\tadd\t96, r1, r1\n\tst.1\t64, r1\n\tret\n.BB8_1:\n\tadd\t@CPI8_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfinalize_allocation.1:\n.func_begin9:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tjump.gt\t@.BB9_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB9_2\n\tst.1\t64, r1\n\tret\n.BB9_2:\n\tadd\t@CPI9_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_domainSeparatorV4:\n.func_begin10:\n\tnop\tstack+=[4]\n\tadd\t@CPI10_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[3]\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tand\t@CPI10_3[0], r1, r1\n\tcontext.this\tr2\n\tadd\tr2, r0, stack-[2]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB10_7\n\tadd\t@CPI10_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI10_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\t@CPI10_4[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_1[0], r1, r2\n\tadd.ge\t@CPI10_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsub.s!\tstack-[4], r1, r1\n\tjump.ne\t@.BB10_7\n\tadd\t@CPI10_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB10_3\n\tjump\t@.BB10_1\n.BB10_7:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\t32, r1, r2\n\tadd\t@CPI10_6[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tadd\t96, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI10_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tadd\t64, r2, r2\n\tst.1\tr2, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tadd\t128, r0, r1\n\tst.2\t36, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_1[0], r1, r2\n\tadd.ge\t@CPI10_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tadd\t96, r2, r2\n\tst.1\tr2, r1\n\tadd\t@CPI10_4[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_5[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r4\n\tadd\t160, r4, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tst.1\tr2, r1\n\tadd\t160, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI10_7[0], r4, r1\n\tjump.ge\t@.BB10_11\n\tadd\tstack-[4], r0, r3\n\tadd\t192, r3, r1\n\tst.1\t64, r1\n\tadd\t@CPI10_1[0], r0, r1\n\tadd\tstack-[1], r0, r4\n\tsub.s!\t@CPI10_1[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r2\n\tld.1\tr3, r3\n\tsub.s!\t@CPI10_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI10_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr1, r2, r1\n\tor\t@CPI10_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_13\n.BB10_3:\n\tld\tr1, r1\n\tret\n.BB10_1:\n\trevert\n.BB10_11:\n\tadd\t@CPI10_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI10_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_13:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nchecked_exp_rational_by_uint8:\n.func_begin11:\n\tand\t255, r1, r2\n\tsub.s!\t78, r2, r1\n\tjump.ge\t@.BB11_1\n\tadd\t1, r0, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB11_5\n\tadd\t10, r0, r3\n\tadd\t1, r0, r1\n.BB11_4:\n\tand!\t1, r2, r4\n\tadd\tr3, r0, r4\n\tadd.eq\t1, r0, r4\n\tmul\tr4, r1, r1, r4\n\tsub.s!\t1, r2, r4\n\tshr.s\t1, r2, r2\n\tmul\tr3, r3, r3, r4\n\tjump.gt\t@.BB11_4\n.BB11_5:\n\tret\n.BB11_1:\n\tadd\t@CPI11_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\narray_push_from_struct_Observation_to_array_struct_Observation_storage_dyn_ptr:\n.func_begin12:\n\tadd\t16, r0, r3\n\tsload\tr3, r2\n\tsub.s!\t@CPI12_0[0], r2, r4\n\tjump.ge\t@.BB12_1\n\tadd\t1, r2, r4\n\tsstore\tr3, r4\n\tst.1\t0, r3\n\tmul\t3, r2, r2, r3\n\tadd\t@CPI12_1[0], r2, r3\n\tld.1.inc\tr1, r4, r5\n\tsstore\tr3, r4\n\tld.1\tr5, r3\n\tadd\t@CPI12_2[0], r2, r4\n\tsstore\tr4, r3\n\tadd\t@CPI12_3[0], r2, r2\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tsstore\tr2, r1\n\tret\n.BB12_1:\n\tadd\t@CPI12_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI12_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_lastObservation:\n.func_begin13:\n\tld.1\t64, r1\n\tsub.s!\t@CPI13_0[0], r1, r2\n\tjump.ge\t@.BB13_1\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tadd\t16, r0, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB13_4\n\tst.1\t0, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI13_1[0], r1, r3\n\tjump.gt\t@.BB13_1\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tmul\t3, r2, r2, r3\n\tadd\t@CPI13_2[0], r2, r3\n\tsload\tr3, r3\n\tst.1.inc\tr1, r3, r3\n\tadd\t@CPI13_3[0], r2, r4\n\tsload\tr4, r4\n\tst.1\tr3, r4\n\tadd\t@CPI13_4[0], r2, r2\n\tsload\tr2, r2\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tret\n.BB13_1:\n\tadd\t@CPI13_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tjump\t@.BB13_2\n.BB13_4:\n\tadd\t@CPI13_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n.BB13_2:\n\tst.1\t4, r1\n\tadd\t@CPI13_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_sample:\n.func_begin14:\n\tnop\tstack+=[18]\n\tadd\tr2, r0, stack-[10]\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t@CPI14_0[0], r3, r1\n\tjump.ge\t@.BB14_1\n\tshl.s\t5, r3, r2\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r1\n\tld.1\t64, r4\n\tadd\tr4, r1, r1\n\tadd\tr4, r0, stack-[6]\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI14_1[0], r1, r5\n\tjump.gt\t@.BB14_1\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB14_1\n\tst.1\t64, r1\n\tadd\tstack-[6], r0, r1\n\tst.1.inc\tr1, r3, r8\n\tand\t31, r2, r1\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB14_118\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tadd\tr0, r0, r5\n.BB14_7:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB14_7\n.BB14_118:\n\tadd\tr8, r0, stack-[2]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB14_9\n.BB14_9:\n\tadd\t16, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB14_11\n\tadd\tstack-[11], r0, r1\n\tsub.s\t1, r1, stack-[5]\n\tsub!\tstack-[5], r3, r1\n\tjump.lt\t@.BB14_11\n\tsub\tstack-[5], r3, r1\n\tsub.s!\tstack-[5], r1, r2\n\tjump.ge\t@.BB14_15\n\tadd\tstack-[10], r0, r2\n\tmul\t@CPI14_2[0], r2, stack-[1], r2\n\tadd\tr0, r0, r5\n.BB14_14:\n\tadd\t1, r1, r6\n\tsub!\tstack-[11], r6, r2\n\tjump.le\t@.BB14_16\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tmul\t3, r6, r2, r3\n\tadd\t@CPI14_3[0], r2, r3\n\tsub!\tstack-[11], r1, r4\n\tjump.le\t@.BB14_16\n\tadd\tr6, r0, stack-[8]\n\tadd\tr5, r0, stack-[9]\n\tsload\tr3, r3\n\tmul\t3, r1, r5, r1\n\tadd\t@CPI14_3[0], r5, r1\n\tsload\tr1, r1\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB14_11\n\tadd\t@CPI14_4[0], r5, r4\n\tsload\tr4, r4\n\tadd\t@CPI14_4[0], r2, r6\n\tsload\tr6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB14_11\n\tsub!\tr3, r1, r7\n\tjump.eq\t@.BB14_21\n\tadd\t@CPI14_5[0], r5, r5\n\tsload\tr5, r5\n\tadd\t@CPI14_5[0], r2, r2\n\tsload\tr2, r7\n\tsub!\tr7, r5, r2\n\tjump.lt\t@.BB14_11\n\tsub\tr3, r1, r3\n\tsub\tr6, r4, r6\n\tdiv\tr6, r3, r2, r1\n\tsub\tr7, r5, r5\n\tdiv\tr5, r3, r1, r4\n\tadd\t11, r0, r4\n\tsload\tr4, r4\n\tand!\t@CPI14_6[0], r4, r4\n\tjump.eq\t@.BB14_24\n\tmul\t@CPI14_2[0], r2, r7, r4\n\tsub!\tr3, r6, r4\n\tjump.gt\t@.BB14_32\n\tdiv\tr7, r2, r4, r8\n\tsub.s!\t@CPI14_2[0], r4, r4\n\tjump.ne\t@.BB14_11\n.BB14_32:\n\tadd\t17, r0, r4\n\tsload\tr4, r4\n\tadd\tr4, r0, stack-[15]\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB14_21\n\tmul\t@CPI14_2[0], r1, r8, r4\n\tsub!\tr3, r5, r4\n\tjump.gt\t@.BB14_35\n\tdiv\tr8, r1, r4, r9\n\tsub.s!\t@CPI14_2[0], r4, r4\n\tjump.ne\t@.BB14_11\n.BB14_35:\n\tadd\t18, r0, r4\n\tsload\tr4, r4\n\tadd\tr4, r0, stack-[17]\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB14_21\n\tdiv.s\tstack-[15], r7, r4, r9\n\tdiv.s\tstack-[17], r8, r9, r10\n\tsub!\tstack-[15], r7, r10\n\tadd\tr0, r0, r11\n\tadd\tr0, r0, r10\n\tjump.gt\t@.BB14_39\n\tmul\tr9, r4, r10, r11\n\tdiv\tr10, r4, r11, r12\n\tsub!\tr11, r9, r11\n\tjump.ne\t@.BB14_11\n\tdiv.s\t@CPI14_2[0], r10, r10, r11\n\tmul\tr4, r4, r11, r12\n\tdiv\tr11, r4, r12, r13\n\tsub!\tr12, r4, r12\n\tjump.ne\t@.BB14_11\n.BB14_39:\n\tmul\tr9, r9, r12, r13\n\tdiv.s\t@CPI14_2[0], r11, r11, r13\n\tsub!\tstack-[17], r8, r13\n\tjump.gt\t@.BB14_41\n\tdiv\tr12, r9, r13, r14\n\tsub!\tr13, r9, r13\n\tjump.ne\t@.BB14_11\n.BB14_41:\n\tdiv.s\t@CPI14_2[0], r12, r12, r13\n\tadd\tr11, r12, r12\n\tmul\tr12, r10, r11, r13\n\tsub!\tr10, r0, r13\n\tjump.eq\t@.BB14_43\n\tdiv\tr11, r10, r10, r13\n\tsub!\tr10, r12, r10\n\tjump.ne\t@.BB14_11\n.BB14_43:\n\tdiv.s\t@CPI14_2[0], r11, r13, r10\n\tsub!\tr3, r6, r6\n\tjump.gt\t@.BB14_45\n\tdiv\tr7, r2, r2, r6\n\tsub.s!\t@CPI14_2[0], r2, r2\n\tjump.ne\t@.BB14_11\n.BB14_45:\n\tsub!\tr3, r5, r2\n\tjump.gt\t@.BB14_47\n\tdiv\tr8, r1, r1, r2\n\tsub.s!\t@CPI14_2[0], r1, r1\n\tjump.ne\t@.BB14_11\n.BB14_47:\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\txor\tstack-[3], r1, r1\n\tand!\t@CPI14_7[0], r1, stack-[7]\n\tadd\tr4, r0, r1\n\tadd.eq\tr9, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tadd.ne\tr9, r0, r4\n\tjump.eq\t@.BB14_114\n\tsub!\tstack-[10], r0, r1\n\tadd\tstack-[17], r0, r1\n\tjump.eq\t@.BB14_48\n\tadd\tstack-[1], r0, r2\n\tdiv.s\tstack-[10], r2, r1, r2\n\tsub.s!\t@CPI14_2[0], r1, r1\n\tadd\tstack-[17], r0, r1\n\tjump.eq\t@.BB14_48\n\tjump\t@.BB14_11\n.BB14_24:\n\tadd\t12, r0, r3\n\tsload\tr3, r3\n\txor\tstack-[3], r3, r3\n\tand!\t@CPI14_7[0], r3, r3\n\tadd\tr1, r0, r3\n\tadd.eq\tr2, r0, r3\n\tadd.ne\tr2, r0, r1\n\tmul\tstack-[10], r1, r2, r4\n\tsub!\tstack-[10], r0, r4\n\tjump.eq\t@.BB14_26\n\tdiv.s\tstack-[10], r2, r4, r5\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB14_11\n.BB14_26:\n\tadd\tstack-[10], r3, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB14_11\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB14_21\n\tdiv\tr2, r1, r1, r2\n\tjump\t@.BB14_29\n.BB14_114:\n\tsub!\tstack-[10], r0, r1\n\tadd\tstack-[15], r0, r1\n\tjump.eq\t@.BB14_48\n\tadd\tstack-[1], r0, r2\n\tdiv.s\tstack-[10], r2, r1, r2\n\tsub.s!\t@CPI14_2[0], r1, r1\n\tadd\tstack-[15], r0, r1\n\tjump.ne\t@.BB14_11\n.BB14_48:\n\tdiv\tstack-[1], r1, r1, r2\n\tadd\tr1, r4, r3\n\tsub!\tr3, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB14_11\n\tmul\t@CPI14_2[0], r3, stack-[16], r1\n\tmul\tr3, r3, r6, r1\n\tdiv.s\t@CPI14_2[0], r6, r4, r1\n\tmul\tr4, r3, stack-[14], r1\n\tmul\t3, r3, r15, r1\n\tdiv.s\t3, r15, stack-[13], r1\n\tsub!\tstack-[13], r3, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr1, r0, stack-[18]\n\tadd\tr0, r0, r14\n\tadd\tstack-[12], r0, r2\n\tjump\t@.BB14_50\n.BB14_94:\n\tdiv\tr1, r7, r1, r7\n\tadd\tr1, r2, r9\n.BB14_96:\n\tsub!\tr9, r2, r1\n\tadd\tr9, r0, r2\n\tjump.lt\t@.BB14_11\n.BB14_59:\n\tsub.s!\t254, r14, r1\n\tadd\t1, r14, r14\n\tjump.ge\t@.BB14_58\n.BB14_50:\n\tmul\tr2, r3, r10, r1\n\tsub!\tr3, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB14_53\n\tdiv\tr10, r3, r1, r7\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB14_11\n\tdiv.s\t@CPI14_2[0], r10, r1, r7\n\tdiv\tr6, r3, r7, r8\n\tsub!\tr7, r3, r7\n\tjump.ne\t@.BB14_11\n.BB14_53:\n\tmul\tr2, r2, r11, r7\n\tsub!\tr2, r0, r7\n\tjump.eq\t@.BB14_55\n\tdiv\tr11, r2, r7, r8\n\tsub!\tr7, r2, r7\n\tjump.ne\t@.BB14_11\n.BB14_55:\n\tdiv.s\t@CPI14_2[0], r11, r9, r7\n\tadd\tr9, r4, r8\n\tmul\tr1, r8, r7, r12\n\tsub!\tr1, r0, r12\n\tjump.eq\t@.BB14_57\n\tdiv\tr7, r1, r1, r12\n\tsub!\tr1, r8, r1\n\tjump.ne\t@.BB14_11\n.BB14_57:\n\tdiv.s\t@CPI14_2[0], r7, r7, r1\n\tsub!\tr7, r13, r1\n\tjump.ge\t@.BB14_60\n\tsub\tr13, r7, r7\n\tmul\t@CPI14_2[0], r7, r1, r8\n\tdiv\tr1, r7, r7, r8\n\tsub.s!\t@CPI14_2[0], r7, r7\n\tadd\tstack-[18], r0, r7\n\tor.ne\t1, r7, r7\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB14_11\n\tsub!\tr2, r0, r7\n\tjump.eq\t@.BB14_87\n\tdiv\tr11, r2, r7, r8\n\tsub!\tr7, r2, r7\n\tjump.ne\t@.BB14_11\n.BB14_87:\n\tmul\tr9, r15, r7, r8\n\tsub!\tr3, r0, r8\n\tadd\tr0, r0, r8\n\tjump.eq\t@.BB14_92\n\tdiv\tr7, r15, r8, r10\n\tsub!\tr8, r9, r8\n\tjump.ne\t@.BB14_11\n\tdiv\tr6, r3, r8, r9\n\tsub!\tr8, r3, r8\n\tjump.ne\t@.BB14_11\n\tsub.s!\t@CPI14_2[0], r6, r8\n\tadd\tr0, r0, r8\n\tjump.lt\t@.BB14_92\n\tdiv\tstack-[14], r4, r8, r9\n\tsub!\tr8, r3, r8\n\tadd\tstack-[14], r0, r8\n\tjump.ne\t@.BB14_11\n.BB14_92:\n\tdiv.s\t@CPI14_2[0], r7, r7, r9\n\tdiv.s\t@CPI14_2[0], r8, r8, r9\n\tadd!\tr8, r7, r7\n\tjump.eq\t@.BB14_21\n\tsub!\tr7, r1, r8\n\tjump.le\t@.BB14_94\n\tadd!\t1, r2, r9\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB14_11\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB14_99\n\tdiv\tstack-[16], r3, r1, r7\n\tsub.s!\t@CPI14_2[0], r1, r1\n\tjump.ne\t@.BB14_11\n.BB14_99:\n\tmul\t@CPI14_2[0], r9, r1, r7\n\tdiv\tr1, r9, r7, r8\n\tsub.s!\t@CPI14_2[0], r7, r7\n\tjump.ne\t@.BB14_11\n\tdiv.s\tstack-[17], r1, r7, r8\n\tadd\tstack-[16], r0, r8\n\tsub!\tstack-[15], r8, r8\n\tadd\tr0, r0, r11\n\tadd\tr0, r0, r10\n\tjump.gt\t@.BB14_103\n\tadd\tstack-[16], r0, r8\n\tdiv.s\tstack-[15], r8, r8, r10\n\tmul\tr7, r8, r10, r11\n\tdiv\tr10, r8, r11, r12\n\tsub!\tr11, r7, r11\n\tjump.ne\t@.BB14_11\n\tdiv.s\t@CPI14_2[0], r10, r10, r11\n\tmul\tr8, r8, r11, r12\n\tdiv\tr11, r8, r12, r5\n\tsub!\tr12, r8, r5\n\tjump.ne\t@.BB14_11\n.BB14_103:\n\tmul\tr7, r7, r12, r5\n\tdiv.s\t@CPI14_2[0], r11, r8, r5\n\tsub!\tstack-[17], r1, r1\n\tjump.gt\t@.BB14_105\n\tdiv\tr12, r7, r1, r5\n\tsub!\tr1, r7, r1\n\tjump.ne\t@.BB14_11\n.BB14_105:\n\tdiv.s\t@CPI14_2[0], r12, r1, r5\n\tadd\tr8, r1, r7\n\tmul\tr7, r10, r1, r5\n\tsub!\tr10, r0, r5\n\tjump.eq\t@.BB14_107\n\tdiv\tr1, r10, r5, r8\n\tsub!\tr5, r7, r5\n\tjump.ne\t@.BB14_11\n.BB14_107:\n\tdiv.s\t@CPI14_2[0], r1, r1, r5\n\tsub!\tr1, r13, r1\n\tjump.le\t@.BB14_96\n\tjump\t@.BB14_108\n.BB14_60:\n\tsub\tr7, r13, r8\n\tmul\t@CPI14_2[0], r8, r1, r12\n\tsub!\tr7, r13, r12\n\tjump.ne\t@.BB14_61\n\tsub!\tstack-[13], r3, r8\n\tjump.eq\t@.BB14_63\n\tjump\t@.BB14_11\n.BB14_61:\n\tdiv\tr1, r8, r8, r12\n\tsub.s!\t@CPI14_2[0], r8, r8\n\tadd\tstack-[18], r0, r8\n\tor.ne\t1, r8, r8\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB14_11\n.BB14_63:\n\tsub!\tr2, r0, r8\n\tjump.eq\t@.BB14_65\n\tdiv\tr11, r2, r8, r11\n\tsub!\tr8, r2, r8\n\tjump.ne\t@.BB14_11\n.BB14_65:\n\tmul\tr9, r15, r11, r8\n\tsub!\tr3, r0, r8\n\tadd\tr0, r0, r8\n\tjump.eq\t@.BB14_70\n\tdiv\tr11, r15, r8, r12\n\tsub!\tr8, r9, r8\n\tjump.ne\t@.BB14_11\n\tdiv\tr6, r3, r8, r9\n\tsub!\tr8, r3, r8\n\tjump.ne\t@.BB14_11\n\tsub.s!\t@CPI14_2[0], r6, r8\n\tadd\tr0, r0, r8\n\tjump.lt\t@.BB14_70\n\tdiv\tstack-[14], r4, r8, r9\n\tsub!\tr8, r3, r8\n\tadd\tstack-[14], r0, r8\n\tjump.ne\t@.BB14_11\n.BB14_70:\n\tdiv.s\t@CPI14_2[0], r11, r9, r11\n\tdiv.s\t@CPI14_2[0], r8, r8, r11\n\tadd!\tr8, r9, r8\n\tjump.eq\t@.BB14_21\n\tdiv\tr1, r8, r11, r9\n\tsub!\tr8, r1, r1\n\tjump.le\t@.BB14_73\n\tsub!\tr7, r13, r1\n\tadd\tr2, r0, r9\n\tjump.eq\t@.BB14_108\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB14_11\n\tsub.s\t1, r2, r7\n\tsub!\tr3, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB14_80\n\tsub\tr10, r3, r1\n\tdiv\tr1, r3, r8, r9\n\tsub!\tr8, r7, r8\n\tjump.ne\t@.BB14_11\n\tdiv.s\t@CPI14_2[0], r1, r1, r8\n\tdiv\tr6, r3, r8, r9\n\tsub!\tr8, r3, r8\n\tjump.ne\t@.BB14_11\n.BB14_80:\n\tmul\tr7, r7, r8, r9\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB14_82\n\tdiv\tr8, r7, r9, r10\n\tsub!\tr9, r7, r7\n\tjump.ne\t@.BB14_11\n.BB14_82:\n\tdiv.s\t@CPI14_2[0], r8, r7, r8\n\tadd\tr7, r4, r8\n\tmul\tr1, r8, r7, r9\n\tsub!\tr1, r0, r9\n\tjump.eq\t@.BB14_76\n\tdiv\tr7, r1, r1, r9\n\tsub!\tr1, r8, r1\n\tjump.ne\t@.BB14_11\n.BB14_76:\n\tadd\t1, r0, r11\n\tdiv.s\t@CPI14_2[0], r7, r1, r7\n\tsub!\tr1, r13, r1\n\tadd\tr2, r0, r9\n\tjump.lt\t@.BB14_108\n.BB14_73:\n\tsub!\tr2, r11, r1\n\tjump.lt\t@.BB14_11\n\tsub\tr2, r11, r2\n\tjump\t@.BB14_59\n.BB14_108:\n\tsub!\tstack-[12], r9, r1\n\tjump.lt\t@.BB14_11\n\tsub!\tstack-[7], r0, r1\n\tadd\tstack-[17], r0, r3\n\tadd.ne\tstack-[15], r0, r3\n\tsub\tstack-[12], r9, r2\n\tadd\tr3, r0, r4\n\tmul\tr2, r3, r1, r3\n\tsub!\tstack-[12], r9, r3\n\tjump.eq\t@.BB14_111\n\tdiv\tr1, r2, r2, r3\n\tsub!\tr2, r4, r2\n\tjump.ne\t@.BB14_11\n.BB14_111:\n\tdiv.s\t@CPI14_2[0], r1, r1, r2\n.BB14_29:\n\tadd\tstack-[2], r0, r3\n\tadd\tstack-[8], r0, r4\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[9], r0, r5\n\tsub!\tr2, r5, r2\n\tjump.le\t@.BB14_16\n\tshl.s\t5, r5, r2\n\tadd\tr2, r3, r2\n\tst.1\tr2, r1\n\tadd\t1, r5, r5\n\tsub.s!\tstack-[5], r4, r1\n\tadd\tr4, r0, r1\n\tjump.lt\t@.BB14_14\n.BB14_15:\n\tadd\tstack-[6], r0, r1\n\tret\n.BB14_11:\n\tadd\t@CPI14_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n.BB14_2:\n\tst.1\t4, r1\n\tadd\t@CPI14_13[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_21:\n\tadd\t@CPI14_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tjump\t@.BB14_2\n.BB14_58:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t2, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_10[0], r0, r2\n\tsub.s!\t@CPI14_10[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_11[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_16:\n\tadd\t@CPI14_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tjump\t@.BB14_2\n.BB14_1:\n\tadd\t@CPI14_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tjump\t@.BB14_2\n.func_end14:\n\nfun_update:\n.func_begin15:\n\tnop\tstack+=[7]\n\tadd\tr4, r0, stack-[5]\n\tadd\tr3, r0, stack-[3]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr1, r0, stack-[7]\n\tadd\t21, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\t@CPI15_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r3\n\tsub!\tr1, r3, r2\n\tadd\tstack-[5], r0, r5\n\tjump.lt\t@.BB15_3\n\tsub!\tr1, r3, r2\n\tadd\tstack-[3], r0, r4\n\tjump.eq\t@.BB15_13\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB15_13\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB15_13\n\tsub\tr1, r3, r1\n\tmul\tr1, r4, r3, r2\n\tdiv\tr3, r4, r2, r4\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB15_3\n\tadd\t22, r0, r2\n\tsload\tr2, r4\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB15_3\n\tsstore\tr2, r3\n\tmul\tr1, r5, r2, r3\n\tdiv\tr2, r5, r3, r4\n\tsub!\tr3, r1, r1\n\tjump.ne\t@.BB15_3\n\tadd\t23, r0, r1\n\tsload\tr1, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB15_3\n\tsstore\tr1, r2\n.BB15_13:\n\tld.1\t64, r1\n\tsub.s!\t@CPI15_3[0], r1, r2\n\tjump.ge\t@.BB15_14\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tadd\t16, r0, r4\n\tsload\tr4, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB15_3\n\tst.1\t0, r4\n\tld.1\t64, r1\n\tsub.s!\t@CPI15_4[0], r1, r3\n\tjump.gt\t@.BB15_14\n\tadd\tr4, r0, stack-[4]\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tmul\t3, r2, r2, r3\n\tadd\t@CPI15_5[0], r2, r3\n\tsload\tr3, r3\n\tadd\tr3, r0, stack-[5]\n\tst.1.inc\tr1, r3, r3\n\tadd\t@CPI15_6[0], r2, r4\n\tsload\tr4, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r1\n\tadd\t@CPI15_7[0], r2, r2\n\tsload\tr2, r2\n\tst.1\tr1, r2\n\tadd\t@CPI15_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.lt\t@.BB15_3\n\tsub\tr1, r3, r1\n\tsub.s!\t1801, r1, r1\n\tjump.lt\t@.BB15_24\n\tadd\t23, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t22, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tld.1\t64, r2\n\tsub.s!\t@CPI15_4[0], r2, r1\n\tjump.gt\t@.BB15_14\n\tadd\tr2, r0, stack-[1]\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\t@CPI15_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r2\n\tadd\tstack-[1], r0, r6\n\tadd\t64, r6, r1\n\tadd\tstack-[3], r0, r3\n\tst.1\tr1, r3\n\tst.1.inc\tr6, r2, r2\n\tadd\tstack-[5], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[4], r0, r5\n\tsload\tr5, r3\n\tsub.s!\t@CPI15_8[0], r3, r4\n\tjump.gt\t@.BB15_14\n\tadd\t1, r3, r4\n\tsstore\tr5, r4\n\tst.1\t0, r5\n\tld.1\tr6, r4\n\tmul\t3, r3, r3, r5\n\tadd\t@CPI15_9[0], r3, r5\n\tsstore\tr5, r4\n\tld.1\tr2, r2\n\tadd\t@CPI15_10[0], r3, r4\n\tsstore\tr4, r2\n\tadd\t@CPI15_11[0], r3, r2\n\tld.1\tr1, r1\n\tsstore\tr2, r1\n.BB15_24:\n\tadd\t19, r0, r1\n\tadd\tstack-[7], r0, r2\n\tsstore\tr1, r2\n\tadd\t20, r0, r1\n\tadd\tstack-[6], r0, r2\n\tsstore\tr1, r2\n\tadd\t@CPI15_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI15_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI15_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI15_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_1[0], r2, r3\n\tadd\t@CPI15_1[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI15_1[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI15_13[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB15_26\n\tret\n.BB15_3:\n\tadd\t@CPI15_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB15_4\n.BB15_1:\n\trevert\n.BB15_14:\n\tadd\t@CPI15_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB15_4:\n\tst.1\t4, r1\n\tadd\t@CPI15_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB15_26:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\nfun_safeTransfer:\n.func_begin16:\n\tnop\tstack+=[3]\n\tld.1\t64, r4\n\tadd\t68, r4, r5\n\tst.1\tr5, r3\n\tadd\t32, r4, r3\n\tadd\t@CPI16_0[0], r0, r5\n\tst.1\tr3, r5\n\tand\t@CPI16_1[0], r2, r2\n\tadd\t36, r4, r5\n\tst.1\tr5, r2\n\tadd\t68, r0, r2\n\tst.1\tr4, r2\n\tsub.s!\t@CPI16_2[0], r4, r2\n\tjump.ge\t@.BB16_1\n\tadd\t128, r4, r2\n\tst.1\t64, r2\n\tld.1\tr4, r4\n\tcontext.gas_left\tr2\n\tand\t@CPI16_1[0], r1, r8\n\tsub.s!\t4, r8, r1\n\tjump.ne\t@.BB16_3\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB16_5\n.BB16_3:\n\tadd\t@CPI16_3[0], r0, r1\n\tsub.s!\t@CPI16_3[0], r3, r5\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI16_3[0], r4, r5\n\tadd.ge\tr1, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r3, r3\n\tsub.s!\t@CPI16_3[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\tr3, r1, r1\n\tadd\tr8, r0, r2\n\tadd\tr8, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r8\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI16_3[0], r1, stack[@returndatasize]\n\tand\t@CPI16_3[0], r1, r1\n.BB16_5:\n\tadd\t96, r0, r10\n\tadd\t128, r0, r9\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB16_6\n\tsub.s!\t@CPI16_4[0], r1, r3\n\tjump.gt\t@.BB16_1\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r10\n\tadd\tr10, r3, r3\n\tsub!\tr3, r10, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI16_4[0], r3, r5\n\tjump.gt\t@.BB16_1\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB16_1\n\tst.1\t64, r3\n\tand\t31, r1, r3\n\tst.1.inc\tr10, r1, r9\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tshr.s!\t5, r1, r1\n\tjump.eq\t@.BB16_30\n\tadd\tr0, r0, r5\n.BB16_21:\n\tshl.s\t5, r5, r6\n\tadd\tr9, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB16_21\n.BB16_30:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB16_6\n\tshl.s\t5, r1, r1\n\tptr.add\tr4, r1, r4\n\tadd\tr9, r1, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB16_6:\n\tld.1\tr10, r1\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB16_12\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB16_23\n\tadd\tr10, r0, stack-[2]\n\tadd\tr9, r0, stack-[1]\n\tadd\t@CPI16_5[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr8, r0, stack-[3]\n\tst.2\t4, r8\n\tadd\t@CPI16_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI16_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI16_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB16_9\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[2], r0, r1\n\tjump.eq\t@.BB16_11\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[3], r0, r8\n\tadd\tstack-[1], r0, r9\n\tjump.eq\t@.BB16_29\n.BB16_23:\n\tadd\t@CPI16_7[0], r0, r2\n\tsub.s!\t31, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI16_7[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI16_7[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB16_24\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB16_24\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB16_27\n.BB16_29:\n\tret\n.BB16_1:\n\tadd\t@CPI16_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI16_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_24:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_12:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB16_14\n\tld.1\t64, r1\n\tadd\t@CPI16_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI16_3[0], r0, r2\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_27:\n\tld.1\t64, r1\n\tadd\t@CPI16_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r8\n\tjump\t@.BB16_28\n.BB16_14:\n\tadd\t@CPI16_3[0], r0, r2\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI16_3[0], r9, r3\n\tadd.ge\tr2, r0, r9\n\tshl.s\t64, r9, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB16_9:\n\trevert\n.BB16_11:\n\tld.1\t64, r1\n\tadd\t@CPI16_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n.BB16_28:\n\tadd\t@CPI16_3[0], r0, r2\n\tsub.s!\t@CPI16_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI16_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end16:\n\nfun_getAmountOut:\n.func_begin17:\n\tnop\tstack+=[8]\n\tadd\t11, r0, r5\n\tsload\tr5, r5\n\tand!\t@CPI17_0[0], r5, r5\n\tjump.eq\t@.BB17_2\n\tmul\t@CPI17_1[0], r3, r9, r5\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB17_12\n\tdiv\tr9, r3, r5, r6\n\tsub.s!\t@CPI17_1[0], r5, r5\n\tjump.ne\t@.BB17_4\n.BB17_12:\n\tadd\t17, r0, r5\n\tsload\tr5, r13\n\tsub!\tr13, r0, r5\n\tjump.eq\t@.BB17_8\n\tmul\t@CPI17_1[0], r4, r10, r5\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB17_15\n\tdiv\tr10, r4, r5, r6\n\tsub.s!\t@CPI17_1[0], r5, r5\n\tjump.ne\t@.BB17_4\n.BB17_15:\n\tadd\t18, r0, r5\n\tsload\tr5, r5\n\tadd\tr5, r0, stack-[7]\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB17_8\n\tdiv\tr9, r13, r8, r5\n\tdiv.s\tstack-[7], r10, r11, r5\n\tsub!\tr13, r9, r5\n\tadd\tr0, r0, r6\n\tadd\tr0, r0, r5\n\tjump.gt\t@.BB17_19\n\tmul\tr11, r8, r5, r6\n\tdiv\tr5, r8, r6, r7\n\tsub!\tr6, r11, r6\n\tjump.ne\t@.BB17_4\n\tdiv.s\t@CPI17_1[0], r5, r5, r6\n\tmul\tr8, r8, r6, r7\n\tdiv\tr6, r8, r7, r12\n\tsub!\tr7, r8, r7\n\tjump.ne\t@.BB17_4\n.BB17_19:\n\tmul\tr11, r11, r7, r12\n\tdiv.s\t@CPI17_1[0], r6, r6, r12\n\tsub!\tstack-[7], r10, r12\n\tadd\tr13, r0, stack-[3]\n\tjump.gt\t@.BB17_21\n\tdiv\tr7, r11, r12, r13\n\tadd\tstack-[3], r0, r13\n\tsub!\tr12, r11, r12\n\tjump.ne\t@.BB17_4\n.BB17_21:\n\tdiv.s\t@CPI17_1[0], r7, r7, r12\n\tadd\tr6, r7, r7\n\tmul\tr7, r5, r6, r12\n\tsub!\tr5, r0, r12\n\tjump.eq\t@.BB17_23\n\tdiv\tr6, r5, r5, r12\n\tsub!\tr5, r7, r5\n\tjump.ne\t@.BB17_4\n.BB17_23:\n\tdiv.s\t@CPI17_1[0], r6, r7, r5\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB17_25\n\tdiv\tr9, r3, r3, r5\n\tsub.s!\t@CPI17_1[0], r3, r3\n\tjump.ne\t@.BB17_4\n.BB17_25:\n\tsub!\tr4, r0, r3\n\tjump.eq\t@.BB17_27\n\tdiv\tr10, r4, r3, r4\n\tsub.s!\t@CPI17_1[0], r3, r3\n\tjump.ne\t@.BB17_4\n.BB17_27:\n\tadd\t12, r0, r3\n\tsload\tr3, r3\n\txor\tr3, r2, r2\n\tand!\t@CPI17_2[0], r2, stack-[1]\n\tadd\tr8, r0, r2\n\tadd.eq\tr11, r0, r2\n\tadd\tr2, r0, stack-[2]\n\tadd.ne\tr11, r0, r8\n\tmul\t@CPI17_1[0], r1, r2, r3\n\tjump.eq\t@.BB17_94\n\tsub!\tr1, r0, r3\n\tadd\tstack-[7], r0, r3\n\tjump.eq\t@.BB17_28\n\tdiv\tr2, r1, r1, r3\n\tsub.s!\t@CPI17_1[0], r1, r1\n\tadd\tstack-[7], r0, r3\n\tjump.eq\t@.BB17_28\n\tjump\t@.BB17_4\n.BB17_2:\n\tadd\t12, r0, r5\n\tsload\tr5, r5\n\txor\tr5, r2, r2\n\tand!\t@CPI17_2[0], r2, r2\n\tadd\tr4, r0, r5\n\tadd.eq\tr3, r0, r5\n\tadd.ne\tr3, r0, r4\n\tmul\tr4, r1, r2, r3\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB17_6\n\tdiv\tr2, r1, r3, r6\n\tsub!\tr3, r4, r3\n\tjump.ne\t@.BB17_4\n.BB17_6:\n\tadd\tr5, r1, r1\n\tsub!\tr1, r5, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB17_4\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB17_8\n\tdiv\tr2, r1, r1, r2\n\tjump\t@.BB17_1\n.BB17_94:\n\tsub!\tr1, r0, r3\n\tadd\tr13, r0, r3\n\tjump.eq\t@.BB17_28\n\tdiv\tr2, r1, r1, r3\n\tsub.s!\t@CPI17_1[0], r1, r1\n\tadd\tr13, r0, r3\n\tjump.ne\t@.BB17_4\n.BB17_28:\n\tdiv\tr2, r3, r2, r1\n\tadd\tr2, r8, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB17_4\n\tmul\t@CPI17_1[0], r1, stack-[6], r2\n\tmul\tr1, r1, r8, r2\n\tdiv.s\t@CPI17_1[0], r8, r9, r2\n\tmul\tr9, r1, stack-[5], r2\n\tmul\t3, r1, r11, r2\n\tdiv.s\t3, r11, stack-[4], r2\n\tsub!\tstack-[4], r1, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr0, r0, r14\n\tadd\tstack-[2], r0, r15\n\tjump\t@.BB17_30\n.BB17_74:\n\tdiv\tr3, r2, r2, r3\n\tadd\tr2, r15, r2\n.BB17_76:\n\tsub!\tr2, r15, r3\n\tadd\tr2, r0, r15\n\tjump.lt\t@.BB17_4\n.BB17_39:\n\tsub.s!\t254, r14, r2\n\tadd\t1, r14, r14\n\tjump.ge\t@.BB17_38\n.BB17_30:\n\tmul\tr15, r1, r3, r2\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r6\n\tjump.eq\t@.BB17_33\n\tdiv\tr3, r1, r2, r4\n\tsub!\tr2, r15, r2\n\tjump.ne\t@.BB17_4\n\tdiv.s\t@CPI17_1[0], r3, r6, r2\n\tdiv\tr8, r1, r2, r4\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB17_4\n.BB17_33:\n\tmul\tr15, r15, r5, r2\n\tsub!\tr15, r0, r2\n\tjump.eq\t@.BB17_35\n\tdiv\tr5, r15, r2, r4\n\tsub!\tr2, r15, r2\n\tjump.ne\t@.BB17_4\n.BB17_35:\n\tdiv.s\t@CPI17_1[0], r5, r2, r4\n\tadd\tr2, r9, r10\n\tmul\tr6, r10, r4, r12\n\tsub!\tr6, r0, r12\n\tjump.eq\t@.BB17_37\n\tdiv\tr4, r6, r6, r12\n\tsub!\tr6, r10, r6\n\tjump.ne\t@.BB17_4\n.BB17_37:\n\tdiv.s\t@CPI17_1[0], r4, r12, r4\n\tsub!\tr12, r7, r4\n\tjump.ge\t@.BB17_40\n\tsub\tr7, r12, r4\n\tmul\t@CPI17_1[0], r4, r3, r6\n\tdiv\tr3, r4, r4, r6\n\tsub.s!\t@CPI17_1[0], r4, r4\n\tadd\tstack-[8], r0, r4\n\tor.ne\t1, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB17_4\n\tsub!\tr15, r0, r4\n\tjump.eq\t@.BB17_67\n\tdiv\tr5, r15, r4, r5\n\tsub!\tr4, r15, r4\n\tjump.ne\t@.BB17_4\n.BB17_67:\n\tmul\tr2, r11, r5, r4\n\tsub!\tr1, r0, r4\n\tadd\tr0, r0, r6\n\tjump.eq\t@.BB17_72\n\tdiv\tr5, r11, r4, r6\n\tsub!\tr4, r2, r2\n\tjump.ne\t@.BB17_4\n\tdiv\tr8, r1, r2, r4\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB17_4\n\tsub.s!\t@CPI17_1[0], r8, r2\n\tadd\tr0, r0, r6\n\tjump.lt\t@.BB17_72\n\tadd\tstack-[5], r0, r6\n\tdiv\tr6, r9, r2, r4\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB17_4\n.BB17_72:\n\tdiv.s\t@CPI17_1[0], r5, r2, r4\n\tdiv.s\t@CPI17_1[0], r6, r4, r5\n\tadd!\tr4, r2, r2\n\tjump.eq\t@.BB17_8\n\tsub!\tr2, r3, r4\n\tjump.le\t@.BB17_74\n\tadd!\t1, r15, r2\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB17_4\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB17_79\n\tdiv\tstack-[6], r1, r3, r4\n\tsub.s!\t@CPI17_1[0], r3, r3\n\tjump.ne\t@.BB17_4\n.BB17_79:\n\tmul\t@CPI17_1[0], r2, r3, r4\n\tdiv\tr3, r2, r4, r5\n\tsub.s!\t@CPI17_1[0], r4, r4\n\tjump.ne\t@.BB17_4\n\tdiv.s\tstack-[7], r3, r5, r4\n\tsub.s!\tstack-[6], r13, r4\n\tadd\tr0, r0, r12\n\tadd\tr0, r0, r6\n\tjump.gt\t@.BB17_83\n\tdiv\tstack-[6], r13, r4, r6\n\tmul\tr5, r4, r6, r10\n\tdiv\tr6, r4, r10, r12\n\tsub!\tr10, r5, r10\n\tjump.ne\t@.BB17_4\n\tdiv.s\t@CPI17_1[0], r6, r6, r10\n\tmul\tr4, r4, r12, r10\n\tdiv\tr12, r4, r10, r13\n\tadd\tstack-[3], r0, r13\n\tsub!\tr10, r4, r4\n\tjump.ne\t@.BB17_4\n.BB17_83:\n\tmul\tr5, r5, r4, r10\n\tdiv.s\t@CPI17_1[0], r12, r10, r12\n\tsub!\tstack-[7], r3, r3\n\tjump.gt\t@.BB17_85\n\tdiv\tr4, r5, r3, r12\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB17_4\n.BB17_85:\n\tdiv.s\t@CPI17_1[0], r4, r3, r4\n\tadd\tr10, r3, r4\n\tmul\tr4, r6, r3, r5\n\tsub!\tr6, r0, r5\n\tjump.eq\t@.BB17_87\n\tdiv\tr3, r6, r5, r6\n\tsub!\tr5, r4, r4\n\tjump.ne\t@.BB17_4\n.BB17_87:\n\tdiv.s\t@CPI17_1[0], r3, r3, r4\n\tsub!\tr3, r7, r3\n\tjump.le\t@.BB17_76\n\tjump\t@.BB17_88\n.BB17_40:\n\tsub\tr12, r7, r4\n\tmul\t@CPI17_1[0], r4, r6, r10\n\tsub!\tr12, r7, r10\n\tjump.ne\t@.BB17_41\n\tsub!\tstack-[4], r1, r4\n\tjump.eq\t@.BB17_43\n\tjump\t@.BB17_4\n.BB17_41:\n\tdiv\tr6, r4, r4, r10\n\tsub.s!\t@CPI17_1[0], r4, r4\n\tadd\tstack-[8], r0, r4\n\tor.ne\t1, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB17_4\n.BB17_43:\n\tsub!\tr15, r0, r4\n\tjump.eq\t@.BB17_45\n\tdiv\tr5, r15, r4, r5\n\tsub!\tr4, r15, r4\n\tjump.ne\t@.BB17_4\n.BB17_45:\n\tmul\tr2, r11, r5, r4\n\tsub!\tr1, r0, r4\n\tadd\tr0, r0, r10\n\tjump.eq\t@.BB17_50\n\tdiv\tr5, r11, r4, r10\n\tsub!\tr4, r2, r2\n\tjump.ne\t@.BB17_4\n\tdiv\tr8, r1, r2, r4\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB17_4\n\tsub.s!\t@CPI17_1[0], r8, r2\n\tadd\tr0, r0, r10\n\tjump.lt\t@.BB17_50\n\tadd\tstack-[5], r0, r10\n\tdiv\tr10, r9, r2, r4\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB17_4\n.BB17_50:\n\tdiv.s\t@CPI17_1[0], r5, r2, r4\n\tdiv.s\t@CPI17_1[0], r10, r4, r5\n\tadd!\tr4, r2, r2\n\tjump.eq\t@.BB17_8\n\tdiv\tr6, r2, r5, r4\n\tsub!\tr2, r6, r2\n\tjump.le\t@.BB17_53\n\tsub!\tr12, r7, r2\n\tadd\tr15, r0, r2\n\tjump.eq\t@.BB17_88\n\tsub!\tr15, r0, r2\n\tjump.eq\t@.BB17_4\n\tsub.s\t1, r15, r5\n\tsub!\tr1, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB17_60\n\tsub\tr3, r1, r2\n\tdiv\tr2, r1, r3, r4\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB17_4\n\tdiv.s\t@CPI17_1[0], r2, r2, r3\n\tdiv\tr8, r1, r3, r4\n\tsub!\tr3, r1, r3\n\tjump.ne\t@.BB17_4\n.BB17_60:\n\tmul\tr5, r5, r3, r4\n\tsub!\tr5, r0, r4\n\tjump.eq\t@.BB17_62\n\tdiv\tr3, r5, r4, r6\n\tsub!\tr4, r5, r4\n\tjump.ne\t@.BB17_4\n.BB17_62:\n\tdiv.s\t@CPI17_1[0], r3, r3, r4\n\tadd\tr3, r9, r4\n\tmul\tr2, r4, r3, r5\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB17_56\n\tdiv\tr3, r2, r2, r5\n\tsub!\tr2, r4, r2\n\tjump.ne\t@.BB17_4\n.BB17_56:\n\tadd\t1, r0, r5\n\tdiv.s\t@CPI17_1[0], r3, r2, r3\n\tsub!\tr2, r7, r2\n\tadd\tr15, r0, r2\n\tjump.lt\t@.BB17_88\n.BB17_53:\n\tsub!\tr15, r5, r2\n\tjump.lt\t@.BB17_4\n\tsub\tr15, r5, r15\n\tjump\t@.BB17_39\n.BB17_88:\n\tsub!\tstack-[2], r2, r1\n\tjump.lt\t@.BB17_4\n\tsub!\tstack-[1], r0, r1\n\tadd\tr13, r0, r1\n\tadd.eq\tstack-[7], r0, r1\n\tsub\tstack-[2], r2, r3\n\tadd\tr1, r0, r5\n\tmul\tr1, r3, r1, r4\n\tsub!\tstack-[2], r2, r2\n\tjump.eq\t@.BB17_91\n\tdiv\tr1, r3, r2, r3\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB17_4\n.BB17_91:\n\tdiv.s\t@CPI17_1[0], r1, r1, r2\n.BB17_1:\n\tret\n.BB17_4:\n\tadd\t@CPI17_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n.BB17_5:\n\tst.1\t4, r1\n\tadd\t@CPI17_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_38:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI17_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t2, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI17_5[0], r0, r2\n\tsub.s!\t@CPI17_5[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI17_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB17_8:\n\tadd\t@CPI17_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t18, r0, r1\n\tjump\t@.BB17_5\n.func_end17:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin18:\n\tadd\t@CPI19_0[0], r0, r3\n\tsub.s!\t@CPI19_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI19_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI19_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI19_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB19_2\n\tld\tr1, r1\n\tret\n.BB19_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end18:\n\n__system_request:\n.func_begin19:\n\tadd\tr1, r0, r5\n\tst.2\t0, r2\n\tsub.s!\t5, r3, r1\n\tjump.lt\t@.BB20_4\n\tadd\t4, r0, r1\n\tadd\tr0, r0, r2\n.BB20_3:\n\tshl.s\t5, r2, r6\n\tadd\tr4, r6, r6\n\tshr.s\t5, r6, r6\n\tadd\tstack[r6], r0, r6\n\tst.2.inc\tr1, r6, r1\n\tadd\t1, r2, r2\n\tsub!\tr1, r3, r6\n\tjump.lt\t@.BB20_3\n.BB20_4:\n\tadd\t@CPI20_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI20_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI20_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI20_1[0], r1, r1\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB20_5\n\tld\tr1, r1\n\tret\n.BB20_5:\n\trevert\n.func_end19:\n\n__farcall:\n.func_begin20:\n.tmp0:\n\tfar_call\tr1, r2, @.BB21_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB21_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end20:\n\n__staticcall:\n.func_begin21:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB22_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB22_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end21:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI5_1:\nCPI7_1:\nCPI10_1:\nCPI14_10:\nCPI15_1:\nCPI16_3:\nCPI17_5:\nCPI19_0:\nCPI20_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 22163329580580053030292883849319169862539958002407764210677428189014622470144\nCPI0_2:\nCPI5_3:\nCPI7_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_3:\nCPI12_0:\nCPI14_0:\n\t.cell 18446744073709551616\nCPI0_4:\nCPI9_0:\nCPI14_1:\nCPI15_8:\nCPI16_4:\n\t.cell 18446744073709551615\nCPI0_5:\n\t.cell -4378011421452794913566920378714311891690811000051339835953921858539404653249\nCPI0_6:\n\t.cell 904625697166532776746648320380374280103671755200316913641812099366289145856\nCPI0_7:\n\t.cell 904625697166532776746648320380374280103671755200316915412699530442406100992\nCPI0_8:\nCPI10_4:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_9:\nCPI10_5:\nCPI15_2:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_10:\nCPI10_6:\n\t.cell -52716064676786082020591434766380454285206545917311776621925683646084292198385\nCPI0_11:\n\t.cell 18446744073709551423\nCPI0_12:\n\t.cell 53919893334301279589334030174039261387839108057106852292971368284160\nCPI0_13:\n\t.cell 2309999427\nCPI0_14:\n\t.cell 3259367099\nCPI0_15:\n\t.cell 3573918926\nCPI0_16:\n\t.cell 3837506983\nCPI0_17:\n\t.cell 4047545177\nCPI0_18:\n\t.cell 4047545178\nCPI0_19:\n\t.cell 4294363881\nCPI0_20:\n\t.cell 3837506984\nCPI0_21:\n\t.cell 3958059483\nCPI0_22:\n\t.cell 3573918927\nCPI0_23:\n\t.cell 3714247998\nCPI0_24:\n\t.cell 3829808818\nCPI0_25:\n\t.cell 3312454145\nCPI0_26:\n\t.cell 3312454146\nCPI0_27:\n\t.cell 3524403367\nCPI0_28:\n\t.cell 3532976275\nCPI0_29:\n\t.cell 3259367100\nCPI0_30:\n\t.cell 3294232917\nCPI0_31:\n\t.cell 3296657447\nCPI0_32:\n\t.cell 2712423698\nCPI0_33:\n\t.cell 3156594550\nCPI0_34:\n\t.cell 3156594551\nCPI0_35:\n\t.cell 3181616301\nCPI0_36:\n\t.cell 3214167484\nCPI0_37:\n\t.cell 2712423699\nCPI0_38:\n\t.cell 2835717307\nCPI0_39:\n\t.cell 3092021830\nCPI0_40:\n\t.cell 2640544905\nCPI0_41:\n\t.cell 2640544906\nCPI0_42:\n\t.cell 2660024395\nCPI0_43:\n\t.cell 2675342472\nCPI0_44:\n\t.cell 2309999428\nCPI0_45:\n\t.cell 2323352818\nCPI0_46:\n\t.cell 2514000705\nCPI0_47:\n\t.cell 826074470\nCPI0_48:\n\t.cell 1297784713\nCPI0_49:\n\t.cell 1784838209\nCPI0_50:\n\t.cell 2127478271\nCPI0_51:\n\t.cell 2127478272\nCPI0_52:\n\t.cell 2226133358\nCPI0_53:\n\t.cell 1784838210\nCPI0_54:\n\t.cell 1889567281\nCPI0_55:\n\t.cell 1297784714\nCPI0_56:\n\t.cell 1484899445\nCPI0_57:\n\t.cell 1517744734\nCPI0_58:\n\t.cell 910484756\nCPI0_59:\n\t.cell 910484757\nCPI0_60:\n\t.cell 959395817\nCPI0_61:\n\t.cell 1144829116\nCPI0_62:\n\t.cell 826074471\nCPI0_63:\n\t.cell 851500797\nCPI0_64:\n\t.cell 861407577\nCPI0_65:\n\t.cell 404098524\nCPI0_66:\n\t.cell 582893024\nCPI0_67:\n\t.cell 582893025\nCPI0_68:\n\t.cell 599290589\nCPI0_69:\n\t.cell 623643095\nCPI0_70:\n\t.cell 404098525\nCPI0_71:\n\t.cell 502843159\nCPI0_72:\n\t.cell 542813169\nCPI0_73:\n\t.cell 157198258\nCPI0_74:\n\t.cell 157198259\nCPI0_75:\n\t.cell 234755713\nCPI0_76:\n\t.cell 322199521\nCPI0_77:\n\t.cell 36441503\nCPI0_78:\n\t.cell 117300739\nCPI0_79:\n\t.cell 151187884\nCPI0_80:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_81:\nCPI4_1:\nCPI5_0:\nCPI6_0:\nCPI7_0:\nCPI10_3:\nCPI14_7:\nCPI16_1:\nCPI17_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_82:\n\t.cell 2852213852874699394802404818944\nCPI0_83:\nCPI3_1:\nCPI5_7:\nCPI7_6:\nCPI8_2:\nCPI9_2:\nCPI10_10:\nCPI11_1:\nCPI12_5:\nCPI13_6:\nCPI14_13:\nCPI15_15:\nCPI16_9:\nCPI17_8:\n\t.cell 2852213850513516153367582212096\nCPI0_84:\n\t.cell -31057657358475560098231613780313020108526273020757914077938932530853542100992\nCPI0_85:\n\t.cell 316912652418240591808998408192\nCPI0_86:\n\t.cell -23367085456799688994038489808880382836936523016162438770816765911573133787136\nCPI0_87:\nCPI14_6:\nCPI17_0:\n\t.cell 372682917519380244141939632342652170012262798458880\nCPI0_88:\n\t.cell 5387515053331158197795811229696\nCPI0_89:\n\t.cell 2535301200456458802993406410752\nCPI0_90:\n\t.cell 2535301202817642044428229017600\nCPI0_91:\n\t.cell 9633414199256028156272642408006012198965134694827194108455301696973776617472\nCPI0_92:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_93:\n\t.cell 32017771883072688986050446777810422757384271378422981878074939951012248551424\nCPI0_94:\n\t.cell -374144419156711147060143317175368453031918731001856\nCPI0_95:\n\t.cell 452316022952144118982707527346235929965418475024539480875367794691889133265\nCPI0_96:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_97:\n\t.cell 904625697166532776746648320380374280103671770729036759354072543396435591168\nCPI0_98:\n\t.cell -48014764309337086638577053839674919990906578673186746930859508663338879942656\nCPI0_99:\nCPI16_12:\n\t.cell 316912650057057350374175801344\nCPI0_100:\nCPI4_0:\nCPI16_7:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_101:\n\t.cell 8589934560\nCPI0_102:\n\t.cell 37747592814811229884261970914892823269754301392482432915196248412080658448384\nCPI0_103:\n\t.cell 21258703883413520253546235528938795582436286247207447304119165813952801144832\nCPI0_104:\n\t.cell 49791959467252497455735130940088646708311117250336157395101362029847983277999\nCPI0_105:\n\t.cell 52131356165748324091040514211091654724833092395820490916669183070322158469120\nCPI0_106:\n\t.cell -26074275084009875412389268311263347690013120251023914000470397511746302913880\nCPI0_107:\n\t.cell 39095773018331184668782612376698722853767346514649257457592164003236877959168\nCPI0_108:\n\t.cell 53488294711498123256160486691662216144988600028620966276506576632914890457088\nCPI0_109:\n\t.cell 22270923681254677845691103109158760375340177724800803888364822332811285364736\nCPI0_110:\nCPI15_0:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_111:\nCPI5_2:\nCPI7_2:\nCPI15_12:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_112:\n\t.cell 49955707469362902507454157297736832118868343942642399513960811609542965143241\nCPI0_113:\n\t.cell 18446744073709551391\nCPI0_114:\nCPI10_8:\nCPI19_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_115:\n\t.cell 11309588061646438093662687302255421419811724423900836950936401294474059186176\nCPI0_116:\n\t.cell 904625697166532776746648320380374280103671760429375632499708656235722047488\nCPI0_117:\n\t.cell 57896044618658097711785492504343953926418782139537452191302581570759080747168\nCPI0_118:\n\t.cell 10141204801825835211973625643008\nCPI0_119:\n\t.cell 34149718579681734090623783807632257043644090228937683185826250611175605665792\nCPI0_120:\n\t.cell 5387515050969974956360988622848\nCPI0_121:\n\t.cell -4399567410664312436217910391711023685490938802098584046133129080549566054400\nCPI0_122:\n\t.cell -18297812966642927639546323119482596956946477707846785379148242173554237374464\nCPI0_123:\n\t.cell 44540578843098772919478587545923646303017899474682238397713263778553124618240\nCPI0_124:\nCPI14_2:\nCPI17_1:\n\t.cell 1000000000000000000\nCPI0_125:\nCPI16_5:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_126:\nCPI16_6:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_127:\n\t.cell 37649673737901790415920622362421473532531796165575621547719130862921684353024\nCPI0_128:\nCPI14_11:\nCPI17_6:\n\t.cell 7922816251426433759354395033600\nCPI0_129:\n\t.cell -55018509506957013707887157971115047208745859524450481704115902398512848353723\nCPI0_130:\n\t.cell 5070602400912917605986812821504\nCPI0_131:\n\t.cell 54038286268573378260652643101438972660160464599309777688742493174417596612608\nCPI0_132:\n\t.cell -26516712553647589717093905249492982307195025179687560143066918221332902576128\nCPI0_133:\n\t.cell 5070602403274100847421635428352\nCPI0_134:\n\t.cell 7605903601369376408980219232256\nCPI0_135:\nCPI5_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_136:\n\t.cell 42238761236407630521426475138367866023794373415274051999927338491284959424418\nCPI0_137:\nCPI5_5:\n\t.cell -12521951952277481918037692698396753805066444367861040067922658107645432430592\nCPI0_138:\nCPI5_8:\n\t.cell -47593579280375979043157453241769130281332370874351131709864197298683662827520\nCPI0_139:\n\t.cell 52728925747023526528671185745082485612569979568960435987380859386773542797312\nCPI0_140:\nCPI10_0:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_141:\nCPI10_2:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_142:\n\t.cell 18446744073709551551\nCPI0_143:\n\t.cell -34684677630052190773999176006577974427879312898233739369776509575790472462336\nCPI0_144:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699760\nCPI0_145:\n\t.cell 18446744073709551583\nCPI0_146:\n\t.cell 6784692728748995825599862402852807100777538164002376799186967812963659939840\nCPI0_147:\n\t.cell 340282366920938463463374607431768211456\nCPI0_148:\n\t.cell 4294967296\nCPI0_149:\n\t.cell 65536\nCPI0_150:\n\t.cell 4531686489543004179925821931169004389961614109304209276876278518724956258304\nCPI0_151:\n\t.cell 10000000000999999999999999999\nCPI0_152:\n\t.cell 30554492577608874171625669312264651280038930740436526329224226270359729471488\nCPI0_153:\n\t.cell 34433387951413595430405412356854898828466764899293492449908537295105018698831\nCPI0_154:\nCPI5_6:\n\t.cell -8925786854382365140803610566892621886666030076708212855559399484773745295360\nCPI0_155:\n\t.cell -20737526596019630974330038340103472111283642844317327325577812128275672072192\nCPI0_156:\n\t.cell 17747108405556394862388667482112\nCPI0_157:\nCPI7_5:\n\t.cell -48779021399624352913043740871316806255710487544085296571819983744317932961792\nCPI0_158:\nCPI7_7:\n\t.cell -11755061144800301697569464646051016592542027884323852438436504014981133500416\nCPI0_159:\n\t.cell -2008451700269974843276142548484964856347179961252680468036279050352537370624\nCPI0_160:\nCPI3_2:\nCPI12_1:\nCPI14_3:\nCPI15_9:\n\t.cell 12396694973890998440467380340983585058878106250672390494374587083972727727730\nCPI0_161:\nCPI12_2:\nCPI14_4:\nCPI15_10:\n\t.cell 12396694973890998440467380340983585058878106250672390494374587083972727727731\nCPI0_162:\nCPI12_3:\nCPI14_5:\nCPI15_11:\n\t.cell 12396694973890998440467380340983585058878106250672390494374587083972727727732\nCPI0_163:\nCPI14_8:\nCPI17_3:\n\t.cell 15140112498085975320199276283866068762125709512327178852144043538876458860544\nCPI0_164:\nCPI14_9:\nCPI17_4:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_165:\nCPI3_0:\nCPI8_1:\nCPI9_1:\nCPI10_9:\nCPI11_0:\nCPI12_4:\nCPI13_5:\nCPI14_12:\nCPI15_14:\nCPI16_13:\nCPI17_7:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_166:\n\t.cell 7605903603730559650415041839104\nCPI0_167:\n\t.cell -35492885229795446028718726126219946399901845146527080990104266978751951142912\nCPI0_168:\n\t.cell 8610987203847007328997675127872011251770420152532597128224864464653277724672\nCPI0_169:\n\t.cell -45916825159053452022547107729354003136974792453018082526641586908179986382848\nCPI0_170:\n\t.cell 4294967131\nCPI0_171:\n\t.cell 12993418652339351365341207855104\nCPI0_172:\nCPI16_0:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_173:\n\t.cell 18446744073709551487\nCPI0_174:\nCPI16_8:\n\t.cell 37295821876700504889304837296037907613075394649501056392550260273557750677504\nCPI0_175:\n\t.cell 7767317892464343303709013257609568610755019555611695305889318800690079499778\nCPI0_176:\nCPI16_10:\n\t.cell -46321960365604724831933507365171173232996739913398926471486875190478029979648\nCPI0_177:\nCPI16_11:\n\t.cell 9113247101063757011529551392225999353373832475738586725164814963572685668352\nCPI0_178:\n\t.cell 904625697166532776746648320380374280103671765341521708384097587035446968320\nCPI0_179:\n\t.cell -34427959139916582974453101513000039435543408645107661677695678090218198861989\nCPI0_180:\n\t.cell -39262370378904447504763483974981479945937676564469248189752899528986577600512\nCPI0_181:\n\t.cell 4324726598716302260147914757829457190740922089181611416925585458497742438400\nCPI0_182:\n\t.cell 18572444345600177701506829100716694955630299483255791766569441378277752045568\nCPI0_183:\n\t.cell 29937650858100787566517833839097683134580629357011763186156076864006774587392\nCPI0_184:\n\t.cell 28449210373611454402985489541711497976320196644878638971820198805980867198976\nCPI7_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI8_0:\nCPI13_0:\nCPI15_3:\n\t.cell 18446744073709551520\nCPI10_7:\n\t.cell 18446744073709551424\nCPI13_1:\nCPI15_4:\n\t.cell 18446744073709551519\nCPI13_2:\nCPI15_5:\n\t.cell 12396694973890998440467380340983585058878106250672390494374587083972727727727\nCPI13_3:\nCPI15_6:\n\t.cell 12396694973890998440467380340983585058878106250672390494374587083972727727728\nCPI13_4:\nCPI15_7:\n\t.cell 12396694973890998440467380340983585058878106250672390494374587083972727727729\nCPI15_13:\n\t.cell -22087982987520980103566455225833509489459796863402418530143639289919840877430\nCPI16_2:\n\t.cell 18446744073709551488\nCPI20_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\n","bytecode":{"object":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","blockTimestampLast()":"c5700a02","burn(address)":"89afcb44","claimFees()":"d294f093","claimable0(address)":"4d5a9f8a","claimable1(address)":"a1ac4d13","currentCumulativePrices()":"1df8c717","decimals()":"313ce567","eip712Domain()":"84b0196e","factory()":"c45a0155","getAmountOut(uint256,address)":"f140a35a","getReserves()":"0902f1ac","index0()":"32c0defd","index1()":"bda39cad","initialize(address,address,bool)":"e4bbb5a8","lastObservation()":"8a7b8cf2","metadata()":"392f37e9","mint(address)":"6a627842","name()":"06fdde03","nonces(address)":"7ecebe00","observationLength()":"ebeb31db","observations(uint256)":"252c09d7","periodSize()":"e4463eb2","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","poolFees()":"33580959","prices(address,uint256,uint256)":"5881c475","quote(address,uint256,uint256)":"9e8cc04b","reserve0()":"443cb4bc","reserve0CumulativeLast()":"bf944dbc","reserve1()":"5a76f25e","reserve1CumulativeLast()":"c245febc","sample(address,uint256,uint256,uint256)":"13345fe1","setName(string)":"c47f0027","setSymbol(string)":"b84c8246","skim(address)":"bc25cf77","stable()":"22be3de1","supplyIndex0(address)":"9f767c88","supplyIndex1(address)":"205aabf1","swap(uint256,uint256,address,bytes)":"022c0d9f","symbol()":"95d89b41","sync()":"fff6cae9","token0()":"0dfe1681","token1()":"d21220a7","tokens()":"9d63848a","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/interfaces/IERC5267.sol\", 1:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\", 6:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 7:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"@openzeppelin/contracts/utils/Nonces.sol\", 12:\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\", 13:\"@openzeppelin/contracts/utils/ShortStrings.sol\", 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\", 17:\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\", 21:\"contracts/Pool.sol\", 24:\"contracts/interfaces/IPool.sol\"\nobject \"Pool_6412\" {\n    code {\n        {\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            let _1 := memoryguard(0x0160)\n            let _2 := 64\n            mstore(_2, _1)\n            if callvalue() { revert(0, 0) }\n            finalize_allocation(_1)\n            /// @src -1:-1:-1\n            let _3 := 0\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            mstore(_1, /** @src -1:-1:-1 */ _3)\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            let memPtr := mload(_2)\n            finalize_allocation(memPtr)\n            mstore(memPtr, /** @src -1:-1:-1 */ _3)\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            let memPtr_1 := mload(_2)\n            finalize_allocation(memPtr_1)\n            mstore(memPtr_1, /** @src -1:-1:-1 */ _3)\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            let memPtr_2 := mload(_2)\n            let newFreePtr := add(memPtr_2, _2)\n            let _4 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _4), lt(newFreePtr, memPtr_2))\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n            }\n            mstore(_2, newFreePtr)\n            let _5 := 1\n            mstore(memPtr_2, _5)\n            let _6 := 0x20\n            let _7 := add(memPtr_2, _6)\n            mstore(_7, \"1\")\n            let newLen := mload(memPtr)\n            if gt(newLen, _4)\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n            }\n            /// @src 3:1962:1975  \"_name = name_\"\n            let _8 := 0x03\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            let _9 := sload(/** @src 3:1962:1975  \"_name = name_\" */ _8)\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            let length := /** @src -1:-1:-1 */ _3\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            length := shr(_5, _9)\n            let outOfPlaceEncoding := and(_9, _5)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _6))\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n            }\n            let _10 := 31\n            if gt(length, _10)\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 3:1962:1975  \"_name = name_\" */ _8)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _6)\n                let deleteStart := add(data, shr(5, add(newLen, _10)))\n                if lt(newLen, _6) { deleteStart := data }\n                let _11 := add(data, shr(5, add(length, _10)))\n                let start := deleteStart\n                for { } lt(start, _11) { start := add(start, _5) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _3)\n                }\n            }\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            let srcOffset := /** @src -1:-1:-1 */ _3\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            srcOffset := _6\n            switch gt(newLen, _10)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 3:1962:1975  \"_name = name_\" */ _8)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _6)\n                let i := /** @src -1:-1:-1 */ _3\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                for { } lt(i, loopEnd) { i := add(i, _6) }\n                {\n                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                    dstPtr := add(dstPtr, _5)\n                    srcOffset := add(srcOffset, _6)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 3:1962:1975  \"_name = name_\" */ _8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 3:1962:1975  \"_name = name_\" */ _8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(_5, newLen), _5))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ _3\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                if newLen\n                {\n                    value := mload(add(memPtr, srcOffset))\n                }\n                sstore(/** @src 3:1962:1975  \"_name = name_\" */ _8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(value, not(shr(shl(/** @src 3:1962:1975  \"_name = name_\" */ _8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen), not(0)))), shl(_5, newLen)))\n            }\n            let newLen_1 := mload(memPtr_1)\n            if gt(newLen_1, _4)\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ 0x04, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n            }\n            /// @src 3:1985:2002  \"_symbol = symbol_\"\n            let _12 := 0x04\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            let _13 := sload(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12)\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            let length_1 := /** @src -1:-1:-1 */ _3\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            length_1 := shr(_5, _13)\n            let outOfPlaceEncoding_1 := and(_13, _5)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _6))\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n            }\n            if gt(length_1, _10)\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 3:1985:2002  \"_symbol = symbol_\" */ _12)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _6)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _10)))\n                if lt(newLen_1, _6) { deleteStart_1 := data_1 }\n                let _14 := add(data_1, shr(5, add(length_1, _10)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _14) { start_1 := add(start_1, _5) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ _3)\n                }\n            }\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ _3\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            srcOffset_1 := _6\n            switch gt(newLen_1, _10)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 3:1985:2002  \"_symbol = symbol_\" */ _12)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _6)\n                let i_1 := /** @src -1:-1:-1 */ _3\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _6) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _5)\n                    srcOffset_1 := add(srcOffset_1, _6)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 3:1962:1975  \"_name = name_\" */ _8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(_5, newLen_1), _5))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ _3\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(memPtr_1, srcOffset_1))\n                }\n                sstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(value_1, not(shr(shl(/** @src 3:1962:1975  \"_name = name_\" */ _8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen_1), not(0)))), shl(_5, newLen_1)))\n            }\n            /// @src 17:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\"\n            let _15 := fun_toShortStringWithFallback_6855(_1)\n            /// @src 17:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n            let _16 := 288\n            mstore(_16, /** @src 17:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\" */ _15)\n            /// @src 17:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\"\n            let _17 := fun_toShortStringWithFallback(memPtr_2)\n            /// @src 17:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n            let _18 := 320\n            mstore(_18, /** @src 17:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\" */ _17)\n            /// @src 17:3542:3564  \"keccak256(bytes(name))\"\n            let _19 := keccak256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 17:3542:3564  \"keccak256(bytes(name))\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _6), mload(/** @src 17:3542:3564  \"keccak256(bytes(name))\" */ _1))\n            /// @src 17:3528:3564  \"_hashedName = keccak256(bytes(name))\"\n            mstore(224, /** @src 17:3542:3564  \"keccak256(bytes(name))\" */ _19)\n            /// @src 17:3591:3616  \"keccak256(bytes(version))\"\n            let _20 := keccak256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _7, mload(/** @src 17:3591:3616  \"keccak256(bytes(version))\" */ memPtr_2))\n            /// @src 17:3574:3616  \"_hashedVersion = keccak256(bytes(version))\"\n            let _21 := 256\n            mstore(_21, /** @src 17:3591:3616  \"keccak256(bytes(version))\" */ _20)\n            /// @src 17:3627:3657  \"_cachedChainId = block.chainid\"\n            mstore(160, /** @src 17:3644:3657  \"block.chainid\" */ chainid())\n            /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n            let expr_mpos := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_2)\n            /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n            let _22 := add(expr_mpos, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _6)\n            /// @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n            mstore(_22, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n            mstore(add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2), /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _19)\n            mstore(add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), _20)\n            mstore(add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 17:3644:3657  \"block.chainid\" */ chainid())\n            /// @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n            mstore(add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:3627:3657  \"_cachedChainId = block.chainid\" */ 160), /** @src 17:4278:4282  \"this\" */ address())\n            /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n            mstore(expr_mpos, /** @src 17:3627:3657  \"_cachedChainId = block.chainid\" */ 160)\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            let newFreePtr_1 := add(expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            if or(gt(newFreePtr_1, _4), lt(newFreePtr_1, expr_mpos))\n            {\n                mstore(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n            }\n            mstore(_2, newFreePtr_1)\n            /// @src 17:3667:3715  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n            mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128, /** @src 17:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _22, mload(/** @src 17:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n            /// @src 17:3725:3752  \"_cachedThis = address(this)\"\n            mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192, /** @src 17:4278:4282  \"this\" */ address())\n            /// @src 12:1713:1714  \"1\"\n            sstore(/** @src 12:1917:1938  \"_status = NOT_ENTERED\" */ 0x08, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _5)\n            let _23 := datasize(\"Pool_6412_deployed\")\n            codecopy(newFreePtr_1, dataoffset(\"Pool_6412_deployed\"), _23)\n            setimmutable(newFreePtr_1, \"2716\", mload(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128))\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            setimmutable(newFreePtr_1, \"2718\", mload(/** @src 17:3627:3657  \"_cachedChainId = block.chainid\" */ 160))\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            setimmutable(newFreePtr_1, \"2720\", mload(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192))\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            setimmutable(newFreePtr_1, \"2722\", mload(/** @src 17:3528:3564  \"_hashedName = keccak256(bytes(name))\" */ 224))\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            setimmutable(newFreePtr_1, \"2724\", mload(/** @src 17:3574:3616  \"_hashedVersion = keccak256(bytes(version))\" */ _21))\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            setimmutable(newFreePtr_1, \"2727\", mload(/** @src 17:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ _16))\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            setimmutable(newFreePtr_1, \"2730\", mload(/** @src 17:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ _18))\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            return(newFreePtr_1, _23)\n        }\n        function finalize_allocation(memPtr)\n        {\n            let newFreePtr := add(memPtr, 0x20)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        /// @ast-id 1923 @src 13:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n        function fun_toShortStringWithFallback_6855(var_value_mpos) -> var\n        {\n            /// @src 13:3037:3056  \"bytes(value).length\"\n            let expr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 13:3037:3049  \"bytes(value)\" */ var_value_mpos)\n            /// @src 13:3059:3061  \"32\"\n            let _1 := 0x20\n            /// @src 13:3033:3248  \"if (bytes(value).length < 32) {...\"\n            switch /** @src 13:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 13:3059:3061  \"32\" */ _1)\n            case /** @src 13:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                if gt(expr, sub(shl(64, 1), 1))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 17:3432:3445  \"_nameFallback\"\n                let _2 := 0x05\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let _3 := sload(/** @src 17:3432:3445  \"_nameFallback\" */ _2)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let length := /** @src -1:-1:-1 */ 0\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let _4 := 1\n                length := shr(_4, _3)\n                let outOfPlaceEncoding := and(_3, _4)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, /** @src 13:3059:3061  \"32\" */ _1))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                }\n                if gt(length, 31)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 17:3432:3445  \"_nameFallback\" */ _2)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:3059:3061  \"32\" */ _1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _5 := add(data, shr(/** @src 17:3432:3445  \"_nameFallback\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(length, 31)))\n                    let start := add(data, shr(/** @src 17:3432:3445  \"_nameFallback\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(expr, 31)))\n                    for { } lt(start, _5) { start := add(start, _4) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ 0)\n                    }\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                srcOffset := /** @src 13:3059:3061  \"32\" */ _1\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                switch gt(expr, 31)\n                case 1 {\n                    let loopEnd := and(expr, not(31))\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 17:3432:3445  \"_nameFallback\" */ _2)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:3059:3061  \"32\" */ _1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    for { }\n                    lt(i, loopEnd)\n                    {\n                        i := add(i, /** @src 13:3059:3061  \"32\" */ _1)\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    {\n                        sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                        dstPtr := add(dstPtr, _4)\n                        srcOffset := add(srcOffset, /** @src 13:3059:3061  \"32\" */ _1)\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    if lt(loopEnd, expr)\n                    {\n                        let lastValue := mload(add(var_value_mpos, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                    }\n                    sstore(/** @src 17:3432:3445  \"_nameFallback\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(_4, expr), _4))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    if expr\n                    {\n                        value := mload(add(var_value_mpos, srcOffset))\n                    }\n                    sstore(/** @src 17:3432:3445  \"_nameFallback\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(_4, expr)))\n                }\n                /// @src 13:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                var := /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                /// @src 13:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                leave\n            }\n            default /// @src 13:3033:3248  \"if (bytes(value).length < 32) {...\"\n            {\n                /// @src 13:1836:1908  \"if (bstr.length > 31) {...\"\n                if /** @src 13:1840:1856  \"bstr.length > 31\" */ gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 13:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 13:1854:1856  \"31\" */ 0x1f)\n                /// @src 13:1836:1908  \"if (bstr.length > 31) {...\"\n                {\n                    /// @src 13:1879:1897  \"StringTooLong(str)\"\n                    let _6 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 13:1879:1897  \"StringTooLong(str)\"\n                    mstore(_6, shl(224, 0x305a27a9))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 13:1879:1897  \"StringTooLong(str)\" */ add(_6, 4), /** @src 13:3059:3061  \"32\" */ _1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let length_1 := mload(var_value_mpos)\n                    mstore(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36), length_1)\n                    let i_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    for { }\n                    lt(i_1, length_1)\n                    {\n                        i_1 := add(i_1, /** @src 13:3059:3061  \"32\" */ _1)\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    {\n                        mstore(add(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 13:3059:3061  \"32\" */ _1)))\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(add(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                    /// @src 13:1879:1897  \"StringTooLong(str)\"\n                    revert(_6, add(sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(add(length_1, /** @src 13:1854:1856  \"31\" */ 0x1f), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ not(31))), /** @src 13:1879:1897  \"StringTooLong(str)\" */ _6), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 68))\n                }\n                /// @src 13:1957:1970  \"bytes32(bstr)\"\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let length_2 := mload(var_value_mpos)\n                value_1 := mload(add(var_value_mpos, /** @src 13:3059:3061  \"32\" */ _1))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                if lt(length_2, /** @src 13:3059:3061  \"32\" */ _1)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                {\n                    value_1 := and(value_1, shl(shl(3, sub(/** @src 13:3059:3061  \"32\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_2)), not(0)))\n                }\n                /// @src 13:3077:3104  \"return toShortString(value)\"\n                var := /** @src 13:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_2)\n                /// @src 13:3077:3104  \"return toShortString(value)\"\n                leave\n            }\n        }\n        /// @ast-id 1923 @src 13:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n        function fun_toShortStringWithFallback(var_value_mpos) -> var\n        {\n            /// @src 13:3037:3056  \"bytes(value).length\"\n            let expr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 13:3037:3049  \"bytes(value)\" */ var_value_mpos)\n            /// @src 13:3059:3061  \"32\"\n            let _1 := 0x20\n            /// @src 13:3033:3248  \"if (bytes(value).length < 32) {...\"\n            switch /** @src 13:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 13:3059:3061  \"32\" */ _1)\n            case /** @src 13:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                if gt(expr, sub(shl(64, 1), 1))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                let _2 := sload(/** @src 17:3501:3517  \"_versionFallback\" */ 0x06)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let length := /** @src -1:-1:-1 */ 0\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let _3 := 1\n                length := shr(_3, _2)\n                let outOfPlaceEncoding := and(_2, _3)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, /** @src 13:3059:3061  \"32\" */ _1))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                }\n                if gt(length, 31)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 17:3501:3517  \"_versionFallback\" */ 0x06)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:3059:3061  \"32\" */ _1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _4 := add(data, shr(5, add(length, 31)))\n                    let start := add(data, shr(5, add(expr, 31)))\n                    for { } lt(start, _4) { start := add(start, _3) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ 0)\n                    }\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let srcOffset := /** @src -1:-1:-1 */ 0\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                srcOffset := /** @src 13:3059:3061  \"32\" */ _1\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                switch gt(expr, 31)\n                case 1 {\n                    let loopEnd := and(expr, not(31))\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 17:3501:3517  \"_versionFallback\" */ 0x06)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:3059:3061  \"32\" */ _1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    for { }\n                    lt(i, loopEnd)\n                    {\n                        i := add(i, /** @src 13:3059:3061  \"32\" */ _1)\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    {\n                        sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                        dstPtr := add(dstPtr, _3)\n                        srcOffset := add(srcOffset, /** @src 13:3059:3061  \"32\" */ _1)\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    if lt(loopEnd, expr)\n                    {\n                        let lastValue := mload(add(var_value_mpos, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                    }\n                    sstore(/** @src 17:3501:3517  \"_versionFallback\" */ 0x06, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(_3, expr), _3))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ 0\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    if expr\n                    {\n                        value := mload(add(var_value_mpos, srcOffset))\n                    }\n                    sstore(/** @src 17:3501:3517  \"_versionFallback\" */ 0x06, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(_3, expr)))\n                }\n                /// @src 13:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                var := /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                /// @src 13:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                leave\n            }\n            default /// @src 13:3033:3248  \"if (bytes(value).length < 32) {...\"\n            {\n                /// @src 13:1836:1908  \"if (bstr.length > 31) {...\"\n                if /** @src 13:1840:1856  \"bstr.length > 31\" */ gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 13:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 13:1854:1856  \"31\" */ 0x1f)\n                /// @src 13:1836:1908  \"if (bstr.length > 31) {...\"\n                {\n                    /// @src 13:1879:1897  \"StringTooLong(str)\"\n                    let _5 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 13:1879:1897  \"StringTooLong(str)\"\n                    mstore(_5, shl(224, 0x305a27a9))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 13:1879:1897  \"StringTooLong(str)\" */ add(_5, 4), /** @src 13:3059:3061  \"32\" */ _1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let length_1 := mload(var_value_mpos)\n                    mstore(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36), length_1)\n                    let i_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    for { }\n                    lt(i_1, length_1)\n                    {\n                        i_1 := add(i_1, /** @src 13:3059:3061  \"32\" */ _1)\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    {\n                        mstore(add(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 13:3059:3061  \"32\" */ _1)))\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(add(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                    /// @src 13:1879:1897  \"StringTooLong(str)\"\n                    revert(_5, add(sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(add(length_1, /** @src 13:1854:1856  \"31\" */ 0x1f), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ not(31))), /** @src 13:1879:1897  \"StringTooLong(str)\" */ _5), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 68))\n                }\n                /// @src 13:1957:1970  \"bytes32(bstr)\"\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let length_2 := mload(var_value_mpos)\n                value_1 := mload(add(var_value_mpos, /** @src 13:3059:3061  \"32\" */ _1))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                if lt(length_2, /** @src 13:3059:3061  \"32\" */ _1)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                {\n                    value_1 := and(value_1, shl(shl(3, sub(/** @src 13:3059:3061  \"32\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_2)), not(0)))\n                }\n                /// @src 13:3077:3104  \"return toShortString(value)\"\n                var := /** @src 13:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_2)\n                /// @src 13:3077:3104  \"return toShortString(value)\"\n                leave\n            }\n        }\n    }\n    /// @use-src 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\", 8:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\", 9:\"@openzeppelin/contracts/utils/Address.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"@openzeppelin/contracts/utils/Nonces.sol\", 12:\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\", 13:\"@openzeppelin/contracts/utils/ShortStrings.sol\", 16:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\", 17:\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\", 18:\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\", 19:\"@openzeppelin/contracts/utils/math/Math.sol\", 21:\"contracts/Pool.sol\"\n    object \"Pool_6412_deployed\" {\n        code {\n            {\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    let _2 := 224\n                    switch shr(_2, calldataload(_1))\n                    case 0x022c0d9f {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_1, _1) }\n                        let value := calldataload(68)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(_1, _1) }\n                        let offset := calldataload(100)\n                        if gt(offset, 0xffffffffffffffff) { revert(_1, _1) }\n                        let value3, value4 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                        /// @src 12:2322:2425  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let cleaned := and(sload(/** @src 21:14269:14276  \"factory\" */ 0x0f), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                        /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                        let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                        mstore(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(225, 0x58c3de93))\n                        /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                        let _4 := staticcall(gas(), cleaned, _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\" */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                        /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                        if iszero(_4)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, _1, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                        let expr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1\n                        /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                        if _4\n                        {\n                            let _5 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                            /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\" */ returndatasize()) { _5 := returndatasize() }\n                            finalize_allocation(_3, _5)\n                            expr := abi_decode_bool_fromMemory(_3, add(_3, _5))\n                        }\n                        /// @src 21:14252:14307  \"if (IPoolFactory(factory).isPaused()) revert IsPaused()\"\n                        if expr\n                        {\n                            /// @src 21:14297:14307  \"IsPaused()\"\n                            let _6 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:14297:14307  \"IsPaused()\"\n                            mstore(_6, shl(224, 0x1309a563))\n                            revert(_6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                        }\n                        /// @src 21:14321:14355  \"amount0Out == 0 && amount1Out == 0\"\n                        let expr_1 := /** @src 21:14321:14336  \"amount0Out == 0\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(4))\n                        /// @src 21:14321:14355  \"amount0Out == 0 && amount1Out == 0\"\n                        let expr_2 := expr_1\n                        if expr_1\n                        {\n                            expr_1 := /** @src 21:14340:14355  \"amount1Out == 0\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36))\n                        }\n                        /// @src 21:14317:14390  \"if (amount0Out == 0 && amount1Out == 0) revert InsufficientOutputAmount()\"\n                        if expr_1\n                        {\n                            /// @src 21:14364:14390  \"InsufficientOutputAmount()\"\n                            let _7 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:14364:14390  \"InsufficientOutputAmount()\"\n                            mstore(_7, shl(224, 0x42301c23))\n                            revert(_7, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                        }\n                        let _8 := sload(/** @src 21:14442:14450  \"reserve0\" */ 0x13)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _9 := sload(/** @src 21:14452:14460  \"reserve1\" */ 0x14)\n                        /// @src 21:14475:14498  \"amount0Out >= _reserve0\"\n                        let _10 := lt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(4), /** @src 21:14475:14498  \"amount0Out >= _reserve0\" */ _8)\n                        /// @src 21:14475:14525  \"amount0Out >= _reserve0 || amount1Out >= _reserve1\"\n                        let expr_3 := /** @src 21:14475:14498  \"amount0Out >= _reserve0\" */ iszero(_10)\n                        /// @src 21:14475:14525  \"amount0Out >= _reserve0 || amount1Out >= _reserve1\"\n                        if _10\n                        {\n                            expr_3 := /** @src 21:14502:14525  \"amount1Out >= _reserve1\" */ iszero(lt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36), /** @src 21:14502:14525  \"amount1Out >= _reserve1\" */ _9))\n                        }\n                        /// @src 21:14471:14557  \"if (amount0Out >= _reserve0 || amount1Out >= _reserve1) revert InsufficientLiquidity()\"\n                        if expr_3\n                        {\n                            /// @src 21:14534:14557  \"InsufficientLiquidity()\"\n                            let _11 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:14534:14557  \"InsufficientLiquidity()\"\n                            mstore(_11, shl(224, 0xbb55fd27))\n                            revert(_11, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                        }\n                        let cleaned_1 := and(sload(/** @src 21:14741:14747  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                        let cleaned_2 := and(sload(/** @src 21:14749:14755  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                        /// @src 21:14774:14804  \"to == _token0 || to == _token1\"\n                        let expr_4 := /** @src 21:14774:14787  \"to == _token0\" */ eq(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(value, sub(shl(160, 1), 1)), /** @src 21:14774:14787  \"to == _token0\" */ cleaned_1)\n                        /// @src 21:14774:14804  \"to == _token0 || to == _token1\"\n                        if iszero(expr_4)\n                        {\n                            expr_4 := /** @src 21:14791:14804  \"to == _token1\" */ eq(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(value, sub(shl(160, 1), 1)), cleaned_2)\n                        }\n                        /// @src 21:14770:14824  \"if (to == _token0 || to == _token1) revert InvalidTo()\"\n                        if expr_4\n                        {\n                            /// @src 21:14813:14824  \"InvalidTo()\"\n                            let _12 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:14813:14824  \"InvalidTo()\"\n                            mstore(_12, shl(227, 0x0521f431))\n                            revert(_12, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                        }\n                        /// @src 21:14838:14902  \"if (amount0Out > 0) IERC20(_token0).safeTransfer(to, amount0Out)\"\n                        if /** @src 21:14842:14856  \"amount0Out > 0\" */ iszero(expr_2)\n                        /// @src 21:14838:14902  \"if (amount0Out > 0) IERC20(_token0).safeTransfer(to, amount0Out)\"\n                        {\n                            /// @src 21:14891:14901  \"amount0Out\"\n                            fun_safeTransfer(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ cleaned_1, /** @src 21:14891:14901  \"amount0Out\" */ value, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(4))\n                        }\n                        /// @src 21:14950:15014  \"if (amount1Out > 0) IERC20(_token1).safeTransfer(to, amount1Out)\"\n                        if /** @src 21:14954:14968  \"amount1Out > 0\" */ iszero(iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36)))\n                        /// @src 21:14950:15014  \"if (amount1Out > 0) IERC20(_token1).safeTransfer(to, amount1Out)\"\n                        {\n                            /// @src 21:15003:15013  \"amount1Out\"\n                            fun_safeTransfer(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ cleaned_2, /** @src 21:15003:15013  \"amount1Out\" */ value, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36))\n                        }\n                        /// @src 21:15062:15145  \"if (data.length > 0) IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                        if /** @src 21:15066:15081  \"data.length > 0\" */ iszero(iszero(/** @src 21:15066:15077  \"data.length\" */ value4))\n                        /// @src 21:15062:15145  \"if (data.length > 0) IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                        {\n                            /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                            if iszero(extcodesize(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(value, sub(shl(160, 1), 1))))\n                            /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                            {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                            let _13 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                            mstore(_13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x9a7bff79))\n                            mstore(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ add(_13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15104:15114  \"msg.sender\" */ caller())\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36), calldataload(4))\n                            mstore(add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 68), calldataload(36))\n                            mstore(add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 100), 128)\n                            mstore(add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 132), value4)\n                            calldatacopy(add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 164), value3, value4)\n                            mstore(add(add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ value4), 164), _1)\n                            /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                            let _14 := call(gas(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(value, sub(shl(160, 1), 1)), _1, /** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, add(sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(add(value4, 31), not(31))), /** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 164), /** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                            /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                            if iszero(_14)\n                            {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let pos_1 := mload(64)\n                                returndatacopy(pos_1, _1, returndatasize())\n                                revert(pos_1, returndatasize())\n                            }\n                            /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                            if _14\n                            {\n                                finalize_allocation_35698(_13)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                _1 := _1\n                            }\n                        }\n                        /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _15 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                        mstore(_15, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\" */ add(_15, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15239:15243  \"this\" */ address())\n                        /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _16 := staticcall(gas(), cleaned_1, _15, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\" */ _15, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                        /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                        if iszero(_16)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, _1, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                        let expr_5 := _1\n                        if _16\n                        {\n                            let _17 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                            /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _17 := returndatasize() }\n                            finalize_allocation(_15, _17)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\" */ add(_15, _17), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _15), 32) { revert(0, 0) }\n                            /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                            expr_5 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_15)\n                        }\n                        /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _18 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                        mstore(_18, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\" */ add(_18, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15239:15243  \"this\" */ address())\n                        /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _19 := staticcall(gas(), cleaned_2, _18, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\" */ _18, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                        /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                        if iszero(_19)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, _1, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                        let expr_6 := _1\n                        if _19\n                        {\n                            let _20 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                            /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _20 := returndatasize() }\n                            finalize_allocation(_18, _20)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\" */ add(_18, _20), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _18), 32) { revert(0, 0) }\n                            /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                            expr_6 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_18)\n                        }\n                        /// @src 21:15351:15385  \"_balance0 > _reserve0 - amount0Out\"\n                        let expr_7 := gt(expr_5, /** @src 21:15363:15385  \"_reserve0 - amount0Out\" */ checked_sub_uint256(_8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(4)))\n                        /// @src 21:15351:15428  \"_balance0 > _reserve0 - amount0Out ? _balance0 - (_reserve0 - amount0Out) : 0\"\n                        let expr_8 := _1\n                        switch expr_7\n                        case 0 { expr_8 := _1 }\n                        default {\n                            expr_8 := /** @src 21:15388:15424  \"_balance0 - (_reserve0 - amount0Out)\" */ checked_sub_uint256(expr_5, /** @src 21:15401:15423  \"_reserve0 - amount0Out\" */ checked_sub_uint256(_8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(4)))\n                        }\n                        /// @src 21:15458:15492  \"_balance1 > _reserve1 - amount1Out\"\n                        let expr_9 := gt(expr_6, /** @src 21:15470:15492  \"_reserve1 - amount1Out\" */ checked_sub_uint256(_9, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36)))\n                        /// @src 21:15458:15535  \"_balance1 > _reserve1 - amount1Out ? _balance1 - (_reserve1 - amount1Out) : 0\"\n                        let expr_10 := _1\n                        switch expr_9\n                        case 0 { expr_10 := _1 }\n                        default {\n                            expr_10 := /** @src 21:15495:15531  \"_balance1 - (_reserve1 - amount1Out)\" */ checked_sub_uint256(expr_6, /** @src 21:15508:15530  \"_reserve1 - amount1Out\" */ checked_sub_uint256(_9, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36)))\n                        }\n                        /// @src 21:15549:15581  \"amount0In == 0 && amount1In == 0\"\n                        let expr_11 := /** @src 21:15549:15563  \"amount0In == 0\" */ iszero(expr_8)\n                        /// @src 21:15549:15581  \"amount0In == 0 && amount1In == 0\"\n                        let expr_12 := expr_11\n                        if expr_11\n                        {\n                            expr_11 := /** @src 21:15567:15581  \"amount1In == 0\" */ iszero(expr_10)\n                        }\n                        /// @src 21:15545:15615  \"if (amount0In == 0 && amount1In == 0) revert InsufficientInputAmount()\"\n                        if expr_11\n                        {\n                            /// @src 21:15590:15615  \"InsufficientInputAmount()\"\n                            let _21 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:15590:15615  \"InsufficientInputAmount()\"\n                            mstore(_21, shl(224, 0x098fb561))\n                            revert(_21, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                        }\n                        let cleaned_3 := and(sload(/** @src 21:14741:14747  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                        let cleaned_4 := and(sload(/** @src 21:14749:14755  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                        /// @src 21:15782:15884  \"if (amount0In > 0) _update0((amount0In * IPoolFactory(factory).getFee(address(this), stable)) / 10000)\"\n                        if /** @src 21:15786:15799  \"amount0In > 0\" */ iszero(expr_12)\n                        /// @src 21:15782:15884  \"if (amount0In > 0) _update0((amount0In * IPoolFactory(factory).getFee(address(this), stable)) / 10000)\"\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let cleaned_5 := and(sload(/** @src 21:14269:14276  \"factory\" */ 0x0f), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                            let value_1 := and(shr(160, sload(/** @src 21:15867:15873  \"stable\" */ 0x0b)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                            /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                            let _22 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                            mstore(_22, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0xcc56b2c5))\n                            /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                            let _23 := staticcall(gas(), cleaned_5, _22, sub(abi_encode_address_bool(add(_22, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15239:15243  \"this\" */ address(), /** @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\" */ value_1), _22), _22, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                            /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                            if iszero(_23)\n                            {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let pos_4 := mload(64)\n                                returndatacopy(pos_4, _1, returndatasize())\n                                revert(pos_4, returndatasize())\n                            }\n                            /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                            let expr_13 := _1\n                            if _23\n                            {\n                                let _24 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                                /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\" */ returndatasize()) { _24 := returndatasize() }\n                                finalize_allocation(_22, _24)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                if slt(sub(/** @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\" */ add(_22, _24), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _22), 32) { revert(0, 0) }\n                                /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                expr_13 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_22)\n                            }\n                            /// @src 21:15810:15883  \"(amount0In * IPoolFactory(factory).getFee(address(this), stable)) / 10000\"\n                            fun_update0(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:15811:15874  \"amount0In * IPoolFactory(factory).getFee(address(this), stable)\" */ checked_mul_uint256(expr_8, expr_13), /** @src 21:15878:15883  \"10000\" */ 0x2710))\n                        }\n                        /// @src 21:15950:16052  \"if (amount1In > 0) _update1((amount1In * IPoolFactory(factory).getFee(address(this), stable)) / 10000)\"\n                        if /** @src 21:15954:15967  \"amount1In > 0\" */ iszero(iszero(expr_10))\n                        /// @src 21:15950:16052  \"if (amount1In > 0) _update1((amount1In * IPoolFactory(factory).getFee(address(this), stable)) / 10000)\"\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let cleaned_6 := and(sload(/** @src 21:14269:14276  \"factory\" */ 0x0f), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                            let value_2 := and(shr(160, sload(/** @src 21:16035:16041  \"stable\" */ 0x0b)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                            /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                            let _25 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                            mstore(_25, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0xcc56b2c5))\n                            /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                            let _26 := staticcall(gas(), cleaned_6, _25, sub(abi_encode_address_bool(add(_25, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15239:15243  \"this\" */ address(), /** @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\" */ value_2), _25), _25, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                            /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                            if iszero(_26)\n                            {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let pos_5 := mload(64)\n                                returndatacopy(pos_5, _1, returndatasize())\n                                revert(pos_5, returndatasize())\n                            }\n                            /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                            let expr_14 := _1\n                            if _26\n                            {\n                                let _27 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                                /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\" */ returndatasize()) { _27 := returndatasize() }\n                                finalize_allocation(_25, _27)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                if slt(sub(/** @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\" */ add(_25, _27), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _25), 32) { revert(0, 0) }\n                                /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                expr_14 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_25)\n                            }\n                            /// @src 21:15978:16051  \"(amount1In * IPoolFactory(factory).getFee(address(this), stable)) / 10000\"\n                            fun_update1(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:15979:16042  \"amount1In * IPoolFactory(factory).getFee(address(this), stable)\" */ checked_mul_uint256(expr_10, expr_14), /** @src 21:16046:16051  \"10000\" */ 0x2710))\n                        }\n                        /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _28 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                        mstore(_28, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\" */ add(_28, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15239:15243  \"this\" */ address())\n                        /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _29 := staticcall(gas(), cleaned_3, _28, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\" */ _28, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                        /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                        if iszero(_29)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_6 := mload(64)\n                            returndatacopy(pos_6, _1, returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                        let expr_15 := _1\n                        if _29\n                        {\n                            let _30 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                            /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _30 := returndatasize() }\n                            finalize_allocation(_28, _30)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\" */ add(_28, _30), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _28), 32) { revert(0, 0) }\n                            /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                            expr_15 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_28)\n                        }\n                        /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _31 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                        mstore(_31, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x70a08231))\n                        mstore(/** @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\" */ add(_31, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15239:15243  \"this\" */ address())\n                        /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _32 := staticcall(gas(), cleaned_4, _31, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\" */ _31, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                        /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                        if iszero(_32)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_7 := mload(64)\n                            returndatacopy(pos_7, _1, returndatasize())\n                            revert(pos_7, returndatasize())\n                        }\n                        /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                        let expr_16 := _1\n                        if _32\n                        {\n                            let _33 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                            /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _33 := returndatasize() }\n                            finalize_allocation(_31, _33)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\" */ add(_31, _33), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _31), 32) { revert(0, 0) }\n                            /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                            expr_16 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_31)\n                        }\n                        /// @src 21:16496:16520  \"_k(_balance0, _balance1)\"\n                        let expr_17 := fun_k(expr_15, expr_16)\n                        /// @src 21:16492:16559  \"if (_k(_balance0, _balance1) < _k(_reserve0, _reserve1)) revert K()\"\n                        if /** @src 21:16496:16547  \"_k(_balance0, _balance1) < _k(_reserve0, _reserve1)\" */ lt(expr_17, /** @src 21:16523:16547  \"_k(_reserve0, _reserve1)\" */ fun_k(_8, _9))\n                        /// @src 21:16492:16559  \"if (_k(_balance0, _balance1) < _k(_reserve0, _reserve1)) revert K()\"\n                        {\n                            /// @src 21:16556:16559  \"K()\"\n                            let _34 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:16556:16559  \"K()\"\n                            mstore(_34, shl(224, 0xa932492f))\n                            revert(_34, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                        }\n                        /// @src 21:16621:16630  \"_reserve1\"\n                        fun_update(expr_15, expr_16, _8, _9)\n                        /// @src 21:16646:16712  \"Swap(msg.sender, to, amount0In, amount1In, amount0Out, amount1Out)\"\n                        let _35 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        mstore(_35, expr_8)\n                        mstore(add(_35, 32), expr_10)\n                        mstore(add(_35, 64), calldataload(4))\n                        mstore(add(_35, 96), calldataload(36))\n                        /// @src 21:16646:16712  \"Swap(msg.sender, to, amount0In, amount1In, amount0Out, amount1Out)\"\n                        log3(_35, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 128, /** @src 21:16646:16712  \"Swap(msg.sender, to, amount0In, amount1In, amount0Out, amount1Out)\" */ 0xb3e2773606abfd36b5bd91394b3a54d1398336c65005baf7bf7a05efeffaf75b, /** @src 21:16651:16661  \"msg.sender\" */ caller(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(value, sub(shl(160, 1), 1)))\n                        sstore(/** @src 12:2924:2945  \"_status = NOT_ENTERED\" */ 0x08, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 1)\n                        return(_1, _1)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let memPtr := mload(64)\n                        let ret := 0\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        let slotValue := sload(/** @src 21:21631:21636  \"_name\" */ 0x09)\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        let length := extract_byte_array_length(slotValue)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(memPtr, length)\n                        let _36 := 0x20\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        let _37 := 1\n                        switch and(slotValue, _37)\n                        case 0 {\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(memPtr, _36), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ and(slotValue, not(255)))\n                            ret := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _36)\n                        }\n                        case /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 1 {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(0, /** @src 21:21631:21636  \"_name\" */ 0x09)\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let dataPos := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let i := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            for { }\n                            lt(i, length)\n                            {\n                                i := add(i, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _36)\n                            }\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            {\n                                mstore(add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _36), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ sload(dataPos))\n                                dataPos := add(dataPos, _37)\n                            }\n                            ret := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _36)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        let memPos := mload(64)\n                        mstore(memPos, _36)\n                        return(memPos, sub(abi_encode_string(memPtr, add(memPos, _36)), memPos))\n                    }\n                    case 0x0902f1ac {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _38 := sload(/** @src 21:7689:7697  \"reserve0\" */ 0x13)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _39 := sload(/** @src 21:7719:7727  \"reserve1\" */ 0x14)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _40 := sload(/** @src 21:7759:7777  \"blockTimestampLast\" */ 0x15)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_1 := mload(64)\n                        return(memPos_1, sub(abi_encode_uint256_uint256_uint256(memPos_1, _38, _39, _40), memPos_1))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                        let value0 := abi_decode_address_35700()\n                        /// @src 3:9105:9109  \"true\"\n                        fun_approve(/** @src 10:735:745  \"msg.sender\" */ caller(), /** @src 3:9105:9109  \"true\" */ value0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x0dfe1681 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value_3 := and(sload(/** @src 21:1296:1317  \"address public token0\" */ 12), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, value_3)\n                        return(memPos_3, 32)\n                    }\n                    case 0x13345fe1 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_1, _1) }\n                        let value0_1 := abi_decode_address_35700()\n                        let value_4 := calldataload(36)\n                        let value_5 := calldataload(68)\n                        let _41 := calldataload(100)\n                        /// @src 21:10562:10583  \"new uint256[](points)\"\n                        let expr_mpos := allocate_and_zero_memory_array_array_uint256_dyn(value_5)\n                        /// @src 21:10611:10630  \"observations.length\"\n                        let expr_18 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:10611:10623  \"observations\" */ 0x10)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let diff := add(expr_18, not(0))\n                        if gt(diff, expr_18)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        /// @src 21:10644:10682  \"uint256 i = length - (points * window)\"\n                        let var_i := /** @src 21:10656:10682  \"length - (points * window)\" */ checked_sub_uint256(diff, /** @src 21:10666:10681  \"points * window\" */ checked_mul_uint256(value_5, _41))\n                        /// @src 21:10723:10740  \"uint256 index = 0\"\n                        let var_index := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0\n                        /// @src 21:10751:11429  \"for (; i < length; i += window) {...\"\n                        for { }\n                        /** @src 21:10758:10768  \"i < length\" */ lt(var_i, diff)\n                        /// @src 21:10751:11429  \"for (; i < length; i += window) {...\"\n                        {\n                            /// @src 21:10770:10781  \"i += window\"\n                            var_i := checked_add_uint256(var_i, _41)\n                        }\n                        {\n                            /// @src 21:10797:10819  \"nextIndex = i + window\"\n                            let var_nextIndex := /** @src 21:10809:10819  \"i + window\" */ checked_add_uint256(var_i, _41)\n                            /// @src 21:10855:10878  \"observations[nextIndex]\"\n                            let _42, _43 := storage_array_index_access_struct_Observation__dyn(var_nextIndex)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _44 := sload(/** @src 21:10855:10888  \"observations[nextIndex].timestamp\" */ _42)\n                            /// @src 21:10891:10906  \"observations[i]\"\n                            let _45, _46 := storage_array_index_access_struct_Observation__dyn(var_i)\n                            /// @src 21:10855:10916  \"observations[nextIndex].timestamp - observations[i].timestamp\"\n                            let expr_19 := checked_sub_uint256(_44, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:10891:10916  \"observations[i].timestamp\" */ _45))\n                            /// @src 21:10951:10974  \"observations[nextIndex]\"\n                            let _47, _48 := storage_array_index_access_struct_Observation__dyn(var_nextIndex)\n                            /// @src 21:10633:10634  \"1\"\n                            let _49 := 0x01\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _50 := sload(/** @src 21:10951:10993  \"observations[nextIndex].reserve0Cumulative\" */ add(_47, /** @src 21:10633:10634  \"1\" */ _49))\n                            /// @src 21:10996:11011  \"observations[i]\"\n                            let _51, _52 := storage_array_index_access_struct_Observation__dyn(var_i)\n                            /// @src 21:10950:11061  \"(observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative) /...\"\n                            let expr_20 := checked_div_uint256(/** @src 21:10951:11030  \"observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative\" */ checked_sub_uint256(_50, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:10996:11030  \"observations[i].reserve0Cumulative\" */ add(_51, /** @src 21:10633:10634  \"1\" */ _49))), /** @src 21:10950:11061  \"(observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative) /...\" */ expr_19)\n                            /// @src 21:11096:11119  \"observations[nextIndex]\"\n                            let _53, _54 := storage_array_index_access_struct_Observation__dyn(var_nextIndex)\n                            /// @src 21:11096:11138  \"observations[nextIndex].reserve1Cumulative\"\n                            let _55 := 2\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _56 := sload(/** @src 21:11096:11138  \"observations[nextIndex].reserve1Cumulative\" */ add(_53, _55))\n                            /// @src 21:11141:11156  \"observations[i]\"\n                            let _57, _58 := storage_array_index_access_struct_Observation__dyn(var_i)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 21:11220:11291  \"_prices[index] = _getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\" */ memory_array_index_access_uint256_dyn(expr_mpos, var_index), /** @src 21:11237:11291  \"_getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\" */ fun_getAmountOut(value_4, value0_1, expr_20, /** @src 21:11095:11206  \"(observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative) /...\" */ checked_div_uint256(/** @src 21:11096:11175  \"observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative\" */ checked_sub_uint256(_56, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:11141:11175  \"observations[i].reserve1Cumulative\" */ add(_57, /** @src 21:11096:11138  \"observations[nextIndex].reserve1Cumulative\" */ _55))), /** @src 21:11095:11206  \"(observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative) /...\" */ expr_19)))\n                            /// @src 21:11387:11404  \"index = index + 1\"\n                            var_index := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 21:11395:11404  \"index + 1\" */ var_index, /** @src 21:10633:10634  \"1\" */ _49)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, 32)\n                        return(memPos_4, sub(abi_encode_array_uint256_dyn(expr_mpos, add(memPos_4, 32)), memPos_4))\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _59 := sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _59)\n                        return(memPos_5, 32)\n                    }\n                    case 0x1df8c717 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let var_reserve0Cumulative := _1\n                        let var_reserve1Cumulative := _1\n                        /// @src 21:9063:9106  \"reserve0Cumulative = reserve0CumulativeLast\"\n                        var_reserve0Cumulative := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:9084:9106  \"reserve0CumulativeLast\" */ 0x16)\n                        /// @src 21:9116:9159  \"reserve1Cumulative = reserve1CumulativeLast\"\n                        var_reserve1Cumulative := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:9137:9159  \"reserve1CumulativeLast\" */ 0x17)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _60 := sload(/** @src 21:7689:7697  \"reserve0\" */ 0x13)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _61 := sload(/** @src 21:7719:7727  \"reserve1\" */ 0x14)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _62 := sload(/** @src 21:7759:7777  \"blockTimestampLast\" */ 0x15)\n                        /// @src 21:9363:9654  \"if (_blockTimestampLast != blockTimestamp) {...\"\n                        if /** @src 21:9367:9404  \"_blockTimestampLast != blockTimestamp\" */ iszero(eq(_62, /** @src 21:9038:9053  \"block.timestamp\" */ timestamp()))\n                        /// @src 21:9363:9654  \"if (_blockTimestampLast != blockTimestamp) {...\"\n                        {\n                            /// @src 21:9489:9525  \"blockTimestamp - _blockTimestampLast\"\n                            let expr_21 := checked_sub_uint256(/** @src 21:9038:9053  \"block.timestamp\" */ timestamp(), /** @src 21:9489:9525  \"blockTimestamp - _blockTimestampLast\" */ _62)\n                            /// @src 21:9539:9584  \"reserve0Cumulative += _reserve0 * timeElapsed\"\n                            var_reserve0Cumulative := checked_add_uint256(var_reserve0Cumulative, /** @src 21:9561:9584  \"_reserve0 * timeElapsed\" */ checked_mul_uint256(_60, expr_21))\n                            /// @src 21:9598:9643  \"reserve1Cumulative += _reserve1 * timeElapsed\"\n                            var_reserve1Cumulative := checked_add_uint256(var_reserve1Cumulative, /** @src 21:9620:9643  \"_reserve1 * timeElapsed\" */ checked_mul_uint256(_61, expr_21))\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_6 := mload(64)\n                        return(memPos_6, sub(abi_encode_uint256_uint256_uint256(memPos_6, var_reserve0Cumulative, var_reserve1Cumulative, /** @src 21:9038:9053  \"block.timestamp\" */ timestamp()), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPos_6))\n                    }\n                    case 0x205aabf1 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        mstore(_1, and(abi_decode_address_35700(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 21:2192:2239  \"mapping(address => uint256) public supplyIndex1\" */ 27)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _63 := sload(keccak256(_1, 64))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, _63)\n                        return(memPos_7, 32)\n                    }\n                    case 0x22be3de1 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value_6 := and(shr(160, sload(/** @src 21:1133:1151  \"bool public stable\" */ 11)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, iszero(iszero(value_6)))\n                        return(memPos_8, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_1, _1) }\n                        let value0_2 := abi_decode_address_35700()\n                        let value1 := abi_decode_address()\n                        let value_7 := calldataload(68)\n                        let _64 := and(value0_2, sub(shl(160, 1), 1))\n                        mstore(_1, _64)\n                        mstore(32, 1)\n                        let _65 := keccak256(_1, 64)\n                        mstore(0, /** @src 10:735:745  \"msg.sender\" */ caller())\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(32, _65)\n                        let _66 := sload(keccak256(0, 64))\n                        /// @src 3:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                        if /** @src 3:10828:10865  \"currentAllowance != type(uint256).max\" */ iszero(eq(_66, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ not(0)))\n                        /// @src 3:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                        {\n                            /// @src 3:10881:11011  \"if (currentAllowance < value) {...\"\n                            if /** @src 3:10885:10909  \"currentAllowance < value\" */ lt(_66, value_7)\n                            /// @src 3:10881:11011  \"if (currentAllowance < value) {...\"\n                            {\n                                /// @src 3:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                let _67 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 3:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                mstore(_67, shl(225, 0x7dc7a0d9))\n                                revert(_67, sub(abi_encode_address_uint256_uint256(add(_67, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 10:735:745  \"msg.sender\" */ caller(), /** @src 3:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _66, value_7), _67))\n                            }\n                            /// @src 3:10057:10146  \"if (owner == address(0)) {...\"\n                            if /** @src 3:10061:10080  \"owner == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _64)\n                            /// @src 3:10057:10146  \"if (owner == address(0)) {...\"\n                            {\n                                /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                let _68 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                mstore(_68, shl(224, 0xe602df05))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(/** @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_68, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), 0)\n                                /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                revert(_68, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                            }\n                            /// @src 3:10155:10245  \"if (spender == address(0)) {...\"\n                            if /** @src 3:10159:10180  \"spender == address(0)\" */ iszero(/** @src 10:735:745  \"msg.sender\" */ caller())\n                            /// @src 3:10155:10245  \"if (spender == address(0)) {...\"\n                            {\n                                /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                let _69 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                mstore(_69, shl(225, 0x4a1406b1))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(/** @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_69, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), 0)\n                                /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                revert(_69, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                            }\n                            mstore(0, _64)\n                            mstore(32, 1)\n                            let _70 := keccak256(0, 64)\n                            mstore(0, /** @src 10:735:745  \"msg.sender\" */ caller())\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(32, _70)\n                            sstore(keccak256(0, 64), sub(/** @src 3:11077:11101  \"currentAllowance - value\" */ _66, value_7))\n                        }\n                        /// @src 3:5249:5254  \"value\"\n                        fun_transfer(value0_2, value1, value_7)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, 1)\n                        return(memPos_9, 32)\n                    }\n                    case 0x252c09d7 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        let value_8 := calldataload(4)\n                        /// @src 21:1560:1593  \"Observation[] public observations\"\n                        if iszero(lt(value_8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:1560:1593  \"Observation[] public observations\" */ 16)))\n                        {\n                            revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, _1)\n                        }\n                        /// @src 21:1560:1593  \"Observation[] public observations\"\n                        let slot, offset_1 := storage_array_index_access_struct_Observation__dyn(value_8)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _71 := sload(/** @src 21:1560:1593  \"Observation[] public observations\" */ slot)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _72 := sload(/** @src 21:1560:1593  \"Observation[] public observations\" */ add(slot, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 1))\n                        let _73 := sload(/** @src 21:1560:1593  \"Observation[] public observations\" */ add(slot, 2))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_10 := mload(64)\n                        return(memPos_10, sub(abi_encode_uint256_uint256_uint256(memPos_10, _71, _72, _73), memPos_10))\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, /** @src 3:3075:3077  \"18\" */ 0x12)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        return(memPos_11, 32)\n                    }\n                    case 0x32c0defd {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _74 := sload(/** @src 21:2006:2027  \"uint256 public index0\" */ 24)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, _74)\n                        return(memPos_12, 32)\n                    }\n                    case 0x33580959 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value_9 := and(sload(/** @src 21:1402:1425  \"address public poolFees\" */ 14), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                        let memPos_13 := mload(64)\n                        mstore(memPos_13, value_9)\n                        return(memPos_13, 32)\n                    }\n                    case 0x3644e515 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let ret_1 := /** @src 5:2741:2761  \"_domainSeparatorV4()\" */ fun_domainSeparatorV4()\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, ret_1)\n                        return(memPos_14, 32)\n                    }\n                    case 0x392f37e9 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _75 := sload(/** @src 21:4424:4433  \"decimals0\" */ 0x11)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _76 := sload(/** @src 21:4435:4444  \"decimals1\" */ 0x12)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _77 := sload(/** @src 21:4446:4454  \"reserve0\" */ 0x13)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _78 := sload(/** @src 21:4456:4464  \"reserve1\" */ 0x14)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _79 := sload(/** @src 21:4466:4472  \"stable\" */ 0x0b)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _80 := sub(shl(160, 1), 1)\n                        let cleaned_7 := and(sload(/** @src 21:4474:4480  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _80)\n                        let cleaned_8 := and(sload(/** @src 21:4482:4488  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _80)\n                        let memPos_15 := mload(64)\n                        mstore(memPos_15, _75)\n                        mstore(add(memPos_15, 32), _76)\n                        mstore(add(memPos_15, 64), _77)\n                        mstore(add(memPos_15, 96), _78)\n                        mstore(add(memPos_15, 128), iszero(iszero(and(shr(160, _79), 0xff))))\n                        mstore(add(memPos_15, 160), cleaned_7)\n                        mstore(add(memPos_15, 192), cleaned_8)\n                        return(memPos_15, _2)\n                    }\n                    case 0x443cb4bc {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _81 := sload(/** @src 21:1691:1714  \"uint256 public reserve0\" */ 19)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_16 := mload(64)\n                        mstore(memPos_16, _81)\n                        return(memPos_16, 32)\n                    }\n                    case 0x4d5a9f8a {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        mstore(_1, and(abi_decode_address_35700(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 21:2272:2317  \"mapping(address => uint256) public claimable0\" */ 28)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _82 := sload(keccak256(_1, 64))\n                        let memPos_17 := mload(64)\n                        mstore(memPos_17, _82)\n                        return(memPos_17, 32)\n                    }\n                    case 0x5881c475 {\n                        if callvalue() { revert(_1, _1) }\n                        let param, param_1, param_2 := abi_decode_addresst_uint256t_uint256(calldatasize())\n                        let ret_2 := /** @src 21:10290:10326  \"sample(tokenIn, amountIn, points, 1)\" */ fun_sample(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ param, param_1, param_2)\n                        let memPos_18 := mload(64)\n                        mstore(memPos_18, 32)\n                        return(memPos_18, sub(abi_encode_array_uint256_dyn(ret_2, add(memPos_18, 32)), memPos_18))\n                    }\n                    case 0x5a76f25e {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _83 := sload(/** @src 21:1746:1769  \"uint256 public reserve1\" */ 20)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_19 := mload(64)\n                        mstore(memPos_19, _83)\n                        return(memPos_19, 32)\n                    }\n                    case 0x6a627842 {\n                        if callvalue() { revert(_1, _1) }\n                        let _84 := 32\n                        if slt(add(calldatasize(), not(3)), _84) { revert(_1, _1) }\n                        let value0_3 := abi_decode_address_35700()\n                        /// @src 12:2322:2425  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 12:2387:2388  \"_\"\n                        let var_liquidity := _1\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _85 := sload(/** @src 21:11619:11627  \"reserve0\" */ 0x13)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _86 := sload(/** @src 21:11629:11637  \"reserve1\" */ 0x14)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _87 := sub(shl(160, 1), 1)\n                        let cleaned_9 := and(sload(/** @src 21:11675:11681  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _87)\n                        /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                        let _88 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        let _89 := shl(224, 0x70a08231)\n                        /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                        mstore(_88, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _89)\n                        mstore(/** @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\" */ add(_88, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:11701:11705  \"this\" */ address())\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _90 := 36\n                        /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                        let _91 := staticcall(gas(), cleaned_9, _88, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _90, /** @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\" */ _88, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84)\n                        /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                        if iszero(_91)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_8 := mload(64)\n                            returndatacopy(pos_8, _1, returndatasize())\n                            revert(pos_8, returndatasize())\n                        }\n                        /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                        let expr_22 := _1\n                        if _91\n                        {\n                            let _92 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84\n                            /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84, /** @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\" */ returndatasize()) { _92 := returndatasize() }\n                            finalize_allocation(_88, _92)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\" */ add(_88, _92), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _88), _84) { revert(0, 0) }\n                            /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                            expr_22 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_88)\n                        }\n                        let cleaned_10 := and(sload(/** @src 21:11744:11750  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _87)\n                        /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                        let _93 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                        mstore(_93, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _89)\n                        mstore(/** @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\" */ add(_93, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:11701:11705  \"this\" */ address())\n                        /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                        let _94 := staticcall(gas(), cleaned_10, _93, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _90, /** @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\" */ _93, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84)\n                        /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                        if iszero(_94)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_9 := mload(64)\n                            returndatacopy(pos_9, _1, returndatasize())\n                            revert(pos_9, returndatasize())\n                        }\n                        /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                        let expr_23 := _1\n                        if _94\n                        {\n                            let _95 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84\n                            /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84, /** @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\" */ returndatasize()) { _95 := returndatasize() }\n                            finalize_allocation(_93, _95)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\" */ add(_93, _95), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _93), _84) { revert(0, 0) }\n                            /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                            expr_23 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_93)\n                        }\n                        /// @src 21:11805:11826  \"_balance0 - _reserve0\"\n                        let expr_24 := checked_sub_uint256(expr_22, _85)\n                        /// @src 21:11855:11876  \"_balance1 - _reserve1\"\n                        let expr_25 := checked_sub_uint256(expr_23, _86)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _96 := sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02)\n                        /// @src 21:12011:12610  \"if (_totalSupply == 0) {...\"\n                        switch /** @src 21:12015:12032  \"_totalSupply == 0\" */ iszero(_96)\n                        case /** @src 21:12011:12610  \"if (_totalSupply == 0) {...\" */ 0 {\n                            /// @src 21:12522:12559  \"(_amount0 * _totalSupply) / _reserve0\"\n                            let expr_26 := checked_div_uint256(/** @src 21:12523:12546  \"_amount0 * _totalSupply\" */ checked_mul_uint256(expr_24, _96), /** @src 21:12522:12559  \"(_amount0 * _totalSupply) / _reserve0\" */ _85)\n                            /// @src 21:12561:12598  \"(_amount1 * _totalSupply) / _reserve1\"\n                            let _97 := checked_div_uint256(/** @src 21:12562:12585  \"_amount1 * _totalSupply\" */ checked_mul_uint256(expr_25, _96), /** @src 21:12561:12598  \"(_amount1 * _totalSupply) / _reserve1\" */ _86)\n                            /// @src 19:2641:2654  \"a < b ? a : b\"\n                            let expr_27 := _1\n                            switch /** @src 19:2641:2646  \"a < b\" */ lt(expr_26, _97)\n                            case /** @src 19:2641:2654  \"a < b ? a : b\" */ 0 { expr_27 := _97 }\n                            default { expr_27 := expr_26 }\n                            /// @src 21:12501:12599  \"liquidity = Math.min((_amount0 * _totalSupply) / _reserve0, (_amount1 * _totalSupply) / _reserve1)\"\n                            var_liquidity := expr_27\n                        }\n                        default /// @src 21:12011:12610  \"if (_totalSupply == 0) {...\"\n                        {\n                            /// @src 21:12060:12090  \"Math.sqrt(_amount0 * _amount1)\"\n                            let expr_28 := fun_sqrt(/** @src 21:12070:12089  \"_amount0 * _amount1\" */ checked_mul_uint256(expr_24, expr_25))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let diff_1 := add(expr_28, not(999))\n                            if gt(diff_1, expr_28)\n                            {\n                                mstore(_1, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(_1, _90)\n                            }\n                            /// @src 21:12048:12110  \"liquidity = Math.sqrt(_amount0 * _amount1) - MINIMUM_LIQUIDITY\"\n                            var_liquidity := diff_1\n                            /// @src 21:1204:1211  \"10 ** 3\"\n                            let _98 := 0x03e8\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let sum := add(_96, /** @src 21:1204:1211  \"10 ** 3\" */ _98)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if gt(_96, sum)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, _90)\n                            }\n                            sstore(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02, /** @src 3:6496:6517  \"_totalSupply += value\" */ sum)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(0, 1)\n                            mstore(_84, 0)\n                            let dataSlot := keccak256(0, 64)\n                            sstore(dataSlot, add(sload(/** @src 3:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 21:1204:1211  \"10 ** 3\" */ _98))\n                            /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                            let _99 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            mstore(_99, /** @src 21:1204:1211  \"10 ** 3\" */ _98)\n                            /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                            log3(_99, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0, 1)\n                            /// @src 21:12252:12471  \"if (stable) {...\"\n                            if /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(shr(160, sload(/** @src 21:12256:12262  \"stable\" */ 0x0b)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                            /// @src 21:12252:12471  \"if (stable) {...\"\n                            {\n                                /// @src 21:12298:12302  \"1e18\"\n                                let _100 := 0x0de0b6b3a7640000\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let product := mul(expr_24, /** @src 21:12298:12302  \"1e18\" */ _100)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                if iszero(or(iszero(expr_24), eq(/** @src 21:12298:12302  \"1e18\" */ _100, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product, expr_24))))\n                                {\n                                    mstore(_1, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(_1, _90)\n                                }\n                                /// @src 21:12286:12315  \"(_amount0 * 1e18) / decimals0\"\n                                let expr_29 := checked_div_uint256(product, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:12306:12315  \"decimals0\" */ 0x11))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let product_1 := mul(expr_25, /** @src 21:12298:12302  \"1e18\" */ _100)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                if iszero(or(iszero(expr_25), eq(/** @src 21:12298:12302  \"1e18\" */ _100, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product_1, expr_25))))\n                                {\n                                    mstore(_1, shl(224, 0x4e487b71))\n                                    mstore(4, /** @src 21:12306:12315  \"decimals0\" */ 0x11)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    revert(_1, _90)\n                                }\n                                /// @src 21:12282:12375  \"if ((_amount0 * 1e18) / decimals0 != (_amount1 * 1e18) / decimals1) revert DepositsNotEqual()\"\n                                if /** @src 21:12286:12348  \"(_amount0 * 1e18) / decimals0 != (_amount1 * 1e18) / decimals1\" */ iszero(eq(expr_29, /** @src 21:12319:12348  \"(_amount1 * 1e18) / decimals1\" */ checked_div_uint256(product_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:12339:12348  \"decimals1\" */ 0x12))))\n                                /// @src 21:12282:12375  \"if ((_amount0 * 1e18) / decimals0 != (_amount1 * 1e18) / decimals1) revert DepositsNotEqual()\"\n                                {\n                                    /// @src 21:12357:12375  \"DepositsNotEqual()\"\n                                    let _101 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:12357:12375  \"DepositsNotEqual()\"\n                                    mstore(_101, shl(225, 0x05026bfd))\n                                    revert(_101, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                /// @src 21:12393:12456  \"if (_k(_amount0, _amount1) <= MINIMUM_K) revert BelowMinimumK()\"\n                                if /** @src 21:12397:12432  \"_k(_amount0, _amount1) <= MINIMUM_K\" */ iszero(gt(/** @src 21:12397:12419  \"_k(_amount0, _amount1)\" */ fun_k(expr_24, expr_25), /** @src 21:1255:1263  \"10 ** 10\" */ 0x02540be400))\n                                /// @src 21:12393:12456  \"if (_k(_amount0, _amount1) <= MINIMUM_K) revert BelowMinimumK()\"\n                                {\n                                    /// @src 21:12441:12456  \"BelowMinimumK()\"\n                                    let _102 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:12441:12456  \"BelowMinimumK()\"\n                                    mstore(_102, shl(225, 0x21c69d6f))\n                                    revert(_102, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                            }\n                        }\n                        /// @src 21:12619:12690  \"if (liquidity < MINIMUM_LIQUIDITY) revert InsufficientLiquidityMinted()\"\n                        if /** @src 21:12623:12652  \"liquidity < MINIMUM_LIQUIDITY\" */ lt(var_liquidity, /** @src 21:1204:1211  \"10 ** 3\" */ 0x03e8)\n                        /// @src 21:12619:12690  \"if (liquidity < MINIMUM_LIQUIDITY) revert InsufficientLiquidityMinted()\"\n                        {\n                            /// @src 21:12661:12690  \"InsufficientLiquidityMinted()\"\n                            let _103 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:12661:12690  \"InsufficientLiquidityMinted()\"\n                            mstore(_103, shl(226, 0x3489be75))\n                            revert(_103, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                        }\n                        let _104 := and(/** @src 3:7791:7812  \"account == address(0)\" */ value0_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _87)\n                        /// @src 3:7787:7878  \"if (account == address(0)) {...\"\n                        if /** @src 3:7791:7812  \"account == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _104)\n                        /// @src 3:7787:7878  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                            let _105 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(_105, shl(224, 0xec442f05))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ add(_105, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), 0)\n                            /// @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                            revert(_105, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _90)\n                        }\n                        sstore(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02, /** @src 3:6496:6517  \"_totalSupply += value\" */ checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02), /** @src 3:6496:6517  \"_totalSupply += value\" */ var_liquidity))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(0, _104)\n                        mstore(_84, 0)\n                        let dataSlot_1 := keccak256(0, 64)\n                        sstore(dataSlot_1, add(sload(/** @src 3:7284:7306  \"_balances[to] += value\" */ dataSlot_1), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_liquidity))\n                        /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                        let _106 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        mstore(_106, var_liquidity)\n                        /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                        log3(_106, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ _104)\n                        /// @src 21:12772:12781  \"_reserve1\"\n                        fun_update(expr_22, expr_23, _85, _86)\n                        /// @src 21:12797:12833  \"Mint(msg.sender, _amount0, _amount1)\"\n                        let _107 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        mstore(_107, expr_24)\n                        mstore(add(_107, _84), expr_25)\n                        /// @src 21:12797:12833  \"Mint(msg.sender, _amount0, _amount1)\"\n                        log2(_107, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 21:12797:12833  \"Mint(msg.sender, _amount0, _amount1)\" */ 0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f, /** @src 21:12802:12812  \"msg.sender\" */ caller())\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        sstore(/** @src 12:2924:2945  \"_status = NOT_ENTERED\" */ 0x08, /** @src 12:1713:1714  \"1\" */ 0x01)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_20 := mload(64)\n                        mstore(memPos_20, var_liquidity)\n                        return(memPos_20, _84)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        mstore(_1, and(abi_decode_address_35700(), sub(shl(160, 1), 1)))\n                        mstore(32, _1)\n                        let _108 := sload(keccak256(_1, 64))\n                        let memPos_21 := mload(64)\n                        mstore(memPos_21, _108)\n                        return(memPos_21, 32)\n                    }\n                    case 0x7ecebe00 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        mstore(_1, and(abi_decode_address_35700(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 11:624:631  \"_nonces\" */ 0x07)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _109 := sload(keccak256(_1, 64))\n                        let memPos_22 := mload(64)\n                        mstore(memPos_22, _109)\n                        return(memPos_22, 32)\n                    }\n                    case 0x84b0196e {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        /// @src 17:6092:6140  \"return _name.toStringWithFallback(_nameFallback)\"\n                        let var_mpos := /** @src 17:6099:6140  \"_name.toStringWithFallback(_nameFallback)\" */ fun_toStringWithFallback(/** @src 17:6099:6104  \"_name\" */ loadimmutable(\"2727\"))\n                        /// @src 17:6547:6601  \"return _version.toStringWithFallback(_versionFallback)\"\n                        let var_mpos_1 := /** @src 17:6554:6601  \"_version.toStringWithFallback(_versionFallback)\" */ fun_toStringWithFallback_35716(/** @src 17:6554:6562  \"_version\" */ loadimmutable(\"2730\"))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPtr_1 := mload(64)\n                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        let newFreePtr := add(memPtr_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x20)\n                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1))\n                        {\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0, shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                            revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x24)\n                        }\n                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ newFreePtr)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(memPtr_1, _1)\n                        let memPos_23 := mload(64)\n                        mstore(memPos_23, shl(248, 15))\n                        mstore(add(memPos_23, 0x20), _2)\n                        let tail := abi_encode_string(var_mpos, add(memPos_23, _2))\n                        mstore(add(memPos_23, 64), sub(tail, memPos_23))\n                        let tail_1 := abi_encode_string(var_mpos_1, tail)\n                        mstore(add(memPos_23, 96), /** @src 17:5590:5603  \"block.chainid\" */ chainid())\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(add(memPos_23, 128), /** @src 17:5625:5629  \"this\" */ address())\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(add(memPos_23, 160), _1)\n                        mstore(add(memPos_23, 192), sub(tail_1, memPos_23))\n                        return(memPos_23, sub(abi_encode_array_uint256_dyn(memPtr_1, tail_1), memPos_23))\n                    }\n                    case 0x89afcb44 {\n                        if callvalue() { revert(_1, _1) }\n                        let _110 := 32\n                        if slt(add(calldatasize(), not(3)), _110) { revert(_1, _1) }\n                        let value0_4 := abi_decode_address_35700()\n                        /// @src 12:2322:2425  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _111 := sload(/** @src 21:13015:13023  \"reserve0\" */ 0x13)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _112 := sload(/** @src 21:13025:13033  \"reserve1\" */ 0x14)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _113 := sub(shl(160, 1), 1)\n                        let cleaned_11 := and(sload(/** @src 21:13082:13088  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _113)\n                        let cleaned_12 := and(sload(/** @src 21:13090:13096  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _113)\n                        /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _114 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        let _115 := shl(224, 0x70a08231)\n                        /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                        mstore(_114, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _115)\n                        mstore(/** @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\" */ add(_114, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:13161:13165  \"this\" */ address())\n                        /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _116 := staticcall(gas(), cleaned_11, _114, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\" */ _114, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110)\n                        /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                        if iszero(_116)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_10 := mload(64)\n                            returndatacopy(pos_10, _1, returndatasize())\n                            revert(pos_10, returndatasize())\n                        }\n                        /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                        let expr_30 := _1\n                        if _116\n                        {\n                            let _117 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110\n                            /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110, /** @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _117 := returndatasize() }\n                            finalize_allocation(_114, _117)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\" */ add(_114, _117), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _114), _110) { revert(0, 0) }\n                            /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                            expr_30 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_114)\n                        }\n                        /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _118 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                        mstore(_118, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _115)\n                        mstore(/** @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\" */ add(_118, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:13161:13165  \"this\" */ address())\n                        /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _119 := staticcall(gas(), cleaned_12, _118, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\" */ _118, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110)\n                        /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                        if iszero(_119)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_11 := mload(64)\n                            returndatacopy(pos_11, _1, returndatasize())\n                            revert(pos_11, returndatasize())\n                        }\n                        /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                        let expr_31 := _1\n                        if _119\n                        {\n                            let _120 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110\n                            /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110, /** @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _120 := returndatasize() }\n                            finalize_allocation(_118, _120)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\" */ add(_118, _120), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _118), _110) { revert(0, 0) }\n                            /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                            expr_31 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_118)\n                        }\n                        mstore(_1, /** @src 21:13161:13165  \"this\" */ address())\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(_110, _1)\n                        let _121 := sload(keccak256(_1, 64))\n                        let _122 := sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02)\n                        /// @src 21:13427:13476  \"amount0 = (_liquidity * _balance0) / _totalSupply\"\n                        let var_amount0 := /** @src 21:13437:13476  \"(_liquidity * _balance0) / _totalSupply\" */ checked_div_uint256(/** @src 21:13438:13460  \"_liquidity * _balance0\" */ checked_mul_uint256(_121, expr_30), /** @src 21:13437:13476  \"(_liquidity * _balance0) / _totalSupply\" */ _122)\n                        /// @src 21:13534:13583  \"amount1 = (_liquidity * _balance1) / _totalSupply\"\n                        let var_amount1 := /** @src 21:13544:13583  \"(_liquidity * _balance1) / _totalSupply\" */ checked_div_uint256(/** @src 21:13545:13567  \"_liquidity * _balance1\" */ checked_mul_uint256(_121, expr_31), /** @src 21:13544:13583  \"(_liquidity * _balance1) / _totalSupply\" */ _122)\n                        /// @src 21:13645:13673  \"amount0 == 0 || amount1 == 0\"\n                        let expr_32 := /** @src 21:13645:13657  \"amount0 == 0\" */ iszero(var_amount0)\n                        /// @src 21:13645:13673  \"amount0 == 0 || amount1 == 0\"\n                        if iszero(expr_32)\n                        {\n                            expr_32 := /** @src 21:13661:13673  \"amount1 == 0\" */ iszero(var_amount1)\n                        }\n                        /// @src 21:13641:13711  \"if (amount0 == 0 || amount1 == 0) revert InsufficientLiquidityBurned()\"\n                        if expr_32\n                        {\n                            /// @src 21:13682:13711  \"InsufficientLiquidityBurned()\"\n                            let _123 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:13682:13711  \"InsufficientLiquidityBurned()\"\n                            mstore(_123, shl(224, 0x749383ad))\n                            revert(_123, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                        }\n                        /// @src 3:8313:8402  \"if (account == address(0)) {...\"\n                        if /** @src 3:8317:8338  \"account == address(0)\" */ iszero(/** @src 21:13161:13165  \"this\" */ address())\n                        /// @src 3:8313:8402  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 3:8361:8391  \"ERC20InvalidSender(address(0))\"\n                            let _124 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 3:8361:8391  \"ERC20InvalidSender(address(0))\"\n                            mstore(_124, shl(225, 0x4b637e8f))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 3:8361:8391  \"ERC20InvalidSender(address(0))\" */ add(_124, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), _1)\n                            /// @src 3:8361:8391  \"ERC20InvalidSender(address(0))\"\n                            revert(_124, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                        }\n                        mstore(0, /** @src 21:13161:13165  \"this\" */ address())\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(_110, 0)\n                        let _125 := sload(keccak256(0, 64))\n                        /// @src 3:6599:6714  \"if (fromBalance < value) {...\"\n                        if /** @src 3:6603:6622  \"fromBalance < value\" */ lt(_125, _121)\n                        /// @src 3:6599:6714  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 3:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            let _126 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 3:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(_126, shl(226, 0x391434e3))\n                            revert(_126, sub(abi_encode_address_uint256_uint256(add(_126, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:13161:13165  \"this\" */ address(), /** @src 3:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ _125, _121), _126))\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(0, /** @src 21:13161:13165  \"this\" */ address())\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(_110, 0)\n                        sstore(keccak256(0, 64), sub(/** @src 3:6852:6871  \"fromBalance - value\" */ _125, _121))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        sstore(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _121))\n                        /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                        let _127 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        mstore(_127, _121)\n                        /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                        log3(_127, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 21:13161:13165  \"this\" */ address(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0)\n                        /// @src 21:13796:13803  \"amount0\"\n                        fun_safeTransfer(cleaned_11, value0_4, var_amount0)\n                        /// @src 21:13847:13854  \"amount1\"\n                        fun_safeTransfer(cleaned_12, value0_4, var_amount1)\n                        /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _128 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                        mstore(_128, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _115)\n                        mstore(/** @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\" */ add(_128, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:13161:13165  \"this\" */ address())\n                        /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _129 := staticcall(gas(), cleaned_11, _128, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\" */ _128, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110)\n                        /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                        if iszero(_129)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_12 := mload(64)\n                            returndatacopy(pos_12, _1, returndatasize())\n                            revert(pos_12, returndatasize())\n                        }\n                        /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                        let expr_33 := _1\n                        if _129\n                        {\n                            let _130 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110\n                            /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110, /** @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _130 := returndatasize() }\n                            finalize_allocation(_128, _130)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\" */ add(_128, _130), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _128), _110) { revert(0, 0) }\n                            /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                            expr_33 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_128)\n                        }\n                        /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _131 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                        mstore(_131, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _115)\n                        mstore(/** @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\" */ add(_131, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:13161:13165  \"this\" */ address())\n                        /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _132 := staticcall(gas(), cleaned_12, _131, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\" */ _131, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110)\n                        /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                        if iszero(_132)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_13 := mload(64)\n                            returndatacopy(pos_13, _1, returndatasize())\n                            revert(pos_13, returndatasize())\n                        }\n                        /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                        let expr_34 := _1\n                        if _132\n                        {\n                            let _133 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110\n                            /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110, /** @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _133 := returndatasize() }\n                            finalize_allocation(_131, _133)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\" */ add(_131, _133), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _131), _110) { revert(0, 0) }\n                            /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                            expr_34 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_131)\n                        }\n                        /// @src 21:14031:14040  \"_reserve1\"\n                        fun_update(expr_33, expr_34, _111, _112)\n                        /// @src 21:14056:14094  \"Burn(msg.sender, to, amount0, amount1)\"\n                        let _134 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        mstore(_134, var_amount0)\n                        mstore(add(_134, _110), var_amount1)\n                        /// @src 21:14056:14094  \"Burn(msg.sender, to, amount0, amount1)\"\n                        log3(_134, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 21:14056:14094  \"Burn(msg.sender, to, amount0, amount1)\" */ 0x5d624aa9c148153ab3446c1b154f660ee7701e549fe9b62dab7171b1c80e6fa2, /** @src 21:14061:14071  \"msg.sender\" */ caller(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 21:14056:14094  \"Burn(msg.sender, to, amount0, amount1)\" */ value0_4, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _113))\n                        sstore(/** @src 12:2924:2945  \"_status = NOT_ENTERED\" */ 0x08, /** @src 12:1713:1714  \"1\" */ 0x01)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_24 := mload(64)\n                        mstore(memPos_24, var_amount0)\n                        mstore(add(memPos_24, _110), var_amount1)\n                        return(memPos_24, 64)\n                    }\n                    case 0x8a7b8cf2 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let ret_3 := fun_lastObservation()\n                        let memPos_25 := mload(64)\n                        mstore(memPos_25, mload(ret_3))\n                        mstore(add(memPos_25, 0x20), mload(add(ret_3, 0x20)))\n                        mstore(add(memPos_25, 64), mload(add(ret_3, 64)))\n                        return(memPos_25, 96)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let memPtr_2 := mload(64)\n                        let ret_4 := 0\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        let slotValue_1 := sload(/** @src 21:21729:21736  \"_symbol\" */ 0x0a)\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        let length_1 := extract_byte_array_length(slotValue_1)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(memPtr_2, length_1)\n                        let _135 := 0x20\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        let _136 := 1\n                        switch and(slotValue_1, _136)\n                        case 0 {\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(memPtr_2, _135), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ and(slotValue_1, not(255)))\n                            ret_4 := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr_2, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length_1)))), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _135)\n                        }\n                        case /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 1 {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(0, /** @src 21:21729:21736  \"_symbol\" */ 0x0a)\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let dataPos_1 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let i_1 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            for { }\n                            lt(i_1, length_1)\n                            {\n                                i_1 := add(i_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _135)\n                            }\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            {\n                                mstore(add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr_2, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i_1), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _135), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _136)\n                            }\n                            ret_4 := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr_2, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i_1), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _135)\n                        }\n                        finalize_allocation(memPtr_2, sub(ret_4, memPtr_2))\n                        let memPos_26 := mload(64)\n                        mstore(memPos_26, _135)\n                        return(memPos_26, sub(abi_encode_string(memPtr_2, add(memPos_26, _135)), memPos_26))\n                    }\n                    case 0x9d63848a {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _137 := sub(shl(160, 1), 1)\n                        let cleaned_13 := and(sload(/** @src 21:4605:4611  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _137)\n                        let cleaned_14 := and(sload(/** @src 21:4613:4619  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _137)\n                        let memPos_27 := mload(64)\n                        return(memPos_27, sub(abi_encode_address_address(memPos_27, cleaned_13, cleaned_14), memPos_27))\n                    }\n                    case 0x9e8cc04b {\n                        if callvalue() { revert(_1, _1) }\n                        let param_3, param_4, param_5 := abi_decode_addresst_uint256t_uint256(calldatasize())\n                        /// @src 21:9842:9883  \"sample(tokenIn, amountIn, granularity, 1)\"\n                        let expr_mpos_1 := fun_sample(param_3, param_4, param_5)\n                        /// @src 21:9893:9923  \"uint256 priceAverageCumulative\"\n                        let var_priceAverageCumulative := _1\n                        var_priceAverageCumulative := _1\n                        /// @src 21:9951:9965  \"_prices.length\"\n                        let expr_35 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 21:9951:9965  \"_prices.length\" */ expr_mpos_1)\n                        /// @src 21:9980:9993  \"uint256 i = 0\"\n                        let var_i_1 := _1\n                        /// @src 21:9975:10074  \"for (uint256 i = 0; i < _length; i++) {...\"\n                        for { }\n                        /** @src 21:9995:10006  \"i < _length\" */ lt(var_i_1, expr_35)\n                        /// @src 21:9980:9993  \"uint256 i = 0\"\n                        {\n                            /// @src 21:10008:10011  \"i++\"\n                            var_i_1 := increment_uint256(var_i_1)\n                        }\n                        {\n                            /// @src 21:10027:10063  \"priceAverageCumulative += _prices[i]\"\n                            var_priceAverageCumulative := checked_add_uint256(var_priceAverageCumulative, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 21:10053:10063  \"_prices[i]\" */ memory_array_index_access_uint256_dyn(expr_mpos_1, var_i_1)))\n                        }\n                        /// @src 21:10083:10126  \"return priceAverageCumulative / granularity\"\n                        let var_amountOut := /** @src 21:10090:10126  \"priceAverageCumulative / granularity\" */ checked_div_uint256(var_priceAverageCumulative, param_5)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_28 := mload(64)\n                        mstore(memPos_28, var_amountOut)\n                        return(memPos_28, 32)\n                    }\n                    case 0x9f767c88 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        mstore(_1, and(abi_decode_address_35700(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 21:2113:2160  \"mapping(address => uint256) public supplyIndex0\" */ 26)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _138 := sload(keccak256(_1, 64))\n                        let memPos_29 := mload(64)\n                        mstore(memPos_29, _138)\n                        return(memPos_29, 32)\n                    }\n                    case 0xa1ac4d13 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                        mstore(_1, and(abi_decode_address_35700(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 21:2349:2394  \"mapping(address => uint256) public claimable1\" */ 29)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _139 := sload(keccak256(_1, 64))\n                        let memPos_30 := mload(64)\n                        mstore(memPos_30, _139)\n                        return(memPos_30, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                        let value0_5 := abi_decode_address_35700()\n                        /// @src 3:3754:3759  \"value\"\n                        fun_transfer(/** @src 10:735:745  \"msg.sender\" */ caller(), /** @src 3:3754:3759  \"value\" */ value0_5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36))\n                        let memPos_31 := mload(64)\n                        mstore(memPos_31, 1)\n                        return(memPos_31, 32)\n                    }\n                    case 0xb84c8246 {\n                        if callvalue() { revert(_1, _1) }\n                        let _140 := 32\n                        if slt(add(calldatasize(), not(3)), _140) { revert(_1, _1) }\n                        let offset_2 := calldataload(4)\n                        let _141 := 0xffffffffffffffff\n                        if gt(offset_2, _141) { revert(_1, _1) }\n                        let value0_6, value1_1 := abi_decode_bytes_calldata(add(4, offset_2), calldatasize())\n                        let _142 := sub(shl(160, 1), 1)\n                        let cleaned_15 := and(sload(/** @src 21:3830:3836  \"_voter\" */ 0x0b), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _142)\n                        /// @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\"\n                        let _143 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\"\n                        mstore(_143, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(225, 0x3bbc4b07))\n                        /// @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\"\n                        let _144 := staticcall(gas(), cleaned_15, _143, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\" */ _143, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _140)\n                        /// @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\"\n                        if iszero(_144)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_14 := mload(64)\n                            returndatacopy(pos_14, _1, returndatasize())\n                            revert(pos_14, returndatasize())\n                        }\n                        /// @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\"\n                        let expr_36 := _1\n                        if _144\n                        {\n                            let _145 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _140\n                            /// @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _140, /** @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\" */ returndatasize()) { _145 := returndatasize() }\n                            finalize_allocation(_143, _145)\n                            expr_36 := abi_decode_address_fromMemory(_143, add(_143, _145))\n                        }\n                        /// @src 21:3805:3886  \"if (msg.sender != IVoter(_voter).emergencyCouncil()) revert NotEmergencyCouncil()\"\n                        if /** @src 21:3809:3856  \"msg.sender != IVoter(_voter).emergencyCouncil()\" */ iszero(eq(/** @src 21:3809:3819  \"msg.sender\" */ caller(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 21:3809:3856  \"msg.sender != IVoter(_voter).emergencyCouncil()\" */ expr_36, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _142)))\n                        /// @src 21:3805:3886  \"if (msg.sender != IVoter(_voter).emergencyCouncil()) revert NotEmergencyCouncil()\"\n                        {\n                            /// @src 21:3865:3886  \"NotEmergencyCouncil()\"\n                            let _146 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:3865:3886  \"NotEmergencyCouncil()\"\n                            mstore(_146, shl(224, 0xc5601293))\n                            revert(_146, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                        }\n                        if gt(value1_1, _141)\n                        {\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                            revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x24)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 21:3896:3914  \"_symbol = __symbol\" */ 0x0a)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ value1_1)\n                        let srcOffset := _1\n                        switch gt(value1_1, 31)\n                        case 1 {\n                            let loopEnd := and(value1_1, not(31))\n                            let dstPtr := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                            let i_2 := _1\n                            for { } lt(i_2, loopEnd) { i_2 := add(i_2, _140) }\n                            {\n                                sstore(dstPtr, calldataload(add(value0_6, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, _140)\n                            }\n                            if lt(loopEnd, value1_1)\n                            {\n                                sstore(dstPtr, and(calldataload(add(value0_6, srcOffset)), not(shr(and(shl(3, value1_1), 248), not(0)))))\n                            }\n                            sstore(/** @src 21:3896:3914  \"_symbol = __symbol\" */ 0x0a, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(1, value1_1), 1))\n                        }\n                        default {\n                            let value_10 := _1\n                            if value1_1\n                            {\n                                value_10 := calldataload(add(value0_6, srcOffset))\n                            }\n                            sstore(/** @src 21:3896:3914  \"_symbol = __symbol\" */ 0x0a, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_10, value1_1))\n                        }\n                        return(_1, _1)\n                    }\n                    case 0xbc25cf77 {\n                        if callvalue() { revert(_1, _1) }\n                        let _147 := 32\n                        if slt(add(calldatasize(), not(3)), _147) { revert(_1, _1) }\n                        let value0_7 := abi_decode_address_35700()\n                        /// @src 12:2322:2425  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _148 := sub(shl(160, 1), 1)\n                        let cleaned_16 := and(sload(/** @src 21:16847:16853  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _148)\n                        let cleaned_17 := and(sload(/** @src 21:16855:16861  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _148)\n                        /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _149 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        let _150 := shl(224, 0x70a08231)\n                        /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                        mstore(_149, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _150)\n                        mstore(/** @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\" */ add(_149, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:16939:16943  \"this\" */ address())\n                        /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                        let _151 := staticcall(gas(), cleaned_16, _149, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\" */ _149, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _147)\n                        /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                        if iszero(_151)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_15 := mload(64)\n                            returndatacopy(pos_15, _1, returndatasize())\n                            revert(pos_15, returndatasize())\n                        }\n                        /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                        let expr_37 := _1\n                        if _151\n                        {\n                            let _152 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _147\n                            /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _147, /** @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _152 := returndatasize() }\n                            finalize_allocation(_149, _152)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\" */ add(_149, _152), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _149), _147) { revert(0, 0) }\n                            /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                            expr_37 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_149)\n                        }\n                        /// @src 21:16905:16958  \"IERC20(_token0).balanceOf(address(this)) - (reserve0)\"\n                        fun_safeTransfer(cleaned_16, value0_7, checked_sub_uint256(expr_37, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:16949:16957  \"reserve0\" */ 0x13)))\n                        /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _153 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                        mstore(_153, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _150)\n                        mstore(/** @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\" */ add(_153, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:16939:16943  \"this\" */ address())\n                        /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                        let _154 := staticcall(gas(), cleaned_17, _153, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\" */ _153, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _147)\n                        /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                        if iszero(_154)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_16 := mload(64)\n                            returndatacopy(pos_16, _1, returndatasize())\n                            revert(pos_16, returndatasize())\n                        }\n                        /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                        let expr_38 := _1\n                        if _154\n                        {\n                            let _155 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _147\n                            /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _147, /** @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _155 := returndatasize() }\n                            finalize_allocation(_153, _155)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\" */ add(_153, _155), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _153), _147) { revert(0, 0) }\n                            /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                            expr_38 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_153)\n                        }\n                        /// @src 21:17002:17055  \"IERC20(_token1).balanceOf(address(this)) - (reserve1)\"\n                        fun_safeTransfer(cleaned_17, value0_7, checked_sub_uint256(expr_38, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:17046:17054  \"reserve1\" */ 0x14)))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        sstore(/** @src 12:2924:2945  \"_status = NOT_ENTERED\" */ 0x08, /** @src 12:1713:1714  \"1\" */ 0x01)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        return(_1, _1)\n                    }\n                    case 0xbda39cad {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _156 := sload(/** @src 21:2059:2080  \"uint256 public index1\" */ 25)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_32 := mload(64)\n                        mstore(memPos_32, _156)\n                        return(memPos_32, 32)\n                    }\n                    case 0xbf944dbc {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _157 := sload(/** @src 21:1867:1904  \"uint256 public reserve0CumulativeLast\" */ 22)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_33 := mload(64)\n                        mstore(memPos_33, _157)\n                        return(memPos_33, 32)\n                    }\n                    case 0xc245febc {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _158 := sload(/** @src 21:1936:1973  \"uint256 public reserve1CumulativeLast\" */ 23)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_34 := mload(64)\n                        mstore(memPos_34, _158)\n                        return(memPos_34, 32)\n                    }\n                    case 0xc45a0155 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value_11 := and(sload(/** @src 21:1457:1479  \"address public factory\" */ 15), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                        let memPos_35 := mload(64)\n                        mstore(memPos_35, value_11)\n                        return(memPos_35, 32)\n                    }\n                    case 0xc47f0027 {\n                        if callvalue() { revert(_1, _1) }\n                        let _159 := 32\n                        if slt(add(calldatasize(), not(3)), _159) { revert(_1, _1) }\n                        let offset_3 := calldataload(4)\n                        let _160 := 0xffffffffffffffff\n                        if gt(offset_3, _160) { revert(_1, _1) }\n                        let value0_8, value1_2 := abi_decode_bytes_calldata(add(4, offset_3), calldatasize())\n                        let _161 := sub(shl(160, 1), 1)\n                        let cleaned_18 := and(sload(/** @src 21:3622:3628  \"_voter\" */ 0x0b), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _161)\n                        /// @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\"\n                        let _162 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\"\n                        mstore(_162, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(225, 0x3bbc4b07))\n                        /// @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\"\n                        let _163 := staticcall(gas(), cleaned_18, _162, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\" */ _162, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _159)\n                        /// @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\"\n                        if iszero(_163)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_17 := mload(64)\n                            returndatacopy(pos_17, _1, returndatasize())\n                            revert(pos_17, returndatasize())\n                        }\n                        /// @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\"\n                        let expr_39 := _1\n                        if _163\n                        {\n                            let _164 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _159\n                            /// @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _159, /** @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\" */ returndatasize()) { _164 := returndatasize() }\n                            finalize_allocation(_162, _164)\n                            expr_39 := abi_decode_address_fromMemory(_162, add(_162, _164))\n                        }\n                        /// @src 21:3597:3678  \"if (msg.sender != IVoter(_voter).emergencyCouncil()) revert NotEmergencyCouncil()\"\n                        if /** @src 21:3601:3648  \"msg.sender != IVoter(_voter).emergencyCouncil()\" */ iszero(eq(/** @src 21:3601:3611  \"msg.sender\" */ caller(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 21:3601:3648  \"msg.sender != IVoter(_voter).emergencyCouncil()\" */ expr_39, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _161)))\n                        /// @src 21:3597:3678  \"if (msg.sender != IVoter(_voter).emergencyCouncil()) revert NotEmergencyCouncil()\"\n                        {\n                            /// @src 21:3657:3678  \"NotEmergencyCouncil()\"\n                            let _165 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:3657:3678  \"NotEmergencyCouncil()\"\n                            mstore(_165, /** @src 21:3865:3886  \"NotEmergencyCouncil()\" */ shl(224, 0xc5601293))\n                            /// @src 21:3657:3678  \"NotEmergencyCouncil()\"\n                            revert(_165, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                        }\n                        if gt(value1_2, _160)\n                        {\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                            revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x24)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        clean_up_bytearray_end_slots_string_storage_35729(extract_byte_array_length(sload(/** @src 21:3688:3702  \"_name = __name\" */ 0x09)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ value1_2)\n                        let srcOffset_1 := _1\n                        switch gt(value1_2, 31)\n                        case 1 {\n                            let loopEnd_1 := and(value1_2, not(31))\n                            let dstPtr_1 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                            let i_3 := _1\n                            for { } lt(i_3, loopEnd_1) { i_3 := add(i_3, _159) }\n                            {\n                                sstore(dstPtr_1, calldataload(add(value0_8, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, 1)\n                                srcOffset_1 := add(srcOffset_1, _159)\n                            }\n                            if lt(loopEnd_1, value1_2)\n                            {\n                                sstore(dstPtr_1, and(calldataload(add(value0_8, srcOffset_1)), not(shr(and(shl(3, value1_2), 248), not(0)))))\n                            }\n                            sstore(/** @src 21:3688:3702  \"_name = __name\" */ 0x09, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(1, value1_2), 1))\n                        }\n                        default {\n                            let value_12 := _1\n                            if value1_2\n                            {\n                                value_12 := calldataload(add(value0_8, srcOffset_1))\n                            }\n                            sstore(/** @src 21:3688:3702  \"_name = __name\" */ 0x09, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_12, value1_2))\n                        }\n                        return(_1, _1)\n                    }\n                    case 0xc5700a02 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let _166 := sload(/** @src 21:1801:1834  \"uint256 public blockTimestampLast\" */ 21)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_36 := mload(64)\n                        mstore(memPos_36, _166)\n                        return(memPos_36, 32)\n                    }\n                    case 0xd21220a7 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value_13 := and(sload(/** @src 21:1349:1370  \"address public token1\" */ 13), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                        let memPos_37 := mload(64)\n                        mstore(memPos_37, value_13)\n                        return(memPos_37, 32)\n                    }\n                    case 0xd294f093 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        mstore(_1, /** @src 21:4755:4765  \"msg.sender\" */ caller())\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _167 := 0x20\n                        mstore(_167, _1)\n                        let _168 := sload(keccak256(_1, 64))\n                        /// @src 21:6371:7518  \"if (_supplied > 0) {...\"\n                        switch /** @src 21:6375:6388  \"_supplied > 0\" */ iszero(iszero(_168))\n                        case /** @src 21:6371:7518  \"if (_supplied > 0) {...\" */ 0 {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _169 := sload(/** @src 21:7406:7412  \"index0\" */ 0x18)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(_167, /** @src 21:7380:7392  \"supplyIndex0\" */ 0x1a)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            sstore(keccak256(_1, 64), _169)\n                            let _170 := sload(/** @src 21:7501:7507  \"index1\" */ 0x19)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(_167, /** @src 21:7475:7487  \"supplyIndex1\" */ 0x1b)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            sstore(keccak256(_1, 64), _170)\n                        }\n                        default /// @src 21:6371:7518  \"if (_supplied > 0) {...\"\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(_1, /** @src 21:4755:4765  \"msg.sender\" */ caller())\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(_167, /** @src 21:6428:6440  \"supplyIndex0\" */ 0x1a)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _171 := sload(keccak256(_1, 64))\n                            mstore(_167, /** @src 21:6531:6543  \"supplyIndex1\" */ 0x1b)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _172 := sload(keccak256(_1, 64))\n                            let _173 := sload(/** @src 21:6586:6592  \"index0\" */ 0x18)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _174 := sload(/** @src 21:6666:6672  \"index1\" */ 0x19)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(_167, /** @src 21:6428:6440  \"supplyIndex0\" */ 0x1a)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            sstore(keccak256(_1, 64), _173)\n                            mstore(_167, /** @src 21:6531:6543  \"supplyIndex1\" */ 0x1b)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            sstore(keccak256(_1, 64), _174)\n                            /// @src 21:6849:6872  \"_index0 - _supplyIndex0\"\n                            let expr_40 := checked_sub_uint256(_173, _171)\n                            /// @src 21:6962:6985  \"_index1 - _supplyIndex1\"\n                            let expr_41 := checked_sub_uint256(_174, _172)\n                            /// @src 21:6999:7193  \"if (_delta0 > 0) {...\"\n                            if /** @src 21:7003:7014  \"_delta0 > 0\" */ iszero(iszero(expr_40))\n                            /// @src 21:6999:7193  \"if (_delta0 > 0) {...\"\n                            {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let r := div(/** @src 21:7052:7071  \"_supplied * _delta0\" */ checked_mul_uint256(_168, expr_40), /** @src 21:7075:7079  \"1e18\" */ 0x0de0b6b3a7640000)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(_1, /** @src 21:4755:4765  \"msg.sender\" */ caller())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(_167, /** @src 21:7147:7157  \"claimable0\" */ 0x1c)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let dataSlot_2 := keccak256(_1, 64)\n                                sstore(dataSlot_2, /** @src 21:7147:7178  \"claimable0[recipient] += _share\" */ checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:7147:7178  \"claimable0[recipient] += _share\" */ dataSlot_2), r))\n                            }\n                            /// @src 21:7206:7350  \"if (_delta1 > 0) {...\"\n                            if /** @src 21:7210:7221  \"_delta1 > 0\" */ iszero(iszero(expr_41))\n                            /// @src 21:7206:7350  \"if (_delta1 > 0) {...\"\n                            {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let r_1 := div(/** @src 21:7259:7278  \"_supplied * _delta1\" */ checked_mul_uint256(_168, expr_41), /** @src 21:7282:7286  \"1e18\" */ 0x0de0b6b3a7640000)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(_1, /** @src 21:4755:4765  \"msg.sender\" */ caller())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(_167, /** @src 21:7304:7314  \"claimable1\" */ 0x1d)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let dataSlot_3 := keccak256(_1, 64)\n                                sstore(dataSlot_3, /** @src 21:7304:7335  \"claimable1[recipient] += _share\" */ checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:7304:7335  \"claimable1[recipient] += _share\" */ dataSlot_3), r_1))\n                            }\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(_1, /** @src 21:4755:4765  \"msg.sender\" */ caller())\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(_167, /** @src 21:4788:4798  \"claimable0\" */ 0x1c)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _175 := sload(keccak256(_1, 64))\n                        mstore(_167, /** @src 21:4831:4841  \"claimable1\" */ 0x1d)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _176 := sload(keccak256(_1, 64))\n                        /// @src 21:4868:4880  \"claimed0 > 0\"\n                        let _177 := iszero(_175)\n                        /// @src 21:4868:4896  \"claimed0 > 0 || claimed1 > 0\"\n                        let expr_42 := /** @src 21:4868:4880  \"claimed0 > 0\" */ iszero(_177)\n                        /// @src 21:4868:4896  \"claimed0 > 0 || claimed1 > 0\"\n                        if _177\n                        {\n                            expr_42 := /** @src 21:4884:4896  \"claimed1 > 0\" */ iszero(iszero(_176))\n                        }\n                        /// @src 21:4864:5136  \"if (claimed0 > 0 || claimed1 > 0) {...\"\n                        if expr_42\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(_167, /** @src 21:4788:4798  \"claimable0\" */ 0x1c)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            sstore(keccak256(_1, 64), _1)\n                            mstore(_167, /** @src 21:4831:4841  \"claimable1\" */ 0x1d)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            sstore(keccak256(_1, 64), _1)\n                            let cleaned_19 := and(sload(/** @src 21:5002:5010  \"poolFees\" */ 0x0e), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                            /// @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\"\n                            if iszero(extcodesize(cleaned_19))\n                            {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                revert(_1, _1)\n                            }\n                            /// @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\"\n                            let _178 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\"\n                            mstore(_178, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(225, 0x299e7ae7))\n                            /// @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\"\n                            let _179 := call(gas(), cleaned_19, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, /** @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\" */ _178, sub(abi_encode_address_uint256_uint256(add(_178, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:4755:4765  \"msg.sender\" */ caller(), /** @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\" */ _175, _176), _178), _178, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                            /// @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\"\n                            if iszero(_179)\n                            {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let pos_18 := mload(64)\n                                returndatacopy(pos_18, _1, returndatasize())\n                                revert(pos_18, returndatasize())\n                            }\n                            /// @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\"\n                            if _179\n                            {\n                                finalize_allocation_35698(_178)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                if _1 { revert(_1, _1) }\n                            }\n                            /// @src 21:5076:5125  \"Claim(msg.sender, msg.sender, claimed0, claimed1)\"\n                            let _180 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            mstore(_180, _175)\n                            mstore(add(_180, _167), _176)\n                            /// @src 21:5076:5125  \"Claim(msg.sender, msg.sender, claimed0, claimed1)\"\n                            log3(_180, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 21:5076:5125  \"Claim(msg.sender, msg.sender, claimed0, claimed1)\" */ 0x865ca08d59f5cb456e85cd2f7ef63664ea4f73327414e9d8152c4158b0e94645, /** @src 21:4755:4765  \"msg.sender\" */ caller(), caller())\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_38 := mload(64)\n                        mstore(memPos_38, _175)\n                        mstore(add(memPos_38, _167), _176)\n                        return(memPos_38, 64)\n                    }\n                    case 0xd505accf {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_1, _1) }\n                        let value0_9 := abi_decode_address_35700()\n                        let value1_3 := abi_decode_address()\n                        let value_14 := calldataload(68)\n                        let value_15 := calldataload(100)\n                        let value_16 := calldataload(132)\n                        if iszero(eq(value_16, and(value_16, 0xff))) { revert(_1, _1) }\n                        /// @src 5:1879:1976  \"if (block.timestamp > deadline) {...\"\n                        if /** @src 5:1883:1909  \"block.timestamp > deadline\" */ gt(/** @src 5:1883:1898  \"block.timestamp\" */ timestamp(), /** @src 5:1883:1909  \"block.timestamp > deadline\" */ value_15)\n                        /// @src 5:1879:1976  \"if (block.timestamp > deadline) {...\"\n                        {\n                            /// @src 5:1932:1965  \"ERC2612ExpiredSignature(deadline)\"\n                            let _181 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 5:1932:1965  \"ERC2612ExpiredSignature(deadline)\"\n                            mstore(_181, shl(225, 0x313c8981))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 5:1932:1965  \"ERC2612ExpiredSignature(deadline)\" */ add(_181, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), value_15)\n                            /// @src 5:1932:1965  \"ERC2612ExpiredSignature(deadline)\"\n                            revert(_181, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                        }\n                        let _182 := sub(shl(160, 1), 1)\n                        let _183 := and(value0_9, _182)\n                        mstore(_1, _183)\n                        mstore(32, /** @src 11:1121:1128  \"_nonces\" */ 0x07)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let dataSlot_4 := keccak256(_1, 64)\n                        let _184 := sload(/** @src 11:1121:1137  \"_nonces[owner]++\" */ dataSlot_4)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        sstore(dataSlot_4, add(/** @src 11:1121:1137  \"_nonces[owner]++\" */ _184, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 1))\n                        /// @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                        let expr_mpos_2 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                        let _185 := add(expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                        mstore(_185, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(/** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64), _183)\n                        mstore(/** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 96), and(value1_3, _182))\n                        mstore(/** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 128), value_14)\n                        mstore(/** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 160), _184)\n                        mstore(/** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 192), value_15)\n                        /// @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                        mstore(expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 192)\n                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        let newFreePtr_1 := add(expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, expr_mpos_2))\n                        {\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0, shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                            revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x24)\n                        }\n                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ newFreePtr_1)\n                        /// @src 5:2007:2096  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\"\n                        let _186 := keccak256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _185, mload(/** @src 5:2007:2096  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\" */ expr_mpos_2))\n                        /// @src 17:5053:5073  \"_domainSeparatorV4()\"\n                        let _187 := fun_domainSeparatorV4()\n                        /// @src 18:3515:3748  \"assembly {...\"\n                        let usr$ptr := mload(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64)\n                        /// @src 18:3515:3748  \"assembly {...\"\n                        mstore(usr$ptr, \"\\x19\\x01\")\n                        mstore(add(usr$ptr, 0x02), _187)\n                        mstore(add(usr$ptr, 0x22), _186)\n                        /// @src 16:6967:6992  \"tryRecover(hash, v, r, s)\"\n                        let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(/** @src 18:3515:3748  \"assembly {...\" */ keccak256(usr$ptr, 0x42), /** @src 16:6967:6992  \"tryRecover(hash, v, r, s)\" */ value_16, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(164), calldataload(196))\n                        /// @src 16:7021:7029  \"errorArg\"\n                        fun_throwError(expr_component_1, expr_component_2)\n                        /// @src 5:2216:2304  \"if (signer != owner) {...\"\n                        if /** @src 5:2220:2235  \"signer != owner\" */ iszero(eq(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 5:2220:2235  \"signer != owner\" */ expr_component, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _182), _183))\n                        /// @src 5:2216:2304  \"if (signer != owner) {...\"\n                        {\n                            /// @src 5:2258:2293  \"ERC2612InvalidSigner(signer, owner)\"\n                            let _188 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 5:2258:2293  \"ERC2612InvalidSigner(signer, owner)\"\n                            mstore(_188, shl(225, 0x25c00723))\n                            revert(_188, sub(abi_encode_address_address(add(_188, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 5:2258:2293  \"ERC2612InvalidSigner(signer, owner)\" */ expr_component, value0_9), _188))\n                        }\n                        /// @src 3:9105:9109  \"true\"\n                        fun_approve(value0_9, value1_3, value_14)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        return(_1, _1)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                        let value0_10 := abi_decode_address_35700()\n                        let value1_4 := abi_decode_address()\n                        let _189 := sub(shl(160, 1), 1)\n                        mstore(_1, and(value0_10, _189))\n                        mstore(32, /** @src 3:3952:3963  \"_allowances\" */ 0x01)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _190 := keccak256(_1, 64)\n                        mstore(0, and(value1_4, _189))\n                        mstore(32, _190)\n                        let _191 := sload(keccak256(0, 64))\n                        let memPos_39 := mload(64)\n                        mstore(memPos_39, _191)\n                        return(memPos_39, 32)\n                    }\n                    case 0xe4463eb2 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let memPos_40 := mload(64)\n                        mstore(memPos_40, /** @src 21:1549:1553  \"1800\" */ 0x0708)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        return(memPos_40, 32)\n                    }\n                    case 0xe4bbb5a8 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_1, _1) }\n                        let value0_11 := abi_decode_address_35700()\n                        let value1_5 := abi_decode_address()\n                        let value_17 := calldataload(68)\n                        let _192 := iszero(iszero(value_17))\n                        if iszero(eq(value_17, _192)) { revert(_1, _1) }\n                        let _193 := sload(/** @src 21:2570:2577  \"factory\" */ 0x0f)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _194 := sub(shl(160, 1), 1)\n                        /// @src 21:2566:2619  \"if (factory != address(0)) revert FactoryAlreadySet()\"\n                        if /** @src 21:2570:2591  \"factory != address(0)\" */ iszero(iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(_193, _194)))\n                        /// @src 21:2566:2619  \"if (factory != address(0)) revert FactoryAlreadySet()\"\n                        {\n                            /// @src 21:2600:2619  \"FactoryAlreadySet()\"\n                            let _195 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:2600:2619  \"FactoryAlreadySet()\"\n                            mstore(_195, shl(227, 0x02a98a37))\n                            revert(_195, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                        }\n                        let _196 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(/** @src 21:2570:2577  \"factory\" */ 0x0f, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(_193, _196), /** @src 21:2639:2649  \"msg.sender\" */ caller()))\n                        /// @src 21:2668:2697  \"IPoolFactory(factory).voter()\"\n                        let _197 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:2668:2697  \"IPoolFactory(factory).voter()\"\n                        mstore(_197, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(226, 0x11b25aab))\n                        let _198 := 32\n                        /// @src 21:2668:2697  \"IPoolFactory(factory).voter()\"\n                        let _199 := staticcall(gas(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(_193, _1), /** @src 21:2639:2649  \"msg.sender\" */ caller()), /** @src 21:2668:2697  \"IPoolFactory(factory).voter()\" */ _197, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:2668:2697  \"IPoolFactory(factory).voter()\" */ _197, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198)\n                        /// @src 21:2668:2697  \"IPoolFactory(factory).voter()\"\n                        if iszero(_199)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_19 := mload(64)\n                            returndatacopy(pos_19, _1, returndatasize())\n                            revert(pos_19, returndatasize())\n                        }\n                        /// @src 21:2668:2697  \"IPoolFactory(factory).voter()\"\n                        let expr_43 := _1\n                        if _199\n                        {\n                            let _200 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198\n                            /// @src 21:2668:2697  \"IPoolFactory(factory).voter()\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198, /** @src 21:2668:2697  \"IPoolFactory(factory).voter()\" */ returndatasize()) { _200 := returndatasize() }\n                            finalize_allocation(_197, _200)\n                            expr_43 := abi_decode_address_fromMemory(_197, add(_197, _200))\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _201 := sload(/** @src 21:2659:2697  \"_voter = IPoolFactory(factory).voter()\" */ 0x0b)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        sstore(/** @src 21:2659:2697  \"_voter = IPoolFactory(factory).voter()\" */ 0x0b, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(or(and(_201, shl(168, 0xffffffffffffffffffffff)), and(expr_43, _194)), and(shl(160, _192), shl(160, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 255))))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _202 := and(value1_5, _194)\n                        sstore(/** @src 21:2707:2761  \"(token0, token1, stable) = (_token0, _token1, _stable)\" */ 0x0d, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(sload(/** @src 21:2707:2761  \"(token0, token1, stable) = (_token0, _token1, _stable)\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _196), _202))\n                        let _203 := and(value0_11, _194)\n                        sstore(/** @src 21:2707:2761  \"(token0, token1, stable) = (_token0, _token1, _stable)\" */ 0x0c, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(sload(/** @src 21:2707:2761  \"(token0, token1, stable) = (_token0, _token1, _stable)\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _196), _203))\n                        /// @src 21:2790:2820  \"new PoolFees(_token0, _token1)\"\n                        let _204 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:2790:2820  \"new PoolFees(_token0, _token1)\"\n                        let _205 := datasize(\"PoolFees_6496\")\n                        let _206 := add(_204, _205)\n                        let _207 := 0xffffffffffffffff\n                        if or(gt(_206, _207), lt(_206, _204))\n                        {\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                            revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, 36)\n                        }\n                        /// @src 21:2790:2820  \"new PoolFees(_token0, _token1)\"\n                        datacopy(_204, dataoffset(\"PoolFees_6496\"), _205)\n                        let expr_address := create(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, /** @src 21:2790:2820  \"new PoolFees(_token0, _token1)\" */ _204, sub(abi_encode_address_address(_206, value0_11, value1_5), _204))\n                        if iszero(expr_address)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_20 := mload(64)\n                            returndatacopy(pos_20, _1, returndatasize())\n                            revert(pos_20, returndatasize())\n                        }\n                        sstore(/** @src 21:2771:2821  \"poolFees = address(new PoolFees(_token0, _token1))\" */ 0x0e, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(sload(/** @src 21:2771:2821  \"poolFees = address(new PoolFees(_token0, _token1))\" */ 0x0e), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _196), and(/** @src 21:2782:2821  \"address(new PoolFees(_token0, _token1))\" */ expr_address, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _194)))\n                        /// @src 21:2855:2878  \"ERC20(_token0).symbol()\"\n                        let _208 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        let _209 := shl(224, 0x95d89b41)\n                        /// @src 21:2855:2878  \"ERC20(_token0).symbol()\"\n                        mstore(_208, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _209)\n                        /// @src 21:2855:2878  \"ERC20(_token0).symbol()\"\n                        let _210 := staticcall(gas(), _203, _208, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:2855:2878  \"ERC20(_token0).symbol()\" */ _208, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                        /// @src 21:2855:2878  \"ERC20(_token0).symbol()\"\n                        if iszero(_210)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_21 := mload(64)\n                            returndatacopy(pos_21, _1, returndatasize())\n                            revert(pos_21, returndatasize())\n                        }\n                        /// @src 21:2855:2878  \"ERC20(_token0).symbol()\"\n                        let expr_mpos_3 := _1\n                        if _210\n                        {\n                            let _211 := returndatasize()\n                            returndatacopy(_208, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, /** @src 21:2855:2878  \"ERC20(_token0).symbol()\" */ _211)\n                            finalize_allocation(_208, _211)\n                            expr_mpos_3 := abi_decode_string_fromMemory(_208, add(_208, _211))\n                        }\n                        /// @src 21:2912:2935  \"ERC20(_token1).symbol()\"\n                        let _212 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:2912:2935  \"ERC20(_token1).symbol()\"\n                        mstore(_212, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _209)\n                        /// @src 21:2912:2935  \"ERC20(_token1).symbol()\"\n                        let _213 := staticcall(gas(), _202, _212, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:2912:2935  \"ERC20(_token1).symbol()\" */ _212, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                        /// @src 21:2912:2935  \"ERC20(_token1).symbol()\"\n                        if iszero(_213)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_22 := mload(64)\n                            returndatacopy(pos_22, _1, returndatasize())\n                            revert(pos_22, returndatasize())\n                        }\n                        /// @src 21:2912:2935  \"ERC20(_token1).symbol()\"\n                        let expr_mpos_4 := _1\n                        if _213\n                        {\n                            let _214 := returndatasize()\n                            returndatacopy(_212, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, /** @src 21:2912:2935  \"ERC20(_token1).symbol()\" */ _214)\n                            finalize_allocation(_212, _214)\n                            expr_mpos_4 := abi_decode_string_fromMemory(_212, add(_212, _214))\n                        }\n                        /// @src 21:2945:3328  \"if (_stable) {...\"\n                        switch value_17\n                        case 0 {\n                            /// @src 21:3174:3234  \"abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\"\n                            let expr_mpos_5 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            mstore(/** @src 21:3174:3234  \"abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ add(expr_mpos_5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198), \"VolatileV2 AMM - \")\n                            let length_2 := mload(expr_mpos_3)\n                            let _215 := add(expr_mpos_3, _198)\n                            copy_memory_to_memory_with_cleanup(_215, add(/** @src 21:3174:3234  \"abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 49), length_2)\n                            let _216 := add(/** @src 21:3174:3234  \"abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_2)\n                            let _217 := \"/\"\n                            mstore(add(_216, 49), _217)\n                            let length_3 := mload(expr_mpos_4)\n                            let _218 := add(expr_mpos_4, _198)\n                            copy_memory_to_memory_with_cleanup(_218, add(_216, 50), length_3)\n                            /// @src 21:3174:3234  \"abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\"\n                            let _219 := sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(_216, length_3), /** @src 21:3174:3234  \"abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_5)\n                            mstore(expr_mpos_5, add(_219, 18))\n                            finalize_allocation(expr_mpos_5, add(_219, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 50))\n                            let newLen := mload(expr_mpos_5)\n                            if gt(newLen, /** @src 21:2790:2820  \"new PoolFees(_token0, _token1)\" */ _207)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            {\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, 36)\n                            }\n                            clean_up_bytearray_end_slots_string_storage_35729(extract_byte_array_length(sload(/** @src 21:3159:3235  \"_name = string(abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen)\n                            let srcOffset_2 := _1\n                            srcOffset_2 := _198\n                            switch gt(newLen, 31)\n                            case 1 {\n                                let loopEnd_2 := and(newLen, not(31))\n                                mstore(_1, /** @src 21:3159:3235  \"_name = string(abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let dstPtr_2 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                                let i_4 := _1\n                                for { } lt(i_4, loopEnd_2) { i_4 := add(i_4, _198) }\n                                {\n                                    sstore(dstPtr_2, mload(add(expr_mpos_5, srcOffset_2)))\n                                    dstPtr_2 := add(dstPtr_2, 1)\n                                    srcOffset_2 := add(srcOffset_2, _198)\n                                }\n                                if lt(loopEnd_2, newLen)\n                                {\n                                    let lastValue := mload(add(expr_mpos_5, srcOffset_2))\n                                    sstore(dstPtr_2, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                                }\n                                sstore(/** @src 21:3159:3235  \"_name = string(abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(1, newLen), 1))\n                            }\n                            default {\n                                let value_18 := _1\n                                if newLen\n                                {\n                                    value_18 := mload(add(expr_mpos_5, srcOffset_2))\n                                }\n                                sstore(/** @src 21:3159:3235  \"_name = string(abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_18, newLen))\n                            }\n                            /// @src 21:3266:3316  \"abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\"\n                            let expr_mpos_6 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            mstore(/** @src 21:3266:3316  \"abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ add(expr_mpos_6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198), \"vAMMV2-\")\n                            let length_4 := mload(expr_mpos_3)\n                            copy_memory_to_memory_with_cleanup(_215, add(/** @src 21:3266:3316  \"abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 39), length_4)\n                            let _220 := add(/** @src 21:3266:3316  \"abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_4)\n                            mstore(add(_220, 39), _217)\n                            let length_5 := mload(expr_mpos_4)\n                            copy_memory_to_memory_with_cleanup(_218, add(_220, 40), length_5)\n                            /// @src 21:3266:3316  \"abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\"\n                            let _221 := sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(_220, length_5), /** @src 21:3266:3316  \"abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_6)\n                            mstore(expr_mpos_6, add(_221, 8))\n                            finalize_allocation(expr_mpos_6, add(_221, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 40))\n                            let newLen_1 := mload(expr_mpos_6)\n                            if gt(newLen_1, /** @src 21:2790:2820  \"new PoolFees(_token0, _token1)\" */ _207)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            {\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, 36)\n                            }\n                            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 21:3249:3317  \"_symbol = string(abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen_1)\n                            let srcOffset_3 := _1\n                            srcOffset_3 := _198\n                            switch gt(newLen_1, 31)\n                            case 1 {\n                                let loopEnd_3 := and(newLen_1, not(31))\n                                mstore(_1, /** @src 21:3249:3317  \"_symbol = string(abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let dstPtr_3 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                                let i_5 := _1\n                                for { } lt(i_5, loopEnd_3) { i_5 := add(i_5, _198) }\n                                {\n                                    sstore(dstPtr_3, mload(add(expr_mpos_6, srcOffset_3)))\n                                    dstPtr_3 := add(dstPtr_3, 1)\n                                    srcOffset_3 := add(srcOffset_3, _198)\n                                }\n                                if lt(loopEnd_3, newLen_1)\n                                {\n                                    let lastValue_1 := mload(add(expr_mpos_6, srcOffset_3))\n                                    sstore(dstPtr_3, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                                }\n                                sstore(/** @src 21:3249:3317  \"_symbol = string(abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(1, newLen_1), 1))\n                            }\n                            default {\n                                let value_19 := _1\n                                if newLen_1\n                                {\n                                    value_19 := mload(add(expr_mpos_6, srcOffset_3))\n                                }\n                                sstore(/** @src 21:3249:3317  \"_symbol = string(abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_19, newLen_1))\n                            }\n                        }\n                        default /// @src 21:2945:3328  \"if (_stable) {...\"\n                        {\n                            /// @src 21:2987:3045  \"abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\"\n                            let expr_mpos_7 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            mstore(/** @src 21:2987:3045  \"abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ add(expr_mpos_7, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198), \"StableV2 AMM - \")\n                            let length_6 := mload(expr_mpos_3)\n                            let _222 := add(expr_mpos_3, _198)\n                            copy_memory_to_memory_with_cleanup(_222, add(/** @src 21:2987:3045  \"abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_7, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 47), length_6)\n                            let _223 := add(/** @src 21:2987:3045  \"abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_7, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_6)\n                            let _224 := \"/\"\n                            mstore(add(_223, 47), _224)\n                            let length_7 := mload(expr_mpos_4)\n                            let _225 := add(expr_mpos_4, _198)\n                            copy_memory_to_memory_with_cleanup(_225, add(_223, 48), length_7)\n                            /// @src 21:2987:3045  \"abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\"\n                            let _226 := sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(_223, length_7), /** @src 21:2987:3045  \"abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_7)\n                            mstore(expr_mpos_7, add(_226, 16))\n                            finalize_allocation(expr_mpos_7, add(_226, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 48))\n                            let newLen_2 := mload(expr_mpos_7)\n                            if gt(newLen_2, /** @src 21:2790:2820  \"new PoolFees(_token0, _token1)\" */ _207)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            {\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, 36)\n                            }\n                            clean_up_bytearray_end_slots_string_storage_35729(extract_byte_array_length(sload(/** @src 21:2972:3046  \"_name = string(abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen_2)\n                            let srcOffset_4 := _1\n                            srcOffset_4 := _198\n                            switch gt(newLen_2, 31)\n                            case 1 {\n                                let loopEnd_4 := and(newLen_2, not(31))\n                                mstore(_1, /** @src 21:2972:3046  \"_name = string(abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let dstPtr_4 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                                let i_6 := _1\n                                for { } lt(i_6, loopEnd_4) { i_6 := add(i_6, _198) }\n                                {\n                                    sstore(dstPtr_4, mload(add(expr_mpos_7, srcOffset_4)))\n                                    dstPtr_4 := add(dstPtr_4, 1)\n                                    srcOffset_4 := add(srcOffset_4, _198)\n                                }\n                                if lt(loopEnd_4, newLen_2)\n                                {\n                                    let lastValue_2 := mload(add(expr_mpos_7, srcOffset_4))\n                                    sstore(dstPtr_4, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                                }\n                                sstore(/** @src 21:2972:3046  \"_name = string(abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(1, newLen_2), 1))\n                            }\n                            default {\n                                let value_20 := _1\n                                if newLen_2\n                                {\n                                    value_20 := mload(add(expr_mpos_7, srcOffset_4))\n                                }\n                                sstore(/** @src 21:2972:3046  \"_name = string(abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_20, newLen_2))\n                            }\n                            /// @src 21:3077:3127  \"abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\"\n                            let expr_mpos_8 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            mstore(/** @src 21:3077:3127  \"abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ add(expr_mpos_8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198), \"sAMMV2-\")\n                            let length_8 := mload(expr_mpos_3)\n                            copy_memory_to_memory_with_cleanup(_222, add(/** @src 21:3077:3127  \"abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 39), length_8)\n                            let _227 := add(/** @src 21:3077:3127  \"abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_8)\n                            mstore(add(_227, 39), _224)\n                            let length_9 := mload(expr_mpos_4)\n                            copy_memory_to_memory_with_cleanup(_225, add(_227, 40), length_9)\n                            /// @src 21:3077:3127  \"abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\"\n                            let _228 := sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(_227, length_9), /** @src 21:3077:3127  \"abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_8)\n                            mstore(expr_mpos_8, add(_228, 8))\n                            finalize_allocation(expr_mpos_8, add(_228, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 40))\n                            let newLen_3 := mload(expr_mpos_8)\n                            if gt(newLen_3, /** @src 21:2790:2820  \"new PoolFees(_token0, _token1)\" */ _207)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            {\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, 36)\n                            }\n                            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 21:3060:3128  \"_symbol = string(abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen_3)\n                            let srcOffset_5 := _1\n                            srcOffset_5 := _198\n                            switch gt(newLen_3, 31)\n                            case 1 {\n                                let loopEnd_5 := and(newLen_3, not(31))\n                                mstore(_1, /** @src 21:3060:3128  \"_symbol = string(abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let dstPtr_5 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                                let i_7 := _1\n                                for { } lt(i_7, loopEnd_5) { i_7 := add(i_7, _198) }\n                                {\n                                    sstore(dstPtr_5, mload(add(expr_mpos_8, srcOffset_5)))\n                                    dstPtr_5 := add(dstPtr_5, 1)\n                                    srcOffset_5 := add(srcOffset_5, _198)\n                                }\n                                if lt(loopEnd_5, newLen_3)\n                                {\n                                    let lastValue_3 := mload(add(expr_mpos_8, srcOffset_5))\n                                    sstore(dstPtr_5, and(lastValue_3, not(shr(and(shl(3, newLen_3), 248), not(0)))))\n                                }\n                                sstore(/** @src 21:3060:3128  \"_symbol = string(abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(1, newLen_3), 1))\n                            }\n                            default {\n                                let value_21 := _1\n                                if newLen_3\n                                {\n                                    value_21 := mload(add(expr_mpos_8, srcOffset_5))\n                                }\n                                sstore(/** @src 21:3060:3128  \"_symbol = string(abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_21, newLen_3))\n                            }\n                        }\n                        /// @src 21:3356:3381  \"ERC20(_token0).decimals()\"\n                        let _229 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        let _230 := shl(224, 0x313ce567)\n                        /// @src 21:3356:3381  \"ERC20(_token0).decimals()\"\n                        mstore(_229, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _230)\n                        /// @src 21:3356:3381  \"ERC20(_token0).decimals()\"\n                        let _231 := staticcall(gas(), _203, _229, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:3356:3381  \"ERC20(_token0).decimals()\" */ _229, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198)\n                        /// @src 21:3356:3381  \"ERC20(_token0).decimals()\"\n                        if iszero(_231)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_23 := mload(64)\n                            returndatacopy(pos_23, _1, returndatasize())\n                            revert(pos_23, returndatasize())\n                        }\n                        /// @src 21:3356:3381  \"ERC20(_token0).decimals()\"\n                        let expr_44 := _1\n                        if _231\n                        {\n                            let _232 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198\n                            /// @src 21:3356:3381  \"ERC20(_token0).decimals()\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198, /** @src 21:3356:3381  \"ERC20(_token0).decimals()\" */ returndatasize()) { _232 := returndatasize() }\n                            finalize_allocation(_229, _232)\n                            expr_44 := abi_decode_uint8_fromMemory(_229, add(_229, _232))\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        sstore(/** @src 21:3338:3381  \"decimals0 = 10 ** ERC20(_token0).decimals()\" */ 0x11, /** @src 21:3350:3381  \"10 ** ERC20(_token0).decimals()\" */ checked_exp_rational_by_uint8(expr_44))\n                        /// @src 21:3409:3434  \"ERC20(_token1).decimals()\"\n                        let _233 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:3409:3434  \"ERC20(_token1).decimals()\"\n                        mstore(_233, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _230)\n                        /// @src 21:3409:3434  \"ERC20(_token1).decimals()\"\n                        let _234 := staticcall(gas(), _202, _233, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:3409:3434  \"ERC20(_token1).decimals()\" */ _233, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198)\n                        /// @src 21:3409:3434  \"ERC20(_token1).decimals()\"\n                        if iszero(_234)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_24 := mload(64)\n                            returndatacopy(pos_24, _1, returndatasize())\n                            revert(pos_24, returndatasize())\n                        }\n                        /// @src 21:3409:3434  \"ERC20(_token1).decimals()\"\n                        let expr_45 := _1\n                        if _234\n                        {\n                            let _235 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198\n                            /// @src 21:3409:3434  \"ERC20(_token1).decimals()\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198, /** @src 21:3409:3434  \"ERC20(_token1).decimals()\" */ returndatasize()) { _235 := returndatasize() }\n                            finalize_allocation(_233, _235)\n                            expr_45 := abi_decode_uint8_fromMemory(_233, add(_233, _235))\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        sstore(/** @src 21:3391:3434  \"decimals1 = 10 ** ERC20(_token1).decimals()\" */ 0x12, /** @src 21:3403:3434  \"10 ** ERC20(_token1).decimals()\" */ checked_exp_rational_by_uint8(expr_45))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPtr_3 := mload(64)\n                        finalize_allocation_35742(memPtr_3)\n                        mstore(memPtr_3, /** @src 21:3475:3490  \"block.timestamp\" */ timestamp())\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(/** @src 21:3463:3497  \"Observation(block.timestamp, 0, 0)\" */ add(memPtr_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198), _1)\n                        mstore(/** @src 21:3463:3497  \"Observation(block.timestamp, 0, 0)\" */ add(memPtr_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64), _1)\n                        /// @src 21:3445:3498  \"observations.push(Observation(block.timestamp, 0, 0))\"\n                        array_push_from_struct_Observation_to_array_struct_Observation_storage_dyn_ptr(memPtr_3)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        return(_1, _1)\n                    }\n                    case 0xebeb31db {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let length_10 := sload(/** @src 21:4031:4043  \"observations\" */ 0x10)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_41 := mload(64)\n                        mstore(memPos_41, length_10)\n                        return(memPos_41, 32)\n                    }\n                    case 0xf140a35a {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                        let value_22 := calldataload(4)\n                        let value1_6 := abi_decode_address()\n                        let _236 := sload(/** @src 21:19754:19762  \"reserve0\" */ 0x13)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _237 := sload(/** @src 21:19764:19772  \"reserve1\" */ 0x14)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let cleaned_20 := and(sload(/** @src 21:19820:19827  \"factory\" */ 0x0f), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                        let value_23 := and(shr(160, sload(/** @src 21:19851:19857  \"stable\" */ 0x0b)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                        /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                        let _238 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                        mstore(_238, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0xcc56b2c5))\n                        /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                        let _239 := staticcall(gas(), cleaned_20, _238, sub(abi_encode_address_bool(add(_238, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:19844:19848  \"this\" */ address(), /** @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\" */ value_23), _238), _238, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                        /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                        if iszero(_239)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_25 := mload(64)\n                            returndatacopy(pos_25, _1, returndatasize())\n                            revert(pos_25, returndatasize())\n                        }\n                        /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                        let expr_46 := _1\n                        if _239\n                        {\n                            let _240 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                            /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                            if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _240, /** @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\" */ returndatasize()) { _240 := returndatasize() }\n                            finalize_allocation(_238, _240)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\" */ add(_238, _240), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _238), 32) { revert(0, 0) }\n                            /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                            expr_46 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_238)\n                        }\n                        /// @src 21:19912:19973  \"return _getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\"\n                        let var := /** @src 21:19919:19973  \"_getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\" */ fun_getAmountOut(/** @src 21:19783:19867  \"amountIn -= (amountIn * IPoolFactory(factory).getFee(address(this), stable)) / 10000\" */ checked_sub_uint256(value_22, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:19796:19858  \"amountIn * IPoolFactory(factory).getFee(address(this), stable)\" */ checked_mul_uint256(value_22, expr_46), /** @src 21:19862:19867  \"10000\" */ 0x2710)), /** @src 21:19919:19973  \"_getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\" */ value1_6, _236, _237)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPos_42 := mload(64)\n                        mstore(memPos_42, var)\n                        return(memPos_42, 32)\n                    }\n                    case 0xfff6cae9 {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        /// @src 12:2322:2425  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 21:17143:17197  \"if (totalSupply() == 0) revert InsufficientLiquidity()\"\n                        if /** @src 21:17147:17165  \"totalSupply() == 0\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02))\n                        /// @src 21:17143:17197  \"if (totalSupply() == 0) revert InsufficientLiquidity()\"\n                        {\n                            /// @src 21:17174:17197  \"InsufficientLiquidity()\"\n                            let _241 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 21:17174:17197  \"InsufficientLiquidity()\"\n                            mstore(_241, /** @src 21:14534:14557  \"InsufficientLiquidity()\" */ shl(224, 0xbb55fd27))\n                            /// @src 21:17174:17197  \"InsufficientLiquidity()\"\n                            revert(_241, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                        }\n                        let _242 := sub(shl(160, 1), 1)\n                        let cleaned_21 := and(sload(/** @src 21:17222:17228  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _242)\n                        /// @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\"\n                        let _243 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        let _244 := shl(224, 0x70a08231)\n                        /// @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\"\n                        mstore(_243, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _244)\n                        mstore(/** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ add(_243, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:17248:17252  \"this\" */ address())\n                        /// @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\"\n                        let _245 := 32\n                        let _246 := staticcall(gas(), cleaned_21, _243, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ _243, _245)\n                        if iszero(_246)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_26 := mload(64)\n                            returndatacopy(pos_26, _1, returndatasize())\n                            revert(pos_26, returndatasize())\n                        }\n                        /// @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\"\n                        let expr_47 := _1\n                        if _246\n                        {\n                            let _247 := _245\n                            if gt(_245, returndatasize()) { _247 := returndatasize() }\n                            finalize_allocation(_243, _247)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ add(_243, _247), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _243), /** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ _245)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            { revert(0, 0) }\n                            /// @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\"\n                            expr_47 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_243)\n                        }\n                        let cleaned_22 := and(sload(/** @src 21:17263:17269  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _242)\n                        /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                        let _248 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                        mstore(_248, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _244)\n                        mstore(/** @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\" */ add(_248, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:17248:17252  \"this\" */ address())\n                        /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                        let _249 := staticcall(gas(), cleaned_22, _248, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\" */ _248, /** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ _245)\n                        /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                        if iszero(_249)\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos_27 := mload(64)\n                            returndatacopy(pos_27, _1, returndatasize())\n                            revert(pos_27, returndatasize())\n                        }\n                        /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                        let expr_48 := _1\n                        if _249\n                        {\n                            let _250 := /** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ _245\n                            /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                            if gt(/** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ _245, /** @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\" */ returndatasize()) { _250 := returndatasize() }\n                            finalize_allocation(_248, _250)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if slt(sub(/** @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\" */ add(_248, _250), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _248), /** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ _245)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            { revert(0, 0) }\n                            /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                            expr_48 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_248)\n                        }\n                        let _251 := sload(/** @src 21:17297:17305  \"reserve0\" */ 0x13)\n                        /// @src 21:17307:17315  \"reserve1\"\n                        fun_update(expr_47, expr_48, _251, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:17307:17315  \"reserve1\" */ 0x14))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        sstore(/** @src 12:2924:2945  \"_status = NOT_ENTERED\" */ 0x08, /** @src 12:1713:1714  \"1\" */ 0x01)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        return(_1, _1)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address_35700() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_uint256_uint256_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n            }\n            function abi_encode_array_uint256_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, _1)\n                let srcPtr := add(value, _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function storage_array_index_access_struct_Observation__dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 21:1560:1593  \"Observation[] public observations\" */ 16)))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 21:1560:1593  \"Observation[] public observations\" */ 16)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                slot := add(12396694973890998440467380340983585058878106250672390494374587083972727727730, mul(index, 3))\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            function abi_decode_addresst_uint256t_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                value0 := value\n                value1 := calldataload(36)\n                value2 := calldataload(68)\n            }\n            function abi_encode_address_address(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n            }\n            /// @ast-id 491 @src 3:5656:5956  \"function _transfer(address from, address to, uint256 value) internal {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 3:5739:5757  \"from == address(0)\" */ var_from, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                /// @src 3:5735:5821  \"if (from == address(0)) {...\"\n                if /** @src 3:5739:5757  \"from == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                /// @src 3:5735:5821  \"if (from == address(0)) {...\"\n                {\n                    /// @src 3:5780:5810  \"ERC20InvalidSender(address(0))\"\n                    let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 3:5780:5810  \"ERC20InvalidSender(address(0))\"\n                    mstore(_3, /** @src 3:8361:8391  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 3:5780:5810  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 3:5755:5756  \"0\" */ 0x00)\n                    /// @src 3:5780:5810  \"ERC20InvalidSender(address(0))\"\n                    revert(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                }\n                let _4 := and(/** @src 3:5834:5850  \"to == address(0)\" */ var_to, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                /// @src 3:5830:5916  \"if (to == address(0)) {...\"\n                if /** @src 3:5834:5850  \"to == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _4)\n                /// @src 3:5830:5916  \"if (to == address(0)) {...\"\n                {\n                    /// @src 3:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                    let _5 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 3:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                    mstore(_5, /** @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 3:5873:5905  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 3:5755:5756  \"0\" */ 0x00)\n                    /// @src 3:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                    revert(_5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                }\n                /// @src 3:6356:6896  \"if (from == address(0)) {...\"\n                let _6 := 0\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                mstore(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                mstore(0x20, /** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let _7 := sload(keccak256(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x40))\n                /// @src 3:6599:6714  \"if (fromBalance < value) {...\"\n                if /** @src 3:6603:6622  \"fromBalance < value\" */ lt(_7, var_value)\n                /// @src 3:6599:6714  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 3:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    let _8 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(0x40)\n                    /// @src 3:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(_8, shl(226, 0x391434e3))\n                    revert(_8, sub(abi_encode_address_uint256_uint256(add(_8, 4), var_from, _7, var_value), _8))\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                mstore(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                mstore(0x20, /** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                sstore(keccak256(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x40), sub(/** @src 3:6852:6871  \"fromBalance - value\" */ _7, var_value))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                mstore(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _4)\n                let dataSlot := keccak256(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 3:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value))\n                /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                let _9 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(0x40)\n                mstore(_9, var_value)\n                /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                log3(_9, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x20, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n            }\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 712 @src 3:9949:10381  \"function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {...\"\n            function fun_approve(var_owner, var_spender, var_value)\n            {\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 3:10061:10080  \"owner == address(0)\" */ var_owner, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                /// @src 3:10057:10146  \"if (owner == address(0)) {...\"\n                if /** @src 3:10061:10080  \"owner == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                /// @src 3:10057:10146  \"if (owner == address(0)) {...\"\n                {\n                    /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                    let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                    mstore(_3, shl(224, 0xe602df05))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_3, 4), /** @src 3:10078:10079  \"0\" */ 0x00)\n                    /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                    revert(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                }\n                let _4 := and(/** @src 3:10159:10180  \"spender == address(0)\" */ var_spender, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                /// @src 3:10155:10245  \"if (spender == address(0)) {...\"\n                if /** @src 3:10159:10180  \"spender == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _4)\n                /// @src 3:10155:10245  \"if (spender == address(0)) {...\"\n                {\n                    /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                    let _5 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                    mstore(_5, shl(225, 0x4a1406b1))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_5, 4), /** @src 3:10078:10079  \"0\" */ 0x00)\n                    /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                    revert(_5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                }\n                mstore(/** @src 3:10078:10079  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                mstore(0x20, /** @src 3:9105:9109  \"true\" */ 0x01)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let _6 := keccak256(/** @src 3:10078:10079  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x40)\n                mstore(/** @src 3:10078:10079  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _4)\n                mstore(0x20, _6)\n                sstore(keccak256(/** @src 3:10078:10079  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x40), var_value)\n                /// @src 3:10333:10364  \"Approval(owner, spender, value)\"\n                let _7 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(0x40)\n                mstore(_7, var_value)\n                /// @src 3:10333:10364  \"Approval(owner, spender, value)\"\n                log3(_7, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x20, /** @src 3:10333:10364  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _4)\n            }\n            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n            function finalize_allocation_35698(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_35742(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 96)\n                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_53278(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64)\n                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(add(/** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ size, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 31), not(31)))\n                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            /// @ast-id 2609 @src 16:5140:6670  \"function tryRecover(...\"\n            function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n            {\n                /// @src 16:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                if /** @src 16:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 16:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                /// @src 16:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                {\n                    /// @src 16:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                    var := /** @src 16:6297:6298  \"0\" */ 0x00\n                    /// @src 16:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                    var_1 := /** @src 16:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                    /// @src 16:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                    var_2 := var_s\n                    leave\n                }\n                /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                let _1 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                mstore(_1, var_hash)\n                mstore(add(_1, 32), and(var_v, 0xff))\n                mstore(add(_1, 64), var_r)\n                mstore(add(_1, 96), var_s)\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                mstore(/** @src -1:-1:-1 */ _2, _2)\n                /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                if iszero(staticcall(gas(), 1, _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32))\n                /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                {\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                let _3 := mload(/** @src -1:-1:-1 */ _2)\n                /// @src 16:6491:6604  \"if (signer == address(0)) {...\"\n                if /** @src 16:6495:6515  \"signer == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 16:6495:6515  \"signer == address(0)\" */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))\n                /// @src 16:6491:6604  \"if (signer == address(0)) {...\"\n                {\n                    /// @src 16:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                    var := /** @src -1:-1:-1 */ _2\n                    /// @src 16:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                    var_1 := /** @src 16:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                    /// @src 16:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                    var_2 := /** @src -1:-1:-1 */ _2\n                    /// @src 16:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                    leave\n                }\n                /// @src 16:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                var := _3\n                var_1 := /** @src -1:-1:-1 */ _2\n                /// @src 16:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                var_2 := /** @src -1:-1:-1 */ _2\n            }\n            /// @ast-id 2694 @src 16:7196:7728  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n            function fun_throwError(var_error, var_errorArg)\n            {\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                if iszero(lt(var_error, 4))\n                {\n                    mstore(/** @src 16:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src 16:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                }\n                /// @src 16:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                switch /** @src 16:7282:7311  \"error == RecoverError.NoError\" */ iszero(var_error)\n                case /** @src 16:7278:7722  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                    /// @src 16:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                    switch /** @src 16:7378:7416  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 1)\n                    case /** @src 16:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                        /// @src 16:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        switch /** @src 16:7483:7527  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 16:7492:7527  \"RecoverError.InvalidSignatureLength\" */ 2)\n                        case /** @src 16:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                            /// @src 16:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            if /** @src 16:7617:7656  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 16:7626:7656  \"RecoverError.InvalidSignatureS\" */ 3)\n                            /// @src 16:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            {\n                                /// @src 16:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                let _1 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 16:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                mstore(_1, shl(226, 0x35e2f383))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(/** @src 16:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\" */ add(_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), var_errorArg)\n                                /// @src 16:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                revert(_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                            }\n                        }\n                        default /// @src 16:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        {\n                            /// @src 16:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                            let _2 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 16:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                            mstore(_2, shl(224, 0xfce698f7))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 16:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\" */ add(_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), var_errorArg)\n                            /// @src 16:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                            revert(_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                        }\n                    }\n                    default /// @src 16:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                    {\n                        /// @src 16:7439:7462  \"ECDSAInvalidSignature()\"\n                        let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 16:7439:7462  \"ECDSAInvalidSignature()\"\n                        mstore(_3, shl(224, 0xf645eedf))\n                        revert(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                    }\n                }\n                default /// @src 16:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                {\n                    /// @src 16:7327:7334  \"return;\"\n                    leave\n                }\n            }\n            /// @ast-id 2818 @src 17:3845:4107  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n            function fun_domainSeparatorV4() -> var\n            {\n                /// @src 17:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                let expr := /** @src 17:3921:3949  \"address(this) == _cachedThis\" */ eq(/** @src 17:3929:3933  \"this\" */ address(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 17:3938:3949  \"_cachedThis\" */ loadimmutable(\"2720\"), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))\n                /// @src 17:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                if expr\n                {\n                    expr := /** @src 17:3953:3984  \"block.chainid == _cachedChainId\" */ eq(/** @src 17:3953:3966  \"block.chainid\" */ chainid(), /** @src 17:3970:3984  \"_cachedChainId\" */ loadimmutable(\"2718\"))\n                }\n                /// @src 17:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                switch expr\n                case 0 {\n                    /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let _1 := add(expr_mpos, 0x20)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(_1, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64), /** @src 17:4226:4237  \"_hashedName\" */ loadimmutable(\"2722\"))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 17:4239:4253  \"_hashedVersion\" */ loadimmutable(\"2724\"))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 17:4255:4268  \"block.chainid\" */ chainid())\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 17:3929:3933  \"this\" */ address())\n                    /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    let newFreePtr := add(expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                    {\n                        mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ newFreePtr)\n                    /// @src 17:4060:4090  \"return _buildDomainSeparator()\"\n                    var := /** @src 17:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, mload(/** @src 17:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                    /// @src 17:4060:4090  \"return _buildDomainSeparator()\"\n                    leave\n                }\n                default /// @src 17:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                {\n                    /// @src 17:4000:4029  \"return _cachedDomainSeparator\"\n                    var := /** @src 17:4007:4029  \"_cachedDomainSeparator\" */ loadimmutable(\"2716\")\n                    /// @src 17:4000:4029  \"return _cachedDomainSeparator\"\n                    leave\n                }\n            }\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                size := add(shl(5, length), 0x20)\n            }\n            function allocate_and_zero_memory_array_array_uint256_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_uint256_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_uint256_dyn(length), not(31)))\n            }\n            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 1950 @src 13:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n            function fun_toStringWithFallback(var_value) -> var_mpos\n            {\n                /// @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                switch /** @src 13:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                case /** @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let memPtr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let ret := /** @src -1:-1:-1 */ 0\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let slotValue := sload(/** @src 17:6126:6139  \"_nameFallback\" */ 0x05)\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let length := extract_byte_array_length(slotValue)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(memPtr, length)\n                    let _1 := 0x20\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let _2 := 1\n                    switch and(slotValue, _2)\n                    case 0 {\n                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(memPtr, _1), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ and(slotValue, not(255)))\n                        ret := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(/** @src 17:6126:6139  \"_nameFallback\" */ 0x05, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ iszero(iszero(length)))), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                    }\n                    case /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 1 {\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 17:6126:6139  \"_nameFallback\" */ 0x05)\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        let dataPos := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        for { }\n                        lt(i, length)\n                        {\n                            i := add(i, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                        }\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        {\n                            mstore(add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ sload(dataPos))\n                            dataPos := add(dataPos, _2)\n                        }\n                        ret := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                    }\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    finalize_allocation(memPtr, sub(ret, memPtr))\n                    /// @src 13:3623:3635  \"return store\"\n                    var_mpos := memPtr\n                    leave\n                }\n                default /// @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                {\n                    /// @src 13:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                    let expr := and(var_value, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                    /// @src 13:2702:2771  \"if (result > 31) {...\"\n                    if /** @src 13:2706:2717  \"result > 31\" */ gt(expr, /** @src 13:2715:2717  \"31\" */ 0x1f)\n                    /// @src 13:2702:2771  \"if (result > 31) {...\"\n                    {\n                        /// @src 13:2740:2760  \"InvalidShortString()\"\n                        let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 13:2740:2760  \"InvalidShortString()\"\n                        mstore(_3, shl(226, 0x2cd44ac3))\n                        revert(_3, 4)\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let memPtr_1 := mload(64)\n                    finalize_allocation_53278(memPtr_1)\n                    /// @src 13:2367:2457  \"assembly {...\"\n                    mstore(memPtr_1, expr)\n                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(memPtr_1, /** @src 13:2311:2313  \"32\" */ 0x20), /** @src 13:2367:2457  \"assembly {...\" */ var_value)\n                    /// @src 13:3570:3592  \"return toString(value)\"\n                    var_mpos := memPtr_1\n                    leave\n                }\n            }\n            /// @ast-id 1950 @src 13:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n            function fun_toStringWithFallback_35716(var_value) -> var_mpos\n            {\n                /// @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                switch /** @src 13:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                case /** @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let memPtr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let ret := /** @src -1:-1:-1 */ 0\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let slotValue := sload(/** @src 17:6584:6600  \"_versionFallback\" */ 0x06)\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let length := extract_byte_array_length(slotValue)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(memPtr, length)\n                    let _1 := 0x20\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    let _2 := 1\n                    switch and(slotValue, _2)\n                    case 0 {\n                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(memPtr, _1), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ and(slotValue, not(255)))\n                        ret := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                    }\n                    case /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 1 {\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 17:6584:6600  \"_versionFallback\" */ 0x06)\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        let dataPos := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 111414077815863400510004064629973595961579173665589224203503662149373724986687\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        for { }\n                        lt(i, length)\n                        {\n                            i := add(i, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                        }\n                        /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                        {\n                            mstore(add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ sload(dataPos))\n                            dataPos := add(dataPos, _2)\n                        }\n                        ret := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                    }\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    finalize_allocation(memPtr, sub(ret, memPtr))\n                    /// @src 13:3623:3635  \"return store\"\n                    var_mpos := memPtr\n                    leave\n                }\n                default /// @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                {\n                    /// @src 13:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                    let expr := and(var_value, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                    /// @src 13:2702:2771  \"if (result > 31) {...\"\n                    if /** @src 13:2706:2717  \"result > 31\" */ gt(expr, /** @src 13:2715:2717  \"31\" */ 0x1f)\n                    /// @src 13:2702:2771  \"if (result > 31) {...\"\n                    {\n                        /// @src 13:2740:2760  \"InvalidShortString()\"\n                        let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 13:2740:2760  \"InvalidShortString()\"\n                        mstore(_3, shl(226, 0x2cd44ac3))\n                        revert(_3, 4)\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let memPtr_1 := mload(64)\n                    finalize_allocation_53278(memPtr_1)\n                    /// @src 13:2367:2457  \"assembly {...\"\n                    mstore(memPtr_1, expr)\n                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(memPtr_1, /** @src 13:2311:2313  \"32\" */ 0x20), /** @src 13:2367:2457  \"assembly {...\" */ var_value)\n                    /// @src 13:3570:3592  \"return toString(value)\"\n                    var_mpos := memPtr_1\n                    leave\n                }\n            }\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            function array_allocation_size_string(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                value0 := value\n            }\n            function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let offset := mload(headStart)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                let _1 := add(headStart, offset)\n                if iszero(slt(add(_1, 0x1f), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let _2 := mload(_1)\n                let _3 := array_allocation_size_string(_2)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                mstore(memPtr, _2)\n                if gt(add(add(_1, _2), 32), dataEnd)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                copy_memory_to_memory_with_cleanup(add(_1, 32), add(memPtr, 32), _2)\n                value0 := memPtr\n            }\n            function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 21:3896:3914  \"_symbol = __symbol\" */ 0x0a)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _2 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                    let deleteStart := add(_2, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := _2 }\n                    let _3 := add(_2, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _3) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _1)\n                    }\n                }\n            }\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            function clean_up_bytearray_end_slots_string_storage_35729(len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 21:3688:3702  \"_name = __name\" */ 0x09)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _2 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                    let deleteStart := add(_2, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := _2 }\n                    let _3 := add(_2, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _3) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _1)\n                    }\n                }\n            }\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n            function abi_decode_uint8_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, 0xff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                value0 := value\n            }\n            function checked_exp_rational_by_uint8(exponent) -> power\n            {\n                let exponent_1 := and(exponent, 0xff)\n                if gt(exponent_1, 77)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                power := exp(10, exponent_1)\n            }\n            function array_push_from_struct_Observation_to_array_struct_Observation_storage_dyn_ptr(value0)\n            {\n                let oldLen := sload(/** @src 21:3445:3457  \"observations\" */ 0x10)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                sstore(/** @src 21:3445:3457  \"observations\" */ 0x10, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(oldLen, 1))\n                let slot, offset := storage_array_index_access_struct_Observation__dyn(oldLen)\n                if offset\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                sstore(slot, mload(value0))\n                sstore(add(slot, 1), mload(add(value0, 32)))\n                sstore(add(slot, 2), mload(add(value0, 64)))\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 4515 @src 21:4089:4218  \"function lastObservation() public view returns (Observation memory) {...\"\n            function fun_lastObservation() -> var_4505_mpos\n            {\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let memPtr := mload(64)\n                finalize_allocation_35742(memPtr)\n                mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                mstore(add(memPtr, 32), /** @src -1:-1:-1 */ 0)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                mstore(add(memPtr, 64), /** @src -1:-1:-1 */ 0)\n                /// @src 21:4187:4206  \"observations.length\"\n                let expr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:4174:4186  \"observations\" */ 0x10)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let diff := add(expr, not(0))\n                if gt(diff, expr)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                }\n                /// @src 21:4174:4211  \"observations[observations.length - 1]\"\n                let _1, _2 := storage_array_index_access_struct_Observation__dyn(/** @src 21:4187:4210  \"observations.length - 1\" */ diff)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_35742(memPtr_1)\n                mstore(memPtr_1, sload(_1))\n                mstore(add(memPtr_1, 32), sload(add(_1, /** @src 21:4209:4210  \"1\" */ 0x01)))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                mstore(add(memPtr_1, 64), sload(add(_1, 2)))\n                /// @src 21:4167:4211  \"return observations[observations.length - 1]\"\n                var_4505_mpos := memPtr_1\n            }\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_div_uint256(x, y) -> r\n            {\n                if iszero(y)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(x, y)\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function memory_array_index_access_uint256_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @ast-id 5210 @src 21:10365:11459  \"function sample(...\"\n            function fun_sample(var_tokenIn, var_amountIn, var_points) -> var_mpos\n            {\n                /// @src 21:10562:10583  \"new uint256[](points)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_uint256_dyn(var_points)\n                /// @src 21:10611:10630  \"observations.length\"\n                let expr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:10611:10623  \"observations\" */ 0x10)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let diff := add(expr, not(0))\n                if gt(diff, expr)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                }\n                /// @src 21:10324:10325  \"1\"\n                let _1 := 0x01\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                if iszero(or(iszero(var_points), eq(/** @src 21:10324:10325  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(var_points, var_points))))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                }\n                /// @src 21:10644:10682  \"uint256 i = length - (points * window)\"\n                let var_i := /** @src 21:10656:10682  \"length - (points * window)\" */ checked_sub_uint256(diff, /** @src 21:10666:10681  \"points * window\" */ var_points)\n                /// @src 21:10723:10740  \"uint256 index = 0\"\n                let var_index := /** @src -1:-1:-1 */ 0\n                /// @src 21:10751:11429  \"for (; i < length; i += window) {...\"\n                for { }\n                /** @src 21:10758:10768  \"i < length\" */ lt(var_i, diff)\n                /// @src 21:10751:11429  \"for (; i < length; i += window) {...\"\n                {\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let sum := add(var_i, /** @src 21:10324:10325  \"1\" */ _1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    if gt(var_i, sum)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                    }\n                    /// @src 21:10770:10781  \"i += window\"\n                    var_i := sum\n                }\n                {\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let sum_1 := add(var_i, /** @src 21:10324:10325  \"1\" */ _1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    if gt(var_i, sum_1)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                    }\n                    /// @src 21:10855:10878  \"observations[nextIndex]\"\n                    let _2, _3 := storage_array_index_access_struct_Observation__dyn(sum_1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _4 := sload(/** @src 21:10855:10888  \"observations[nextIndex].timestamp\" */ _2)\n                    /// @src 21:10891:10906  \"observations[i]\"\n                    let _5, _6 := storage_array_index_access_struct_Observation__dyn(var_i)\n                    /// @src 21:10855:10916  \"observations[nextIndex].timestamp - observations[i].timestamp\"\n                    let expr_1 := checked_sub_uint256(_4, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:10891:10916  \"observations[i].timestamp\" */ _5))\n                    /// @src 21:10951:10974  \"observations[nextIndex]\"\n                    let _7, _8 := storage_array_index_access_struct_Observation__dyn(sum_1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _9 := sload(/** @src 21:10951:10993  \"observations[nextIndex].reserve0Cumulative\" */ add(_7, /** @src 21:10324:10325  \"1\" */ _1))\n                    /// @src 21:10996:11011  \"observations[i]\"\n                    let _10, _11 := storage_array_index_access_struct_Observation__dyn(var_i)\n                    /// @src 21:10950:11061  \"(observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative) /...\"\n                    let expr_2 := checked_div_uint256(/** @src 21:10951:11030  \"observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative\" */ checked_sub_uint256(_9, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:10996:11030  \"observations[i].reserve0Cumulative\" */ add(_10, /** @src 21:10324:10325  \"1\" */ _1))), /** @src 21:10950:11061  \"(observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative) /...\" */ expr_1)\n                    /// @src 21:11096:11119  \"observations[nextIndex]\"\n                    let _12, _13 := storage_array_index_access_struct_Observation__dyn(sum_1)\n                    /// @src 21:11096:11138  \"observations[nextIndex].reserve1Cumulative\"\n                    let _14 := 2\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _15 := sload(/** @src 21:11096:11138  \"observations[nextIndex].reserve1Cumulative\" */ add(_12, _14))\n                    /// @src 21:11141:11156  \"observations[i]\"\n                    let _16, _17 := storage_array_index_access_struct_Observation__dyn(var_i)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 21:11220:11291  \"_prices[index] = _getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\" */ memory_array_index_access_uint256_dyn(expr_mpos, var_index), /** @src 21:11237:11291  \"_getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\" */ fun_getAmountOut(var_amountIn, var_tokenIn, expr_2, /** @src 21:11095:11206  \"(observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative) /...\" */ checked_div_uint256(/** @src 21:11096:11175  \"observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative\" */ checked_sub_uint256(_15, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:11141:11175  \"observations[i].reserve1Cumulative\" */ add(_16, /** @src 21:11096:11138  \"observations[nextIndex].reserve1Cumulative\" */ _14))), /** @src 21:11095:11206  \"(observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative) /...\" */ expr_1)))\n                    /// @src 21:11387:11404  \"index = index + 1\"\n                    var_index := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 21:11395:11404  \"index + 1\" */ var_index, /** @src 21:10324:10325  \"1\" */ _1)\n                }\n                /// @src 21:11438:11452  \"return _prices\"\n                var_mpos := expr_mpos\n            }\n            /// @ast-id 1745 @src 12:2431:2738  \"function _nonReentrantBefore() private {...\"\n            function fun_nonReentrantBefore()\n            {\n                /// @src 12:2554:2640  \"if (_status == ENTERED) {...\"\n                if /** @src 12:2558:2576  \"_status == ENTERED\" */ eq(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 12:2558:2565  \"_status\" */ 0x08), /** @src 12:1755:1756  \"2\" */ 0x02)\n                /// @src 12:2554:2640  \"if (_status == ENTERED) {...\"\n                {\n                    /// @src 12:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                    let _1 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 12:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                    mstore(_1, shl(224, 0x3ee5aeb5))\n                    revert(_1, 4)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                sstore(/** @src 12:2558:2565  \"_status\" */ 0x08, /** @src 12:1755:1756  \"2\" */ 0x02)\n            }\n            /// @ast-id 3539 @src 19:8587:10229  \"function sqrt(uint256 a) internal pure returns (uint256) {...\"\n            function fun_sqrt(var_a) -> var\n            {\n                /// @src 19:8654:8699  \"if (a == 0) {...\"\n                if /** @src 19:8658:8664  \"a == 0\" */ iszero(var_a)\n                /// @src 19:8654:8699  \"if (a == 0) {...\"\n                {\n                    /// @src 19:8680:8688  \"return 0\"\n                    var := /** @src 19:8663:8664  \"0\" */ 0x00\n                    /// @src 19:8680:8688  \"return 0\"\n                    leave\n                }\n                /// @src 19:9401:9408  \"log2(a)\"\n                let var_value := var_a\n                /// @src 19:10770:10788  \"uint256 result = 0\"\n                let var_result := /** @src 19:8663:8664  \"0\" */ 0x00\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result := shr(/** @src 19:10835:10838  \"128\" */ 0x80, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_a)\n                /// @src 19:10822:10921  \"if (value >> 128 > 0) {...\"\n                if /** @src 19:10826:10842  \"value >> 128 > 0\" */ iszero(iszero(result))\n                /// @src 19:10822:10921  \"if (value >> 128 > 0) {...\"\n                {\n                    /// @src 19:10862:10875  \"value >>= 128\"\n                    var_value := result\n                    /// @src 19:10893:10906  \"result += 128\"\n                    var_result := /** @src 19:10835:10838  \"128\" */ 0x80\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_1 := shr(/** @src 19:10947:10949  \"64\" */ 0x40, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)\n                /// @src 19:10934:11030  \"if (value >> 64 > 0) {...\"\n                if /** @src 19:10938:10953  \"value >> 64 > 0\" */ iszero(iszero(result_1))\n                /// @src 19:10934:11030  \"if (value >> 64 > 0) {...\"\n                {\n                    /// @src 19:10973:10985  \"value >>= 64\"\n                    var_value := result_1\n                    /// @src 19:11003:11015  \"result += 64\"\n                    var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11003:11015  \"result += 64\" */ var_result, /** @src 19:10947:10949  \"64\" */ 0x40)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_2 := shr(/** @src 19:11056:11058  \"32\" */ 0x20, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)\n                /// @src 19:11043:11139  \"if (value >> 32 > 0) {...\"\n                if /** @src 19:11047:11062  \"value >> 32 > 0\" */ iszero(iszero(result_2))\n                /// @src 19:11043:11139  \"if (value >> 32 > 0) {...\"\n                {\n                    /// @src 19:11082:11094  \"value >>= 32\"\n                    var_value := result_2\n                    /// @src 19:11112:11124  \"result += 32\"\n                    var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11112:11124  \"result += 32\" */ var_result, /** @src 19:11056:11058  \"32\" */ 0x20)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_3 := shr(/** @src 19:11165:11167  \"16\" */ 0x10, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)\n                /// @src 19:11152:11248  \"if (value >> 16 > 0) {...\"\n                if /** @src 19:11156:11171  \"value >> 16 > 0\" */ iszero(iszero(result_3))\n                /// @src 19:11152:11248  \"if (value >> 16 > 0) {...\"\n                {\n                    /// @src 19:11191:11203  \"value >>= 16\"\n                    var_value := result_3\n                    /// @src 19:11221:11233  \"result += 16\"\n                    var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11221:11233  \"result += 16\" */ var_result, /** @src 19:11165:11167  \"16\" */ 0x10)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_4 := shr(/** @src 19:11274:11275  \"8\" */ 0x08, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)\n                /// @src 19:11261:11354  \"if (value >> 8 > 0) {...\"\n                if /** @src 19:11265:11279  \"value >> 8 > 0\" */ iszero(iszero(result_4))\n                /// @src 19:11261:11354  \"if (value >> 8 > 0) {...\"\n                {\n                    /// @src 19:11299:11310  \"value >>= 8\"\n                    var_value := result_4\n                    /// @src 19:11328:11339  \"result += 8\"\n                    var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11328:11339  \"result += 8\" */ var_result, /** @src 19:11274:11275  \"8\" */ 0x08)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_5 := shr(/** @src 19:11380:11381  \"4\" */ 0x04, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)\n                /// @src 19:11367:11460  \"if (value >> 4 > 0) {...\"\n                if /** @src 19:11371:11385  \"value >> 4 > 0\" */ iszero(iszero(result_5))\n                /// @src 19:11367:11460  \"if (value >> 4 > 0) {...\"\n                {\n                    /// @src 19:11405:11416  \"value >>= 4\"\n                    var_value := result_5\n                    /// @src 19:11434:11445  \"result += 4\"\n                    var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11434:11445  \"result += 4\" */ var_result, /** @src 19:11380:11381  \"4\" */ 0x04)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_6 := shr(/** @src 19:11486:11487  \"2\" */ 0x02, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)\n                /// @src 19:11473:11566  \"if (value >> 2 > 0) {...\"\n                if /** @src 19:11477:11491  \"value >> 2 > 0\" */ iszero(iszero(result_6))\n                /// @src 19:11473:11566  \"if (value >> 2 > 0) {...\"\n                {\n                    /// @src 19:11511:11522  \"value >>= 2\"\n                    var_value := result_6\n                    /// @src 19:11540:11551  \"result += 2\"\n                    var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11540:11551  \"result += 2\" */ var_result, /** @src 19:11486:11487  \"2\" */ 0x02)\n                }\n                /// @src 19:11592:11593  \"1\"\n                let _1 := 0x01\n                /// @src 19:11579:11643  \"if (value >> 1 > 0) {...\"\n                if /** @src 19:11583:11597  \"value >> 1 > 0\" */ iszero(iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)))\n                /// @src 19:11579:11643  \"if (value >> 1 > 0) {...\"\n                {\n                    /// @src 19:11617:11628  \"result += 1\"\n                    var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11617:11628  \"result += 1\" */ var_result, /** @src 19:11592:11593  \"1\" */ _1)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_7 := shl(shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_result), /** @src 19:11592:11593  \"1\" */ _1)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_8 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_7, /** @src 19:9858:9868  \"a / result\" */ checked_div_uint256(var_a, result_7)))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_9 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_8, /** @src 19:9907:9917  \"a / result\" */ checked_div_uint256(var_a, result_8)))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_10 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_9, /** @src 19:9956:9966  \"a / result\" */ checked_div_uint256(var_a, result_9)))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_11 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_10, /** @src 19:10005:10015  \"a / result\" */ checked_div_uint256(var_a, result_10)))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_12 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_11, /** @src 19:10054:10064  \"a / result\" */ checked_div_uint256(var_a, result_11)))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_13 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_12, /** @src 19:10103:10113  \"a / result\" */ checked_div_uint256(var_a, result_12)))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let result_14 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_13, /** @src 19:10152:10162  \"a / result\" */ checked_div_uint256(var_a, result_13)))\n                /// @src 19:10201:10211  \"a / result\"\n                let _2 := checked_div_uint256(var_a, result_14)\n                /// @src 19:2641:2654  \"a < b ? a : b\"\n                let expr := /** @src 19:8663:8664  \"0\" */ 0x00\n                /// @src 19:2641:2654  \"a < b ? a : b\"\n                switch /** @src 19:2641:2646  \"a < b\" */ lt(result_14, _2)\n                case /** @src 19:2641:2654  \"a < b ? a : b\" */ 0 { expr := _2 }\n                default { expr := result_14 }\n                /// @src 19:10182:10212  \"return min(result, a / result)\"\n                var := expr\n            }\n            /// @ast-id 4950 @src 21:7872:8815  \"function _update(uint256 balance0, uint256 balance1, uint256 _reserve0, uint256 _reserve1) internal {...\"\n            function fun_update(var_balance0, var_balance1, var_reserve0, var_reserve1)\n            {\n                /// @src 21:8054:8089  \"blockTimestamp - blockTimestampLast\"\n                let expr := checked_sub_uint256(/** @src 21:8007:8022  \"block.timestamp\" */ timestamp(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:8071:8089  \"blockTimestampLast\" */ 0x15))\n                /// @src 21:8103:8136  \"timeElapsed > 0 && _reserve0 != 0\"\n                let expr_1 := /** @src 21:8103:8118  \"timeElapsed > 0\" */ iszero(iszero(expr))\n                /// @src 21:8103:8136  \"timeElapsed > 0 && _reserve0 != 0\"\n                if expr_1\n                {\n                    expr_1 := /** @src 21:8122:8136  \"_reserve0 != 0\" */ iszero(iszero(var_reserve0))\n                }\n                /// @src 21:8103:8154  \"timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0\"\n                let expr_2 := expr_1\n                if expr_1\n                {\n                    expr_2 := /** @src 21:8140:8154  \"_reserve1 != 0\" */ iszero(iszero(var_reserve1))\n                }\n                /// @src 21:8099:8293  \"if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {...\"\n                if expr_2\n                {\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    sstore(/** @src 21:8170:8219  \"reserve0CumulativeLast += _reserve0 * timeElapsed\" */ 0x16, checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:8170:8219  \"reserve0CumulativeLast += _reserve0 * timeElapsed\" */ 0x16), /** @src 21:8196:8219  \"_reserve0 * timeElapsed\" */ checked_mul_uint256(var_reserve0, expr)))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    sstore(/** @src 21:8233:8282  \"reserve1CumulativeLast += _reserve1 * timeElapsed\" */ 0x17, checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:8233:8282  \"reserve1CumulativeLast += _reserve1 * timeElapsed\" */ 0x17), /** @src 21:8259:8282  \"_reserve1 * timeElapsed\" */ checked_mul_uint256(var_reserve1, expr)))\n                }\n                /// @src 21:8518:8667  \"if (timeElapsed > periodSize) {...\"\n                if /** @src 21:8522:8546  \"timeElapsed > periodSize\" */ gt(/** @src 21:8372:8405  \"blockTimestamp - _point.timestamp\" */ checked_sub_uint256(/** @src 21:8007:8022  \"block.timestamp\" */ timestamp(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 21:8331:8348  \"lastObservation()\" */ fun_lastObservation())), /** @src 21:1549:1553  \"1800\" */ 0x0708)\n                /// @src 21:8518:8667  \"if (timeElapsed > periodSize) {...\"\n                {\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _1 := sload(/** @src 21:8608:8630  \"reserve0CumulativeLast\" */ 0x16)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _2 := sload(/** @src 21:8632:8654  \"reserve1CumulativeLast\" */ 0x17)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let memPtr := mload(64)\n                    finalize_allocation_35742(memPtr)\n                    mstore(memPtr, /** @src 21:8007:8022  \"block.timestamp\" */ timestamp())\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 21:8580:8655  \"Observation(blockTimestamp, reserve0CumulativeLast, reserve1CumulativeLast)\" */ add(memPtr, 32), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                    mstore(/** @src 21:8580:8655  \"Observation(blockTimestamp, reserve0CumulativeLast, reserve1CumulativeLast)\" */ add(memPtr, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64), _2)\n                    /// @src 21:8562:8656  \"observations.push(Observation(blockTimestamp, reserve0CumulativeLast, reserve1CumulativeLast))\"\n                    array_push_from_struct_Observation_to_array_struct_Observation_storage_dyn_ptr(memPtr)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                sstore(/** @src 21:8676:8695  \"reserve0 = balance0\" */ 0x13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_balance0)\n                sstore(/** @src 21:8705:8724  \"reserve1 = balance1\" */ 0x14, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_balance1)\n                sstore(/** @src 21:8071:8089  \"blockTimestampLast\" */ 0x15, /** @src 21:8007:8022  \"block.timestamp\" */ timestamp())\n                /// @src 21:8784:8808  \"Sync(reserve0, reserve1)\"\n                let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                mstore(_3, var_balance0)\n                mstore(add(_3, 32), var_balance1)\n                /// @src 21:8784:8808  \"Sync(reserve0, reserve1)\"\n                log1(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 21:8784:8808  \"Sync(reserve0, reserve1)\" */ 0xcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a)\n            }\n            /// @ast-id 1105 @src 8:1303:1463  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n            function fun_safeTransfer(var_token_address, var_to, var_value)\n            {\n                /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                let expr_1101_mpos := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                let _1 := add(expr_1101_mpos, 0x20)\n                mstore(_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0xa9059cbb))\n                let _2 := sub(shl(160, 1), 1)\n                mstore(/** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ add(expr_1101_mpos, 36), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(var_to, _2))\n                mstore(add(/** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_1101_mpos, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 68), var_value)\n                /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                mstore(expr_1101_mpos, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 68)\n                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                let newFreePtr := add(expr_1101_mpos, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 128)\n                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_1101_mpos))\n                {\n                    mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    mstore(4, 0x41)\n                    revert(0, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                }\n                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ newFreePtr)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let _3 := and(/** @src 8:4504:4518  \"address(token)\" */ var_token_address, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                /// @src 9:3462:3493  \"target.call{value: value}(data)\"\n                let expr_component := call(gas(), _3, /** @src -1:-1:-1 */ 0, /** @src 9:3462:3493  \"target.call{value: value}(data)\" */ _1, mload(expr_1101_mpos), /** @src -1:-1:-1 */ 0, 0)\n                /// @src 9:3462:3493  \"target.call{value: value}(data)\"\n                let data := /** @src -1:-1:-1 */ 0\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _4 := returndatasize()\n                    let _5 := array_allocation_size_string(_4)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _5)\n                    mstore(memPtr, _4)\n                    data := memPtr\n                    returndatacopy(add(memPtr, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ returndatasize())\n                }\n                /// @src 9:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                let var_mpos := /** @src 9:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_3, expr_component, /** @src 9:3462:3493  \"target.call{value: value}(data)\" */ data)\n                /// @src 8:4551:4568  \"returndata.length\"\n                let expr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 8:4551:4568  \"returndata.length\" */ var_mpos)\n                /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                let expr_1 := /** @src 8:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                if expr_1\n                {\n                    expr_1 := /** @src 8:4577:4608  \"!abi.decode(returndata, (bool))\" */ iszero(/** @src 8:4578:4608  \"abi.decode(returndata, (bool))\" */ abi_decode_bool_fromMemory(add(var_mpos, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src 8:4578:4608  \"abi.decode(returndata, (bool))\" */ add(add(var_mpos, expr), /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20)))\n                }\n                /// @src 8:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                if expr_1\n                {\n                    /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                    let _6 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                    mstore(_6, shl(224, 0x5274afe7))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(/** @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_6, 4), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _3)\n                    /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                    revert(_6, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                }\n            }\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                value0 := value\n            }\n            /// @ast-id 1557 @src 9:4625:5207  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_1527_mpos\n            {\n                /// @src 9:4793:5201  \"if (!success) {...\"\n                switch /** @src 9:4797:4805  \"!success\" */ iszero(var_success)\n                case /** @src 9:4793:5201  \"if (!success) {...\" */ 0 {\n                    /// @src 9:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                    let expr := /** @src 9:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 9:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 9:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                    if expr\n                    {\n                        expr := /** @src 9:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 9:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                    }\n                    /// @src 9:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                    if expr\n                    {\n                        /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                        let _1 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                        mstore(_1, shl(224, 0x9996b315))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(/** @src 9:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                        /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                        revert(_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                    }\n                    /// @src 9:5173:5190  \"return returndata\"\n                    var_1527_mpos := var_returndata_mpos\n                    leave\n                }\n                default /// @src 9:4793:5201  \"if (!success) {...\"\n                {\n                    /// @src 9:5870:6253  \"if (returndata.length > 0) {...\"\n                    switch /** @src 9:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 9:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 9:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 9:6225:6242  \"FailedInnerCall()\"\n                        let _2 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 9:6225:6242  \"FailedInnerCall()\"\n                        mstore(_2, shl(225, 0x0a12f521))\n                        revert(_2, 4)\n                    }\n                    default /// @src 9:5870:6253  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 9:6046:6188  \"assembly {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n            }\n            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n            function abi_encode_address_bool(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), iszero(iszero(value1)))\n            }\n            /// @ast-id 4672 @src 21:5183:5621  \"function _update0(uint256 amount) internal {...\"\n            function fun_update0(var_amount)\n            {\n                /// @src 21:5290:5314  \"if (amount == 0) return;\"\n                if /** @src 21:5294:5305  \"amount == 0\" */ iszero(var_amount)\n                /// @src 21:5290:5314  \"if (amount == 0) return;\"\n                {\n                    /// @src 21:5307:5314  \"return;\"\n                    leave\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let cleaned := and(sload(/** @src 21:5330:5336  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                /// @src 21:5361:5367  \"amount\"\n                fun_safeTransfer(cleaned, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(sload(/** @src 21:5351:5359  \"poolFees\" */ 0x0e), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1), /** @src 21:5361:5367  \"amount\" */ var_amount)\n                /// @src 21:5442:5446  \"1e18\"\n                let _2 := 0x0de0b6b3a7640000\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let product := mul(var_amount, /** @src 21:5442:5446  \"1e18\" */ _2)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                if iszero(eq(/** @src 21:5442:5446  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product, var_amount)))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                }\n                /// @src 21:5432:5463  \"(amount * 1e18) / totalSupply()\"\n                let expr := checked_div_uint256(product, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02))\n                /// @src 21:5516:5573  \"if (_ratio > 0) {...\"\n                if /** @src 21:5520:5530  \"_ratio > 0\" */ iszero(iszero(expr))\n                /// @src 21:5516:5573  \"if (_ratio > 0) {...\"\n                {\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    sstore(/** @src 21:5546:5562  \"index0 += _ratio\" */ 0x18, checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:5546:5562  \"index0 += _ratio\" */ 0x18), expr))\n                }\n                /// @src 21:5587:5614  \"Fees(msg.sender, amount, 0)\"\n                let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                mstore(_3, var_amount)\n                mstore(add(_3, 32), /** @src -1:-1:-1 */ 0)\n                /// @src 21:5587:5614  \"Fees(msg.sender, amount, 0)\"\n                log2(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 21:5587:5614  \"Fees(msg.sender, amount, 0)\" */ 0x112c256902bf554b6ed882d2936687aaeb4225e8cd5b51303c90ca6cf43a8602, /** @src 21:5592:5602  \"msg.sender\" */ caller())\n            }\n            /// @ast-id 4718 @src 21:5662:6020  \"function _update1(uint256 amount) internal {...\"\n            function fun_update1(var_amount)\n            {\n                /// @src 21:5769:5793  \"if (amount == 0) return;\"\n                if /** @src 21:5773:5784  \"amount == 0\" */ iszero(var_amount)\n                /// @src 21:5769:5793  \"if (amount == 0) return;\"\n                {\n                    /// @src 21:5786:5793  \"return;\"\n                    leave\n                }\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let cleaned := and(sload(/** @src 21:5809:5815  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                /// @src 21:5840:5846  \"amount\"\n                fun_safeTransfer(cleaned, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(sload(/** @src 21:5830:5838  \"poolFees\" */ 0x0e), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1), /** @src 21:5840:5846  \"amount\" */ var_amount)\n                /// @src 21:5884:5888  \"1e18\"\n                let _2 := 0x0de0b6b3a7640000\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let product := mul(var_amount, /** @src 21:5884:5888  \"1e18\" */ _2)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                if iszero(eq(/** @src 21:5884:5888  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product, var_amount)))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                }\n                /// @src 21:5874:5905  \"(amount * 1e18) / totalSupply()\"\n                let expr := checked_div_uint256(product, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02))\n                /// @src 21:5915:5972  \"if (_ratio > 0) {...\"\n                if /** @src 21:5919:5929  \"_ratio > 0\" */ iszero(iszero(expr))\n                /// @src 21:5915:5972  \"if (_ratio > 0) {...\"\n                {\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    sstore(/** @src 21:5945:5961  \"index1 += _ratio\" */ 0x19, checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:5945:5961  \"index1 += _ratio\" */ 0x19), expr))\n                }\n                /// @src 21:5986:6013  \"Fees(msg.sender, 0, amount)\"\n                let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                mstore(_3, /** @src -1:-1:-1 */ 0)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                mstore(add(_3, 32), var_amount)\n                /// @src 21:5986:6013  \"Fees(msg.sender, 0, amount)\"\n                log2(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 21:5986:6013  \"Fees(msg.sender, 0, amount)\" */ 0x112c256902bf554b6ed882d2936687aaeb4225e8cd5b51303c90ca6cf43a8602, /** @src 21:5991:6001  \"msg.sender\" */ caller())\n            }\n            /// @ast-id 6306 @src 21:19986:20938  \"function _getAmountOut(...\"\n            function fun_getAmountOut(var_amountIn, var_tokenIn, var__reserve0, var_reserve1) -> var\n            {\n                /// @src 21:20162:20932  \"if (stable) {...\"\n                switch /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(shr(160, sload(/** @src 21:20166:20172  \"stable\" */ 0x0b)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                case /** @src 21:20162:20932  \"if (stable) {...\" */ 0 {\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _1 := sub(shl(160, 1), 1)\n                    /// @src 21:20788:20805  \"tokenIn == token0\"\n                    let expr := eq(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 21:20788:20805  \"tokenIn == token0\" */ var_tokenIn, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1), and(sload(/** @src 21:20799:20805  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1))\n                    /// @src 21:20788:20855  \"tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0)\"\n                    let expr_6291_component := /** @src -1:-1:-1 */ 0\n                    let expr_component := expr_6291_component\n                    /// @src 21:20788:20855  \"tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0)\"\n                    switch expr\n                    case 0 {\n                        expr_6291_component := var_reserve1\n                        expr_component := var__reserve0\n                    }\n                    default {\n                        expr_6291_component := var__reserve0\n                        expr_component := var_reserve1\n                    }\n                    /// @src 21:20877:20896  \"amountIn * reserveB\"\n                    let expr_1 := checked_mul_uint256(var_amountIn, expr_component)\n                    /// @src 21:20869:20921  \"return (amountIn * reserveB) / (reserveA + amountIn)\"\n                    var := /** @src 21:20876:20921  \"(amountIn * reserveB) / (reserveA + amountIn)\" */ checked_div_uint256(expr_1, /** @src 21:20901:20920  \"reserveA + amountIn\" */ checked_add_uint256(expr_6291_component, var_amountIn))\n                    /// @src 21:20869:20921  \"return (amountIn * reserveB) / (reserveA + amountIn)\"\n                    leave\n                }\n                default /// @src 21:20162:20932  \"if (stable) {...\"\n                {\n                    /// @src 21:20201:20225  \"_k(_reserve0, _reserve1)\"\n                    let expr_2 := fun_k(var__reserve0, var_reserve1)\n                    /// @src 21:20264:20268  \"1e18\"\n                    let _2 := 0x0de0b6b3a7640000\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let product := mul(var__reserve0, /** @src 21:20264:20268  \"1e18\" */ _2)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    if iszero(or(iszero(var__reserve0), eq(/** @src 21:20264:20268  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product, var__reserve0))))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                    }\n                    let _3 := sload(/** @src 21:20272:20281  \"decimals0\" */ 0x11)\n                    /// @src 21:20251:20281  \"(_reserve0 * 1e18) / decimals0\"\n                    let expr_3 := checked_div_uint256(product, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _3)\n                    let product_1 := mul(var_reserve1, /** @src 21:20264:20268  \"1e18\" */ _2)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    if iszero(or(iszero(var_reserve1), eq(/** @src 21:20264:20268  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product_1, var_reserve1))))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, /** @src 21:20272:20281  \"decimals0\" */ 0x11)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                    }\n                    let _4 := sload(/** @src 21:20328:20337  \"decimals1\" */ 0x12)\n                    /// @src 21:20307:20337  \"(_reserve1 * 1e18) / decimals1\"\n                    let expr_4 := checked_div_uint256(product_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _4)\n                    let _5 := sub(shl(160, 1), 1)\n                    /// @src 21:20390:20407  \"tokenIn == token0\"\n                    let expr_5 := eq(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 21:20390:20407  \"tokenIn == token0\" */ var_tokenIn, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _5), and(sload(/** @src 21:20401:20407  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _5))\n                    /// @src 21:20390:20457  \"tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0)\"\n                    let expr_component_1 := /** @src -1:-1:-1 */ 0\n                    let expr_6231_component := expr_component_1\n                    /// @src 21:20390:20457  \"tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0)\"\n                    switch expr_5\n                    case 0 {\n                        expr_component_1 := expr_4\n                        expr_6231_component := expr_3\n                    }\n                    default {\n                        expr_component_1 := expr_3\n                        expr_6231_component := expr_4\n                    }\n                    /// @src 21:20482:20563  \"tokenIn == token0 ? (amountIn * 1e18) / decimals0 : (amountIn * 1e18) / decimals1\"\n                    let expr_6 := /** @src -1:-1:-1 */ 0\n                    /// @src 21:20482:20563  \"tokenIn == token0 ? (amountIn * 1e18) / decimals0 : (amountIn * 1e18) / decimals1\"\n                    switch expr_5\n                    case 0 {\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let product_2 := mul(var_amountIn, /** @src 21:20264:20268  \"1e18\" */ _2)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if iszero(or(iszero(var_amountIn), eq(/** @src 21:20264:20268  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product_2, var_amountIn))))\n                        {\n                            mstore(/** @src -1:-1:-1 */ expr_6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, /** @src 21:20272:20281  \"decimals0\" */ 0x11)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            revert(/** @src -1:-1:-1 */ expr_6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        /// @src 21:20482:20563  \"tokenIn == token0 ? (amountIn * 1e18) / decimals0 : (amountIn * 1e18) / decimals1\"\n                        expr_6 := /** @src 21:20534:20563  \"(amountIn * 1e18) / decimals1\" */ checked_div_uint256(product_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _4)\n                    }\n                    default /// @src 21:20482:20563  \"tokenIn == token0 ? (amountIn * 1e18) / decimals0 : (amountIn * 1e18) / decimals1\"\n                    {\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let product_3 := mul(var_amountIn, /** @src 21:20264:20268  \"1e18\" */ _2)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if iszero(or(iszero(var_amountIn), eq(/** @src 21:20264:20268  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product_3, var_amountIn))))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, /** @src 21:20272:20281  \"decimals0\" */ 0x11)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        /// @src 21:20482:20563  \"tokenIn == token0 ? (amountIn * 1e18) / decimals0 : (amountIn * 1e18) / decimals1\"\n                        expr_6 := /** @src 21:20502:20531  \"(amountIn * 1e18) / decimals0\" */ checked_div_uint256(product_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _3)\n                    }\n                    /// @src 21:20589:20641  \"reserveB - _get_y(amountIn + reserveA, xy, reserveB)\"\n                    let expr_7 := checked_sub_uint256(expr_6231_component, /** @src 21:20600:20641  \"_get_y(amountIn + reserveA, xy, reserveB)\" */ fun_get_y(/** @src 21:20607:20626  \"amountIn + reserveA\" */ checked_add_uint256(expr_6, expr_component_1), /** @src 21:20600:20641  \"_get_y(amountIn + reserveA, xy, reserveB)\" */ expr_2, expr_6231_component))\n                    /// @src 21:20668:20709  \"tokenIn == token0 ? decimals1 : decimals0\"\n                    let expr_8 := /** @src -1:-1:-1 */ 0\n                    /// @src 21:20668:20709  \"tokenIn == token0 ? decimals1 : decimals0\"\n                    switch expr_5\n                    case 0 { expr_8 := _3 }\n                    default { expr_8 := _4 }\n                    /// @src 21:20655:20718  \"return (y * (tokenIn == token0 ? decimals1 : decimals0)) / 1e18\"\n                    var := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:20663:20710  \"y * (tokenIn == token0 ? decimals1 : decimals0)\" */ checked_mul_uint256(expr_7, expr_8), /** @src 21:20264:20268  \"1e18\" */ _2)\n                    /// @src 21:20655:20718  \"return (y * (tokenIn == token0 ? decimals1 : decimals0)) / 1e18\"\n                    leave\n                }\n            }\n            /// @ast-id 6135 @src 21:17706:19581  \"function _get_y(uint256 x0, uint256 xy, uint256 y) internal view returns (uint256) {...\"\n            function fun_get_y(var_x0, var_xy, var_y) -> var\n            {\n                /// @src 21:17804:17817  \"uint256 i = 0\"\n                let var_i := /** @src 21:17816:17817  \"0\" */ 0x00\n                /// @src 21:17799:19553  \"for (uint256 i = 0; i < 255; i++) {...\"\n                for { }\n                /** @src 21:17819:17826  \"i < 255\" */ lt(var_i, /** @src 21:17823:17826  \"255\" */ 0xff)\n                /// @src 21:17804:17817  \"uint256 i = 0\"\n                {\n                    /// @src 21:17828:17831  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 21:17859:17868  \"_f(x0, y)\"\n                    let expr := fun_f(var_x0, var_y)\n                    /// @src 21:17847:17868  \"uint256 k = _f(x0, y)\"\n                    let var_k := expr\n                    /// @src 21:17882:19543  \"if (k < xy) {...\"\n                    switch /** @src 21:17886:17892  \"k < xy\" */ lt(expr, var_xy)\n                    case /** @src 21:17882:19543  \"if (k < xy) {...\" */ 0 {\n                        /// @src 21:18859:18865  \"k - xy\"\n                        let expr_1 := checked_sub_uint256(expr, var_xy)\n                        /// @src 21:18869:18873  \"1e18\"\n                        let _1 := 0x0de0b6b3a7640000\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let product := mul(expr_1, /** @src 21:18869:18873  \"1e18\" */ _1)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if iszero(or(iszero(expr_1), eq(/** @src 21:18869:18873  \"1e18\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product, expr_1))))\n                        {\n                            mstore(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        /// @src 21:18844:18886  \"uint256 dy = ((k - xy) * 1e18) / _d(x0, y)\"\n                        let var_dy := /** @src 21:18857:18886  \"((k - xy) * 1e18) / _d(x0, y)\" */ checked_div_uint256(product, /** @src 21:18877:18886  \"_d(x0, y)\" */ fun_d(var_x0, var_y))\n                        /// @src 21:18904:19501  \"if (dy == 0) {...\"\n                        if /** @src 21:18908:18915  \"dy == 0\" */ iszero(var_dy)\n                        /// @src 21:18904:19501  \"if (dy == 0) {...\"\n                        {\n                            /// @src 21:18943:18972  \"k == xy || _f(x0, y - 1) < xy\"\n                            let expr_2 := /** @src 21:18943:18950  \"k == xy\" */ eq(expr, var_xy)\n                            /// @src 21:18943:18972  \"k == xy || _f(x0, y - 1) < xy\"\n                            if iszero(expr_2)\n                            {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let diff := add(var_y, not(0))\n                                if gt(diff, var_y)\n                                {\n                                    mstore(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                                }\n                                /// @src 21:18943:18972  \"k == xy || _f(x0, y - 1) < xy\"\n                                expr_2 := /** @src 21:18954:18972  \"_f(x0, y - 1) < xy\" */ lt(/** @src 21:18954:18967  \"_f(x0, y - 1)\" */ fun_f(var_x0, /** @src 21:18961:18966  \"y - 1\" */ diff), /** @src 21:18954:18972  \"_f(x0, y - 1) < xy\" */ var_xy)\n                            }\n                            /// @src 21:18939:19455  \"if (k == xy || _f(x0, y - 1) < xy) {...\"\n                            if expr_2\n                            {\n                                /// @src 21:19424:19432  \"return y\"\n                                var := var_y\n                                leave\n                            }\n                            /// @src 21:19476:19482  \"dy = 1\"\n                            var_dy := /** @src 21:19481:19482  \"1\" */ 0x01\n                        }\n                        /// @src 21:19518:19528  \"y = y - dy\"\n                        var_y := /** @src 21:19522:19528  \"y - dy\" */ checked_sub_uint256(var_y, var_dy)\n                    }\n                    default /// @src 21:17882:19543  \"if (k < xy) {...\"\n                    {\n                        /// @src 21:18257:18263  \"xy - k\"\n                        let expr_3 := checked_sub_uint256(var_xy, var_k)\n                        /// @src 21:18267:18271  \"1e18\"\n                        let _2 := 0x0de0b6b3a7640000\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let product_1 := mul(expr_3, /** @src 21:18267:18271  \"1e18\" */ _2)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if iszero(or(iszero(expr_3), eq(/** @src 21:18267:18271  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product_1, expr_3))))\n                        {\n                            mstore(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        /// @src 21:18242:18284  \"uint256 dy = ((xy - k) * 1e18) / _d(x0, y)\"\n                        let var_dy_1 := /** @src 21:18255:18284  \"((xy - k) * 1e18) / _d(x0, y)\" */ checked_div_uint256(product_1, /** @src 21:18275:18284  \"_d(x0, y)\" */ fun_d(var_x0, var_y))\n                        /// @src 21:18302:18778  \"if (dy == 0) {...\"\n                        if /** @src 21:18306:18313  \"dy == 0\" */ iszero(var_dy_1)\n                        /// @src 21:18302:18778  \"if (dy == 0) {...\"\n                        {\n                            /// @src 21:18337:18472  \"if (k == xy) {...\"\n                            if /** @src 21:18341:18348  \"k == xy\" */ eq(var_k, var_xy)\n                            /// @src 21:18337:18472  \"if (k == xy) {...\"\n                            {\n                                /// @src 21:18441:18449  \"return y\"\n                                var := var_y\n                                leave\n                            }\n                            /// @src 21:18508:18509  \"1\"\n                            let _3 := 0x01\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let sum := add(var_y, /** @src 21:18508:18509  \"1\" */ _3)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if gt(var_y, sum)\n                            {\n                                mstore(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                            }\n                            /// @src 21:18493:18732  \"if (_k(x0, y + 1) > xy) {...\"\n                            if /** @src 21:18497:18515  \"_k(x0, y + 1) > xy\" */ gt(/** @src 21:18497:18510  \"_k(x0, y + 1)\" */ fun_k(var_x0, /** @src 21:18504:18509  \"y + 1\" */ sum), /** @src 21:18497:18515  \"_k(x0, y + 1) > xy\" */ var_xy)\n                            /// @src 21:18493:18732  \"if (_k(x0, y + 1) > xy) {...\"\n                            {\n                                /// @src 21:18697:18709  \"return y + 1\"\n                                var := sum\n                                leave\n                            }\n                            /// @src 21:18753:18759  \"dy = 1\"\n                            var_dy_1 := /** @src 21:18508:18509  \"1\" */ _3\n                        }\n                        /// @src 21:18795:18805  \"y = y + dy\"\n                        var_y := /** @src 21:18799:18805  \"y + dy\" */ checked_add_uint256(var_y, var_dy_1)\n                    }\n                }\n                /// @src 21:19562:19574  \"revert(\\\"!y\\\")\"\n                let _4 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                /// @src 21:19562:19574  \"revert(\\\"!y\\\")\"\n                mstore(_4, shl(229, 4594637))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                mstore(/** @src 21:19562:19574  \"revert(\\\"!y\\\")\" */ add(_4, 4), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                mstore(add(/** @src 21:19562:19574  \"revert(\\\"!y\\\")\" */ _4, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36), 2)\n                mstore(add(/** @src 21:19562:19574  \"revert(\\\"!y\\\")\" */ _4, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 68), \"!y\")\n                /// @src 21:19562:19574  \"revert(\\\"!y\\\")\"\n                revert(_4, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 100)\n            }\n            /// @ast-id 5958 @src 21:17329:17532  \"function _f(uint256 x0, uint256 y) internal pure returns (uint256) {...\"\n            function fun_f(var_x0, var_y) -> var\n            {\n                /// @src 21:17430:17434  \"1e18\"\n                let _1 := 0x0de0b6b3a7640000\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let r := div(/** @src 21:17420:17426  \"x0 * y\" */ checked_mul_uint256(var_x0, var_y), /** @src 21:17430:17434  \"1e18\" */ _1)\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let r_1 := div(/** @src 21:17459:17466  \"x0 * x0\" */ checked_mul_uint256(var_x0, var_x0), /** @src 21:17430:17434  \"1e18\" */ _1)\n                /// @src 21:17502:17525  \"return (_a * _b) / 1e18\"\n                var := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:17510:17517  \"_a * _b\" */ checked_mul_uint256(r, /** @src 21:17458:17491  \"(x0 * x0) / 1e18 + (y * y) / 1e18\" */ checked_add_uint256(r_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:17478:17483  \"y * y\" */ checked_mul_uint256(var_y, var_y), /** @src 21:17430:17434  \"1e18\" */ _1))), _1)\n            }\n            /// @ast-id 5997 @src 21:17538:17700  \"function _d(uint256 x0, uint256 y) internal pure returns (uint256) {...\"\n            function fun_d(var_x0, var_y) -> var\n            {\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let product := mul(/** @src 21:17623:17624  \"3\" */ 0x03, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_x0)\n                if iszero(eq(var_x0, div(product, /** @src 21:17623:17624  \"3\" */ 0x03)))\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                }\n                /// @src 21:17643:17647  \"1e18\"\n                let _1 := 0x0de0b6b3a7640000\n                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                let r := div(/** @src 21:17623:17648  \"3 * x0 * ((y * y) / 1e18)\" */ checked_mul_uint256(product, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:17634:17639  \"y * y\" */ checked_mul_uint256(var_y, var_y), /** @src 21:17643:17647  \"1e18\" */ _1)), _1)\n                /// @src 21:17615:17693  \"return (3 * x0 * ((y * y) / 1e18)) / 1e18 + ((((x0 * x0) / 1e18) * x0) / 1e18)\"\n                var := /** @src 21:17622:17693  \"(3 * x0 * ((y * y) / 1e18)) / 1e18 + ((((x0 * x0) / 1e18) * x0) / 1e18)\" */ checked_add_uint256(r, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:17661:17684  \"((x0 * x0) / 1e18) * x0\" */ checked_mul_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:17663:17670  \"x0 * x0\" */ checked_mul_uint256(var_x0, var_x0), /** @src 21:17643:17647  \"1e18\" */ _1), /** @src 21:17661:17684  \"((x0 * x0) / 1e18) * x0\" */ var_x0), /** @src 21:17643:17647  \"1e18\" */ _1))\n            }\n            /// @ast-id 6375 @src 21:20944:21361  \"function _k(uint256 x, uint256 y) internal view returns (uint256) {...\"\n            function fun_k(var_x, var_y) -> var\n            {\n                /// @src 21:21020:21355  \"if (stable) {...\"\n                switch /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(shr(160, sload(/** @src 21:21024:21030  \"stable\" */ 0x0b)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                case /** @src 21:21020:21355  \"if (stable) {...\" */ 0 {\n                    /// @src 21:21321:21333  \"return x * y\"\n                    var := /** @src 21:21328:21333  \"x * y\" */ checked_mul_uint256(var_x, var_y)\n                    /// @src 21:21321:21333  \"return x * y\"\n                    leave\n                }\n                default /// @src 21:21020:21355  \"if (stable) {...\"\n                {\n                    /// @src 21:21064:21068  \"1e18\"\n                    let _1 := 0x0de0b6b3a7640000\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let product := mul(var_x, /** @src 21:21064:21068  \"1e18\" */ _1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    if iszero(or(iszero(var_x), eq(/** @src 21:21064:21068  \"1e18\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product, var_x))))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                    }\n                    /// @src 21:21059:21081  \"(x * 1e18) / decimals0\"\n                    let expr := checked_div_uint256(product, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:21072:21081  \"decimals0\" */ 0x11))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let product_1 := mul(var_y, /** @src 21:21064:21068  \"1e18\" */ _1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    if iszero(or(iszero(var_y), eq(/** @src 21:21064:21068  \"1e18\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product_1, var_y))))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, /** @src 21:21072:21081  \"decimals0\" */ 0x11)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                    }\n                    /// @src 21:21108:21130  \"(y * 1e18) / decimals1\"\n                    let expr_1 := checked_div_uint256(product_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:21121:21130  \"decimals1\" */ 0x12))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let r := div(/** @src 21:21158:21165  \"_x * _y\" */ checked_mul_uint256(expr, expr_1), /** @src 21:21064:21068  \"1e18\" */ _1)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let r_1 := div(/** @src 21:21202:21209  \"_x * _x\" */ checked_mul_uint256(expr, expr), /** @src 21:21064:21068  \"1e18\" */ _1)\n                    /// @src 21:21251:21274  \"return (_a * _b) / 1e18\"\n                    var := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:21259:21266  \"_a * _b\" */ checked_mul_uint256(r, /** @src 21:21201:21236  \"(_x * _x) / 1e18 + (_y * _y) / 1e18\" */ checked_add_uint256(r_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:21221:21228  \"_y * _y\" */ checked_mul_uint256(expr_1, expr_1), /** @src 21:21064:21068  \"1e18\" */ _1))), _1)\n                    /// @src 21:21251:21274  \"return (_a * _b) / 1e18\"\n                    leave\n                }\n            }\n        }\n        /// @use-src 22:\"contracts/PoolFees.sol\"\n        object \"PoolFees_6496\" {\n            code {\n                {\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    let _1 := memoryguard(0xe0)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"PoolFees_6496\")\n                    let argSize := sub(codesize(), programSize)\n                    let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 22:387:1240  \"contract PoolFees {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 22:387:1240  \"contract PoolFees {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    codecopy(_1, programSize, argSize)\n                    if slt(sub(add(_1, argSize), _1), 64)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    let value0 := abi_decode_address_fromMemory(_1)\n                    let value1 := abi_decode_address_fromMemory(add(_1, 32))\n                    /// @src 22:801:818  \"pool = msg.sender\"\n                    mstore(128, /** @src 22:808:818  \"msg.sender\" */ caller())\n                    /// @src 22:828:844  \"token0 = _token0\"\n                    mstore(160, value0)\n                    /// @src 22:854:870  \"token1 = _token1\"\n                    mstore(192, value1)\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    let _2 := mload(64)\n                    let _3 := datasize(\"PoolFees_6496_deployed\")\n                    codecopy(_2, dataoffset(\"PoolFees_6496_deployed\"), _3)\n                    setimmutable(_2, \"6425\", mload(/** @src 22:801:818  \"pool = msg.sender\" */ 128))\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    setimmutable(_2, \"6427\", mload(/** @src 22:828:844  \"token0 = _token0\" */ 160))\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    setimmutable(_2, \"6429\", mload(/** @src 22:854:870  \"token1 = _token1\" */ 192))\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    return(_2, _3)\n                }\n                function abi_decode_address_fromMemory(offset) -> value\n                {\n                    value := mload(offset)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n            }\n            /// @use-src 8:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\", 9:\"@openzeppelin/contracts/utils/Address.sol\", 22:\"contracts/PoolFees.sol\"\n            object \"PoolFees_6496_deployed\" {\n                code {\n                    {\n                        /// @src 22:387:1240  \"contract PoolFees {...\"\n                        let _1 := memoryguard(0x80)\n                        mstore(64, _1)\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            let _2 := 0\n                            if eq(0x533cf5ce, shr(224, calldataload(_2)))\n                            {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_2, _2) }\n                                let value := calldataload(4)\n                                let _3 := sub(shl(160, 1), 1)\n                                if iszero(eq(value, and(value, _3))) { revert(_2, _2) }\n                                let value_1 := calldataload(36)\n                                let value_2 := calldataload(68)\n                                /// @src 22:1037:1077  \"if (msg.sender != pool) revert NotPool()\"\n                                if /** @src 22:1041:1059  \"msg.sender != pool\" */ iszero(eq(/** @src 22:1041:1051  \"msg.sender\" */ caller(), /** @src 22:387:1240  \"contract PoolFees {...\" */ and(/** @src 22:1055:1059  \"pool\" */ loadimmutable(\"6425\"), /** @src 22:387:1240  \"contract PoolFees {...\" */ _3)))\n                                /// @src 22:1037:1077  \"if (msg.sender != pool) revert NotPool()\"\n                                {\n                                    /// @src 22:1068:1077  \"NotPool()\"\n                                    mstore(_1, shl(224, 0x6f61f641))\n                                    revert(_1, /** @src 22:387:1240  \"contract PoolFees {...\" */ 4)\n                                }\n                                /// @src 22:1087:1154  \"if (_amount0 > 0) IERC20(token0).safeTransfer(_recipient, _amount0)\"\n                                if /** @src 22:1091:1103  \"_amount0 > 0\" */ iszero(iszero(value_1))\n                                /// @src 22:1087:1154  \"if (_amount0 > 0) IERC20(token0).safeTransfer(_recipient, _amount0)\"\n                                {\n                                    /// @src 22:1145:1153  \"_amount0\"\n                                    fun_safeTransfer(/** @src 22:387:1240  \"contract PoolFees {...\" */ and(/** @src 22:1112:1118  \"token0\" */ loadimmutable(\"6427\"), /** @src 22:387:1240  \"contract PoolFees {...\" */ _3), /** @src 22:1145:1153  \"_amount0\" */ value, value_1)\n                                }\n                                /// @src 22:1164:1231  \"if (_amount1 > 0) IERC20(token1).safeTransfer(_recipient, _amount1)\"\n                                if /** @src 22:1168:1180  \"_amount1 > 0\" */ iszero(iszero(value_2))\n                                /// @src 22:1164:1231  \"if (_amount1 > 0) IERC20(token1).safeTransfer(_recipient, _amount1)\"\n                                {\n                                    /// @src 22:1222:1230  \"_amount1\"\n                                    fun_safeTransfer(/** @src 22:387:1240  \"contract PoolFees {...\" */ and(/** @src 22:1189:1195  \"token1\" */ loadimmutable(\"6429\"), /** @src 22:387:1240  \"contract PoolFees {...\" */ _3), /** @src 22:1222:1230  \"_amount1\" */ value, value_2)\n                                }\n                                /// @src 22:387:1240  \"contract PoolFees {...\"\n                                return(_2, _2)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    /// @ast-id 1105 @src 8:1303:1463  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n                    function fun_safeTransfer(var_token_address, var_to, var_value)\n                    {\n                        /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_mpos := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(64)\n                        /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _1 := add(expr_mpos, 0x20)\n                        mstore(_1, /** @src 22:387:1240  \"contract PoolFees {...\" */ shl(224, 0xa9059cbb))\n                        let _2 := sub(shl(160, 1), 1)\n                        mstore(/** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ add(expr_mpos, 36), /** @src 22:387:1240  \"contract PoolFees {...\" */ and(var_to, _2))\n                        mstore(add(/** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_mpos, /** @src 22:387:1240  \"contract PoolFees {...\" */ 68), var_value)\n                        /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(expr_mpos, /** @src 22:387:1240  \"contract PoolFees {...\" */ 68)\n                        let newFreePtr := add(expr_mpos, 128)\n                        let _3 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _3), lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                        }\n                        /// @src 22:387:1240  \"contract PoolFees {...\"\n                        mstore(64, newFreePtr)\n                        let _4 := and(/** @src 8:4504:4518  \"address(token)\" */ var_token_address, /** @src 22:387:1240  \"contract PoolFees {...\" */ _2)\n                        /// @src -1:-1:-1\n                        let _5 := 0\n                        /// @src 9:3462:3493  \"target.call{value: value}(data)\"\n                        let expr_component := call(gas(), _4, /** @src -1:-1:-1 */ _5, /** @src 9:3462:3493  \"target.call{value: value}(data)\" */ _1, mload(expr_mpos), /** @src -1:-1:-1 */ _5, _5)\n                        /// @src 9:3462:3493  \"target.call{value: value}(data)\"\n                        let data := /** @src -1:-1:-1 */ _5\n                        /// @src 22:387:1240  \"contract PoolFees {...\"\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _6 := returndatasize()\n                            if gt(_6, _3)\n                            {\n                                mstore(/** @src -1:-1:-1 */ _5, /** @src 22:387:1240  \"contract PoolFees {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ _5, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                            }\n                            let _7 := not(31)\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            let memPtr := mload(64)\n                            let newFreePtr_1 := add(memPtr, and(add(and(add(_6, 31), /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ _7), /** @src 22:387:1240  \"contract PoolFees {...\" */ 63), /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ _7))\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n                            {\n                                mstore(/** @src -1:-1:-1 */ _5, /** @src 22:387:1240  \"contract PoolFees {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ _5, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                            }\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            mstore(64, newFreePtr_1)\n                            mstore(memPtr, _6)\n                            data := memPtr\n                            returndatacopy(add(memPtr, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src -1:-1:-1 */ _5, /** @src 22:387:1240  \"contract PoolFees {...\" */ returndatasize())\n                        }\n                        /// @src 9:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                        let var_mpos := /** @src 9:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_4, expr_component, /** @src 9:3462:3493  \"target.call{value: value}(data)\" */ data)\n                        /// @src 8:4551:4568  \"returndata.length\"\n                        let expr := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(/** @src 8:4551:4568  \"returndata.length\" */ var_mpos)\n                        /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                        let expr_1 := /** @src 8:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                        /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                        if expr_1\n                        {\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            if slt(sub(/** @src 8:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr), var_mpos), /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20)\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            {\n                                revert(/** @src -1:-1:-1 */ _5, _5)\n                            }\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            let value := mload(/** @src 8:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20))\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            let _8 := iszero(value)\n                            if iszero(eq(value, iszero(_8)))\n                            {\n                                revert(/** @src -1:-1:-1 */ _5, _5)\n                            }\n                            /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                            expr_1 := _8\n                        }\n                        /// @src 8:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                        if expr_1\n                        {\n                            /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            let _9 := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(64)\n                            /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            mstore(_9, shl(224, 0x5274afe7))\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            mstore(/** @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_9, 4), /** @src 22:387:1240  \"contract PoolFees {...\" */ _4)\n                            /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            revert(_9, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                        }\n                    }\n                    /// @ast-id 1557 @src 9:4625:5207  \"function verifyCallResultFromTarget(...\"\n                    function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                    {\n                        /// @src 9:4793:5201  \"if (!success) {...\"\n                        switch /** @src 9:4797:4805  \"!success\" */ iszero(var_success)\n                        case /** @src 9:4793:5201  \"if (!success) {...\" */ 0 {\n                            /// @src 9:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            let expr := /** @src 9:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 22:387:1240  \"contract PoolFees {...\" */ mload(/** @src 9:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                            /// @src 9:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            if expr\n                            {\n                                expr := /** @src 9:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 9:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                            }\n                            /// @src 9:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                            if expr\n                            {\n                                /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                                let _1 := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(64)\n                                /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                                mstore(_1, shl(224, 0x9996b315))\n                                /// @src 22:387:1240  \"contract PoolFees {...\"\n                                mstore(/** @src 9:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 22:387:1240  \"contract PoolFees {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                                revert(_1, /** @src 22:387:1240  \"contract PoolFees {...\" */ 36)\n                            }\n                            /// @src 9:5173:5190  \"return returndata\"\n                            var_mpos := var_returndata_mpos\n                            leave\n                        }\n                        default /// @src 9:4793:5201  \"if (!success) {...\"\n                        {\n                            /// @src 9:5870:6253  \"if (returndata.length > 0) {...\"\n                            switch /** @src 9:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 22:387:1240  \"contract PoolFees {...\" */ mload(/** @src 9:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                            case /** @src 9:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                /// @src 9:6225:6242  \"FailedInnerCall()\"\n                                let _2 := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(64)\n                                /// @src 9:6225:6242  \"FailedInnerCall()\"\n                                mstore(_2, shl(225, 0x0a12f521))\n                                revert(_2, 4)\n                            }\n                            default /// @src 9:5870:6253  \"if (returndata.length > 0) {...\"\n                            {\n                                /// @src 9:6046:6188  \"assembly {...\"\n                                revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                            }\n                        }\n                    }\n                }\n                data \".metadata\" hex\"a26469706673582212206ecbdc6aff314b5389e0835989ddc065b67f6240a8881d9aa13bd34b5120580564736f6c63430008140033\"\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212207bc03432829fe1a9b195cc4fac8e333a019a2006e04b62916c185cad78f1c9e164736f6c63430008140033\"\n    }\n}\n","hash":"01000a5f90c0c98e47585eeb93566ad1608648baacb1862b4849e50e97d39f86","factoryDependencies":{"01000075be6f4a5e52cbdc6debc4c532ad1bcd606251fa8851979631e21f76d1":"contracts/PoolFees.sol:PoolFees"}}},"contracts/PoolFees.sol":{"PoolFees":{"abi":[{"inputs":[{"internalType":"address","name":"_token0","type":"address"},{"internalType":"address","name":"_token1","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"NotPool","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"inputs":[{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_amount0","type":"uint256"},{"internalType":"uint256","name":"_amount1","type":"uint256"}],"name":"claimFeesFor","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPool\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount1\",\"type\":\"uint256\"}],\"name\":\"claimFeesFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"PoolFees\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimFeesFor(address,uint256,uint256)\":{\"notice\":\"Allow the pool to transfer fees to users\"}},\"notice\":\"Contract used as 1:1 pool relationship to split out fees.Ensures curve does not need to be modified for LP shares.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PoolFees.sol\":\"PoolFees\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"contracts/PoolFees.sol\":{\"keccak256\":\"0xb6bc4b754345cc6343e2600134733095f3ef52da3004e127fee2b572fe13d89c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fa0853c12ebbf047dace7fe84a0b69e0499a33c96822c907a3e2e029aea30dad\",\"dweb:/ipfs/Qmbmwo1Nb2A3kB4Qv7N26kpkJ6VMCo4ew8tmzKpNFJ63UB\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"PoolFees.sol:PoolFees\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[4]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tand\t@CPI0_4[0], r2, r2\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_2[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r0, stack-[1]\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[2]\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_17\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_19\n\tsub!\tstack-[3], r0, r1\n\tjump.eq\t@.BB0_23\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_17\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tstack-[3], r0, r3\n\tnear_call\tr0, @fun_safeTransfer, @DEFAULT_UNWIND\n.BB0_23:\n\tsub!\tstack-[2], r0, r1\n\tadd\tstack-[4], r0, r2\n\tjump.eq\t@.BB0_26\n\tadd\t@CPI0_6[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tadd\t64, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_17\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tstack-[2], r0, r3\n\tnear_call\tr0, @fun_safeTransfer, @DEFAULT_UNWIND\n.BB0_26:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t255, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_27\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t224, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_27:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t224, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_7:\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t224, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tld.1\t256, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.le\t@.BB0_10\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_10:\n\tcontext.caller\tr3\n\tst.1\t128, r3\n\tst.1\t160, r1\n\tst.1\t192, r2\n\tst.2\t320, r0\n\tst.2\t352, r3\n\tadd\t32, r0, r3\n\tst.2\t384, r3\n\tst.2\t416, r1\n\tadd\t64, r0, r1\n\tst.2\t448, r1\n\tst.2\t480, r2\n\tst.2\t256, r3\n\tadd\t3, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_17:\n\trevert\n.BB0_19:\n\tadd\t@CPI0_8[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nfun_safeTransfer:\n.func_begin1:\n\tnop\tstack+=[3]\n\tld.1\t64, r4\n\tadd\t68, r4, r5\n\tst.1\tr5, r3\n\tadd\t32, r4, r3\n\tadd\t@CPI1_0[0], r0, r5\n\tst.1\tr3, r5\n\tand\t@CPI1_1[0], r2, r2\n\tadd\t36, r4, r5\n\tst.1\tr5, r2\n\tadd\t68, r0, r2\n\tst.1\tr4, r2\n\tsub.s!\t@CPI1_2[0], r4, r2\n\tjump.ge\t@.BB1_1\n\tadd\t128, r4, r2\n\tst.1\t64, r2\n\tld.1\tr4, r4\n\tcontext.gas_left\tr2\n\tand\t@CPI1_1[0], r1, r8\n\tsub.s!\t4, r8, r1\n\tjump.ne\t@.BB1_3\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB1_5\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tsub.s!\t@CPI1_3[0], r3, r5\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI1_3[0], r4, r5\n\tadd.ge\tr1, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r3, r3\n\tsub.s!\t@CPI1_3[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\tr3, r1, r1\n\tadd\tr8, r0, r2\n\tadd\tr8, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r8\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI1_3[0], r1, stack[@returndatasize]\n\tand\t@CPI1_3[0], r1, r1\n.BB1_5:\n\tadd\t96, r0, r10\n\tadd\t128, r0, r9\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB1_6\n\tadd\t31, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t63, r3, r3\n\tand\tr3, r4, r3\n\tld.1\t64, r10\n\tadd\tr10, r3, r3\n\tsub!\tr3, r10, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI1_4[0], r3, r5\n\tjump.gt\t@.BB1_1\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB1_1\n\tst.1\t64, r3\n\tand\t31, r1, r3\n\tst.1.inc\tr10, r1, r9\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tshr.s!\t5, r1, r1\n\tjump.eq\t@.BB1_29\n\tadd\tr0, r0, r5\n.BB1_20:\n\tshl.s\t5, r5, r6\n\tadd\tr9, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB1_20\n.BB1_29:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB1_6\n\tshl.s\t5, r1, r1\n\tptr.add\tr4, r1, r4\n\tadd\tr9, r1, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r5, r3\n\tst.1\tr1, r3\n.BB1_6:\n\tld.1\tr10, r1\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB1_12\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB1_22\n\tadd\tr10, r0, stack-[2]\n\tadd\tr9, r0, stack-[1]\n\tadd\t@CPI1_5[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr8, r0, stack-[3]\n\tst.2\t4, r8\n\tadd\t@CPI1_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_9\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[2], r0, r1\n\tjump.eq\t@.BB1_11\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[3], r0, r8\n\tadd\tstack-[1], r0, r9\n\tjump.eq\t@.BB1_28\n.BB1_22:\n\tadd\t@CPI1_7[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI1_7[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI1_7[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB1_24\n\tld.1\tr9, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB1_24\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB1_26\n.BB1_28:\n\tret\n.BB1_24:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_1:\n\tadd\t@CPI1_13[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_12:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB1_14\n\tld.1\t64, r1\n\tadd\t@CPI1_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI1_3[0], r0, r2\n\tsub.s!\t@CPI1_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI1_12[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_26:\n\tld.1\t64, r1\n\tadd\t@CPI1_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r8\n\tjump\t@.BB1_27\n.BB1_14:\n\tadd\t@CPI1_3[0], r0, r2\n\tsub.s!\t@CPI1_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI1_3[0], r9, r3\n\tadd.ge\tr2, r0, r9\n\tshl.s\t64, r9, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_9:\n\trevert\n.BB1_11:\n\tld.1\t64, r1\n\tadd\t@CPI1_10[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[3], r0, r3\n\tst.1\tr2, r3\n.BB1_27:\n\tadd\t@CPI1_3[0], r0, r2\n\tsub.s!\t@CPI1_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI1_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__cxa_throw:\n\trevert\n\n__farcall:\n.func_begin2:\n.tmp0:\n\tfar_call\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB4_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_3:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\nCPI1_1:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell 53919893334301279589334030174039261367556698453455181869024116998144\nCPI0_4:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_5:\n\t.cell 37649673737901790415920622362421473532531796165575621547719130862921684353024\nCPI0_6:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_7:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_8:\n\t.cell 50379809940023916232891857241980936446326345110836064733151138870150188498944\nCPI0_9:\n\t.cell 316912652418240591808998408192\nCPI1_0:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI1_2:\n\t.cell 18446744073709551488\nCPI1_4:\n\t.cell 18446744073709551615\nCPI1_5:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI1_6:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI1_7:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI1_8:\n\t.cell 37295821876700504889304837296037907613075394649501056392550260273557750677504\nCPI1_9:\n\t.cell 2852213850513516153367582212096\nCPI1_10:\n\t.cell -46321960365604724831933507365171173232996739913398926471486875190478029979648\nCPI1_11:\n\t.cell 9113247101063757011529551392225999353373832475738586725164814963572685668352\nCPI1_12:\n\t.cell 316912650057057350374175801344\nCPI1_13:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\n","bytecode":{"object":"00020000000000020004000000000002000000000301001900000060033002700000005d0330019700010000003103550000000102200190000000660000c13d0000008002000039000000400020043f000000040230008c0000008f0000413d000000000201043b0000006102200197000000620220009c0000008f0000c13d0000000002000416000000000202004b0000008f0000c13d000000040230008a000000600220008c0000008f0000413d0000000402100370000000000302043b0000005f0230009c0000008f0000213d000100000003001d0000004402100370000000000202043b000200000002001d0000002401100370000000000101043b000300000001001d000000630100004100000000001004390000000001000412000400000001001d000000040010044300000024000004430000005d0100004100000000020004140000005d0320009c0000000002018019000000c00120021000000064011001c700008005020000390170016b0000040f0000000102200190000000a20000613d000000000101043b0000005f011001970000000002000411000000000112004b000000a30000c13d000000030100006b0000004d0000613d0000006301000041000000000010043900000004010000290000000400100443000000200100003900000024001004430000005d0100004100000000020004140000005d0320009c0000000002018019000000c00120021000000064011001c700008005020000390170016b0000040f0000000102200190000000a20000613d000000000101043b0000005f0110019700000001020000290000000303000029017000a70000040f000000020100006b0000000402000029000000640000613d000000630100004100000000001004390000000400200443000000400100003900000024001004430000005d0100004100000000020004140000005d0320009c0000000002018019000000c00120021000000064011001c700008005020000390170016b0000040f0000000102200190000000a20000613d000000000101043b0000005f0110019700000001020000290000000203000029017000a70000040f0000000001000019000001710001042e0000000002000416000000000202004b0000008f0000c13d000000ff023000390000005e02200197000000400020043f0000001f0230018f0000000504300272000000780000613d00000000050000190000000506500210000000000761034f000000000707043b000000e00660003900000000007604350000000105500039000000000645004b000000700000413d000000000502004b000000870000613d0000000504400210000000000141034f0000000302200210000000e004400039000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f0000000000140435000000400130008c0000008f0000413d000000e00100043d0000005f0210009c0000008f0000213d000001000200043d0000005f0320009c000000910000a13d000000000100001900000172000104300000000003000411000000800030043f000000a00010043f000000c00020043f0000014000000443000001600030044300000020030000390000018000300443000001a0001004430000004001000039000001c000100443000001e0002004430000010000300443000000030100003900000120001004430000006001000041000001710001042e000000000001042f0000006501000041000000800010043f000000660100004100000172000104300003000000000002000000400400043d000000440540003900000000003504350000002003400039000000670500004100000000005304350000005f022001970000002405400039000000000025043500000044020000390000000000240435000000680240009c000001380000813d0000008002400039000000400020043f000000000404043300000000020004140000005f08100197000000040180008c000000bf0000c13d00000001020000390000000001000031000000d40000013d0000005d010000410000005d0530009c000000000301801900000040033002100000005d0540009c00000000040180190000006004400210000000000334019f0000005d0420009c0000000002018019000000c001200210000000000113019f0000000002080019000300000008001d017001660000040f0000000308000029000000010220018f000100000001035500000060011002700000005d0010019d0000005d01100197000000600a0000390000008009000039000000000301004b000001040000613d0000001f03100039000000200400008a000000000343016f0000003f03300039000000000343016f000000400a00043d00000000033a00190000000004a3004b00000000040000190000000104004039000000690530009c000001380000213d0000000104400190000001380000c13d000000400030043f0000001f0310018f00000000091a043600000001040003670000000501100272000000f50000613d000000000500001900000005065002100000000007690019000000000664034f000000000606043b00000000006704350000000105500039000000000615004b000000ed0000413d000000000503004b000001040000613d0000000501100210000000000414034f00000000011900190000000303300210000000000501043300000000053501cf000000000535022f000000000404043b0000010003300089000000000434022f00000000033401cf000000000353019f000000000031043500000000010a0433000000000202004b0000013e0000613d000000000201004b000001220000c13d00020000000a001d000100000009001d0000006a010000410000000000100439000300000008001d00000004008004430000005d0100004100000000020004140000005d0320009c0000000002018019000000c0012002100000006b011001c700008002020000390170016b0000040f0000000102200190000001580000613d000000000101043b000000000101004b0000000201000029000001590000613d0000000001010433000000000201004b00000003080000290000000109000029000001350000613d0000006c02000041000000200310008c000000000300001900000000030240190000006c01100197000000000401004b000000000200a0190000006c0110009c000000000203c019000000000102004b000001360000c13d0000000001090433000000000201004b0000000002000019000000010200c039000000000221004b000001360000c13d000000000101004b000001490000613d000000000001042d00000000010000190000017200010430000000720100004100000000001004350000004101000039000000040010043f0000006e010000410000017200010430000000000201004b0000014f0000c13d000000400100043d000000700200004100000000002104350000005d020000410000005d0310009c0000000001028019000000400110021000000071011001c70000017200010430000000400100043d0000006d020000410000000000210435000000040210003900000000008204350000015f0000013d0000005d020000410000005d0310009c00000000010280190000005d0390009c000000000902801900000040029002100000006001100210000000000121019f0000017200010430000000000001042f000000400100043d0000006f0200004100000000002104350000000402100039000000030300002900000000003204350000005d020000410000005d0310009c000000000102801900000040011002100000006e011001c70000017200010430000000000001042f00000169002104210000000102000039000000000001042d0000000002000019000000000001042d0000016e002104230000000102000039000000000001042d0000000002000019000000000001042d0000017000000432000001710001042e0000017200010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000200000000000000000000000000000100000001000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000533cf5ce00000000000000000000000000000000000000000000000000000000310ab089e4439a4c15d089f94afb7896ff553aecb10793d0ab882de59d99a32e02000002000000000000000000000000000000440000000000000000000000006f61f641000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000800000000000000000a9059cbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffff80000000000000000000000000000000000000000000000000ffffffffffffffff1806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b83020000020000000000000000000000000000002400000000000000000000000080000000000000000000000000000000000000000000000000000000000000005274afe70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000009996b315000000000000000000000000000000000000000000000000000000001425ea420000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000778a1320c80c4d0ec4f3253d12ae9691c835078c1e788d25fd0a3d98aa88b60d"},"methodIdentifiers":{"claimFeesFor(address,uint256,uint256)":"533cf5ce"}},"irOptimized":"/// @use-src 22:\"contracts/PoolFees.sol\"\nobject \"PoolFees_6496\" {\n    code {\n        {\n            /// @src 22:387:1240  \"contract PoolFees {...\"\n            let _1 := memoryguard(0xe0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"PoolFees_6496\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:387:1240  \"contract PoolFees {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:387:1240  \"contract PoolFees {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 22:387:1240  \"contract PoolFees {...\"\n            let value0 := abi_decode_address_fromMemory(_1)\n            let value1 := abi_decode_address_fromMemory(add(_1, 32))\n            /// @src 22:801:818  \"pool = msg.sender\"\n            mstore(128, /** @src 22:808:818  \"msg.sender\" */ caller())\n            /// @src 22:828:844  \"token0 = _token0\"\n            mstore(160, value0)\n            /// @src 22:854:870  \"token1 = _token1\"\n            mstore(192, value1)\n            /// @src 22:387:1240  \"contract PoolFees {...\"\n            let _2 := mload(64)\n            let _3 := datasize(\"PoolFees_6496_deployed\")\n            codecopy(_2, dataoffset(\"PoolFees_6496_deployed\"), _3)\n            setimmutable(_2, \"6425\", mload(/** @src 22:801:818  \"pool = msg.sender\" */ 128))\n            /// @src 22:387:1240  \"contract PoolFees {...\"\n            setimmutable(_2, \"6427\", mload(/** @src 22:828:844  \"token0 = _token0\" */ 160))\n            /// @src 22:387:1240  \"contract PoolFees {...\"\n            setimmutable(_2, \"6429\", mload(/** @src 22:854:870  \"token1 = _token1\" */ 192))\n            /// @src 22:387:1240  \"contract PoolFees {...\"\n            return(_2, _3)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 8:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\", 9:\"@openzeppelin/contracts/utils/Address.sol\", 22:\"contracts/PoolFees.sol\"\n    object \"PoolFees_6496_deployed\" {\n        code {\n            {\n                /// @src 22:387:1240  \"contract PoolFees {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    if eq(0x533cf5ce, shr(224, calldataload(_2)))\n                    {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_2, _2) }\n                        let value := calldataload(4)\n                        let _3 := sub(shl(160, 1), 1)\n                        if iszero(eq(value, and(value, _3))) { revert(_2, _2) }\n                        let value_1 := calldataload(36)\n                        let value_2 := calldataload(68)\n                        /// @src 22:1037:1077  \"if (msg.sender != pool) revert NotPool()\"\n                        if /** @src 22:1041:1059  \"msg.sender != pool\" */ iszero(eq(/** @src 22:1041:1051  \"msg.sender\" */ caller(), /** @src 22:387:1240  \"contract PoolFees {...\" */ and(/** @src 22:1055:1059  \"pool\" */ loadimmutable(\"6425\"), /** @src 22:387:1240  \"contract PoolFees {...\" */ _3)))\n                        /// @src 22:1037:1077  \"if (msg.sender != pool) revert NotPool()\"\n                        {\n                            /// @src 22:1068:1077  \"NotPool()\"\n                            mstore(_1, shl(224, 0x6f61f641))\n                            revert(_1, /** @src 22:387:1240  \"contract PoolFees {...\" */ 4)\n                        }\n                        /// @src 22:1087:1154  \"if (_amount0 > 0) IERC20(token0).safeTransfer(_recipient, _amount0)\"\n                        if /** @src 22:1091:1103  \"_amount0 > 0\" */ iszero(iszero(value_1))\n                        /// @src 22:1087:1154  \"if (_amount0 > 0) IERC20(token0).safeTransfer(_recipient, _amount0)\"\n                        {\n                            /// @src 22:1145:1153  \"_amount0\"\n                            fun_safeTransfer(/** @src 22:387:1240  \"contract PoolFees {...\" */ and(/** @src 22:1112:1118  \"token0\" */ loadimmutable(\"6427\"), /** @src 22:387:1240  \"contract PoolFees {...\" */ _3), /** @src 22:1145:1153  \"_amount0\" */ value, value_1)\n                        }\n                        /// @src 22:1164:1231  \"if (_amount1 > 0) IERC20(token1).safeTransfer(_recipient, _amount1)\"\n                        if /** @src 22:1168:1180  \"_amount1 > 0\" */ iszero(iszero(value_2))\n                        /// @src 22:1164:1231  \"if (_amount1 > 0) IERC20(token1).safeTransfer(_recipient, _amount1)\"\n                        {\n                            /// @src 22:1222:1230  \"_amount1\"\n                            fun_safeTransfer(/** @src 22:387:1240  \"contract PoolFees {...\" */ and(/** @src 22:1189:1195  \"token1\" */ loadimmutable(\"6429\"), /** @src 22:387:1240  \"contract PoolFees {...\" */ _3), /** @src 22:1222:1230  \"_amount1\" */ value, value_2)\n                        }\n                        /// @src 22:387:1240  \"contract PoolFees {...\"\n                        return(_2, _2)\n                    }\n                }\n                revert(0, 0)\n            }\n            /// @ast-id 1105 @src 8:1303:1463  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n            function fun_safeTransfer(var_token_address, var_to, var_value)\n            {\n                /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                let expr_mpos := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(64)\n                /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                let _1 := add(expr_mpos, 0x20)\n                mstore(_1, /** @src 22:387:1240  \"contract PoolFees {...\" */ shl(224, 0xa9059cbb))\n                let _2 := sub(shl(160, 1), 1)\n                mstore(/** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ add(expr_mpos, 36), /** @src 22:387:1240  \"contract PoolFees {...\" */ and(var_to, _2))\n                mstore(add(/** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_mpos, /** @src 22:387:1240  \"contract PoolFees {...\" */ 68), var_value)\n                /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                mstore(expr_mpos, /** @src 22:387:1240  \"contract PoolFees {...\" */ 68)\n                let newFreePtr := add(expr_mpos, 128)\n                let _3 := 0xffffffffffffffff\n                if or(gt(newFreePtr, _3), lt(newFreePtr, expr_mpos))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                }\n                /// @src 22:387:1240  \"contract PoolFees {...\"\n                mstore(64, newFreePtr)\n                let _4 := and(/** @src 8:4504:4518  \"address(token)\" */ var_token_address, /** @src 22:387:1240  \"contract PoolFees {...\" */ _2)\n                /// @src -1:-1:-1\n                let _5 := 0\n                /// @src 9:3462:3493  \"target.call{value: value}(data)\"\n                let expr_component := call(gas(), _4, /** @src -1:-1:-1 */ _5, /** @src 9:3462:3493  \"target.call{value: value}(data)\" */ _1, mload(expr_mpos), /** @src -1:-1:-1 */ _5, _5)\n                /// @src 9:3462:3493  \"target.call{value: value}(data)\"\n                let data := /** @src -1:-1:-1 */ _5\n                /// @src 22:387:1240  \"contract PoolFees {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _6 := returndatasize()\n                    if gt(_6, _3)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 22:387:1240  \"contract PoolFees {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                    }\n                    let _7 := not(31)\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    let memPtr := mload(64)\n                    let newFreePtr_1 := add(memPtr, and(add(and(add(_6, 31), /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ _7), /** @src 22:387:1240  \"contract PoolFees {...\" */ 63), /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ _7))\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 22:387:1240  \"contract PoolFees {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                    }\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    mstore(64, newFreePtr_1)\n                    mstore(memPtr, _6)\n                    data := memPtr\n                    returndatacopy(add(memPtr, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src -1:-1:-1 */ _5, /** @src 22:387:1240  \"contract PoolFees {...\" */ returndatasize())\n                }\n                /// @src 9:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                let var_mpos := /** @src 9:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_4, expr_component, /** @src 9:3462:3493  \"target.call{value: value}(data)\" */ data)\n                /// @src 8:4551:4568  \"returndata.length\"\n                let expr := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(/** @src 8:4551:4568  \"returndata.length\" */ var_mpos)\n                /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                let expr_1 := /** @src 8:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                if expr_1\n                {\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    if slt(sub(/** @src 8:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr), var_mpos), /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20)\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    {\n                        revert(/** @src -1:-1:-1 */ _5, _5)\n                    }\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    let value := mload(/** @src 8:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20))\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    let _8 := iszero(value)\n                    if iszero(eq(value, iszero(_8)))\n                    {\n                        revert(/** @src -1:-1:-1 */ _5, _5)\n                    }\n                    /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                    expr_1 := _8\n                }\n                /// @src 8:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                if expr_1\n                {\n                    /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                    let _9 := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(64)\n                    /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                    mstore(_9, shl(224, 0x5274afe7))\n                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                    mstore(/** @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_9, 4), /** @src 22:387:1240  \"contract PoolFees {...\" */ _4)\n                    /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                    revert(_9, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                }\n            }\n            /// @ast-id 1557 @src 9:4625:5207  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n            {\n                /// @src 9:4793:5201  \"if (!success) {...\"\n                switch /** @src 9:4797:4805  \"!success\" */ iszero(var_success)\n                case /** @src 9:4793:5201  \"if (!success) {...\" */ 0 {\n                    /// @src 9:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                    let expr := /** @src 9:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 22:387:1240  \"contract PoolFees {...\" */ mload(/** @src 9:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 9:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                    if expr\n                    {\n                        expr := /** @src 9:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 9:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                    }\n                    /// @src 9:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                    if expr\n                    {\n                        /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                        let _1 := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(64)\n                        /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                        mstore(_1, shl(224, 0x9996b315))\n                        /// @src 22:387:1240  \"contract PoolFees {...\"\n                        mstore(/** @src 9:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 22:387:1240  \"contract PoolFees {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                        /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                        revert(_1, /** @src 22:387:1240  \"contract PoolFees {...\" */ 36)\n                    }\n                    /// @src 9:5173:5190  \"return returndata\"\n                    var_mpos := var_returndata_mpos\n                    leave\n                }\n                default /// @src 9:4793:5201  \"if (!success) {...\"\n                {\n                    /// @src 9:5870:6253  \"if (returndata.length > 0) {...\"\n                    switch /** @src 9:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 22:387:1240  \"contract PoolFees {...\" */ mload(/** @src 9:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 9:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 9:6225:6242  \"FailedInnerCall()\"\n                        let _2 := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(64)\n                        /// @src 9:6225:6242  \"FailedInnerCall()\"\n                        mstore(_2, shl(225, 0x0a12f521))\n                        revert(_2, 4)\n                    }\n                    default /// @src 9:5870:6253  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 9:6046:6188  \"assembly {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212206ecbdc6aff314b5389e0835989ddc065b67f6240a8881d9aa13bd34b5120580564736f6c63430008140033\"\n    }\n}\n","hash":"01000075be6f4a5e52cbdc6debc4c532ad1bcd606251fa8851979631e21f76d1","factoryDependencies":{}}},"contracts/factories/PoolFactory.sol":{"PoolFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_implementation","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"FeeInvalid","type":"error"},{"inputs":[],"name":"FeeTooHigh","type":"error"},{"inputs":[],"name":"InvalidPool","type":"error"},{"inputs":[],"name":"NotFeeManager","type":"error"},{"inputs":[],"name":"NotPauser","type":"error"},{"inputs":[],"name":"NotVoter","type":"error"},{"inputs":[],"name":"PoolAlreadyExists","type":"error"},{"inputs":[],"name":"SameAddress","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"inputs":[],"name":"ZeroFee","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"bool","name":"stable","type":"bool"},{"indexed":false,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenA","type":"address"},{"indexed":true,"internalType":"address","name":"tokenB","type":"address"},{"indexed":true,"internalType":"bool","name":"stable","type":"bool"}],"name":"PoolStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"SetCustomFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"feeManager","type":"address"}],"name":"SetFeeManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"state","type":"bool"}],"name":"SetPauseState","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"pauser","type":"address"}],"name":"SetPauser","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"voter","type":"address"}],"name":"SetVoter","type":"event"},{"inputs":[],"name":"MAX_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ZERO_FEE_INDICATOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allPoolsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"customFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"bool","name":"_stable","type":"bool"}],"name":"getFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pauser","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint256","name":"fee","type":"uint256"}],"name":"setCustomFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_stable","type":"bool"},{"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"setFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeManager","type":"address"}],"name":"setFeeManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_state","type":"bool"}],"name":"setPauseState","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_pauser","type":"address"}],"name":"setPauser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_voter","type":"address"}],"name":"setVoter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stableFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"volatileFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"voter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FeeInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFeeManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVoter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroFee\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"name\":\"PoolStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetCustomFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeManager\",\"type\":\"address\"}],\"name\":\"SetFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"SetPauseState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"}],\"name\":\"SetPauser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"SetVoter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_FEE_INDICATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPoolsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_stable\",\"type\":\"bool\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setCustomFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"}],\"name\":\"setFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setPauseState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pauser\",\"type\":\"address\"}],\"name\":\"setPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"setVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"volatileFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createPool(address,address,bool)\":{\"details\":\"token order does not matter\",\"params\":{\"stable\":\".\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"createPool(address,address,uint24)\":{\"details\":\"fee is converted to stable booleantoken order does not matter\",\"params\":{\"fee\":\"1 if stable, 0 if volatile, else revert\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"getPool(address,address,bool)\":{\"params\":{\"stable\":\"True if stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"getPool(address,address,uint24)\":{\"details\":\"fee is converted to stable boolean.\",\"params\":{\"fee\":\"1 if stable, 0 if volatile, else returns address(0)\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"isPool(address)\":{\"params\":{\"\":\".\"}},\"setCustomFee(address,uint256)\":{\"details\":\"A custom fee of zero means the default fee will be used.\"},\"setFee(bool,uint256)\":{\"details\":\"Throws if higher than maximum fee.      Throws if fee is zero.\",\"params\":{\"_fee\":\".\",\"_stable\":\"Stable or volatile pool.\"}},\"setVoter(address)\":{\"details\":\"Only called once to set to Voter.sol - Voter does not have a function      to call this contract method, so once set it's immutable.      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol\",\"params\":{\"_voter\":\".\"}}},\"stateVariables\":{\"voter\":{\"details\":\"used to change the name/symbol of the pool by calling emergencyCouncil\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allPoolsLength()\":{\"notice\":\"returns the number of pools created from this factory\"},\"createPool(address,address,bool)\":{\"notice\":\"Create a pool given two tokens and if they're stable/volatile\"},\"createPool(address,address,uint24)\":{\"notice\":\"Support for v3-style pools which wraps around createPool(tokena,tokenB,stable)\"},\"getFee(address,bool)\":{\"notice\":\"Returns fee for a pool, as custom fees are possible.\"},\"getPool(address,address,bool)\":{\"notice\":\"Return address of pool created by this factory\"},\"getPool(address,address,uint24)\":{\"notice\":\"Support for v3-style pools which wraps around getPool(tokenA,tokenB,stable)\"},\"isPool(address)\":{\"notice\":\"Is a valid pool created by this factory.\"},\"setCustomFee(address,uint256)\":{\"notice\":\"Set overriding fee for a pool from the default\"},\"setFee(bool,uint256)\":{\"notice\":\"Set default fee for stable and volatile pools.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/factories/PoolFactory.sol\":\"PoolFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xd18408af8a91bedb3d56343eeb9b30eb852e6dea93a5e2d5c6db9ca4cb905155\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://061475b7302a732dc598907790f407417551c2b13e89daa57b3698489ef5484b\",\"dweb:/ipfs/QmdX5qmk3VSniSErFuD4aVawQxUi2MuUbP7spPcHddPfcX\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Pool.sol\":{\"keccak256\":\"0x79252064840dbbf21ac090f85dfd8c109781f1916fc41294583716ceae91a854\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eef501482ecc96c062b71200ddee6c0f25b21bbca69be79b5f4438ec81317b69\",\"dweb:/ipfs/QmVEAE7gpM1tgmN4VQ9V9zDXvJpEncJhha4N3zaqJzSLXL\"]},\"contracts/PoolFees.sol\":{\"keccak256\":\"0xb6bc4b754345cc6343e2600134733095f3ef52da3004e127fee2b572fe13d89c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fa0853c12ebbf047dace7fe84a0b69e0499a33c96822c907a3e2e029aea30dad\",\"dweb:/ipfs/Qmbmwo1Nb2A3kB4Qv7N26kpkJ6VMCo4ew8tmzKpNFJ63UB\"]},\"contracts/factories/PoolFactory.sol\":{\"keccak256\":\"0x189c31ada0a47833f904c63a227d9faaafa3a1b43d4841b4ae0895d196a96008\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://61cd9c315af3b86884d4898bbe7490e6b9d95f41b5194f103c7d0b1a25ca00cb\",\"dweb:/ipfs/QmRz6rgkvLSUvQsT4RTFHmi57kBs45yfWt28nBdLGzgzMC\"]},\"contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x8d099692dcb8e82df0b0921c8af8aab339050b177dc19806e58f7cc5bb181ccd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60a2085df66cee4a8c2f4b3c26b54c2734e40ddaefa51208bd5b5f052d4701dd\",\"dweb:/ipfs/Qmeo6yFpUgz54Karohx3DCZwuvXkb7RXg7a5NGgiaZnvL1\"]},\"contracts/interfaces/IPoolCallee.sol\":{\"keccak256\":\"0xacfd7476bc6cff1b1ce9f584a051a3b4979371a37c70daa3c97921748cc15a46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6281b9677a2712a552ffae6485c935483463806dba2d92ea623681b3c1d65acb\",\"dweb:/ipfs/QmZScNqf5BgThhdunzEG9PXW67iSTjiF66RxmTeLfP6xMV\"]},\"contracts/interfaces/IVoter.sol\":{\"keccak256\":\"0x23eb6f7da0291d983ddf81d97673fd14b89793218e33a9c1b3180d0fc79ebc80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7b8998845c380241317fbc7b105d5d6fa8010dfb5a3e3c2983d2c796b0d0c29\",\"dweb:/ipfs/QmXa7D1PkAkJnYxK7mVXXqjjBi3BFcjPRPERxbMeeifqiS\"]},\"contracts/interfaces/factories/IPoolFactory.sol\":{\"keccak256\":\"0xb071c9e435d796bb22f7a5beb9960461126dead2f5890e84474993384f7c84c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://766c10c022a7ab9496475948061f3e3a6712c652f9dd0e1345a5c0b11ee899f1\",\"dweb:/ipfs/QmQeSHRcEcufdqFphciXaeD8LA9LPzUShqYL1sG2sB8cQ9\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.3.22"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"PoolFactory.sol:PoolFactory\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[5]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_7[0], r2, r5\n\tjump.gt\t@.BB0_27\n\tsub.s!\t@CPI0_23[0], r2, r5\n\tjump.gt\t@.BB0_20\n\tsub.s!\t@CPI0_31[0], r2, r5\n\tjump.gt\t@.BB0_17\n\tsub.s!\t@CPI0_35[0], r2, r5\n\tjump.eq\t@.BB0_42\n\tsub.s!\t@CPI0_36[0], r2, r4\n\tjump.eq\t@.BB0_58\n\tsub.s!\t@CPI0_37[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @abi_decode_bool, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tadd\tstack-[3], r0, r1\n\tadd\tstack-[2], r0, r2\n.BB0_129:\n\tnear_call\tr0, @fun_createPool, @DEFAULT_UNWIND\n\tjump\t@.BB0_130\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t191, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_175\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_175:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_7:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t160, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.le\t@.BB0_9\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_27:\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.gt\t@.BB0_35\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.gt\t@.BB0_32\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.eq\t@.BB0_112\n\tsub.s!\t@CPI0_21[0], r2, r4\n\tjump.eq\t@.BB0_114\n\tsub.s!\t@CPI0_22[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tshr.s\t8, r1, r1\n\tjump\t@.BB0_86\n.BB0_20:\n\tsub.s!\t@CPI0_24[0], r2, r4\n\tjump.gt\t@.BB0_24\n\tsub.s!\t@CPI0_28[0], r2, r4\n\tjump.eq\t@.BB0_83\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_87\n\tsub.s!\t@CPI0_30[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t4, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_2[0], r3, r4\n\tcontext.caller\tr5\n\tsub!\tr5, r4, r4\n\tjump.ne\t@.BB0_100\n\tand\t@CPI0_3[0], r3, r3\n\tor\tr3, r1, r3\n\tsstore\tr2, r3\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_54[0], r0, r4\n\tjump\t@.BB0_94\n.BB0_9:\n\tst.1\t128, r1\n\tadd\t4, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_3[0], r3, r3\n\tcontext.caller\tr4\n\tor\tr3, r4, r3\n\tsstore\tr2, r3\n\tadd\t3, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_3[0], r3, r3\n\tor\tr3, r4, r3\n\tsload\tr0, r5\n\tsstore\tr2, r3\n\tshl.s\t8, r4, r2\n\tand\t@CPI0_4[0], r2, r2\n\tand\t@CPI0_5[0], r5, r3\n\tor\tr3, r2, r2\n\tsstore\tr0, r2\n\tadd\t5, r0, r2\n\tadd\t1, r0, r3\n\tsstore\tr3, r2\n\tadd\t30, r0, r2\n\tadd\t2, r0, r4\n\tsstore\tr4, r2\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r3\n\tadd\t@CPI0_6[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_35:\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.gt\t@.BB0_39\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.eq\t@.BB0_137\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.eq\t@.BB0_146\n\tsub.s!\t@CPI0_15[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r1\n\tjump\t@.BB0_85\n.BB0_17:\n\tsub.s!\t@CPI0_32[0], r2, r4\n\tjump.eq\t@.BB0_73\n\tsub.s!\t@CPI0_33[0], r2, r4\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_34[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t6, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.ge\t@.BB0_2\n\tnear_call\tr0, @storage_array_index_access_address_dyn, @DEFAULT_UNWIND\n\tshl.s\t3, r2, r2\n\tsload\tr1, r1\n\tshr\tr1, r2, r1\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t255, r2, r2\n\tadd.gt\tr0, r0, r1\n\tjump\t@.BB0_131\n.BB0_32:\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.eq\t@.BB0_121\n\tsub.s!\t@CPI0_18[0], r2, r1\n\tjump.eq\t@.BB0_132\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t300, r0, r1\n\tjump\t@.BB0_75\n.BB0_24:\n\tsub.s!\t@CPI0_25[0], r2, r4\n\tjump.eq\t@.BB0_102\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.eq\t@.BB0_106\n\tsub.s!\t@CPI0_27[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tjump\t@.BB0_134\n.BB0_39:\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.eq\t@.BB0_153\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_165\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t6, r0, r1\n\tjump\t@.BB0_78\n.BB0_42:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[3]\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t@CPI0_50[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t2, r1, r1\n\tadd\tr0, r0, r1\n\tjump.ge\t@.BB0_48\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tsub.s!\t1, r3, r3\n\tjump.ne\t@.BB0_51\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r0, r2\n\tst.1\t0, r2\n\tjump\t@.BB0_54\n.BB0_58:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r2\n\tshr.s\t8, r2, r3\n\tand\t@CPI0_2[0], r3, r3\n\tcontext.caller\tr4\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB0_62\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_65\n\tand\t@CPI0_58[0], r2, r2\n\tshl.s\t8, r1, r3\n\tand\t@CPI0_4[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr0, r2\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_59[0], r0, r4\n\tjump\t@.BB0_94\n.BB0_112:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[5]\n\tadd\t0, r0, stack-[4]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t5, r4, r4\n\tmul\t32, r4, r4, r0\n\tadd\t@CPI0_52[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tjump\t@.BB0_86\n.BB0_114:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @abi_decode_bool, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tadd\t5, r0, r2\n\tst.1\t32, r2\n\tadd\tr1, r0, stack-[1]\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[3], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsub!\tstack-[1], r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[3], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n.BB0_130:\n\tand\t@CPI0_2[0], r1, r1\n.BB0_131:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_49[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n.BB0_85:\n\tsload\tr1, r1\n.BB0_86:\n\tand\t@CPI0_2[0], r1, r1\n\tjump\t@.BB0_75\n.BB0_87:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t3, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_2[0], r3, r4\n\tcontext.caller\tr5\n\tsub!\tr5, r4, r4\n\tjump.ne\t@.BB0_91\n\tsub!\tr1, r0, r4\n\tjump.ne\t@.BB0_93\n.BB0_65:\n\tadd\t@CPI0_60[0], r0, r1\n\tjump\t@.BB0_63\n.BB0_137:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub!\tr3, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr3, r0, stack-[3]\n\tsub!\tr3, r1, r1\n\tjump.ne\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_145\n\tsub.s!\t420, r1, r2\n\tadd\tr0, r0, r2\n\tadd.ne\tr1, r0, r2\n\tjump\t@.BB0_144\n.BB0_146:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tshr.s\t8, r2, r3\n\tand\t@CPI0_2[0], r3, r3\n\tcontext.caller\tr4\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB0_62\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\tr2, r1, r2\n\tsstore\tr0, r2\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_48[0], r0, r4\n\tjump\t@.BB0_94\n.BB0_73:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t420, r0, r1\n\tjump\t@.BB0_75\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tjump\t@.BB0_78\n.BB0_121:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_2[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_50[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tsub.s!\t2, r1, r3\n\tjump.lt\t@.BB0_128\n\tadd\t@CPI0_51[0], r0, r1\n\tjump\t@.BB0_63\n.BB0_132:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n.BB0_134:\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_75\n.BB0_102:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_78\n.BB0_106:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n.BB0_78:\n\tsload\tr1, r1\n.BB0_75:\n\tst.1\t128, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_153:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tadd\t3, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_91\n\tsub.s!\t301, r3, r1\n\tjump.lt\t@.BB0_160\n\tsub.s!\t420, r3, r1\n\tjump.ne\t@.BB0_159\n.BB0_160:\n\tadd\tr3, r0, stack-[2]\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_163\n\tld.1\t64, r1\n\tadd\t@CPI0_45[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_165:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\t3, r0, r3\n\tsload\tr3, r3\n\tand\t@CPI0_2[0], r3, r3\n\tcontext.caller\tr4\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB0_91\n\tsub.s!\t300, r1, r3\n\tjump.le\t@.BB0_170\n.BB0_159:\n\tadd\t@CPI0_41[0], r0, r1\n\tjump\t@.BB0_63\n.BB0_91:\n\tadd\t@CPI0_55[0], r0, r1\n\tjump\t@.BB0_63\n.BB0_62:\n\tadd\t@CPI0_57[0], r0, r1\n\tjump\t@.BB0_63\n.BB0_100:\n\tadd\t@CPI0_53[0], r0, r1\n\tjump\t@.BB0_63\n.BB0_93:\n\tand\t@CPI0_3[0], r3, r3\n\tor\tr3, r1, r3\n\tsstore\tr2, r3\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_56[0], r0, r4\n.BB0_94:\n.BB0_95:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_67:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_170:\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_172\n\tadd\t@CPI0_39[0], r0, r1\n.BB0_63:\n\tst.1\t128, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_172:\n\tsub!\tr2, r0, r2\n\tadd.ne\t1, r0, r2\n\tadd.eq\t2, r0, r2\n\tsstore\tr2, r1\n\tjump\t@.BB0_67\n.BB0_128:\n\tsub.s!\t1, r1, r1\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\tadd\tr4, r0, r1\n\tjump\t@.BB0_129\n.BB0_145:\n\tsub!\tstack-[3], r0, r1\n\tadd\t1, r0, r1\n\tadd.eq\t2, r0, r1\n\tsload\tr1, r2\n.BB0_144:\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_51:\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t0, r0\n.BB0_54:\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n.BB0_48:\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI0_49[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_163:\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_43[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_44[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tjump\t@.BB0_95\n.func_end0:\n\nabi_decode_bool:\n.func_begin1:\n\tadd\t68, r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB1_1\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nstorage_array_index_access_address_dyn:\n.func_begin2:\n\tadd\t6, r0, r2\n\tsload\tr2, r3\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB2_1\n\tst.1\t0, r2\n\tadd\t@CPI2_2[0], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB2_1:\n\tadd\t@CPI2_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_createPool:\n.func_begin3:\n\tnop\tstack+=[7]\n\tadd\tr1, r0, r5\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI3_0[0], r0, r1\n\tcontext.gas_left\tr6\n\tsub.s!\t@CPI3_0[0], r6, r4\n\tadd.ge\tr1, r0, r6\n\tshl.s\t192, r6, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\tr5, r0, stack-[7]\n\tand\t@CPI3_2[0], r5, r5\n\tadd\tr2, r0, stack-[2]\n\tand\t@CPI3_2[0], r2, r6\n\tadd\tr3, r0, stack-[1]\n\tsub!\tr3, r0, r2\n\tadd\t0, r0, r7\n\tadd.ne\t1, r0, r7\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_3[0], r0, r4\n\tadd\tr5, r0, stack-[5]\n\tadd\tr6, r0, stack-[4]\n\tadd\tr7, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[4], r0, r3\n\tsub!\tr2, r3, r1\n\tjump.eq\t@.BB3_3\n\tsub!\tr2, r3, r1\n\tadd\tstack-[2], r0, r3\n\tadd\tstack-[7], r0, r2\n\tadd.lt\tr3, r0, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr3, r0, r1\n\tadd.lt\tstack-[7], r0, r1\n\tadd\tr1, r0, stack-[7]\n\tand!\t@CPI3_2[0], r1, r1\n\tjump.eq\t@.BB3_5\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI3_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tand\t@CPI3_2[0], r2, r2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\t@CPI3_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld.1\t64, r4\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI3_2[0], r1, r1\n\tjump.ne\t@.BB3_10\n\tadd\tstack-[7], r0, r1\n\tshl.s\t96, r1, r2\n\tadd\t32, r4, r1\n\tst.1\tr1, r2\n\tadd\tstack-[3], r0, r2\n\tshl.s\t96, r2, r2\n\tadd\t52, r4, r3\n\tst.1\tr3, r2\n\tadd\t@CPI3_7[0], r0, r2\n\tsub!\tstack-[1], r0, r3\n\tadd.eq\tr0, r0, r2\n\tadd\t72, r4, r3\n\tst.1\tr3, r2\n\tadd\t41, r0, r2\n\tst.1\tr4, r2\n\tsub.s!\t@CPI3_8[0], r4, r2\n\tjump.ge\t@.BB3_12\n\tadd\t96, r4, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t64, r2\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tr4, r0, stack-[7]\n\tld.1\tr4, r3\n\tsub.s!\t@CPI3_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tadd\tstack-[7], r0, r5\n\tsub.s!\t@CPI3_9[0], r5, r2\n\tadd\tstack-[3], r0, r6\n\tjump.gt\t@.BB3_12\n\tadd\t228, r5, r2\n\tsub!\tr2, r6, r2\n\tjump.lt\t@.BB3_12\n\tld\tr1, r1\n\tadd\t132, r5, r2\n\tadd\t@CPI3_10[0], r0, r3\n\tst.1\tr2, r3\n\tcontext.gas_left\tr2\n\tadd\t@CPI3_11[0], r0, r3\n\tst.1\tr6, r3\n\tadd\t164, r5, r3\n\tadd\t96, r0, r4\n\tst.1\tr3, r4\n\tadd\t100, r5, r3\n\tst.1\tr3, r1\n\tadd\t196, r5, r1\n\tst.1\tr1, r0\n\tadd\t@CPI3_0[0], r0, r1\n\tsub.s!\t@CPI3_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_0[0], r6, r3\n\tadd.ge\tr1, r0, r6\n\tshl.s\t64, r6, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_12[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_17\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB3_19\n\tadd\t@CPI3_13[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI3_2[0], r1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.2\t4, r1\n\tadd\t@CPI3_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI3_14[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_26\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB3_1\n\tld.1\t64, r4\n\tadd\t68, r4, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_15[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[7], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB3_35\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI3_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI3_16[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tadd\tr4, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_0[0], r3, stack[@returndatasize]\n\tand\t@CPI3_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_30\n.BB3_35:\n\tsub.s!\t@CPI3_17[0], r4, r1\n\tjump.gt\t@.BB3_12\n\tst.1\t64, r4\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\t@CPI3_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI3_18[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\t@CPI3_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI3_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\t@CPI3_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI3_18[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tsstore\tr1, r2\n\tadd\t6, r0, r3\n\tsload\tr3, r1\n\tsub.s!\t@CPI3_17[0], r1, r2\n\tjump.gt\t@.BB3_12\n\tadd\t1, r1, r2\n\tadd\tr3, r0, stack-[3]\n\tsstore\tr3, r2\n\tadd\t@CPI3_19[0], r1, r1\n\tsload\tr1, r2\n\tand\t@CPI3_18[0], r2, r2\n\tadd\tstack-[7], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tst.1\t0, r3\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tadd\t@CPI3_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI3_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_20[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[6], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_1\n\tadd\tstack-[7], r0, r1\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_12:\n\tadd\t@CPI3_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_3:\n\tadd\t@CPI3_24[0], r0, r1\n\tadd\tstack-[3], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI3_0[0], r0, r1\n\tsub.s!\t@CPI3_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI3_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_5:\n\tld.1\t64, r1\n\tadd\t@CPI3_23[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_10:\n\tadd\t@CPI3_5[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI3_0[0], r0, r1\n\tsub.s!\t@CPI3_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r1\n\tor\t@CPI3_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_17:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI3_0[0], r2, stack[@returndatasize]\n\tand\t@CPI3_0[0], r2, r2\n\tjump\t@.BB3_20\n.BB3_19:\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n.BB3_20:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB3_47\n\tadd\tr0, r0, r6\n.BB3_22:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_22\n.BB3_47:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_24\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB3_24:\n\tadd\t@CPI3_0[0], r0, r1\n\tsub.s!\t@CPI3_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI3_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_26:\n\trevert\n.BB3_30:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB3_46\n\tadd\tr0, r0, r6\n.BB3_32:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_32\n.BB3_46:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_34\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB3_34:\n\tadd\t@CPI3_0[0], r0, r1\n\tsub.s!\t@CPI3_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin4:\n\tadd\t@CPI5_0[0], r0, r3\n\tsub.s!\t@CPI5_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI5_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_2\n\tld\tr1, r1\n\tret\n.BB5_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__system_request:\n.func_begin5:\n\tadd\tr1, r0, r5\n\tst.2\t0, r2\n\tadd\t4, r0, r1\n.BB6_2:\n\tshr.s\t5, r4, r2\n\tadd\tstack[r2], r0, r2\n\tst.2.inc\tr1, r2, r1\n\tadd\t32, r4, r4\n\tsub!\tr1, r3, r2\n\tjump.lt\t@.BB6_2\n\tadd\t@CPI6_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI6_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_4\n\tld\tr1, r1\n\tret\n.BB6_4:\n\trevert\n.func_end5:\n\n__farcall:\n.func_begin6:\n.tmp0:\n\tfar_call\tr1, r2, @.BB7_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB7_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n__staticcall:\n.func_begin7:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB8_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB8_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end7:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI3_0:\nCPI5_0:\nCPI6_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\nCPI3_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\nCPI3_18:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_4:\n\t.cell 374144419156711147060143317175368453031918731001600\nCPI0_5:\n\t.cell -374144419156711147060143317175368453031918731001856\nCPI0_6:\n\t.cell 53919893334301279589334030174039261357415493651629346657050491355136\nCPI0_7:\n\t.cell 1549851162\nCPI0_8:\n\t.cell 3428233924\nCPI0_9:\n\t.cell 3566495399\nCPI0_10:\n\t.cell 3566495400\nCPI0_11:\n\t.cell 3791088452\nCPI0_12:\n\t.cell 4024323684\nCPI0_13:\n\t.cell 3428233925\nCPI0_14:\n\t.cell 3451423441\nCPI0_15:\n\t.cell 3506110979\nCPI0_16:\n\t.cell 2707886740\nCPI0_17:\n\t.cell 2707886741\nCPI0_18:\n\t.cell 2978463014\nCPI0_19:\n\t.cell 3154525722\nCPI0_20:\n\t.cell 1549851163\nCPI0_21:\n\t.cell 2042386389\nCPI0_22:\n\t.cell 2681229421\nCPI0_23:\n\t.cell 1187605163\nCPI0_24:\n\t.cell 1296145083\nCPI0_25:\n\t.cell 1296145084\nCPI0_26:\n\t.cell 1350888707\nCPI0_27:\n\t.cell 1528228791\nCPI0_28:\n\t.cell 1187605164\nCPI0_29:\n\t.cell 1194145209\nCPI0_30:\n\t.cell 1271047767\nCPI0_31:\n\t.cell 952458565\nCPI0_32:\n\t.cell 952458566\nCPI0_33:\n\t.cell 1086052213\nCPI0_34:\n\t.cell 1104273047\nCPI0_35:\n\t.cell 379121282\nCPI0_36:\n\t.cell 763932490\nCPI0_37:\n\t.cell 918525344\nCPI0_38:\n\t.cell 2535301202817642044428229017600\nCPI0_39:\n\t.cell -36602718636934889270861746621295332299389467896559685999726530528203669241856\nCPI0_40:\n\t.cell 316912652418240591808998408192\nCPI0_41:\n\t.cell -22929468960423726428128754942620401663918238871455606789327388961854055251968\nCPI0_42:\nCPI3_4:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_43:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_44:\n\t.cell -36965001856762469036167406660538381373512637124297286183225880810559065975957\nCPI0_45:\n\t.cell 14706884703588171538339156082324043166706264063812314560286575521455409201152\nCPI0_46:\nCPI3_6:\n\t.cell 316912650057057350374175801344\nCPI0_47:\n\t.cell 904625697166532776746648320380374280103671757735618109375904419490050342912\nCPI0_48:\n\t.cell 6089131685050758988787995170054920478911918083125566200254750820302183833878\nCPI0_49:\n\t.cell 2535301200456458802993406410752\nCPI0_50:\n\t.cell 16777215\nCPI0_51:\n\t.cell 37476351341172545675004284509133759334188510432354716799403951079544653348864\nCPI0_52:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_53:\n\t.cell -28263336261472331005850588360876735135543816339966076431715564095883718950912\nCPI0_54:\n\t.cell -25783471852076483233316550295898033134957294490406342095043375190239340653102\nCPI0_55:\n\t.cell -4603686235351283354423615760333685669011612266304790158015190961225107243008\nCPI0_56:\n\t.cell 42074094031009319893158315529946250323253719031525752414327279480677210790322\nCPI0_57:\n\t.cell 33102594116329869905245717968317339153181870171380485237957323983578004979712\nCPI0_58:\n\t.cell -374144419156711147060143317175368453031918731001601\nCPI0_59:\n\t.cell -14390999576613960677253039031466238659657797471812154284741584354767160247499\nCPI0_60:\nCPI3_23:\n\t.cell -17558682924088699101477222871240024206205228086470065467308170392777997156352\nCPI2_0:\nCPI3_21:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI2_1:\nCPI3_22:\n\t.cell 2852213850513516153367582212096\nCPI2_2:\nCPI3_19:\n\t.cell -4378011421452794913566920378714311891690811000051339835953921858539404653249\nCPI3_1:\nCPI5_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI3_3:\n\t.cell 53847101557753566250191015092638536432889939219295847633394766498570161131782\nCPI3_5:\n\t.cell 1387990419202196594721394465873458716333528075729180295328534116598353494016\nCPI3_7:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662656\nCPI3_8:\n\t.cell 18446744073709551520\nCPI3_9:\n\t.cell 18446744073709551387\nCPI3_10:\n\t.cell 452384442485945779990353431360776531419095321592730457342348943469908828038\nCPI3_11:\n\t.cell 27524297751018104354606870944915773909797785407991800839046391672766794276695\nCPI3_12:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI3_13:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI3_14:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI3_15:\n\t.cell -12333105613858091831467988657816707398086818262324470119864271648932749115392\nCPI3_16:\n\t.cell 7922816251426433759354395033600\nCPI3_17:\n\t.cell 18446744073709551615\nCPI3_20:\n\t.cell 14998492466590854471966537142680415370894668259159702708913930111333121196126\nCPI3_24:\n\t.cell 24632227540943573602708804676440849376218750063175717284601800169556105232384\nCPI6_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\n","bytecode":{"object":""},"methodIdentifiers":{"MAX_FEE()":"bc063e1a","ZERO_FEE_INDICATOR()":"38c55d46","allPools(uint256)":"41d1de97","allPoolsLength()":"efde4e64","createPool(address,address,bool)":"36bf95a0","createPool(address,address,uint24)":"a1671295","customFee(address)":"4d419abc","feeManager()":"d0fb0203","getFee(address,bool)":"cc56b2c5","getPool(address,address,bool)":"79bc57d5","getPool(address,address,uint24)":"1698ee82","implementation()":"5c60da1b","isPaused()":"b187bd26","isPool(address)":"5b16ebb7","pauser()":"9fd0506d","setCustomFee(address,uint256)":"d49466a8","setFee(bool,uint256)":"e1f76b44","setFeeManager(address)":"472d35b9","setPauseState(bool)":"cdb88ad1","setPauser(address)":"2d88af4a","setVoter(address)":"4bc2a657","stableFee()":"40bbd775","volatileFee()":"5084ed03","voter()":"46c96aac"}},"irOptimized":"/// @use-src 23:\"contracts/factories/PoolFactory.sol\", 27:\"contracts/interfaces/factories/IPoolFactory.sol\"\nobject \"PoolFactory_7079\" {\n    code {\n        {\n            /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n            let _1 := memoryguard(0xa0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"PoolFactory_7079\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n            let value := mload(_1)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 23:1358:1390  \"implementation = _implementation\"\n            mstore(128, value)\n            /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n            let _2 := not(sub(shl(160, 1), 1))\n            sstore(/** @src 23:1400:1418  \"voter = msg.sender\" */ 0x04, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ or(and(sload(/** @src 23:1400:1418  \"voter = msg.sender\" */ 0x04), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2), /** @src 23:1408:1418  \"msg.sender\" */ caller()))\n            /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n            let _3 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n            sstore(/** @src 23:1457:1480  \"feeManager = msg.sender\" */ 0x03, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ or(and(sload(/** @src 23:1457:1480  \"feeManager = msg.sender\" */ 0x03), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2), /** @src 23:1408:1418  \"msg.sender\" */ caller()))\n            /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ or(and(_3, not(sub(shl(168, 1), 1))), and(shl(8, /** @src 23:1408:1418  \"msg.sender\" */ caller()), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ sub(shl(168, 1), 256))))\n            sstore(1, /** @src 23:1528:1529  \"5\" */ 0x05)\n            /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n            sstore(/** @src 23:1548:1564  \"volatileFee = 30\" */ 0x02, /** @src 23:1562:1564  \"30\" */ 0x1e)\n            /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n            let _4 := mload(64)\n            let _5 := datasize(\"PoolFactory_7079_deployed\")\n            codecopy(_4, dataoffset(\"PoolFactory_7079_deployed\"), _5)\n            setimmutable(_4, \"6510\", mload(/** @src 23:1358:1390  \"implementation = _implementation\" */ 128))\n            /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n            return(_4, _5)\n        }\n    }\n    /// @use-src 23:\"contracts/factories/PoolFactory.sol\"\n    object \"PoolFactory_7079_deployed\" {\n        code {\n            {\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x1698ee82 {\n                        if callvalue() { revert(_3, _3) }\n                        let param, param_1, param_2 := abi_decode_addresst_addresst_uint24(calldatasize())\n                        /// @src 23:1864:1871  \"fee > 1\"\n                        let _4 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(/** @src 23:1864:1871  \"fee > 1\" */ param_2, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 0xffffff)\n                        /// @src 23:1864:1962  \"fee > 1 ? address(0) : fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false]\"\n                        let expr := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _3\n                        /// @src 23:1864:1962  \"fee > 1 ? address(0) : fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false]\"\n                        switch /** @src 23:1864:1871  \"fee > 1\" */ gt(_4, /** @src 23:1870:1871  \"1\" */ 0x01)\n                        case /** @src 23:1864:1962  \"fee > 1 ? address(0) : fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false]\" */ 0 {\n                            /// @src 23:1887:1962  \"fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false]\"\n                            let expr_1 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _3\n                            /// @src 23:1887:1962  \"fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false]\"\n                            switch /** @src 23:1887:1895  \"fee == 1\" */ eq(_4, /** @src 23:1870:1871  \"1\" */ 0x01)\n                            case /** @src 23:1887:1962  \"fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false]\" */ 0 {\n                                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                                let _5 := sub(shl(160, 1), 1)\n                                mstore(_3, and(param, _5))\n                                mstore(0x20, /** @src 23:1931:1939  \"_getPool\" */ 0x05)\n                                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                                let _6 := keccak256(_3, _1)\n                                mstore(_3, and(param_1, _5))\n                                mstore(0x20, _6)\n                                let dataSlot := keccak256(_3, _1)\n                                mstore(_3, _3)\n                                mstore(0x20, dataSlot)\n                                /// @src 23:1887:1962  \"fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false]\"\n                                expr_1 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(sload(keccak256(_3, _1)), _5)\n                            }\n                            default /// @src 23:1887:1962  \"fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false]\"\n                            {\n                                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                                let _7 := sub(shl(160, 1), 1)\n                                mstore(_3, and(param, _7))\n                                mstore(0x20, /** @src 23:1898:1906  \"_getPool\" */ 0x05)\n                                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                                let _8 := keccak256(_3, _1)\n                                mstore(_3, and(param_1, _7))\n                                mstore(0x20, _8)\n                                let dataSlot_1 := keccak256(_3, _1)\n                                mstore(_3, /** @src 23:1870:1871  \"1\" */ 0x01)\n                                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                                mstore(0x20, dataSlot_1)\n                                /// @src 23:1887:1962  \"fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false]\"\n                                expr_1 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(sload(keccak256(_3, _1)), _7)\n                            }\n                            /// @src 23:1864:1962  \"fee > 1 ? address(0) : fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false]\"\n                            expr := expr_1\n                        }\n                        default {\n                            expr := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _3\n                        }\n                        let memPos := mload(_1)\n                        mstore(memPos, and(expr, sub(shl(160, 1), 1)))\n                        return(memPos, 32)\n                    }\n                    case 0x2d88af4a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value0 := abi_decode_address_6374()\n                        let _9 := sload(_3)\n                        let _10 := sub(shl(160, 1), 1)\n                        /// @src 23:2550:2594  \"if (msg.sender != pauser) revert NotPauser()\"\n                        if /** @src 23:2554:2574  \"msg.sender != pauser\" */ iszero(eq(/** @src 23:2554:2564  \"msg.sender\" */ caller(), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(shr(8, _9), _10)))\n                        /// @src 23:2550:2594  \"if (msg.sender != pauser) revert NotPauser()\"\n                        {\n                            /// @src 23:2583:2594  \"NotPauser()\"\n                            let _11 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:2583:2594  \"NotPauser()\"\n                            mstore(_11, shl(224, 0x492f6781))\n                            revert(_11, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        let _12 := and(/** @src 23:2608:2629  \"_pauser == address(0)\" */ value0, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _10)\n                        /// @src 23:2604:2651  \"if (_pauser == address(0)) revert ZeroAddress()\"\n                        if /** @src 23:2608:2629  \"_pauser == address(0)\" */ iszero(/** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _12)\n                        /// @src 23:2604:2651  \"if (_pauser == address(0)) revert ZeroAddress()\"\n                        {\n                            /// @src 23:2638:2651  \"ZeroAddress()\"\n                            let _13 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:2638:2651  \"ZeroAddress()\"\n                            mstore(_13, shl(224, 0xd92e233d))\n                            revert(_13, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        sstore(_3, or(and(_9, not(sub(shl(168, 1), 256))), and(shl(8, /** @src 23:2608:2629  \"_pauser == address(0)\" */ value0), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ sub(shl(168, 1), 256))))\n                        /// @src 23:2692:2710  \"SetPauser(_pauser)\"\n                        let _14 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                        mstore(_14, _12)\n                        /// @src 23:2692:2710  \"SetPauser(_pauser)\"\n                        log1(_14, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 32, /** @src 23:2692:2710  \"SetPauser(_pauser)\" */ 0xe02efb9e8f0fc21546730ab32d594f62d586e1bbb15bb5045edd0b1878a77b35)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        return(_3, _3)\n                    }\n                    case 0x36bf95a0 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value0_1 := abi_decode_address_6374()\n                        let value1 := abi_decode_address()\n                        let ret := fun_createPool(value0_1, value1, abi_decode_bool())\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, and(ret, sub(shl(160, 1), 1)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x38c55d46 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, /** @src 23:734:737  \"420\" */ 0x01a4)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        return(memPos_2, 32)\n                    }\n                    case 0x40bbd775 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let _15 := sload(/** @src 23:433:457  \"uint256 public stableFee\" */ 1)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, _15)\n                        return(memPos_3, 32)\n                    }\n                    case 0x41d1de97 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value := calldataload(_2)\n                        /// @src 23:973:998  \"address[] public allPools\"\n                        if iszero(lt(value, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ sload(/** @src 23:973:998  \"address[] public allPools\" */ 6)))\n                        {\n                            revert(/** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _3, _3)\n                        }\n                        /// @src 23:973:998  \"address[] public allPools\"\n                        let slot, offset := storage_array_index_access_address_dyn(value)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        let _16 := sload(/** @src 23:973:998  \"address[] public allPools\" */ slot)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        let memPos_4 := mload(_1)\n                        mstore(memPos_4, and(shr(shl(3, offset), _16), sub(shl(160, 1), 1)))\n                        return(memPos_4, 32)\n                    }\n                    case 0x46c96aac {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_1 := and(sload(_2), sub(shl(160, 1), 1))\n                        let memPos_5 := mload(_1)\n                        mstore(memPos_5, value_1)\n                        return(memPos_5, 32)\n                    }\n                    case 0x472d35b9 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value0_2 := abi_decode_address_6374()\n                        let _17 := sload(/** @src 23:2979:2989  \"feeManager\" */ 0x03)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        let _18 := sub(shl(160, 1), 1)\n                        /// @src 23:2961:3013  \"if (msg.sender != feeManager) revert NotFeeManager()\"\n                        if /** @src 23:2965:2989  \"msg.sender != feeManager\" */ iszero(eq(/** @src 23:2965:2975  \"msg.sender\" */ caller(), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(_17, _18)))\n                        /// @src 23:2961:3013  \"if (msg.sender != feeManager) revert NotFeeManager()\"\n                        {\n                            /// @src 23:2998:3013  \"NotFeeManager()\"\n                            let _19 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:2998:3013  \"NotFeeManager()\"\n                            mstore(_19, shl(224, 0xf5d267eb))\n                            revert(_19, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        let _20 := and(/** @src 23:3027:3052  \"_feeManager == address(0)\" */ value0_2, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _18)\n                        /// @src 23:3023:3074  \"if (_feeManager == address(0)) revert ZeroAddress()\"\n                        if /** @src 23:3027:3052  \"_feeManager == address(0)\" */ iszero(/** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _20)\n                        /// @src 23:3023:3074  \"if (_feeManager == address(0)) revert ZeroAddress()\"\n                        {\n                            /// @src 23:3061:3074  \"ZeroAddress()\"\n                            let _21 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:3061:3074  \"ZeroAddress()\"\n                            mstore(_21, /** @src 23:2638:2651  \"ZeroAddress()\" */ shl(224, 0xd92e233d))\n                            /// @src 23:3061:3074  \"ZeroAddress()\"\n                            revert(_21, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        sstore(/** @src 23:2979:2989  \"feeManager\" */ 0x03, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ or(and(_17, shl(160, 0xffffffffffffffffffffffff)), _20))\n                        /// @src 23:3123:3149  \"SetFeeManager(_feeManager)\"\n                        let _22 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                        mstore(_22, _20)\n                        /// @src 23:3123:3149  \"SetFeeManager(_feeManager)\"\n                        log1(_22, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 32, /** @src 23:3123:3149  \"SetFeeManager(_feeManager)\" */ 0x5d0517e3a4eabea892d9750138cd21d4a6cf3b935b43d0598df7055f463819b2)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        return(_3, _3)\n                    }\n                    case 0x4bc2a657 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value0_3 := abi_decode_address_6374()\n                        let _23 := sload(_2)\n                        let _24 := sub(shl(160, 1), 1)\n                        /// @src 23:2385:2427  \"if (msg.sender != voter) revert NotVoter()\"\n                        if /** @src 23:2389:2408  \"msg.sender != voter\" */ iszero(eq(/** @src 23:2389:2399  \"msg.sender\" */ caller(), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(_23, _24)))\n                        /// @src 23:2385:2427  \"if (msg.sender != voter) revert NotVoter()\"\n                        {\n                            /// @src 23:2417:2427  \"NotVoter()\"\n                            let _25 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:2417:2427  \"NotVoter()\"\n                            mstore(_25, shl(224, 0xc18384c1))\n                            revert(_25, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        let _26 := and(value0_3, _24)\n                        sstore(_2, or(and(_23, shl(160, 0xffffffffffffffffffffffff)), _26))\n                        /// @src 23:2466:2482  \"SetVoter(_voter)\"\n                        let _27 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                        mstore(_27, _26)\n                        /// @src 23:2466:2482  \"SetVoter(_voter)\"\n                        log1(_27, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 32, /** @src 23:2466:2482  \"SetVoter(_voter)\" */ 0xc6ff127433b785c51da9ae4088ee184c909b1a55b9afd82ae6c64224d3bc15d2)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        return(_3, _3)\n                    }\n                    case 0x4d419abc {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address_6374(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 23:1148:1192  \"mapping(address => uint256) public customFee\" */ 8)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        let _28 := sload(keccak256(_3, _1))\n                        let memPos_6 := mload(_1)\n                        mstore(memPos_6, _28)\n                        return(memPos_6, 32)\n                    }\n                    case 0x5084ed03 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let _29 := sload(/** @src 23:463:489  \"uint256 public volatileFee\" */ 2)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        let memPos_7 := mload(_1)\n                        mstore(memPos_7, _29)\n                        return(memPos_7, 32)\n                    }\n                    case 0x5b16ebb7 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, and(abi_decode_address_6374(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 23:2273:2280  \"_isPool\" */ 0x07)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        let value_2 := and(sload(keccak256(_3, _1)), 0xff)\n                        let memPos_8 := mload(_1)\n                        mstore(memPos_8, iszero(iszero(value_2)))\n                        return(memPos_8, 32)\n                    }\n                    case 0x5c60da1b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos_9 := mload(_1)\n                        mstore(memPos_9, and(/** @src 23:333:372  \"address public immutable implementation\" */ loadimmutable(\"6510\"), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_9, 32)\n                    }\n                    case 0x79bc57d5 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value0_4 := abi_decode_address_6374()\n                        let value1_1 := abi_decode_address()\n                        let value2 := abi_decode_bool()\n                        let _30 := sub(shl(160, 1), 1)\n                        mstore(_3, and(value0_4, _30))\n                        mstore(32, /** @src 23:2119:2127  \"_getPool\" */ 0x05)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        let _31 := keccak256(_3, _1)\n                        mstore(_3, and(value1_1, _30))\n                        mstore(32, _31)\n                        let dataSlot_2 := keccak256(_3, _1)\n                        mstore(_3, iszero(iszero(value2)))\n                        mstore(32, dataSlot_2)\n                        let cleaned := and(sload(keccak256(_3, _1)), _30)\n                        let memPos_10 := mload(_1)\n                        mstore(memPos_10, cleaned)\n                        return(memPos_10, 32)\n                    }\n                    case 0x9fd0506d {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_3 := and(shr(8, sload(_3)), sub(shl(160, 1), 1))\n                        let memPos_11 := mload(_1)\n                        mstore(memPos_11, value_3)\n                        return(memPos_11, 32)\n                    }\n                    case 0xa1671295 {\n                        if callvalue() { revert(_3, _3) }\n                        let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint24(calldatasize())\n                        /// @src 23:4289:4296  \"fee > 1\"\n                        let _32 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(/** @src 23:4289:4296  \"fee > 1\" */ param_5, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 0xffffff)\n                        /// @src 23:4285:4317  \"if (fee > 1) revert FeeInvalid()\"\n                        if /** @src 23:4289:4296  \"fee > 1\" */ gt(_32, /** @src 23:4295:4296  \"1\" */ 0x01)\n                        /// @src 23:4285:4317  \"if (fee > 1) revert FeeInvalid()\"\n                        {\n                            /// @src 23:4305:4317  \"FeeInvalid()\"\n                            let _33 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:4305:4317  \"FeeInvalid()\"\n                            mstore(_33, shl(224, 0x52dadcf9))\n                            revert(_33, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        /// @src 23:4359:4400  \"return createPool(tokenA, tokenB, stable)\"\n                        let var_pool := /** @src 23:4366:4400  \"createPool(tokenA, tokenB, stable)\" */ fun_createPool(param_3, param_4, /** @src 23:4341:4349  \"fee == 1\" */ eq(_32, /** @src 23:4295:4296  \"1\" */ 0x01))\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        let memPos_12 := mload(_1)\n                        mstore(memPos_12, and(var_pool, sub(shl(160, 1), 1)))\n                        return(memPos_12, 32)\n                    }\n                    case 0xb187bd26 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_4 := and(sload(_3), 0xff)\n                        let memPos_13 := mload(_1)\n                        mstore(memPos_13, iszero(iszero(value_4)))\n                        return(memPos_13, 32)\n                    }\n                    case 0xbc063e1a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos_14 := mload(_1)\n                        mstore(memPos_14, /** @src 23:529:532  \"300\" */ 0x012c)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        return(memPos_14, 32)\n                    }\n                    case 0xcc56b2c5 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_5 := abi_decode_address_6374()\n                        let value_5 := calldataload(36)\n                        if iszero(eq(value_5, iszero(iszero(value_5)))) { revert(_3, _3) }\n                        mstore(_3, and(value0_5, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 23:4019:4028  \"customFee\" */ 0x08)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        let _34 := sload(keccak256(_3, _1))\n                        /// @src 23:4051:4133  \"fee == ZERO_FEE_INDICATOR ? 0 : fee != 0 ? fee : _stable ? stableFee : volatileFee\"\n                        let expr_2 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _3\n                        /// @src 23:4051:4133  \"fee == ZERO_FEE_INDICATOR ? 0 : fee != 0 ? fee : _stable ? stableFee : volatileFee\"\n                        switch /** @src 23:4051:4076  \"fee == ZERO_FEE_INDICATOR\" */ eq(_34, /** @src 23:734:737  \"420\" */ 0x01a4)\n                        case /** @src 23:4051:4133  \"fee == ZERO_FEE_INDICATOR ? 0 : fee != 0 ? fee : _stable ? stableFee : volatileFee\" */ 0 {\n                            /// @src 23:4083:4133  \"fee != 0 ? fee : _stable ? stableFee : volatileFee\"\n                            let expr_3 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _3\n                            /// @src 23:4083:4133  \"fee != 0 ? fee : _stable ? stableFee : volatileFee\"\n                            switch /** @src 23:4083:4091  \"fee != 0\" */ iszero(iszero(_34))\n                            case /** @src 23:4083:4133  \"fee != 0 ? fee : _stable ? stableFee : volatileFee\" */ 0 {\n                                /// @src 23:4100:4133  \"_stable ? stableFee : volatileFee\"\n                                let expr_4 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _3\n                                /// @src 23:4100:4133  \"_stable ? stableFee : volatileFee\"\n                                switch value_5\n                                case 0 {\n                                    expr_4 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ sload(/** @src 23:4122:4133  \"volatileFee\" */ 0x02)\n                                }\n                                default /// @src 23:4100:4133  \"_stable ? stableFee : volatileFee\"\n                                {\n                                    expr_4 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ sload(/** @src 23:4110:4119  \"stableFee\" */ 0x01)\n                                }\n                                /// @src 23:4083:4133  \"fee != 0 ? fee : _stable ? stableFee : volatileFee\"\n                                expr_3 := expr_4\n                            }\n                            default { expr_3 := _34 }\n                            /// @src 23:4051:4133  \"fee == ZERO_FEE_INDICATOR ? 0 : fee != 0 ? fee : _stable ? stableFee : volatileFee\"\n                            expr_2 := expr_3\n                        }\n                        default {\n                            expr_2 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _3\n                        }\n                        let memPos_15 := mload(_1)\n                        mstore(memPos_15, expr_2)\n                        return(memPos_15, 32)\n                    }\n                    case 0xcdb88ad1 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value0_6 := abi_decode_t_bool()\n                        let _35 := sload(_3)\n                        /// @src 23:2778:2822  \"if (msg.sender != pauser) revert NotPauser()\"\n                        if /** @src 23:2782:2802  \"msg.sender != pauser\" */ iszero(eq(/** @src 23:2782:2792  \"msg.sender\" */ caller(), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(shr(8, _35), sub(shl(160, 1), 1))))\n                        /// @src 23:2778:2822  \"if (msg.sender != pauser) revert NotPauser()\"\n                        {\n                            /// @src 23:2811:2822  \"NotPauser()\"\n                            let _36 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:2811:2822  \"NotPauser()\"\n                            mstore(_36, /** @src 23:2583:2594  \"NotPauser()\" */ shl(224, 0x492f6781))\n                            /// @src 23:2811:2822  \"NotPauser()\"\n                            revert(_36, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        let _37 := iszero(iszero(value0_6))\n                        sstore(_3, or(and(_35, not(255)), and(_37, 255)))\n                        /// @src 23:2864:2885  \"SetPauseState(_state)\"\n                        let _38 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                        mstore(_38, _37)\n                        /// @src 23:2864:2885  \"SetPauseState(_state)\"\n                        log1(_38, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 32, /** @src 23:2864:2885  \"SetPauseState(_state)\" */ 0x0d76538efc408318a051137c2720a9e82902acdbd46b802d488b74ca3a09a116)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        return(_3, _3)\n                    }\n                    case 0xd0fb0203 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_6 := and(sload(/** @src 23:743:768  \"address public feeManager\" */ 3), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ sub(shl(160, 1), 1))\n                        let memPos_16 := mload(_1)\n                        mstore(memPos_16, value_6)\n                        return(memPos_16, 32)\n                    }\n                    case 0xd49466a8 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_7 := abi_decode_address_6374()\n                        let value_7 := calldataload(36)\n                        let _39 := sub(shl(160, 1), 1)\n                        /// @src 23:3626:3678  \"if (msg.sender != feeManager) revert NotFeeManager()\"\n                        if /** @src 23:3630:3654  \"msg.sender != feeManager\" */ iszero(eq(/** @src 23:3630:3640  \"msg.sender\" */ caller(), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(sload(/** @src 23:3644:3654  \"feeManager\" */ 0x03), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _39)))\n                        /// @src 23:3626:3678  \"if (msg.sender != feeManager) revert NotFeeManager()\"\n                        {\n                            /// @src 23:3663:3678  \"NotFeeManager()\"\n                            let _40 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:3663:3678  \"NotFeeManager()\"\n                            mstore(_40, /** @src 23:2998:3013  \"NotFeeManager()\" */ shl(224, 0xf5d267eb))\n                            /// @src 23:3663:3678  \"NotFeeManager()\"\n                            revert(_40, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        /// @src 23:3692:3734  \"fee > MAX_FEE && fee != ZERO_FEE_INDICATOR\"\n                        let expr_5 := /** @src 23:3692:3705  \"fee > MAX_FEE\" */ gt(value_7, /** @src 23:529:532  \"300\" */ 0x012c)\n                        /// @src 23:3692:3734  \"fee > MAX_FEE && fee != ZERO_FEE_INDICATOR\"\n                        if expr_5\n                        {\n                            expr_5 := /** @src 23:3709:3734  \"fee != ZERO_FEE_INDICATOR\" */ iszero(eq(value_7, /** @src 23:734:737  \"420\" */ 0x01a4))\n                        }\n                        /// @src 23:3688:3755  \"if (fee > MAX_FEE && fee != ZERO_FEE_INDICATOR) revert FeeTooHigh()\"\n                        if expr_5\n                        {\n                            /// @src 23:3743:3755  \"FeeTooHigh()\"\n                            let _41 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:3743:3755  \"FeeTooHigh()\"\n                            mstore(_41, shl(224, 0xcd4e6167))\n                            revert(_41, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        let _42 := and(value0_7, _39)\n                        mstore(_3, _42)\n                        mstore(32, /** @src 23:3770:3777  \"_isPool\" */ 0x07)\n                        /// @src 23:3765:3805  \"if (!_isPool[pool]) revert InvalidPool()\"\n                        if /** @src 23:3769:3783  \"!_isPool[pool]\" */ iszero(/** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(sload(keccak256(_3, _1)), 0xff))\n                        /// @src 23:3765:3805  \"if (!_isPool[pool]) revert InvalidPool()\"\n                        {\n                            /// @src 23:3792:3805  \"InvalidPool()\"\n                            let _43 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:3792:3805  \"InvalidPool()\"\n                            mstore(_43, shl(230, 8523573))\n                            revert(_43, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        mstore(_3, _42)\n                        mstore(32, /** @src 23:3816:3825  \"customFee\" */ 0x08)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        sstore(keccak256(_3, _1), value_7)\n                        /// @src 23:3852:3875  \"SetCustomFee(pool, fee)\"\n                        let _44 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                        mstore(_44, value_7)\n                        /// @src 23:3852:3875  \"SetCustomFee(pool, fee)\"\n                        log2(_44, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 32, /** @src 23:3852:3875  \"SetCustomFee(pool, fee)\" */ 0xae468ce586f9a87660fdffc1448cee942042c16ae2f02046b134b5224f31936b, _42)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        return(_3, _3)\n                    }\n                    case 0xe1f76b44 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_8 := abi_decode_t_bool()\n                        let value_8 := calldataload(36)\n                        /// @src 23:3258:3310  \"if (msg.sender != feeManager) revert NotFeeManager()\"\n                        if /** @src 23:3262:3286  \"msg.sender != feeManager\" */ iszero(eq(/** @src 23:3262:3272  \"msg.sender\" */ caller(), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(sload(/** @src 23:3276:3286  \"feeManager\" */ 0x03), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 23:3258:3310  \"if (msg.sender != feeManager) revert NotFeeManager()\"\n                        {\n                            /// @src 23:3295:3310  \"NotFeeManager()\"\n                            let _45 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:3295:3310  \"NotFeeManager()\"\n                            mstore(_45, /** @src 23:2998:3013  \"NotFeeManager()\" */ shl(224, 0xf5d267eb))\n                            /// @src 23:3295:3310  \"NotFeeManager()\"\n                            revert(_45, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        /// @src 23:3320:3359  \"if (_fee > MAX_FEE) revert FeeTooHigh()\"\n                        if /** @src 23:3324:3338  \"_fee > MAX_FEE\" */ gt(value_8, /** @src 23:529:532  \"300\" */ 0x012c)\n                        /// @src 23:3320:3359  \"if (_fee > MAX_FEE) revert FeeTooHigh()\"\n                        {\n                            /// @src 23:3347:3359  \"FeeTooHigh()\"\n                            let _46 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:3347:3359  \"FeeTooHigh()\"\n                            mstore(_46, /** @src 23:3743:3755  \"FeeTooHigh()\" */ shl(224, 0xcd4e6167))\n                            /// @src 23:3347:3359  \"FeeTooHigh()\"\n                            revert(_46, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        /// @src 23:3369:3400  \"if (_fee == 0) revert ZeroFee()\"\n                        if /** @src 23:3373:3382  \"_fee == 0\" */ iszero(value_8)\n                        /// @src 23:3369:3400  \"if (_fee == 0) revert ZeroFee()\"\n                        {\n                            /// @src 23:3391:3400  \"ZeroFee()\"\n                            let _47 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_1)\n                            /// @src 23:3391:3400  \"ZeroFee()\"\n                            mstore(_47, shl(224, 0xaf13986d))\n                            revert(_47, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _2)\n                        }\n                        /// @src 23:3410:3513  \"if (_stable) {...\"\n                        switch value0_8\n                        case 0 {\n                            /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                            sstore(/** @src 23:3484:3502  \"volatileFee = _fee\" */ 0x02, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ value_8)\n                        }\n                        default /// @src 23:3410:3513  \"if (_stable) {...\"\n                        {\n                            /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                            sstore(1, value_8)\n                        }\n                        return(_3, _3)\n                    }\n                    case 0xefde4e64 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let length := sload(/** @src 23:1693:1701  \"allPools\" */ 0x06)\n                        /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                        let memPos_17 := mload(_1)\n                        mstore(memPos_17, length)\n                        return(memPos_17, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address_6374() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_addresst_addresst_uint24(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                value1 := value_1\n                let value_2 := calldataload(68)\n                if iszero(eq(value_2, and(value_2, 0xffffff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                value2 := value_2\n            }\n            function abi_decode_bool() -> value\n            {\n                value := calldataload(68)\n                if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n            }\n            function abi_decode_t_bool() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n            }\n            function storage_array_index_access_address_dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 23:973:998  \"address[] public allPools\" */ 6)))\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 23:973:998  \"address[] public allPools\" */ 6)\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                slot := add(111414077815863400510004064629973595961579173665589224203503662149373724986687, index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 7078 @src 23:4446:5460  \"function createPool(address tokenA, address tokenB, bool stable) public returns (address pool) {...\"\n            function fun_createPool(var_tokenA, var_tokenB, var_stable) -> var_pool\n            {\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ var_tokenA, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _1)\n                let _3 := and(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ var_tokenB, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _1)\n                /// @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\"\n                let _4 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ iszero(iszero(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ var_stable))\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                let _5 := 64\n                /// @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\"\n                let _6 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_5)\n                /// @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\"\n                let _7 := 0\n                log4(_7, _7, 0x770c6122f274fc8dbb2e39aacd540eccd995cab58ed8d8ffb6b8bd3053d49106, _2, _3, _4)\n                /// @src 23:4601:4643  \"if (tokenA == tokenB) revert SameAddress()\"\n                if /** @src 23:4605:4621  \"tokenA == tokenB\" */ eq(_2, _3)\n                /// @src 23:4601:4643  \"if (tokenA == tokenB) revert SameAddress()\"\n                {\n                    /// @src 23:4630:4643  \"SameAddress()\"\n                    mstore(_6, shl(224, 0x367558c3))\n                    revert(_6, 4)\n                }\n                /// @src 23:4688:4741  \"tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA)\"\n                let expr_component := /** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7\n                let expr_component_1 := _7\n                /// @src 23:4688:4741  \"tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA)\"\n                switch /** @src 23:4688:4703  \"tokenA < tokenB\" */ lt(_2, _3)\n                case /** @src 23:4688:4741  \"tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA)\" */ 0 {\n                    expr_component := var_tokenB\n                    expr_component_1 := var_tokenA\n                }\n                default {\n                    expr_component := var_tokenA\n                    expr_component_1 := var_tokenB\n                }\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                let _8 := and(/** @src 23:4755:4775  \"token0 == address(0)\" */ expr_component, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _1)\n                /// @src 23:4751:4797  \"if (token0 == address(0)) revert ZeroAddress()\"\n                if /** @src 23:4755:4775  \"token0 == address(0)\" */ iszero(/** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _8)\n                /// @src 23:4751:4797  \"if (token0 == address(0)) revert ZeroAddress()\"\n                {\n                    /// @src 23:4784:4797  \"ZeroAddress()\"\n                    let _9 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_5)\n                    /// @src 23:4784:4797  \"ZeroAddress()\"\n                    mstore(_9, /** @src 23:2638:2651  \"ZeroAddress()\" */ shl(224, 0xd92e233d))\n                    /// @src 23:4784:4797  \"ZeroAddress()\"\n                    revert(_9, 4)\n                }\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                mstore(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _8)\n                let _10 := 0x20\n                mstore(_10, /** @src 23:4811:4819  \"_getPool\" */ 0x05)\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                let _11 := keccak256(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _5)\n                let _12 := and(expr_component_1, _1)\n                mstore(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _12)\n                mstore(_10, _11)\n                let dataSlot := keccak256(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _5)\n                mstore(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _4)\n                mstore(_10, dataSlot)\n                /// @src 23:4807:4885  \"if (_getPool[token0][token1][stable] != address(0)) revert PoolAlreadyExists()\"\n                if /** @src 23:4811:4857  \"_getPool[token0][token1][stable] != address(0)\" */ iszero(iszero(/** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(sload(keccak256(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _5)), _1)))\n                /// @src 23:4807:4885  \"if (_getPool[token0][token1][stable] != address(0)) revert PoolAlreadyExists()\"\n                {\n                    /// @src 23:4866:4885  \"PoolAlreadyExists()\"\n                    let _13 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_5)\n                    /// @src 23:4866:4885  \"PoolAlreadyExists()\"\n                    mstore(_13, shl(225, 0x0188c991))\n                    revert(_13, 4)\n                }\n                /// @src 23:4920:4960  \"abi.encodePacked(token0, token1, stable)\"\n                let expr_mpos := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_5)\n                /// @src 23:4920:4960  \"abi.encodePacked(token0, token1, stable)\"\n                let _14 := add(expr_mpos, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _10)\n                let _15 := not(0xffffffffffffffffffffffff)\n                mstore(_14, and(shl(96, /** @src 23:4755:4775  \"token0 == address(0)\" */ expr_component), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _15))\n                mstore(add(/** @src 23:4920:4960  \"abi.encodePacked(token0, token1, stable)\" */ expr_mpos, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 52), and(shl(96, expr_component_1), _15))\n                mstore(add(/** @src 23:4920:4960  \"abi.encodePacked(token0, token1, stable)\" */ expr_mpos, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 72), shl(248, _4))\n                /// @src 23:4920:4960  \"abi.encodePacked(token0, token1, stable)\"\n                mstore(expr_mpos, 41)\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                let newFreePtr := add(expr_mpos, 96)\n                let _16 := 0xffffffffffffffff\n                if or(gt(newFreePtr, _16), lt(newFreePtr, expr_mpos))\n                {\n                    mstore(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 0x24)\n                }\n                mstore(_5, newFreePtr)\n                /// @src 23:4910:4961  \"keccak256(abi.encodePacked(token0, token1, stable))\"\n                let expr := keccak256(/** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _14, mload(/** @src 23:4910:4961  \"keccak256(abi.encodePacked(token0, token1, stable))\" */ expr_mpos))\n                /// @src 23:5099:5121  \"new Pool{salt: salt}()\"\n                let _17 := datasize(\"Pool_6412\")\n                let _18 := add(/** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ expr_mpos, /** @src 23:5099:5121  \"new Pool{salt: salt}()\" */ _17)\n                let _19 := add(_18, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 96)\n                /// @src 23:5099:5121  \"new Pool{salt: salt}()\"\n                if or(gt(_19, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _16), /** @src 23:5099:5121  \"new Pool{salt: salt}()\" */ lt(_19, newFreePtr))\n                {\n                    /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                    mstore(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 0x24)\n                }\n                /// @src 23:5099:5121  \"new Pool{salt: salt}()\"\n                datacopy(newFreePtr, dataoffset(\"Pool_6412\"), _17)\n                let expr_address := create2(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:5099:5121  \"new Pool{salt: salt}()\" */ newFreePtr, sub(_18, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ expr_mpos), /** @src 23:5099:5121  \"new Pool{salt: salt}()\" */ expr)\n                if iszero(expr_address)\n                {\n                    /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                    let pos := mload(_5)\n                    returndatacopy(pos, /** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 23:5084:5122  \"pool = address(new Pool{salt: salt}())\"\n                var_pool := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ and(/** @src 23:5091:5122  \"address(new Pool{salt: salt}())\" */ expr_address, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _1)\n                /// @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\"\n                if iszero(extcodesize(var_pool))\n                {\n                    /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                    revert(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, _7)\n                }\n                /// @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\"\n                let _20 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_5)\n                /// @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\"\n                mstore(_20, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ shl(227, 0x1c9776b5))\n                mstore(/** @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\" */ add(_20, 4), /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _8)\n                mstore(add(/** @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\" */ _20, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 36), _12)\n                mstore(add(/** @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\" */ _20, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 68), _4)\n                /// @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\"\n                let _21 := call(gas(), var_pool, /** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\" */ _20, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 100, /** @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\" */ _20, /** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7)\n                /// @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\"\n                if iszero(_21)\n                {\n                    /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                    let pos_1 := mload(_5)\n                    returndatacopy(pos_1, /** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\"\n                if _21\n                {\n                    /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                    if gt(_20, _16)\n                    {\n                        mstore(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\" */ 4, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 0x41)\n                        revert(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 36)\n                    }\n                    mstore(_5, _20)\n                    _7 := /** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ _7\n                }\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                mstore(/** @src -1:-1:-1 */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _8)\n                mstore(_10, /** @src 23:4811:4819  \"_getPool\" */ 0x05)\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                let _22 := keccak256(/** @src -1:-1:-1 */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _5)\n                mstore(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ 0, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _12)\n                mstore(_10, _22)\n                let dataSlot_1 := keccak256(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ 0, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _5)\n                mstore(/** @src -1:-1:-1 */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _4)\n                mstore(_10, dataSlot_1)\n                let _23 := keccak256(/** @src -1:-1:-1 */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _5)\n                let _24 := shl(160, 0xffffffffffffffffffffffff)\n                sstore(_23, or(and(sload(_23), _24), var_pool))\n                mstore(/** @src -1:-1:-1 */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _12)\n                mstore(_10, /** @src 23:4811:4819  \"_getPool\" */ 0x05)\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                let _25 := keccak256(/** @src -1:-1:-1 */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _5)\n                mstore(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ 0, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _8)\n                mstore(_10, _25)\n                let dataSlot_2 := keccak256(/** @src 23:4556:4591  \"PoolStarted(tokenA, tokenB, stable)\" */ 0, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _5)\n                mstore(/** @src -1:-1:-1 */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _4)\n                mstore(_10, dataSlot_2)\n                let _26 := keccak256(/** @src -1:-1:-1 */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _5)\n                sstore(_26, or(and(sload(_26), _24), var_pool))\n                let oldLen := sload(/** @src 23:5331:5339  \"allPools\" */ 0x06)\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(/** @src -1:-1:-1 */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 23:5132:5178  \"IPool(pool).initialize(token0, token1, stable)\" */ 4, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 0x41)\n                    revert(/** @src -1:-1:-1 */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ 36)\n                }\n                sstore(/** @src 23:5331:5339  \"allPools\" */ 0x06, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ add(oldLen, 1))\n                let slot, offset := storage_array_index_access_address_dyn(oldLen)\n                let _27 := sload(slot)\n                let shiftBits := shl(3, offset)\n                sstore(slot, or(and(_27, not(shl(shiftBits, _1))), shl(shiftBits, var_pool)))\n                mstore(/** @src -1:-1:-1 */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ var_pool)\n                mstore(_10, /** @src 23:5360:5367  \"_isPool\" */ 0x07)\n                /// @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\"\n                let dataSlot_3 := keccak256(/** @src -1:-1:-1 */ _7, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _5)\n                sstore(dataSlot_3, or(and(sload(dataSlot_3), not(255)), 1))\n                /// @src 23:5437:5452  \"allPools.length\"\n                let expr_1 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ sload(/** @src 23:5331:5339  \"allPools\" */ 0x06)\n                /// @src 23:5395:5453  \"PoolCreated(token0, token1, stable, pool, allPools.length)\"\n                let _28 := /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ mload(_5)\n                mstore(_28, var_pool)\n                mstore(add(_28, _10), expr_1)\n                /// @src 23:5395:5453  \"PoolCreated(token0, token1, stable, pool, allPools.length)\"\n                log4(_28, /** @src 23:290:5467  \"contract PoolFactory is IPoolFactory {...\" */ _5, /** @src 23:5395:5453  \"PoolCreated(token0, token1, stable, pool, allPools.length)\" */ 0x2128d88d14c80cb081c1252a5acff7a264671bf199ce226b53788fb26065005e, _8, _12, _4)\n            }\n        }\n        /// @use-src 0:\"@openzeppelin/contracts/interfaces/IERC5267.sol\", 1:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\", 6:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 7:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"@openzeppelin/contracts/utils/Nonces.sol\", 12:\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\", 13:\"@openzeppelin/contracts/utils/ShortStrings.sol\", 14:\"@openzeppelin/contracts/utils/StorageSlot.sol\", 17:\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\", 21:\"contracts/Pool.sol\", 24:\"contracts/interfaces/IPool.sol\"\n        object \"Pool_6412\" {\n            code {\n                {\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _1 := memoryguard(0x0160)\n                    let _2 := 64\n                    mstore(_2, _1)\n                    if callvalue() { revert(0, 0) }\n                    finalize_allocation(_1)\n                    /// @src -1:-1:-1\n                    let _3 := 0\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    mstore(_1, /** @src -1:-1:-1 */ _3)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let memPtr := mload(_2)\n                    finalize_allocation(memPtr)\n                    mstore(memPtr, /** @src -1:-1:-1 */ _3)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation(memPtr_1)\n                    mstore(memPtr_1, /** @src -1:-1:-1 */ _3)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let memPtr_2 := mload(_2)\n                    let newFreePtr := add(memPtr_2, _2)\n                    let _4 := sub(shl(64, 1), 1)\n                    if or(gt(newFreePtr, _4), lt(newFreePtr, memPtr_2))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                    }\n                    mstore(_2, newFreePtr)\n                    let _5 := 1\n                    mstore(memPtr_2, _5)\n                    let _6 := 0x20\n                    let _7 := add(memPtr_2, _6)\n                    mstore(_7, \"1\")\n                    let newLen := mload(memPtr)\n                    if gt(newLen, _4)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                    }\n                    /// @src 3:1962:1975  \"_name = name_\"\n                    let _8 := 0x03\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _9 := sload(/** @src 3:1962:1975  \"_name = name_\" */ _8)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let length := /** @src -1:-1:-1 */ _3\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    length := shr(_5, _9)\n                    let outOfPlaceEncoding := and(_9, _5)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, _6))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                    }\n                    let _10 := 31\n                    if gt(length, _10)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 3:1962:1975  \"_name = name_\" */ _8)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let data := keccak256(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _6)\n                        let deleteStart := add(data, shr(5, add(newLen, _10)))\n                        if lt(newLen, _6) { deleteStart := data }\n                        let _11 := add(data, shr(5, add(length, _10)))\n                        let start := deleteStart\n                        for { } lt(start, _11) { start := add(start, _5) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ _3)\n                        }\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ _3\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    srcOffset := _6\n                    switch gt(newLen, _10)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 3:1962:1975  \"_name = name_\" */ _8)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _6)\n                        let i := /** @src -1:-1:-1 */ _3\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        for { } lt(i, loopEnd) { i := add(i, _6) }\n                        {\n                            sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                            dstPtr := add(dstPtr, _5)\n                            srcOffset := add(srcOffset, _6)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(memPtr, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 3:1962:1975  \"_name = name_\" */ _8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src 3:1962:1975  \"_name = name_\" */ _8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(_5, newLen), _5))\n                    }\n                    default {\n                        let value := /** @src -1:-1:-1 */ _3\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if newLen\n                        {\n                            value := mload(add(memPtr, srcOffset))\n                        }\n                        sstore(/** @src 3:1962:1975  \"_name = name_\" */ _8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(value, not(shr(shl(/** @src 3:1962:1975  \"_name = name_\" */ _8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen), not(0)))), shl(_5, newLen)))\n                    }\n                    let newLen_1 := mload(memPtr_1)\n                    if gt(newLen_1, _4)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ 0x04, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                    }\n                    /// @src 3:1985:2002  \"_symbol = symbol_\"\n                    let _12 := 0x04\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let _13 := sload(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let length_1 := /** @src -1:-1:-1 */ _3\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    length_1 := shr(_5, _13)\n                    let outOfPlaceEncoding_1 := and(_13, _5)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, _6))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x22)\n                        revert(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                    }\n                    if gt(length_1, _10)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 3:1985:2002  \"_symbol = symbol_\" */ _12)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _6)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _10)))\n                        if lt(newLen_1, _6) { deleteStart_1 := data_1 }\n                        let _14 := add(data_1, shr(5, add(length_1, _10)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _14) { start_1 := add(start_1, _5) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ _3)\n                        }\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ _3\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    srcOffset_1 := _6\n                    switch gt(newLen_1, _10)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 3:1985:2002  \"_symbol = symbol_\" */ _12)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _6)\n                        let i_1 := /** @src -1:-1:-1 */ _3\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _6) }\n                        {\n                            sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, _5)\n                            srcOffset_1 := add(srcOffset_1, _6)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 3:1962:1975  \"_name = name_\" */ _8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen_1), 248), not(0)))))\n                        }\n                        sstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(_5, newLen_1), _5))\n                    }\n                    default {\n                        let value_1 := /** @src -1:-1:-1 */ _3\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if newLen_1\n                        {\n                            value_1 := mload(add(memPtr_1, srcOffset_1))\n                        }\n                        sstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(value_1, not(shr(shl(/** @src 3:1962:1975  \"_name = name_\" */ _8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen_1), not(0)))), shl(_5, newLen_1)))\n                    }\n                    /// @src 17:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\"\n                    let _15 := fun_toShortStringWithFallback_6855(_1)\n                    /// @src 17:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n                    let _16 := 288\n                    mstore(_16, /** @src 17:3401:3446  \"name.toShortStringWithFallback(_nameFallback)\" */ _15)\n                    /// @src 17:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\"\n                    let _17 := fun_toShortStringWithFallback(memPtr_2)\n                    /// @src 17:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n                    let _18 := 320\n                    mstore(_18, /** @src 17:3467:3518  \"version.toShortStringWithFallback(_versionFallback)\" */ _17)\n                    /// @src 17:3542:3564  \"keccak256(bytes(name))\"\n                    let _19 := keccak256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 17:3542:3564  \"keccak256(bytes(name))\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _6), mload(/** @src 17:3542:3564  \"keccak256(bytes(name))\" */ _1))\n                    /// @src 17:3528:3564  \"_hashedName = keccak256(bytes(name))\"\n                    mstore(224, /** @src 17:3542:3564  \"keccak256(bytes(name))\" */ _19)\n                    /// @src 17:3591:3616  \"keccak256(bytes(version))\"\n                    let _20 := keccak256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _7, mload(/** @src 17:3591:3616  \"keccak256(bytes(version))\" */ memPtr_2))\n                    /// @src 17:3574:3616  \"_hashedVersion = keccak256(bytes(version))\"\n                    let _21 := 256\n                    mstore(_21, /** @src 17:3591:3616  \"keccak256(bytes(version))\" */ _20)\n                    /// @src 17:3627:3657  \"_cachedChainId = block.chainid\"\n                    mstore(160, /** @src 17:3644:3657  \"block.chainid\" */ chainid())\n                    /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_2)\n                    /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let _22 := add(expr_mpos, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _6)\n                    /// @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(_22, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                    mstore(add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2), /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _19)\n                    mstore(add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), _20)\n                    mstore(add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 17:3644:3657  \"block.chainid\" */ chainid())\n                    /// @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:3627:3657  \"_cachedChainId = block.chainid\" */ 160), /** @src 17:4278:4282  \"this\" */ address())\n                    /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 17:3627:3657  \"_cachedChainId = block.chainid\" */ 160)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    let newFreePtr_1 := add(expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    if or(gt(newFreePtr_1, _4), lt(newFreePtr_1, expr_mpos))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 3:1985:2002  \"_symbol = symbol_\" */ _12, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                    }\n                    mstore(_2, newFreePtr_1)\n                    /// @src 17:3667:3715  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n                    mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128, /** @src 17:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _22, mload(/** @src 17:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n                    /// @src 17:3725:3752  \"_cachedThis = address(this)\"\n                    mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192, /** @src 17:4278:4282  \"this\" */ address())\n                    /// @src 12:1713:1714  \"1\"\n                    sstore(/** @src 12:1917:1938  \"_status = NOT_ENTERED\" */ 0x08, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _5)\n                    let _23 := datasize(\"Pool_6412_deployed\")\n                    codecopy(newFreePtr_1, dataoffset(\"Pool_6412_deployed\"), _23)\n                    setimmutable(newFreePtr_1, \"2716\", mload(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    setimmutable(newFreePtr_1, \"2718\", mload(/** @src 17:3627:3657  \"_cachedChainId = block.chainid\" */ 160))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    setimmutable(newFreePtr_1, \"2720\", mload(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    setimmutable(newFreePtr_1, \"2722\", mload(/** @src 17:3528:3564  \"_hashedName = keccak256(bytes(name))\" */ 224))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    setimmutable(newFreePtr_1, \"2724\", mload(/** @src 17:3574:3616  \"_hashedVersion = keccak256(bytes(version))\" */ _21))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    setimmutable(newFreePtr_1, \"2727\", mload(/** @src 17:3393:3446  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ _16))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    setimmutable(newFreePtr_1, \"2730\", mload(/** @src 17:3456:3518  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ _18))\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    return(newFreePtr_1, _23)\n                }\n                function finalize_allocation(memPtr)\n                {\n                    let newFreePtr := add(memPtr, 0x20)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                /// @ast-id 1923 @src 13:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback_6855(var_value_mpos) -> var\n                {\n                    /// @src 13:3037:3056  \"bytes(value).length\"\n                    let expr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 13:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 13:3059:3061  \"32\"\n                    let _1 := 0x20\n                    /// @src 13:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 13:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 13:3059:3061  \"32\" */ _1)\n                    case /** @src 13:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        /// @src 17:3432:3445  \"_nameFallback\"\n                        let _2 := 0x05\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _3 := sload(/** @src 17:3432:3445  \"_nameFallback\" */ _2)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let length := /** @src -1:-1:-1 */ 0\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _4 := 1\n                        length := shr(_4, _3)\n                        let outOfPlaceEncoding := and(_3, _4)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 13:3059:3061  \"32\" */ _1))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 17:3432:3445  \"_nameFallback\" */ _2)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:3059:3061  \"32\" */ _1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _5 := add(data, shr(/** @src 17:3432:3445  \"_nameFallback\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(length, 31)))\n                            let start := add(data, shr(/** @src 17:3432:3445  \"_nameFallback\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(expr, 31)))\n                            for { } lt(start, _5) { start := add(start, _4) }\n                            {\n                                sstore(start, /** @src -1:-1:-1 */ 0)\n                            }\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let srcOffset := /** @src -1:-1:-1 */ 0\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        srcOffset := /** @src 13:3059:3061  \"32\" */ _1\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 17:3432:3445  \"_nameFallback\" */ _2)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:3059:3061  \"32\" */ _1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 13:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, _4)\n                                srcOffset := add(srcOffset, /** @src 13:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(/** @src 17:3432:3445  \"_nameFallback\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(_4, expr), _4))\n                        }\n                        default {\n                            let value := /** @src -1:-1:-1 */ 0\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(/** @src 17:3432:3445  \"_nameFallback\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(_4, expr)))\n                        }\n                        /// @src 13:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 13:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 13:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 13:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 13:1840:1856  \"bstr.length > 31\" */ gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 13:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 13:1854:1856  \"31\" */ 0x1f)\n                        /// @src 13:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 13:1879:1897  \"StringTooLong(str)\"\n                            let _6 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 13:1879:1897  \"StringTooLong(str)\"\n                            mstore(_6, shl(224, 0x305a27a9))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 13:1879:1897  \"StringTooLong(str)\" */ add(_6, 4), /** @src 13:3059:3061  \"32\" */ _1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36), length_1)\n                            let i_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            for { }\n                            lt(i_1, length_1)\n                            {\n                                i_1 := add(i_1, /** @src 13:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            {\n                                mstore(add(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 13:3059:3061  \"32\" */ _1)))\n                            }\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(add(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                            /// @src 13:1879:1897  \"StringTooLong(str)\"\n                            revert(_6, add(sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(add(length_1, /** @src 13:1854:1856  \"31\" */ 0x1f), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ not(31))), /** @src 13:1879:1897  \"StringTooLong(str)\" */ _6), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 68))\n                        }\n                        /// @src 13:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := mload(add(var_value_mpos, /** @src 13:3059:3061  \"32\" */ _1))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if lt(length_2, /** @src 13:3059:3061  \"32\" */ _1)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 13:3059:3061  \"32\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_2)), not(0)))\n                        }\n                        /// @src 13:3077:3104  \"return toShortString(value)\"\n                        var := /** @src 13:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_2)\n                        /// @src 13:3077:3104  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n                /// @ast-id 1923 @src 13:2914:3254  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback(var_value_mpos) -> var\n                {\n                    /// @src 13:3037:3056  \"bytes(value).length\"\n                    let expr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 13:3037:3049  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 13:3059:3061  \"32\"\n                    let _1 := 0x20\n                    /// @src 13:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 13:3037:3061  \"bytes(value).length < 32\" */ lt(expr, /** @src 13:3059:3061  \"32\" */ _1)\n                    case /** @src 13:3033:3248  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _2 := sload(/** @src 17:3501:3517  \"_versionFallback\" */ 0x06)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let length := /** @src -1:-1:-1 */ 0\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _3 := 1\n                        length := shr(_3, _2)\n                        let outOfPlaceEncoding := and(_2, _3)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 13:3059:3061  \"32\" */ _1))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 17:3501:3517  \"_versionFallback\" */ 0x06)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:3059:3061  \"32\" */ _1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _4 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _4) { start := add(start, _3) }\n                            {\n                                sstore(start, /** @src -1:-1:-1 */ 0)\n                            }\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let srcOffset := /** @src -1:-1:-1 */ 0\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        srcOffset := /** @src 13:3059:3061  \"32\" */ _1\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 17:3501:3517  \"_versionFallback\" */ 0x06)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 13:3059:3061  \"32\" */ _1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 13:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, _3)\n                                srcOffset := add(srcOffset, /** @src 13:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(/** @src 17:3501:3517  \"_versionFallback\" */ 0x06, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(_3, expr), _3))\n                        }\n                        default {\n                            let value := /** @src -1:-1:-1 */ 0\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(/** @src 17:3501:3517  \"_versionFallback\" */ 0x06, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(_3, expr)))\n                        }\n                        /// @src 13:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 13:3195:3237  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 13:3033:3248  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 13:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 13:1840:1856  \"bstr.length > 31\" */ gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 13:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 13:1854:1856  \"31\" */ 0x1f)\n                        /// @src 13:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 13:1879:1897  \"StringTooLong(str)\"\n                            let _5 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 13:1879:1897  \"StringTooLong(str)\"\n                            mstore(_5, shl(224, 0x305a27a9))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 13:1879:1897  \"StringTooLong(str)\" */ add(_5, 4), /** @src 13:3059:3061  \"32\" */ _1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36), length_1)\n                            let i_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            for { }\n                            lt(i_1, length_1)\n                            {\n                                i_1 := add(i_1, /** @src 13:3059:3061  \"32\" */ _1)\n                            }\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            {\n                                mstore(add(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ i_1), 68), mload(add(add(var_value_mpos, i_1), /** @src 13:3059:3061  \"32\" */ _1)))\n                            }\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(add(add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_1), 68), /** @src -1:-1:-1 */ 0)\n                            /// @src 13:1879:1897  \"StringTooLong(str)\"\n                            revert(_5, add(sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 13:1879:1897  \"StringTooLong(str)\" */ _5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(add(length_1, /** @src 13:1854:1856  \"31\" */ 0x1f), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ not(31))), /** @src 13:1879:1897  \"StringTooLong(str)\" */ _5), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 68))\n                        }\n                        /// @src 13:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := mload(add(var_value_mpos, /** @src 13:3059:3061  \"32\" */ _1))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if lt(length_2, /** @src 13:3059:3061  \"32\" */ _1)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 13:3059:3061  \"32\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_2)), not(0)))\n                        }\n                        /// @src 13:3077:3104  \"return toShortString(value)\"\n                        var := /** @src 13:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_2)\n                        /// @src 13:3077:3104  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n            }\n            /// @use-src 3:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 5:\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\", 8:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\", 9:\"@openzeppelin/contracts/utils/Address.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"@openzeppelin/contracts/utils/Nonces.sol\", 12:\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\", 13:\"@openzeppelin/contracts/utils/ShortStrings.sol\", 16:\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\", 17:\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\", 18:\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\", 19:\"@openzeppelin/contracts/utils/math/Math.sol\", 21:\"contracts/Pool.sol\"\n            object \"Pool_6412_deployed\" {\n                code {\n                    {\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(64, memoryguard(0x80))\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            let _1 := 0\n                            let _2 := 224\n                            switch shr(_2, calldataload(_1))\n                            case 0x022c0d9f {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 128) { revert(_1, _1) }\n                                let value := calldataload(68)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(_1, _1) }\n                                let offset := calldataload(100)\n                                if gt(offset, 0xffffffffffffffff) { revert(_1, _1) }\n                                let value3, value4 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                                /// @src 12:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let cleaned := and(sload(/** @src 21:14269:14276  \"factory\" */ 0x0f), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                                let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                                mstore(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(225, 0x58c3de93))\n                                /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                                let _4 := staticcall(gas(), cleaned, _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\" */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                                /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                                if iszero(_4)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos := mload(64)\n                                    returndatacopy(pos, _1, returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                                let expr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1\n                                /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                                if _4\n                                {\n                                    let _5 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                                    /// @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:14256:14288  \"IPoolFactory(factory).isPaused()\" */ returndatasize()) { _5 := returndatasize() }\n                                    finalize_allocation(_3, _5)\n                                    expr := abi_decode_bool_fromMemory(_3, add(_3, _5))\n                                }\n                                /// @src 21:14252:14307  \"if (IPoolFactory(factory).isPaused()) revert IsPaused()\"\n                                if expr\n                                {\n                                    /// @src 21:14297:14307  \"IsPaused()\"\n                                    let _6 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:14297:14307  \"IsPaused()\"\n                                    mstore(_6, shl(224, 0x1309a563))\n                                    revert(_6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                /// @src 21:14321:14355  \"amount0Out == 0 && amount1Out == 0\"\n                                let expr_1 := /** @src 21:14321:14336  \"amount0Out == 0\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(4))\n                                /// @src 21:14321:14355  \"amount0Out == 0 && amount1Out == 0\"\n                                let expr_2 := expr_1\n                                if expr_1\n                                {\n                                    expr_1 := /** @src 21:14340:14355  \"amount1Out == 0\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36))\n                                }\n                                /// @src 21:14317:14390  \"if (amount0Out == 0 && amount1Out == 0) revert InsufficientOutputAmount()\"\n                                if expr_1\n                                {\n                                    /// @src 21:14364:14390  \"InsufficientOutputAmount()\"\n                                    let _7 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:14364:14390  \"InsufficientOutputAmount()\"\n                                    mstore(_7, shl(224, 0x42301c23))\n                                    revert(_7, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                let _8 := sload(/** @src 21:14442:14450  \"reserve0\" */ 0x13)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _9 := sload(/** @src 21:14452:14460  \"reserve1\" */ 0x14)\n                                /// @src 21:14475:14498  \"amount0Out >= _reserve0\"\n                                let _10 := lt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(4), /** @src 21:14475:14498  \"amount0Out >= _reserve0\" */ _8)\n                                /// @src 21:14475:14525  \"amount0Out >= _reserve0 || amount1Out >= _reserve1\"\n                                let expr_3 := /** @src 21:14475:14498  \"amount0Out >= _reserve0\" */ iszero(_10)\n                                /// @src 21:14475:14525  \"amount0Out >= _reserve0 || amount1Out >= _reserve1\"\n                                if _10\n                                {\n                                    expr_3 := /** @src 21:14502:14525  \"amount1Out >= _reserve1\" */ iszero(lt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36), /** @src 21:14502:14525  \"amount1Out >= _reserve1\" */ _9))\n                                }\n                                /// @src 21:14471:14557  \"if (amount0Out >= _reserve0 || amount1Out >= _reserve1) revert InsufficientLiquidity()\"\n                                if expr_3\n                                {\n                                    /// @src 21:14534:14557  \"InsufficientLiquidity()\"\n                                    let _11 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:14534:14557  \"InsufficientLiquidity()\"\n                                    mstore(_11, shl(224, 0xbb55fd27))\n                                    revert(_11, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                let cleaned_1 := and(sload(/** @src 21:14741:14747  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                let cleaned_2 := and(sload(/** @src 21:14749:14755  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                /// @src 21:14774:14804  \"to == _token0 || to == _token1\"\n                                let expr_4 := /** @src 21:14774:14787  \"to == _token0\" */ eq(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(value, sub(shl(160, 1), 1)), /** @src 21:14774:14787  \"to == _token0\" */ cleaned_1)\n                                /// @src 21:14774:14804  \"to == _token0 || to == _token1\"\n                                if iszero(expr_4)\n                                {\n                                    expr_4 := /** @src 21:14791:14804  \"to == _token1\" */ eq(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(value, sub(shl(160, 1), 1)), cleaned_2)\n                                }\n                                /// @src 21:14770:14824  \"if (to == _token0 || to == _token1) revert InvalidTo()\"\n                                if expr_4\n                                {\n                                    /// @src 21:14813:14824  \"InvalidTo()\"\n                                    let _12 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:14813:14824  \"InvalidTo()\"\n                                    mstore(_12, shl(227, 0x0521f431))\n                                    revert(_12, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                /// @src 21:14838:14902  \"if (amount0Out > 0) IERC20(_token0).safeTransfer(to, amount0Out)\"\n                                if /** @src 21:14842:14856  \"amount0Out > 0\" */ iszero(expr_2)\n                                /// @src 21:14838:14902  \"if (amount0Out > 0) IERC20(_token0).safeTransfer(to, amount0Out)\"\n                                {\n                                    /// @src 21:14891:14901  \"amount0Out\"\n                                    fun_safeTransfer(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ cleaned_1, /** @src 21:14891:14901  \"amount0Out\" */ value, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(4))\n                                }\n                                /// @src 21:14950:15014  \"if (amount1Out > 0) IERC20(_token1).safeTransfer(to, amount1Out)\"\n                                if /** @src 21:14954:14968  \"amount1Out > 0\" */ iszero(iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36)))\n                                /// @src 21:14950:15014  \"if (amount1Out > 0) IERC20(_token1).safeTransfer(to, amount1Out)\"\n                                {\n                                    /// @src 21:15003:15013  \"amount1Out\"\n                                    fun_safeTransfer(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ cleaned_2, /** @src 21:15003:15013  \"amount1Out\" */ value, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36))\n                                }\n                                /// @src 21:15062:15145  \"if (data.length > 0) IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                                if /** @src 21:15066:15081  \"data.length > 0\" */ iszero(iszero(/** @src 21:15066:15077  \"data.length\" */ value4))\n                                /// @src 21:15062:15145  \"if (data.length > 0) IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                                {\n                                    /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                                    if iszero(extcodesize(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(value, sub(shl(160, 1), 1))))\n                                    /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                                    {\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        revert(_1, _1)\n                                    }\n                                    /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                                    let _13 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                                    mstore(_13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x9a7bff79))\n                                    mstore(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ add(_13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15104:15114  \"msg.sender\" */ caller())\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36), calldataload(4))\n                                    mstore(add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 68), calldataload(36))\n                                    mstore(add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 100), 128)\n                                    mstore(add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 132), value4)\n                                    calldatacopy(add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 164), value3, value4)\n                                    mstore(add(add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ value4), 164), _1)\n                                    /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                                    let _14 := call(gas(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(value, sub(shl(160, 1), 1)), _1, /** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, add(sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(add(value4, 31), not(31))), /** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 164), /** @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\" */ _13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                                    /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                                    if iszero(_14)\n                                    {\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let pos_1 := mload(64)\n                                        returndatacopy(pos_1, _1, returndatasize())\n                                        revert(pos_1, returndatasize())\n                                    }\n                                    /// @src 21:15083:15145  \"IPoolCallee(to).hook(msg.sender, amount0Out, amount1Out, data)\"\n                                    if _14\n                                    {\n                                        finalize_allocation_35698(_13)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        _1 := _1\n                                    }\n                                }\n                                /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _15 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                                mstore(_15, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\" */ add(_15, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15239:15243  \"this\" */ address())\n                                /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _16 := staticcall(gas(), cleaned_1, _15, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\" */ _15, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                                /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                                if iszero(_16)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_2 := mload(64)\n                                    returndatacopy(pos_2, _1, returndatasize())\n                                    revert(pos_2, returndatasize())\n                                }\n                                /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                                let expr_5 := _1\n                                if _16\n                                {\n                                    let _17 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                                    /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _17 := returndatasize() }\n                                    finalize_allocation(_15, _17)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\" */ add(_15, _17), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _15), 32) { revert(0, 0) }\n                                    /// @src 21:15205:15245  \"IERC20(_token0).balanceOf(address(this))\"\n                                    expr_5 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_15)\n                                }\n                                /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _18 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                                mstore(_18, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\" */ add(_18, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15239:15243  \"this\" */ address())\n                                /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _19 := staticcall(gas(), cleaned_2, _18, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\" */ _18, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                                /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                                if iszero(_19)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_3 := mload(64)\n                                    returndatacopy(pos_3, _1, returndatasize())\n                                    revert(pos_3, returndatasize())\n                                }\n                                /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                                let expr_6 := _1\n                                if _19\n                                {\n                                    let _20 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                                    /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _20 := returndatasize() }\n                                    finalize_allocation(_18, _20)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\" */ add(_18, _20), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _18), 32) { revert(0, 0) }\n                                    /// @src 21:15271:15311  \"IERC20(_token1).balanceOf(address(this))\"\n                                    expr_6 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_18)\n                                }\n                                /// @src 21:15351:15385  \"_balance0 > _reserve0 - amount0Out\"\n                                let expr_7 := gt(expr_5, /** @src 21:15363:15385  \"_reserve0 - amount0Out\" */ checked_sub_uint256(_8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(4)))\n                                /// @src 21:15351:15428  \"_balance0 > _reserve0 - amount0Out ? _balance0 - (_reserve0 - amount0Out) : 0\"\n                                let expr_8 := _1\n                                switch expr_7\n                                case 0 { expr_8 := _1 }\n                                default {\n                                    expr_8 := /** @src 21:15388:15424  \"_balance0 - (_reserve0 - amount0Out)\" */ checked_sub_uint256(expr_5, /** @src 21:15401:15423  \"_reserve0 - amount0Out\" */ checked_sub_uint256(_8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(4)))\n                                }\n                                /// @src 21:15458:15492  \"_balance1 > _reserve1 - amount1Out\"\n                                let expr_9 := gt(expr_6, /** @src 21:15470:15492  \"_reserve1 - amount1Out\" */ checked_sub_uint256(_9, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36)))\n                                /// @src 21:15458:15535  \"_balance1 > _reserve1 - amount1Out ? _balance1 - (_reserve1 - amount1Out) : 0\"\n                                let expr_10 := _1\n                                switch expr_9\n                                case 0 { expr_10 := _1 }\n                                default {\n                                    expr_10 := /** @src 21:15495:15531  \"_balance1 - (_reserve1 - amount1Out)\" */ checked_sub_uint256(expr_6, /** @src 21:15508:15530  \"_reserve1 - amount1Out\" */ checked_sub_uint256(_9, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36)))\n                                }\n                                /// @src 21:15549:15581  \"amount0In == 0 && amount1In == 0\"\n                                let expr_11 := /** @src 21:15549:15563  \"amount0In == 0\" */ iszero(expr_8)\n                                /// @src 21:15549:15581  \"amount0In == 0 && amount1In == 0\"\n                                let expr_12 := expr_11\n                                if expr_11\n                                {\n                                    expr_11 := /** @src 21:15567:15581  \"amount1In == 0\" */ iszero(expr_10)\n                                }\n                                /// @src 21:15545:15615  \"if (amount0In == 0 && amount1In == 0) revert InsufficientInputAmount()\"\n                                if expr_11\n                                {\n                                    /// @src 21:15590:15615  \"InsufficientInputAmount()\"\n                                    let _21 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:15590:15615  \"InsufficientInputAmount()\"\n                                    mstore(_21, shl(224, 0x098fb561))\n                                    revert(_21, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                let cleaned_3 := and(sload(/** @src 21:14741:14747  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                let cleaned_4 := and(sload(/** @src 21:14749:14755  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                /// @src 21:15782:15884  \"if (amount0In > 0) _update0((amount0In * IPoolFactory(factory).getFee(address(this), stable)) / 10000)\"\n                                if /** @src 21:15786:15799  \"amount0In > 0\" */ iszero(expr_12)\n                                /// @src 21:15782:15884  \"if (amount0In > 0) _update0((amount0In * IPoolFactory(factory).getFee(address(this), stable)) / 10000)\"\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let cleaned_5 := and(sload(/** @src 21:14269:14276  \"factory\" */ 0x0f), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                    let value_1 := and(shr(160, sload(/** @src 21:15867:15873  \"stable\" */ 0x0b)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                                    /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                    let _22 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                    mstore(_22, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0xcc56b2c5))\n                                    /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                    let _23 := staticcall(gas(), cleaned_5, _22, sub(abi_encode_address_bool(add(_22, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15239:15243  \"this\" */ address(), /** @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\" */ value_1), _22), _22, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                                    /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                    if iszero(_23)\n                                    {\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let pos_4 := mload(64)\n                                        returndatacopy(pos_4, _1, returndatasize())\n                                        revert(pos_4, returndatasize())\n                                    }\n                                    /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                    let expr_13 := _1\n                                    if _23\n                                    {\n                                        let _24 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                                        /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                        if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\" */ returndatasize()) { _24 := returndatasize() }\n                                        finalize_allocation(_22, _24)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        if slt(sub(/** @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\" */ add(_22, _24), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _22), 32) { revert(0, 0) }\n                                        /// @src 21:15823:15874  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                        expr_13 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_22)\n                                    }\n                                    /// @src 21:15810:15883  \"(amount0In * IPoolFactory(factory).getFee(address(this), stable)) / 10000\"\n                                    fun_update0(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:15811:15874  \"amount0In * IPoolFactory(factory).getFee(address(this), stable)\" */ checked_mul_uint256(expr_8, expr_13), /** @src 21:15878:15883  \"10000\" */ 0x2710))\n                                }\n                                /// @src 21:15950:16052  \"if (amount1In > 0) _update1((amount1In * IPoolFactory(factory).getFee(address(this), stable)) / 10000)\"\n                                if /** @src 21:15954:15967  \"amount1In > 0\" */ iszero(iszero(expr_10))\n                                /// @src 21:15950:16052  \"if (amount1In > 0) _update1((amount1In * IPoolFactory(factory).getFee(address(this), stable)) / 10000)\"\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let cleaned_6 := and(sload(/** @src 21:14269:14276  \"factory\" */ 0x0f), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                    let value_2 := and(shr(160, sload(/** @src 21:16035:16041  \"stable\" */ 0x0b)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                                    /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                    let _25 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                    mstore(_25, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0xcc56b2c5))\n                                    /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                    let _26 := staticcall(gas(), cleaned_6, _25, sub(abi_encode_address_bool(add(_25, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15239:15243  \"this\" */ address(), /** @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\" */ value_2), _25), _25, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                                    /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                    if iszero(_26)\n                                    {\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let pos_5 := mload(64)\n                                        returndatacopy(pos_5, _1, returndatasize())\n                                        revert(pos_5, returndatasize())\n                                    }\n                                    /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                    let expr_14 := _1\n                                    if _26\n                                    {\n                                        let _27 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                                        /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                        if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\" */ returndatasize()) { _27 := returndatasize() }\n                                        finalize_allocation(_25, _27)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        if slt(sub(/** @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\" */ add(_25, _27), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _25), 32) { revert(0, 0) }\n                                        /// @src 21:15991:16042  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                        expr_14 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_25)\n                                    }\n                                    /// @src 21:15978:16051  \"(amount1In * IPoolFactory(factory).getFee(address(this), stable)) / 10000\"\n                                    fun_update1(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:15979:16042  \"amount1In * IPoolFactory(factory).getFee(address(this), stable)\" */ checked_mul_uint256(expr_10, expr_14), /** @src 21:16046:16051  \"10000\" */ 0x2710))\n                                }\n                                /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _28 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                                mstore(_28, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\" */ add(_28, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15239:15243  \"this\" */ address())\n                                /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _29 := staticcall(gas(), cleaned_3, _28, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\" */ _28, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                                /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                                if iszero(_29)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_6 := mload(64)\n                                    returndatacopy(pos_6, _1, returndatasize())\n                                    revert(pos_6, returndatasize())\n                                }\n                                /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                                let expr_15 := _1\n                                if _29\n                                {\n                                    let _30 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                                    /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _30 := returndatasize() }\n                                    finalize_allocation(_28, _30)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\" */ add(_28, _30), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _28), 32) { revert(0, 0) }\n                                    /// @src 21:16130:16170  \"IERC20(_token0).balanceOf(address(this))\"\n                                    expr_15 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_28)\n                                }\n                                /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _31 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                                mstore(_31, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x70a08231))\n                                mstore(/** @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\" */ add(_31, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:15239:15243  \"this\" */ address())\n                                /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _32 := staticcall(gas(), cleaned_4, _31, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\" */ _31, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                                /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                                if iszero(_32)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_7 := mload(64)\n                                    returndatacopy(pos_7, _1, returndatasize())\n                                    revert(pos_7, returndatasize())\n                                }\n                                /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                                let expr_16 := _1\n                                if _32\n                                {\n                                    let _33 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                                    /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32, /** @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _33 := returndatasize() }\n                                    finalize_allocation(_31, _33)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\" */ add(_31, _33), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _31), 32) { revert(0, 0) }\n                                    /// @src 21:16353:16393  \"IERC20(_token1).balanceOf(address(this))\"\n                                    expr_16 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_31)\n                                }\n                                /// @src 21:16496:16520  \"_k(_balance0, _balance1)\"\n                                let expr_17 := fun_k(expr_15, expr_16)\n                                /// @src 21:16492:16559  \"if (_k(_balance0, _balance1) < _k(_reserve0, _reserve1)) revert K()\"\n                                if /** @src 21:16496:16547  \"_k(_balance0, _balance1) < _k(_reserve0, _reserve1)\" */ lt(expr_17, /** @src 21:16523:16547  \"_k(_reserve0, _reserve1)\" */ fun_k(_8, _9))\n                                /// @src 21:16492:16559  \"if (_k(_balance0, _balance1) < _k(_reserve0, _reserve1)) revert K()\"\n                                {\n                                    /// @src 21:16556:16559  \"K()\"\n                                    let _34 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:16556:16559  \"K()\"\n                                    mstore(_34, shl(224, 0xa932492f))\n                                    revert(_34, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                /// @src 21:16621:16630  \"_reserve1\"\n                                fun_update(expr_15, expr_16, _8, _9)\n                                /// @src 21:16646:16712  \"Swap(msg.sender, to, amount0In, amount1In, amount0Out, amount1Out)\"\n                                let _35 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                mstore(_35, expr_8)\n                                mstore(add(_35, 32), expr_10)\n                                mstore(add(_35, 64), calldataload(4))\n                                mstore(add(_35, 96), calldataload(36))\n                                /// @src 21:16646:16712  \"Swap(msg.sender, to, amount0In, amount1In, amount0Out, amount1Out)\"\n                                log3(_35, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 128, /** @src 21:16646:16712  \"Swap(msg.sender, to, amount0In, amount1In, amount0Out, amount1Out)\" */ 0xb3e2773606abfd36b5bd91394b3a54d1398336c65005baf7bf7a05efeffaf75b, /** @src 21:16651:16661  \"msg.sender\" */ caller(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(value, sub(shl(160, 1), 1)))\n                                sstore(/** @src 12:2924:2945  \"_status = NOT_ENTERED\" */ 0x08, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 1)\n                                return(_1, _1)\n                            }\n                            case 0x06fdde03 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let memPtr := mload(64)\n                                let ret := 0\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let slotValue := sload(/** @src 21:21631:21636  \"_name\" */ 0x09)\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let length := extract_byte_array_length(slotValue)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(memPtr, length)\n                                let _36 := 0x20\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let _37 := 1\n                                switch and(slotValue, _37)\n                                case 0 {\n                                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(memPtr, _36), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ and(slotValue, not(255)))\n                                    ret := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _36)\n                                }\n                                case /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 1 {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(0, /** @src 21:21631:21636  \"_name\" */ 0x09)\n                                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let dataPos := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let i := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0\n                                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    for { }\n                                    lt(i, length)\n                                    {\n                                        i := add(i, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _36)\n                                    }\n                                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    {\n                                        mstore(add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _36), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ sload(dataPos))\n                                        dataPos := add(dataPos, _37)\n                                    }\n                                    ret := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _36)\n                                }\n                                finalize_allocation(memPtr, sub(ret, memPtr))\n                                let memPos := mload(64)\n                                mstore(memPos, _36)\n                                return(memPos, sub(abi_encode_string(memPtr, add(memPos, _36)), memPos))\n                            }\n                            case 0x0902f1ac {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _38 := sload(/** @src 21:7689:7697  \"reserve0\" */ 0x13)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _39 := sload(/** @src 21:7719:7727  \"reserve1\" */ 0x14)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _40 := sload(/** @src 21:7759:7777  \"blockTimestampLast\" */ 0x15)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_1 := mload(64)\n                                return(memPos_1, sub(abi_encode_uint256_uint256_uint256(memPos_1, _38, _39, _40), memPos_1))\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                                let value0 := abi_decode_address_35700()\n                                /// @src 3:9105:9109  \"true\"\n                                fun_approve(/** @src 10:735:745  \"msg.sender\" */ caller(), /** @src 3:9105:9109  \"true\" */ value0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36))\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, 1)\n                                return(memPos_2, 32)\n                            }\n                            case 0x0dfe1681 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let value_3 := and(sload(/** @src 21:1296:1317  \"address public token0\" */ 12), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                let memPos_3 := mload(64)\n                                mstore(memPos_3, value_3)\n                                return(memPos_3, 32)\n                            }\n                            case 0x13345fe1 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 128) { revert(_1, _1) }\n                                let value0_1 := abi_decode_address_35700()\n                                let value_4 := calldataload(36)\n                                let value_5 := calldataload(68)\n                                let _41 := calldataload(100)\n                                /// @src 21:10562:10583  \"new uint256[](points)\"\n                                let expr_mpos := allocate_and_zero_memory_array_array_uint256_dyn(value_5)\n                                /// @src 21:10611:10630  \"observations.length\"\n                                let expr_18 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:10611:10623  \"observations\" */ 0x10)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let diff := add(expr_18, not(0))\n                                if gt(diff, expr_18)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 36)\n                                }\n                                /// @src 21:10644:10682  \"uint256 i = length - (points * window)\"\n                                let var_i := /** @src 21:10656:10682  \"length - (points * window)\" */ checked_sub_uint256(diff, /** @src 21:10666:10681  \"points * window\" */ checked_mul_uint256(value_5, _41))\n                                /// @src 21:10723:10740  \"uint256 index = 0\"\n                                let var_index := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0\n                                /// @src 21:10751:11429  \"for (; i < length; i += window) {...\"\n                                for { }\n                                /** @src 21:10758:10768  \"i < length\" */ lt(var_i, diff)\n                                /// @src 21:10751:11429  \"for (; i < length; i += window) {...\"\n                                {\n                                    /// @src 21:10770:10781  \"i += window\"\n                                    var_i := checked_add_uint256(var_i, _41)\n                                }\n                                {\n                                    /// @src 21:10797:10819  \"nextIndex = i + window\"\n                                    let var_nextIndex := /** @src 21:10809:10819  \"i + window\" */ checked_add_uint256(var_i, _41)\n                                    /// @src 21:10855:10878  \"observations[nextIndex]\"\n                                    let _42, _43 := storage_array_index_access_struct_Observation__dyn(var_nextIndex)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let _44 := sload(/** @src 21:10855:10888  \"observations[nextIndex].timestamp\" */ _42)\n                                    /// @src 21:10891:10906  \"observations[i]\"\n                                    let _45, _46 := storage_array_index_access_struct_Observation__dyn(var_i)\n                                    /// @src 21:10855:10916  \"observations[nextIndex].timestamp - observations[i].timestamp\"\n                                    let expr_19 := checked_sub_uint256(_44, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:10891:10916  \"observations[i].timestamp\" */ _45))\n                                    /// @src 21:10951:10974  \"observations[nextIndex]\"\n                                    let _47, _48 := storage_array_index_access_struct_Observation__dyn(var_nextIndex)\n                                    /// @src 21:10633:10634  \"1\"\n                                    let _49 := 0x01\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let _50 := sload(/** @src 21:10951:10993  \"observations[nextIndex].reserve0Cumulative\" */ add(_47, /** @src 21:10633:10634  \"1\" */ _49))\n                                    /// @src 21:10996:11011  \"observations[i]\"\n                                    let _51, _52 := storage_array_index_access_struct_Observation__dyn(var_i)\n                                    /// @src 21:10950:11061  \"(observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative) /...\"\n                                    let expr_20 := checked_div_uint256(/** @src 21:10951:11030  \"observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative\" */ checked_sub_uint256(_50, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:10996:11030  \"observations[i].reserve0Cumulative\" */ add(_51, /** @src 21:10633:10634  \"1\" */ _49))), /** @src 21:10950:11061  \"(observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative) /...\" */ expr_19)\n                                    /// @src 21:11096:11119  \"observations[nextIndex]\"\n                                    let _53, _54 := storage_array_index_access_struct_Observation__dyn(var_nextIndex)\n                                    /// @src 21:11096:11138  \"observations[nextIndex].reserve1Cumulative\"\n                                    let _55 := 2\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let _56 := sload(/** @src 21:11096:11138  \"observations[nextIndex].reserve1Cumulative\" */ add(_53, _55))\n                                    /// @src 21:11141:11156  \"observations[i]\"\n                                    let _57, _58 := storage_array_index_access_struct_Observation__dyn(var_i)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(/** @src 21:11220:11291  \"_prices[index] = _getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\" */ memory_array_index_access_uint256_dyn(expr_mpos, var_index), /** @src 21:11237:11291  \"_getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\" */ fun_getAmountOut(value_4, value0_1, expr_20, /** @src 21:11095:11206  \"(observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative) /...\" */ checked_div_uint256(/** @src 21:11096:11175  \"observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative\" */ checked_sub_uint256(_56, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:11141:11175  \"observations[i].reserve1Cumulative\" */ add(_57, /** @src 21:11096:11138  \"observations[nextIndex].reserve1Cumulative\" */ _55))), /** @src 21:11095:11206  \"(observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative) /...\" */ expr_19)))\n                                    /// @src 21:11387:11404  \"index = index + 1\"\n                                    var_index := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 21:11395:11404  \"index + 1\" */ var_index, /** @src 21:10633:10634  \"1\" */ _49)\n                                }\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_4 := mload(64)\n                                mstore(memPos_4, 32)\n                                return(memPos_4, sub(abi_encode_array_uint256_dyn(expr_mpos, add(memPos_4, 32)), memPos_4))\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _59 := sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_5 := mload(64)\n                                mstore(memPos_5, _59)\n                                return(memPos_5, 32)\n                            }\n                            case 0x1df8c717 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let var_reserve0Cumulative := _1\n                                let var_reserve1Cumulative := _1\n                                /// @src 21:9063:9106  \"reserve0Cumulative = reserve0CumulativeLast\"\n                                var_reserve0Cumulative := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:9084:9106  \"reserve0CumulativeLast\" */ 0x16)\n                                /// @src 21:9116:9159  \"reserve1Cumulative = reserve1CumulativeLast\"\n                                var_reserve1Cumulative := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:9137:9159  \"reserve1CumulativeLast\" */ 0x17)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _60 := sload(/** @src 21:7689:7697  \"reserve0\" */ 0x13)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _61 := sload(/** @src 21:7719:7727  \"reserve1\" */ 0x14)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _62 := sload(/** @src 21:7759:7777  \"blockTimestampLast\" */ 0x15)\n                                /// @src 21:9363:9654  \"if (_blockTimestampLast != blockTimestamp) {...\"\n                                if /** @src 21:9367:9404  \"_blockTimestampLast != blockTimestamp\" */ iszero(eq(_62, /** @src 21:9038:9053  \"block.timestamp\" */ timestamp()))\n                                /// @src 21:9363:9654  \"if (_blockTimestampLast != blockTimestamp) {...\"\n                                {\n                                    /// @src 21:9489:9525  \"blockTimestamp - _blockTimestampLast\"\n                                    let expr_21 := checked_sub_uint256(/** @src 21:9038:9053  \"block.timestamp\" */ timestamp(), /** @src 21:9489:9525  \"blockTimestamp - _blockTimestampLast\" */ _62)\n                                    /// @src 21:9539:9584  \"reserve0Cumulative += _reserve0 * timeElapsed\"\n                                    var_reserve0Cumulative := checked_add_uint256(var_reserve0Cumulative, /** @src 21:9561:9584  \"_reserve0 * timeElapsed\" */ checked_mul_uint256(_60, expr_21))\n                                    /// @src 21:9598:9643  \"reserve1Cumulative += _reserve1 * timeElapsed\"\n                                    var_reserve1Cumulative := checked_add_uint256(var_reserve1Cumulative, /** @src 21:9620:9643  \"_reserve1 * timeElapsed\" */ checked_mul_uint256(_61, expr_21))\n                                }\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_6 := mload(64)\n                                return(memPos_6, sub(abi_encode_uint256_uint256_uint256(memPos_6, var_reserve0Cumulative, var_reserve1Cumulative, /** @src 21:9038:9053  \"block.timestamp\" */ timestamp()), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPos_6))\n                            }\n                            case 0x205aabf1 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                mstore(_1, and(abi_decode_address_35700(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 21:2192:2239  \"mapping(address => uint256) public supplyIndex1\" */ 27)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _63 := sload(keccak256(_1, 64))\n                                let memPos_7 := mload(64)\n                                mstore(memPos_7, _63)\n                                return(memPos_7, 32)\n                            }\n                            case 0x22be3de1 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let value_6 := and(shr(160, sload(/** @src 21:1133:1151  \"bool public stable\" */ 11)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                                let memPos_8 := mload(64)\n                                mstore(memPos_8, iszero(iszero(value_6)))\n                                return(memPos_8, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_1, _1) }\n                                let value0_2 := abi_decode_address_35700()\n                                let value1 := abi_decode_address()\n                                let value_7 := calldataload(68)\n                                let _64 := and(value0_2, sub(shl(160, 1), 1))\n                                mstore(_1, _64)\n                                mstore(32, 1)\n                                let _65 := keccak256(_1, 64)\n                                mstore(0, /** @src 10:735:745  \"msg.sender\" */ caller())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(32, _65)\n                                let _66 := sload(keccak256(0, 64))\n                                /// @src 3:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                if /** @src 3:10828:10865  \"currentAllowance != type(uint256).max\" */ iszero(eq(_66, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ not(0)))\n                                /// @src 3:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                {\n                                    /// @src 3:10881:11011  \"if (currentAllowance < value) {...\"\n                                    if /** @src 3:10885:10909  \"currentAllowance < value\" */ lt(_66, value_7)\n                                    /// @src 3:10881:11011  \"if (currentAllowance < value) {...\"\n                                    {\n                                        /// @src 3:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        let _67 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                        /// @src 3:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        mstore(_67, shl(225, 0x7dc7a0d9))\n                                        revert(_67, sub(abi_encode_address_uint256_uint256(add(_67, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 10:735:745  \"msg.sender\" */ caller(), /** @src 3:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _66, value_7), _67))\n                                    }\n                                    /// @src 3:10057:10146  \"if (owner == address(0)) {...\"\n                                    if /** @src 3:10061:10080  \"owner == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _64)\n                                    /// @src 3:10057:10146  \"if (owner == address(0)) {...\"\n                                    {\n                                        /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        let _68 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                        /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        mstore(_68, shl(224, 0xe602df05))\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        mstore(/** @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_68, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), 0)\n                                        /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        revert(_68, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                                    }\n                                    /// @src 3:10155:10245  \"if (spender == address(0)) {...\"\n                                    if /** @src 3:10159:10180  \"spender == address(0)\" */ iszero(/** @src 10:735:745  \"msg.sender\" */ caller())\n                                    /// @src 3:10155:10245  \"if (spender == address(0)) {...\"\n                                    {\n                                        /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        let _69 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                        /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        mstore(_69, shl(225, 0x4a1406b1))\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        mstore(/** @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_69, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), 0)\n                                        /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        revert(_69, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                                    }\n                                    mstore(0, _64)\n                                    mstore(32, 1)\n                                    let _70 := keccak256(0, 64)\n                                    mstore(0, /** @src 10:735:745  \"msg.sender\" */ caller())\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(32, _70)\n                                    sstore(keccak256(0, 64), sub(/** @src 3:11077:11101  \"currentAllowance - value\" */ _66, value_7))\n                                }\n                                /// @src 3:5249:5254  \"value\"\n                                fun_transfer(value0_2, value1, value_7)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_9 := mload(64)\n                                mstore(memPos_9, 1)\n                                return(memPos_9, 32)\n                            }\n                            case 0x252c09d7 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                let value_8 := calldataload(4)\n                                /// @src 21:1560:1593  \"Observation[] public observations\"\n                                if iszero(lt(value_8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:1560:1593  \"Observation[] public observations\" */ 16)))\n                                {\n                                    revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, _1)\n                                }\n                                /// @src 21:1560:1593  \"Observation[] public observations\"\n                                let slot, offset_1 := storage_array_index_access_struct_Observation__dyn(value_8)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _71 := sload(/** @src 21:1560:1593  \"Observation[] public observations\" */ slot)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _72 := sload(/** @src 21:1560:1593  \"Observation[] public observations\" */ add(slot, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 1))\n                                let _73 := sload(/** @src 21:1560:1593  \"Observation[] public observations\" */ add(slot, 2))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_10 := mload(64)\n                                return(memPos_10, sub(abi_encode_uint256_uint256_uint256(memPos_10, _71, _72, _73), memPos_10))\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let memPos_11 := mload(64)\n                                mstore(memPos_11, /** @src 3:3075:3077  \"18\" */ 0x12)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                return(memPos_11, 32)\n                            }\n                            case 0x32c0defd {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _74 := sload(/** @src 21:2006:2027  \"uint256 public index0\" */ 24)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_12 := mload(64)\n                                mstore(memPos_12, _74)\n                                return(memPos_12, 32)\n                            }\n                            case 0x33580959 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let value_9 := and(sload(/** @src 21:1402:1425  \"address public poolFees\" */ 14), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                let memPos_13 := mload(64)\n                                mstore(memPos_13, value_9)\n                                return(memPos_13, 32)\n                            }\n                            case 0x3644e515 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let ret_1 := /** @src 5:2741:2761  \"_domainSeparatorV4()\" */ fun_domainSeparatorV4()\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_14 := mload(64)\n                                mstore(memPos_14, ret_1)\n                                return(memPos_14, 32)\n                            }\n                            case 0x392f37e9 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _75 := sload(/** @src 21:4424:4433  \"decimals0\" */ 0x11)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _76 := sload(/** @src 21:4435:4444  \"decimals1\" */ 0x12)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _77 := sload(/** @src 21:4446:4454  \"reserve0\" */ 0x13)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _78 := sload(/** @src 21:4456:4464  \"reserve1\" */ 0x14)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _79 := sload(/** @src 21:4466:4472  \"stable\" */ 0x0b)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _80 := sub(shl(160, 1), 1)\n                                let cleaned_7 := and(sload(/** @src 21:4474:4480  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _80)\n                                let cleaned_8 := and(sload(/** @src 21:4482:4488  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _80)\n                                let memPos_15 := mload(64)\n                                mstore(memPos_15, _75)\n                                mstore(add(memPos_15, 32), _76)\n                                mstore(add(memPos_15, 64), _77)\n                                mstore(add(memPos_15, 96), _78)\n                                mstore(add(memPos_15, 128), iszero(iszero(and(shr(160, _79), 0xff))))\n                                mstore(add(memPos_15, 160), cleaned_7)\n                                mstore(add(memPos_15, 192), cleaned_8)\n                                return(memPos_15, _2)\n                            }\n                            case 0x443cb4bc {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _81 := sload(/** @src 21:1691:1714  \"uint256 public reserve0\" */ 19)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_16 := mload(64)\n                                mstore(memPos_16, _81)\n                                return(memPos_16, 32)\n                            }\n                            case 0x4d5a9f8a {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                mstore(_1, and(abi_decode_address_35700(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 21:2272:2317  \"mapping(address => uint256) public claimable0\" */ 28)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _82 := sload(keccak256(_1, 64))\n                                let memPos_17 := mload(64)\n                                mstore(memPos_17, _82)\n                                return(memPos_17, 32)\n                            }\n                            case 0x5881c475 {\n                                if callvalue() { revert(_1, _1) }\n                                let param, param_1, param_2 := abi_decode_addresst_uint256t_uint256(calldatasize())\n                                let ret_2 := /** @src 21:10290:10326  \"sample(tokenIn, amountIn, points, 1)\" */ fun_sample(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ param, param_1, param_2)\n                                let memPos_18 := mload(64)\n                                mstore(memPos_18, 32)\n                                return(memPos_18, sub(abi_encode_array_uint256_dyn(ret_2, add(memPos_18, 32)), memPos_18))\n                            }\n                            case 0x5a76f25e {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _83 := sload(/** @src 21:1746:1769  \"uint256 public reserve1\" */ 20)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_19 := mload(64)\n                                mstore(memPos_19, _83)\n                                return(memPos_19, 32)\n                            }\n                            case 0x6a627842 {\n                                if callvalue() { revert(_1, _1) }\n                                let _84 := 32\n                                if slt(add(calldatasize(), not(3)), _84) { revert(_1, _1) }\n                                let value0_3 := abi_decode_address_35700()\n                                /// @src 12:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 12:2387:2388  \"_\"\n                                let var_liquidity := _1\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _85 := sload(/** @src 21:11619:11627  \"reserve0\" */ 0x13)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _86 := sload(/** @src 21:11629:11637  \"reserve1\" */ 0x14)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _87 := sub(shl(160, 1), 1)\n                                let cleaned_9 := and(sload(/** @src 21:11675:11681  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _87)\n                                /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                                let _88 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                let _89 := shl(224, 0x70a08231)\n                                /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                                mstore(_88, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _89)\n                                mstore(/** @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\" */ add(_88, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:11701:11705  \"this\" */ address())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _90 := 36\n                                /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                                let _91 := staticcall(gas(), cleaned_9, _88, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _90, /** @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\" */ _88, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84)\n                                /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                                if iszero(_91)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_8 := mload(64)\n                                    returndatacopy(pos_8, _1, returndatasize())\n                                    revert(pos_8, returndatasize())\n                                }\n                                /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                                let expr_22 := _1\n                                if _91\n                                {\n                                    let _92 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84\n                                    /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84, /** @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\" */ returndatasize()) { _92 := returndatasize() }\n                                    finalize_allocation(_88, _92)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\" */ add(_88, _92), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _88), _84) { revert(0, 0) }\n                                    /// @src 21:11668:11707  \"IERC20(token0).balanceOf(address(this))\"\n                                    expr_22 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_88)\n                                }\n                                let cleaned_10 := and(sload(/** @src 21:11744:11750  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _87)\n                                /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                                let _93 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                                mstore(_93, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _89)\n                                mstore(/** @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\" */ add(_93, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:11701:11705  \"this\" */ address())\n                                /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                                let _94 := staticcall(gas(), cleaned_10, _93, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _90, /** @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\" */ _93, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84)\n                                /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                                if iszero(_94)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_9 := mload(64)\n                                    returndatacopy(pos_9, _1, returndatasize())\n                                    revert(pos_9, returndatasize())\n                                }\n                                /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                                let expr_23 := _1\n                                if _94\n                                {\n                                    let _95 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84\n                                    /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84, /** @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\" */ returndatasize()) { _95 := returndatasize() }\n                                    finalize_allocation(_93, _95)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\" */ add(_93, _95), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _93), _84) { revert(0, 0) }\n                                    /// @src 21:11737:11776  \"IERC20(token1).balanceOf(address(this))\"\n                                    expr_23 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_93)\n                                }\n                                /// @src 21:11805:11826  \"_balance0 - _reserve0\"\n                                let expr_24 := checked_sub_uint256(expr_22, _85)\n                                /// @src 21:11855:11876  \"_balance1 - _reserve1\"\n                                let expr_25 := checked_sub_uint256(expr_23, _86)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _96 := sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02)\n                                /// @src 21:12011:12610  \"if (_totalSupply == 0) {...\"\n                                switch /** @src 21:12015:12032  \"_totalSupply == 0\" */ iszero(_96)\n                                case /** @src 21:12011:12610  \"if (_totalSupply == 0) {...\" */ 0 {\n                                    /// @src 21:12522:12559  \"(_amount0 * _totalSupply) / _reserve0\"\n                                    let expr_26 := checked_div_uint256(/** @src 21:12523:12546  \"_amount0 * _totalSupply\" */ checked_mul_uint256(expr_24, _96), /** @src 21:12522:12559  \"(_amount0 * _totalSupply) / _reserve0\" */ _85)\n                                    /// @src 21:12561:12598  \"(_amount1 * _totalSupply) / _reserve1\"\n                                    let _97 := checked_div_uint256(/** @src 21:12562:12585  \"_amount1 * _totalSupply\" */ checked_mul_uint256(expr_25, _96), /** @src 21:12561:12598  \"(_amount1 * _totalSupply) / _reserve1\" */ _86)\n                                    /// @src 19:2641:2654  \"a < b ? a : b\"\n                                    let expr_27 := _1\n                                    switch /** @src 19:2641:2646  \"a < b\" */ lt(expr_26, _97)\n                                    case /** @src 19:2641:2654  \"a < b ? a : b\" */ 0 { expr_27 := _97 }\n                                    default { expr_27 := expr_26 }\n                                    /// @src 21:12501:12599  \"liquidity = Math.min((_amount0 * _totalSupply) / _reserve0, (_amount1 * _totalSupply) / _reserve1)\"\n                                    var_liquidity := expr_27\n                                }\n                                default /// @src 21:12011:12610  \"if (_totalSupply == 0) {...\"\n                                {\n                                    /// @src 21:12060:12090  \"Math.sqrt(_amount0 * _amount1)\"\n                                    let expr_28 := fun_sqrt(/** @src 21:12070:12089  \"_amount0 * _amount1\" */ checked_mul_uint256(expr_24, expr_25))\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let diff_1 := add(expr_28, not(999))\n                                    if gt(diff_1, expr_28)\n                                    {\n                                        mstore(_1, shl(224, 0x4e487b71))\n                                        mstore(4, 0x11)\n                                        revert(_1, _90)\n                                    }\n                                    /// @src 21:12048:12110  \"liquidity = Math.sqrt(_amount0 * _amount1) - MINIMUM_LIQUIDITY\"\n                                    var_liquidity := diff_1\n                                    /// @src 21:1204:1211  \"10 ** 3\"\n                                    let _98 := 0x03e8\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let sum := add(_96, /** @src 21:1204:1211  \"10 ** 3\" */ _98)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if gt(_96, sum)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x11)\n                                        revert(0, _90)\n                                    }\n                                    sstore(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02, /** @src 3:6496:6517  \"_totalSupply += value\" */ sum)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(0, 1)\n                                    mstore(_84, 0)\n                                    let dataSlot := keccak256(0, 64)\n                                    sstore(dataSlot, add(sload(/** @src 3:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 21:1204:1211  \"10 ** 3\" */ _98))\n                                    /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                                    let _99 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    mstore(_99, /** @src 21:1204:1211  \"10 ** 3\" */ _98)\n                                    /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                                    log3(_99, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0, 1)\n                                    /// @src 21:12252:12471  \"if (stable) {...\"\n                                    if /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(shr(160, sload(/** @src 21:12256:12262  \"stable\" */ 0x0b)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                                    /// @src 21:12252:12471  \"if (stable) {...\"\n                                    {\n                                        /// @src 21:12298:12302  \"1e18\"\n                                        let _100 := 0x0de0b6b3a7640000\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let product := mul(expr_24, /** @src 21:12298:12302  \"1e18\" */ _100)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        if iszero(or(iszero(expr_24), eq(/** @src 21:12298:12302  \"1e18\" */ _100, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product, expr_24))))\n                                        {\n                                            mstore(_1, shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(_1, _90)\n                                        }\n                                        /// @src 21:12286:12315  \"(_amount0 * 1e18) / decimals0\"\n                                        let expr_29 := checked_div_uint256(product, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:12306:12315  \"decimals0\" */ 0x11))\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let product_1 := mul(expr_25, /** @src 21:12298:12302  \"1e18\" */ _100)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        if iszero(or(iszero(expr_25), eq(/** @src 21:12298:12302  \"1e18\" */ _100, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product_1, expr_25))))\n                                        {\n                                            mstore(_1, shl(224, 0x4e487b71))\n                                            mstore(4, /** @src 21:12306:12315  \"decimals0\" */ 0x11)\n                                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                            revert(_1, _90)\n                                        }\n                                        /// @src 21:12282:12375  \"if ((_amount0 * 1e18) / decimals0 != (_amount1 * 1e18) / decimals1) revert DepositsNotEqual()\"\n                                        if /** @src 21:12286:12348  \"(_amount0 * 1e18) / decimals0 != (_amount1 * 1e18) / decimals1\" */ iszero(eq(expr_29, /** @src 21:12319:12348  \"(_amount1 * 1e18) / decimals1\" */ checked_div_uint256(product_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:12339:12348  \"decimals1\" */ 0x12))))\n                                        /// @src 21:12282:12375  \"if ((_amount0 * 1e18) / decimals0 != (_amount1 * 1e18) / decimals1) revert DepositsNotEqual()\"\n                                        {\n                                            /// @src 21:12357:12375  \"DepositsNotEqual()\"\n                                            let _101 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                            /// @src 21:12357:12375  \"DepositsNotEqual()\"\n                                            mstore(_101, shl(225, 0x05026bfd))\n                                            revert(_101, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                        }\n                                        /// @src 21:12393:12456  \"if (_k(_amount0, _amount1) <= MINIMUM_K) revert BelowMinimumK()\"\n                                        if /** @src 21:12397:12432  \"_k(_amount0, _amount1) <= MINIMUM_K\" */ iszero(gt(/** @src 21:12397:12419  \"_k(_amount0, _amount1)\" */ fun_k(expr_24, expr_25), /** @src 21:1255:1263  \"10 ** 10\" */ 0x02540be400))\n                                        /// @src 21:12393:12456  \"if (_k(_amount0, _amount1) <= MINIMUM_K) revert BelowMinimumK()\"\n                                        {\n                                            /// @src 21:12441:12456  \"BelowMinimumK()\"\n                                            let _102 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                            /// @src 21:12441:12456  \"BelowMinimumK()\"\n                                            mstore(_102, shl(225, 0x21c69d6f))\n                                            revert(_102, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                        }\n                                    }\n                                }\n                                /// @src 21:12619:12690  \"if (liquidity < MINIMUM_LIQUIDITY) revert InsufficientLiquidityMinted()\"\n                                if /** @src 21:12623:12652  \"liquidity < MINIMUM_LIQUIDITY\" */ lt(var_liquidity, /** @src 21:1204:1211  \"10 ** 3\" */ 0x03e8)\n                                /// @src 21:12619:12690  \"if (liquidity < MINIMUM_LIQUIDITY) revert InsufficientLiquidityMinted()\"\n                                {\n                                    /// @src 21:12661:12690  \"InsufficientLiquidityMinted()\"\n                                    let _103 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:12661:12690  \"InsufficientLiquidityMinted()\"\n                                    mstore(_103, shl(226, 0x3489be75))\n                                    revert(_103, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                let _104 := and(/** @src 3:7791:7812  \"account == address(0)\" */ value0_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _87)\n                                /// @src 3:7787:7878  \"if (account == address(0)) {...\"\n                                if /** @src 3:7791:7812  \"account == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _104)\n                                /// @src 3:7787:7878  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    let _105 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(_105, shl(224, 0xec442f05))\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(/** @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ add(_105, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), 0)\n                                    /// @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(_105, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _90)\n                                }\n                                sstore(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02, /** @src 3:6496:6517  \"_totalSupply += value\" */ checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02), /** @src 3:6496:6517  \"_totalSupply += value\" */ var_liquidity))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(0, _104)\n                                mstore(_84, 0)\n                                let dataSlot_1 := keccak256(0, 64)\n                                sstore(dataSlot_1, add(sload(/** @src 3:7284:7306  \"_balances[to] += value\" */ dataSlot_1), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_liquidity))\n                                /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                                let _106 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                mstore(_106, var_liquidity)\n                                /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                                log3(_106, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _84, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ _104)\n                                /// @src 21:12772:12781  \"_reserve1\"\n                                fun_update(expr_22, expr_23, _85, _86)\n                                /// @src 21:12797:12833  \"Mint(msg.sender, _amount0, _amount1)\"\n                                let _107 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                mstore(_107, expr_24)\n                                mstore(add(_107, _84), expr_25)\n                                /// @src 21:12797:12833  \"Mint(msg.sender, _amount0, _amount1)\"\n                                log2(_107, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 21:12797:12833  \"Mint(msg.sender, _amount0, _amount1)\" */ 0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f, /** @src 21:12802:12812  \"msg.sender\" */ caller())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                sstore(/** @src 12:2924:2945  \"_status = NOT_ENTERED\" */ 0x08, /** @src 12:1713:1714  \"1\" */ 0x01)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_20 := mload(64)\n                                mstore(memPos_20, var_liquidity)\n                                return(memPos_20, _84)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                mstore(_1, and(abi_decode_address_35700(), sub(shl(160, 1), 1)))\n                                mstore(32, _1)\n                                let _108 := sload(keccak256(_1, 64))\n                                let memPos_21 := mload(64)\n                                mstore(memPos_21, _108)\n                                return(memPos_21, 32)\n                            }\n                            case 0x7ecebe00 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                mstore(_1, and(abi_decode_address_35700(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 11:624:631  \"_nonces\" */ 0x07)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _109 := sload(keccak256(_1, 64))\n                                let memPos_22 := mload(64)\n                                mstore(memPos_22, _109)\n                                return(memPos_22, 32)\n                            }\n                            case 0x84b0196e {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                /// @src 17:6092:6140  \"return _name.toStringWithFallback(_nameFallback)\"\n                                let var_mpos := /** @src 17:6099:6140  \"_name.toStringWithFallback(_nameFallback)\" */ fun_toStringWithFallback(/** @src 17:6099:6104  \"_name\" */ loadimmutable(\"2727\"))\n                                /// @src 17:6547:6601  \"return _version.toStringWithFallback(_versionFallback)\"\n                                let var_mpos_1 := /** @src 17:6554:6601  \"_version.toStringWithFallback(_versionFallback)\" */ fun_toStringWithFallback_35716(/** @src 17:6554:6562  \"_version\" */ loadimmutable(\"2730\"))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPtr_1 := mload(64)\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                let newFreePtr := add(memPtr_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x20)\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1))\n                                {\n                                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0, shl(224, 0x4e487b71))\n                                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                    revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x24)\n                                }\n                                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ newFreePtr)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(memPtr_1, _1)\n                                let memPos_23 := mload(64)\n                                mstore(memPos_23, shl(248, 15))\n                                mstore(add(memPos_23, 0x20), _2)\n                                let tail := abi_encode_string(var_mpos, add(memPos_23, _2))\n                                mstore(add(memPos_23, 64), sub(tail, memPos_23))\n                                let tail_1 := abi_encode_string(var_mpos_1, tail)\n                                mstore(add(memPos_23, 96), /** @src 17:5590:5603  \"block.chainid\" */ chainid())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(add(memPos_23, 128), /** @src 17:5625:5629  \"this\" */ address())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(add(memPos_23, 160), _1)\n                                mstore(add(memPos_23, 192), sub(tail_1, memPos_23))\n                                return(memPos_23, sub(abi_encode_array_uint256_dyn(memPtr_1, tail_1), memPos_23))\n                            }\n                            case 0x89afcb44 {\n                                if callvalue() { revert(_1, _1) }\n                                let _110 := 32\n                                if slt(add(calldatasize(), not(3)), _110) { revert(_1, _1) }\n                                let value0_4 := abi_decode_address_35700()\n                                /// @src 12:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _111 := sload(/** @src 21:13015:13023  \"reserve0\" */ 0x13)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _112 := sload(/** @src 21:13025:13033  \"reserve1\" */ 0x14)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _113 := sub(shl(160, 1), 1)\n                                let cleaned_11 := and(sload(/** @src 21:13082:13088  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _113)\n                                let cleaned_12 := and(sload(/** @src 21:13090:13096  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _113)\n                                /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _114 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                let _115 := shl(224, 0x70a08231)\n                                /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                                mstore(_114, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _115)\n                                mstore(/** @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\" */ add(_114, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:13161:13165  \"this\" */ address())\n                                /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _116 := staticcall(gas(), cleaned_11, _114, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\" */ _114, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110)\n                                /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                                if iszero(_116)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_10 := mload(64)\n                                    returndatacopy(pos_10, _1, returndatasize())\n                                    revert(pos_10, returndatasize())\n                                }\n                                /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                                let expr_30 := _1\n                                if _116\n                                {\n                                    let _117 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110\n                                    /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110, /** @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _117 := returndatasize() }\n                                    finalize_allocation(_114, _117)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\" */ add(_114, _117), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _114), _110) { revert(0, 0) }\n                                    /// @src 21:13127:13167  \"IERC20(_token0).balanceOf(address(this))\"\n                                    expr_30 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_114)\n                                }\n                                /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _118 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                                mstore(_118, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _115)\n                                mstore(/** @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\" */ add(_118, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:13161:13165  \"this\" */ address())\n                                /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _119 := staticcall(gas(), cleaned_12, _118, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\" */ _118, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110)\n                                /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                                if iszero(_119)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_11 := mload(64)\n                                    returndatacopy(pos_11, _1, returndatasize())\n                                    revert(pos_11, returndatasize())\n                                }\n                                /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                                let expr_31 := _1\n                                if _119\n                                {\n                                    let _120 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110\n                                    /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110, /** @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _120 := returndatasize() }\n                                    finalize_allocation(_118, _120)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\" */ add(_118, _120), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _118), _110) { revert(0, 0) }\n                                    /// @src 21:13197:13237  \"IERC20(_token1).balanceOf(address(this))\"\n                                    expr_31 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_118)\n                                }\n                                mstore(_1, /** @src 21:13161:13165  \"this\" */ address())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(_110, _1)\n                                let _121 := sload(keccak256(_1, 64))\n                                let _122 := sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02)\n                                /// @src 21:13427:13476  \"amount0 = (_liquidity * _balance0) / _totalSupply\"\n                                let var_amount0 := /** @src 21:13437:13476  \"(_liquidity * _balance0) / _totalSupply\" */ checked_div_uint256(/** @src 21:13438:13460  \"_liquidity * _balance0\" */ checked_mul_uint256(_121, expr_30), /** @src 21:13437:13476  \"(_liquidity * _balance0) / _totalSupply\" */ _122)\n                                /// @src 21:13534:13583  \"amount1 = (_liquidity * _balance1) / _totalSupply\"\n                                let var_amount1 := /** @src 21:13544:13583  \"(_liquidity * _balance1) / _totalSupply\" */ checked_div_uint256(/** @src 21:13545:13567  \"_liquidity * _balance1\" */ checked_mul_uint256(_121, expr_31), /** @src 21:13544:13583  \"(_liquidity * _balance1) / _totalSupply\" */ _122)\n                                /// @src 21:13645:13673  \"amount0 == 0 || amount1 == 0\"\n                                let expr_32 := /** @src 21:13645:13657  \"amount0 == 0\" */ iszero(var_amount0)\n                                /// @src 21:13645:13673  \"amount0 == 0 || amount1 == 0\"\n                                if iszero(expr_32)\n                                {\n                                    expr_32 := /** @src 21:13661:13673  \"amount1 == 0\" */ iszero(var_amount1)\n                                }\n                                /// @src 21:13641:13711  \"if (amount0 == 0 || amount1 == 0) revert InsufficientLiquidityBurned()\"\n                                if expr_32\n                                {\n                                    /// @src 21:13682:13711  \"InsufficientLiquidityBurned()\"\n                                    let _123 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:13682:13711  \"InsufficientLiquidityBurned()\"\n                                    mstore(_123, shl(224, 0x749383ad))\n                                    revert(_123, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                /// @src 3:8313:8402  \"if (account == address(0)) {...\"\n                                if /** @src 3:8317:8338  \"account == address(0)\" */ iszero(/** @src 21:13161:13165  \"this\" */ address())\n                                /// @src 3:8313:8402  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 3:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                    let _124 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 3:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                    mstore(_124, shl(225, 0x4b637e8f))\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(/** @src 3:8361:8391  \"ERC20InvalidSender(address(0))\" */ add(_124, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), _1)\n                                    /// @src 3:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                    revert(_124, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                                }\n                                mstore(0, /** @src 21:13161:13165  \"this\" */ address())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(_110, 0)\n                                let _125 := sload(keccak256(0, 64))\n                                /// @src 3:6599:6714  \"if (fromBalance < value) {...\"\n                                if /** @src 3:6603:6622  \"fromBalance < value\" */ lt(_125, _121)\n                                /// @src 3:6599:6714  \"if (fromBalance < value) {...\"\n                                {\n                                    /// @src 3:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    let _126 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 3:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    mstore(_126, shl(226, 0x391434e3))\n                                    revert(_126, sub(abi_encode_address_uint256_uint256(add(_126, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:13161:13165  \"this\" */ address(), /** @src 3:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ _125, _121), _126))\n                                }\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(0, /** @src 21:13161:13165  \"this\" */ address())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(_110, 0)\n                                sstore(keccak256(0, 64), sub(/** @src 3:6852:6871  \"fromBalance - value\" */ _125, _121))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                sstore(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _121))\n                                /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                                let _127 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                mstore(_127, _121)\n                                /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                                log3(_127, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 21:13161:13165  \"this\" */ address(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0)\n                                /// @src 21:13796:13803  \"amount0\"\n                                fun_safeTransfer(cleaned_11, value0_4, var_amount0)\n                                /// @src 21:13847:13854  \"amount1\"\n                                fun_safeTransfer(cleaned_12, value0_4, var_amount1)\n                                /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _128 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                                mstore(_128, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _115)\n                                mstore(/** @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\" */ add(_128, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:13161:13165  \"this\" */ address())\n                                /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _129 := staticcall(gas(), cleaned_11, _128, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\" */ _128, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110)\n                                /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                                if iszero(_129)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_12 := mload(64)\n                                    returndatacopy(pos_12, _1, returndatasize())\n                                    revert(pos_12, returndatasize())\n                                }\n                                /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                                let expr_33 := _1\n                                if _129\n                                {\n                                    let _130 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110\n                                    /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110, /** @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _130 := returndatasize() }\n                                    finalize_allocation(_128, _130)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\" */ add(_128, _130), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _128), _110) { revert(0, 0) }\n                                    /// @src 21:13877:13917  \"IERC20(_token0).balanceOf(address(this))\"\n                                    expr_33 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_128)\n                                }\n                                /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _131 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                                mstore(_131, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _115)\n                                mstore(/** @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\" */ add(_131, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:13161:13165  \"this\" */ address())\n                                /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _132 := staticcall(gas(), cleaned_12, _131, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\" */ _131, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110)\n                                /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                                if iszero(_132)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_13 := mload(64)\n                                    returndatacopy(pos_13, _1, returndatasize())\n                                    revert(pos_13, returndatasize())\n                                }\n                                /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                                let expr_34 := _1\n                                if _132\n                                {\n                                    let _133 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110\n                                    /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _110, /** @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _133 := returndatasize() }\n                                    finalize_allocation(_131, _133)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\" */ add(_131, _133), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _131), _110) { revert(0, 0) }\n                                    /// @src 21:13939:13979  \"IERC20(_token1).balanceOf(address(this))\"\n                                    expr_34 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_131)\n                                }\n                                /// @src 21:14031:14040  \"_reserve1\"\n                                fun_update(expr_33, expr_34, _111, _112)\n                                /// @src 21:14056:14094  \"Burn(msg.sender, to, amount0, amount1)\"\n                                let _134 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                mstore(_134, var_amount0)\n                                mstore(add(_134, _110), var_amount1)\n                                /// @src 21:14056:14094  \"Burn(msg.sender, to, amount0, amount1)\"\n                                log3(_134, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 21:14056:14094  \"Burn(msg.sender, to, amount0, amount1)\" */ 0x5d624aa9c148153ab3446c1b154f660ee7701e549fe9b62dab7171b1c80e6fa2, /** @src 21:14061:14071  \"msg.sender\" */ caller(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 21:14056:14094  \"Burn(msg.sender, to, amount0, amount1)\" */ value0_4, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _113))\n                                sstore(/** @src 12:2924:2945  \"_status = NOT_ENTERED\" */ 0x08, /** @src 12:1713:1714  \"1\" */ 0x01)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_24 := mload(64)\n                                mstore(memPos_24, var_amount0)\n                                mstore(add(memPos_24, _110), var_amount1)\n                                return(memPos_24, 64)\n                            }\n                            case 0x8a7b8cf2 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let ret_3 := fun_lastObservation()\n                                let memPos_25 := mload(64)\n                                mstore(memPos_25, mload(ret_3))\n                                mstore(add(memPos_25, 0x20), mload(add(ret_3, 0x20)))\n                                mstore(add(memPos_25, 64), mload(add(ret_3, 64)))\n                                return(memPos_25, 96)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let memPtr_2 := mload(64)\n                                let ret_4 := 0\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let slotValue_1 := sload(/** @src 21:21729:21736  \"_symbol\" */ 0x0a)\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let length_1 := extract_byte_array_length(slotValue_1)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(memPtr_2, length_1)\n                                let _135 := 0x20\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let _136 := 1\n                                switch and(slotValue_1, _136)\n                                case 0 {\n                                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(memPtr_2, _135), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ and(slotValue_1, not(255)))\n                                    ret_4 := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr_2, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length_1)))), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _135)\n                                }\n                                case /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 1 {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(0, /** @src 21:21729:21736  \"_symbol\" */ 0x0a)\n                                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let dataPos_1 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    let i_1 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0\n                                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    for { }\n                                    lt(i_1, length_1)\n                                    {\n                                        i_1 := add(i_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _135)\n                                    }\n                                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                    {\n                                        mstore(add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr_2, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i_1), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _135), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, _136)\n                                    }\n                                    ret_4 := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr_2, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i_1), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _135)\n                                }\n                                finalize_allocation(memPtr_2, sub(ret_4, memPtr_2))\n                                let memPos_26 := mload(64)\n                                mstore(memPos_26, _135)\n                                return(memPos_26, sub(abi_encode_string(memPtr_2, add(memPos_26, _135)), memPos_26))\n                            }\n                            case 0x9d63848a {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _137 := sub(shl(160, 1), 1)\n                                let cleaned_13 := and(sload(/** @src 21:4605:4611  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _137)\n                                let cleaned_14 := and(sload(/** @src 21:4613:4619  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _137)\n                                let memPos_27 := mload(64)\n                                return(memPos_27, sub(abi_encode_address_address(memPos_27, cleaned_13, cleaned_14), memPos_27))\n                            }\n                            case 0x9e8cc04b {\n                                if callvalue() { revert(_1, _1) }\n                                let param_3, param_4, param_5 := abi_decode_addresst_uint256t_uint256(calldatasize())\n                                /// @src 21:9842:9883  \"sample(tokenIn, amountIn, granularity, 1)\"\n                                let expr_mpos_1 := fun_sample(param_3, param_4, param_5)\n                                /// @src 21:9893:9923  \"uint256 priceAverageCumulative\"\n                                let var_priceAverageCumulative := _1\n                                var_priceAverageCumulative := _1\n                                /// @src 21:9951:9965  \"_prices.length\"\n                                let expr_35 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 21:9951:9965  \"_prices.length\" */ expr_mpos_1)\n                                /// @src 21:9980:9993  \"uint256 i = 0\"\n                                let var_i_1 := _1\n                                /// @src 21:9975:10074  \"for (uint256 i = 0; i < _length; i++) {...\"\n                                for { }\n                                /** @src 21:9995:10006  \"i < _length\" */ lt(var_i_1, expr_35)\n                                /// @src 21:9980:9993  \"uint256 i = 0\"\n                                {\n                                    /// @src 21:10008:10011  \"i++\"\n                                    var_i_1 := increment_uint256(var_i_1)\n                                }\n                                {\n                                    /// @src 21:10027:10063  \"priceAverageCumulative += _prices[i]\"\n                                    var_priceAverageCumulative := checked_add_uint256(var_priceAverageCumulative, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 21:10053:10063  \"_prices[i]\" */ memory_array_index_access_uint256_dyn(expr_mpos_1, var_i_1)))\n                                }\n                                /// @src 21:10083:10126  \"return priceAverageCumulative / granularity\"\n                                let var_amountOut := /** @src 21:10090:10126  \"priceAverageCumulative / granularity\" */ checked_div_uint256(var_priceAverageCumulative, param_5)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_28 := mload(64)\n                                mstore(memPos_28, var_amountOut)\n                                return(memPos_28, 32)\n                            }\n                            case 0x9f767c88 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                mstore(_1, and(abi_decode_address_35700(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 21:2113:2160  \"mapping(address => uint256) public supplyIndex0\" */ 26)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _138 := sload(keccak256(_1, 64))\n                                let memPos_29 := mload(64)\n                                mstore(memPos_29, _138)\n                                return(memPos_29, 32)\n                            }\n                            case 0xa1ac4d13 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                mstore(_1, and(abi_decode_address_35700(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 21:2349:2394  \"mapping(address => uint256) public claimable1\" */ 29)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _139 := sload(keccak256(_1, 64))\n                                let memPos_30 := mload(64)\n                                mstore(memPos_30, _139)\n                                return(memPos_30, 32)\n                            }\n                            case 0xa9059cbb {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                                let value0_5 := abi_decode_address_35700()\n                                /// @src 3:3754:3759  \"value\"\n                                fun_transfer(/** @src 10:735:745  \"msg.sender\" */ caller(), /** @src 3:3754:3759  \"value\" */ value0_5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(36))\n                                let memPos_31 := mload(64)\n                                mstore(memPos_31, 1)\n                                return(memPos_31, 32)\n                            }\n                            case 0xb84c8246 {\n                                if callvalue() { revert(_1, _1) }\n                                let _140 := 32\n                                if slt(add(calldatasize(), not(3)), _140) { revert(_1, _1) }\n                                let offset_2 := calldataload(4)\n                                let _141 := 0xffffffffffffffff\n                                if gt(offset_2, _141) { revert(_1, _1) }\n                                let value0_6, value1_1 := abi_decode_bytes_calldata(add(4, offset_2), calldatasize())\n                                let _142 := sub(shl(160, 1), 1)\n                                let cleaned_15 := and(sload(/** @src 21:3830:3836  \"_voter\" */ 0x0b), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _142)\n                                /// @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\"\n                                let _143 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\"\n                                mstore(_143, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(225, 0x3bbc4b07))\n                                /// @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\"\n                                let _144 := staticcall(gas(), cleaned_15, _143, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\" */ _143, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _140)\n                                /// @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\"\n                                if iszero(_144)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_14 := mload(64)\n                                    returndatacopy(pos_14, _1, returndatasize())\n                                    revert(pos_14, returndatasize())\n                                }\n                                /// @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\"\n                                let expr_36 := _1\n                                if _144\n                                {\n                                    let _145 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _140\n                                    /// @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _140, /** @src 21:3823:3856  \"IVoter(_voter).emergencyCouncil()\" */ returndatasize()) { _145 := returndatasize() }\n                                    finalize_allocation(_143, _145)\n                                    expr_36 := abi_decode_address_fromMemory(_143, add(_143, _145))\n                                }\n                                /// @src 21:3805:3886  \"if (msg.sender != IVoter(_voter).emergencyCouncil()) revert NotEmergencyCouncil()\"\n                                if /** @src 21:3809:3856  \"msg.sender != IVoter(_voter).emergencyCouncil()\" */ iszero(eq(/** @src 21:3809:3819  \"msg.sender\" */ caller(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 21:3809:3856  \"msg.sender != IVoter(_voter).emergencyCouncil()\" */ expr_36, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _142)))\n                                /// @src 21:3805:3886  \"if (msg.sender != IVoter(_voter).emergencyCouncil()) revert NotEmergencyCouncil()\"\n                                {\n                                    /// @src 21:3865:3886  \"NotEmergencyCouncil()\"\n                                    let _146 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:3865:3886  \"NotEmergencyCouncil()\"\n                                    mstore(_146, shl(224, 0xc5601293))\n                                    revert(_146, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                if gt(value1_1, _141)\n                                {\n                                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                    revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x24)\n                                }\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 21:3896:3914  \"_symbol = __symbol\" */ 0x0a)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ value1_1)\n                                let srcOffset := _1\n                                switch gt(value1_1, 31)\n                                case 1 {\n                                    let loopEnd := and(value1_1, not(31))\n                                    let dstPtr := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                                    let i_2 := _1\n                                    for { } lt(i_2, loopEnd) { i_2 := add(i_2, _140) }\n                                    {\n                                        sstore(dstPtr, calldataload(add(value0_6, srcOffset)))\n                                        dstPtr := add(dstPtr, 1)\n                                        srcOffset := add(srcOffset, _140)\n                                    }\n                                    if lt(loopEnd, value1_1)\n                                    {\n                                        sstore(dstPtr, and(calldataload(add(value0_6, srcOffset)), not(shr(and(shl(3, value1_1), 248), not(0)))))\n                                    }\n                                    sstore(/** @src 21:3896:3914  \"_symbol = __symbol\" */ 0x0a, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(1, value1_1), 1))\n                                }\n                                default {\n                                    let value_10 := _1\n                                    if value1_1\n                                    {\n                                        value_10 := calldataload(add(value0_6, srcOffset))\n                                    }\n                                    sstore(/** @src 21:3896:3914  \"_symbol = __symbol\" */ 0x0a, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_10, value1_1))\n                                }\n                                return(_1, _1)\n                            }\n                            case 0xbc25cf77 {\n                                if callvalue() { revert(_1, _1) }\n                                let _147 := 32\n                                if slt(add(calldatasize(), not(3)), _147) { revert(_1, _1) }\n                                let value0_7 := abi_decode_address_35700()\n                                /// @src 12:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _148 := sub(shl(160, 1), 1)\n                                let cleaned_16 := and(sload(/** @src 21:16847:16853  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _148)\n                                let cleaned_17 := and(sload(/** @src 21:16855:16861  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _148)\n                                /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _149 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                let _150 := shl(224, 0x70a08231)\n                                /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                                mstore(_149, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _150)\n                                mstore(/** @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\" */ add(_149, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:16939:16943  \"this\" */ address())\n                                /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                                let _151 := staticcall(gas(), cleaned_16, _149, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\" */ _149, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _147)\n                                /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                                if iszero(_151)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_15 := mload(64)\n                                    returndatacopy(pos_15, _1, returndatasize())\n                                    revert(pos_15, returndatasize())\n                                }\n                                /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                                let expr_37 := _1\n                                if _151\n                                {\n                                    let _152 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _147\n                                    /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _147, /** @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\" */ returndatasize()) { _152 := returndatasize() }\n                                    finalize_allocation(_149, _152)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\" */ add(_149, _152), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _149), _147) { revert(0, 0) }\n                                    /// @src 21:16905:16945  \"IERC20(_token0).balanceOf(address(this))\"\n                                    expr_37 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_149)\n                                }\n                                /// @src 21:16905:16958  \"IERC20(_token0).balanceOf(address(this)) - (reserve0)\"\n                                fun_safeTransfer(cleaned_16, value0_7, checked_sub_uint256(expr_37, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:16949:16957  \"reserve0\" */ 0x13)))\n                                /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _153 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                                mstore(_153, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _150)\n                                mstore(/** @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\" */ add(_153, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:16939:16943  \"this\" */ address())\n                                /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                                let _154 := staticcall(gas(), cleaned_17, _153, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\" */ _153, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _147)\n                                /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                                if iszero(_154)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_16 := mload(64)\n                                    returndatacopy(pos_16, _1, returndatasize())\n                                    revert(pos_16, returndatasize())\n                                }\n                                /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                                let expr_38 := _1\n                                if _154\n                                {\n                                    let _155 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _147\n                                    /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _147, /** @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\" */ returndatasize()) { _155 := returndatasize() }\n                                    finalize_allocation(_153, _155)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\" */ add(_153, _155), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _153), _147) { revert(0, 0) }\n                                    /// @src 21:17002:17042  \"IERC20(_token1).balanceOf(address(this))\"\n                                    expr_38 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_153)\n                                }\n                                /// @src 21:17002:17055  \"IERC20(_token1).balanceOf(address(this)) - (reserve1)\"\n                                fun_safeTransfer(cleaned_17, value0_7, checked_sub_uint256(expr_38, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:17046:17054  \"reserve1\" */ 0x14)))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                sstore(/** @src 12:2924:2945  \"_status = NOT_ENTERED\" */ 0x08, /** @src 12:1713:1714  \"1\" */ 0x01)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                return(_1, _1)\n                            }\n                            case 0xbda39cad {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _156 := sload(/** @src 21:2059:2080  \"uint256 public index1\" */ 25)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_32 := mload(64)\n                                mstore(memPos_32, _156)\n                                return(memPos_32, 32)\n                            }\n                            case 0xbf944dbc {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _157 := sload(/** @src 21:1867:1904  \"uint256 public reserve0CumulativeLast\" */ 22)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_33 := mload(64)\n                                mstore(memPos_33, _157)\n                                return(memPos_33, 32)\n                            }\n                            case 0xc245febc {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _158 := sload(/** @src 21:1936:1973  \"uint256 public reserve1CumulativeLast\" */ 23)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_34 := mload(64)\n                                mstore(memPos_34, _158)\n                                return(memPos_34, 32)\n                            }\n                            case 0xc45a0155 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let value_11 := and(sload(/** @src 21:1457:1479  \"address public factory\" */ 15), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                let memPos_35 := mload(64)\n                                mstore(memPos_35, value_11)\n                                return(memPos_35, 32)\n                            }\n                            case 0xc47f0027 {\n                                if callvalue() { revert(_1, _1) }\n                                let _159 := 32\n                                if slt(add(calldatasize(), not(3)), _159) { revert(_1, _1) }\n                                let offset_3 := calldataload(4)\n                                let _160 := 0xffffffffffffffff\n                                if gt(offset_3, _160) { revert(_1, _1) }\n                                let value0_8, value1_2 := abi_decode_bytes_calldata(add(4, offset_3), calldatasize())\n                                let _161 := sub(shl(160, 1), 1)\n                                let cleaned_18 := and(sload(/** @src 21:3622:3628  \"_voter\" */ 0x0b), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _161)\n                                /// @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\"\n                                let _162 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\"\n                                mstore(_162, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(225, 0x3bbc4b07))\n                                /// @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\"\n                                let _163 := staticcall(gas(), cleaned_18, _162, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\" */ _162, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _159)\n                                /// @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\"\n                                if iszero(_163)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_17 := mload(64)\n                                    returndatacopy(pos_17, _1, returndatasize())\n                                    revert(pos_17, returndatasize())\n                                }\n                                /// @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\"\n                                let expr_39 := _1\n                                if _163\n                                {\n                                    let _164 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _159\n                                    /// @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _159, /** @src 21:3615:3648  \"IVoter(_voter).emergencyCouncil()\" */ returndatasize()) { _164 := returndatasize() }\n                                    finalize_allocation(_162, _164)\n                                    expr_39 := abi_decode_address_fromMemory(_162, add(_162, _164))\n                                }\n                                /// @src 21:3597:3678  \"if (msg.sender != IVoter(_voter).emergencyCouncil()) revert NotEmergencyCouncil()\"\n                                if /** @src 21:3601:3648  \"msg.sender != IVoter(_voter).emergencyCouncil()\" */ iszero(eq(/** @src 21:3601:3611  \"msg.sender\" */ caller(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 21:3601:3648  \"msg.sender != IVoter(_voter).emergencyCouncil()\" */ expr_39, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _161)))\n                                /// @src 21:3597:3678  \"if (msg.sender != IVoter(_voter).emergencyCouncil()) revert NotEmergencyCouncil()\"\n                                {\n                                    /// @src 21:3657:3678  \"NotEmergencyCouncil()\"\n                                    let _165 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:3657:3678  \"NotEmergencyCouncil()\"\n                                    mstore(_165, /** @src 21:3865:3886  \"NotEmergencyCouncil()\" */ shl(224, 0xc5601293))\n                                    /// @src 21:3657:3678  \"NotEmergencyCouncil()\"\n                                    revert(_165, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                if gt(value1_2, _160)\n                                {\n                                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                    revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x24)\n                                }\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                clean_up_bytearray_end_slots_string_storage_35729(extract_byte_array_length(sload(/** @src 21:3688:3702  \"_name = __name\" */ 0x09)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ value1_2)\n                                let srcOffset_1 := _1\n                                switch gt(value1_2, 31)\n                                case 1 {\n                                    let loopEnd_1 := and(value1_2, not(31))\n                                    let dstPtr_1 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                                    let i_3 := _1\n                                    for { } lt(i_3, loopEnd_1) { i_3 := add(i_3, _159) }\n                                    {\n                                        sstore(dstPtr_1, calldataload(add(value0_8, srcOffset_1)))\n                                        dstPtr_1 := add(dstPtr_1, 1)\n                                        srcOffset_1 := add(srcOffset_1, _159)\n                                    }\n                                    if lt(loopEnd_1, value1_2)\n                                    {\n                                        sstore(dstPtr_1, and(calldataload(add(value0_8, srcOffset_1)), not(shr(and(shl(3, value1_2), 248), not(0)))))\n                                    }\n                                    sstore(/** @src 21:3688:3702  \"_name = __name\" */ 0x09, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(1, value1_2), 1))\n                                }\n                                default {\n                                    let value_12 := _1\n                                    if value1_2\n                                    {\n                                        value_12 := calldataload(add(value0_8, srcOffset_1))\n                                    }\n                                    sstore(/** @src 21:3688:3702  \"_name = __name\" */ 0x09, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_12, value1_2))\n                                }\n                                return(_1, _1)\n                            }\n                            case 0xc5700a02 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let _166 := sload(/** @src 21:1801:1834  \"uint256 public blockTimestampLast\" */ 21)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_36 := mload(64)\n                                mstore(memPos_36, _166)\n                                return(memPos_36, 32)\n                            }\n                            case 0xd21220a7 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let value_13 := and(sload(/** @src 21:1349:1370  \"address public token1\" */ 13), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                let memPos_37 := mload(64)\n                                mstore(memPos_37, value_13)\n                                return(memPos_37, 32)\n                            }\n                            case 0xd294f093 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                mstore(_1, /** @src 21:4755:4765  \"msg.sender\" */ caller())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _167 := 0x20\n                                mstore(_167, _1)\n                                let _168 := sload(keccak256(_1, 64))\n                                /// @src 21:6371:7518  \"if (_supplied > 0) {...\"\n                                switch /** @src 21:6375:6388  \"_supplied > 0\" */ iszero(iszero(_168))\n                                case /** @src 21:6371:7518  \"if (_supplied > 0) {...\" */ 0 {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let _169 := sload(/** @src 21:7406:7412  \"index0\" */ 0x18)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(_167, /** @src 21:7380:7392  \"supplyIndex0\" */ 0x1a)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    sstore(keccak256(_1, 64), _169)\n                                    let _170 := sload(/** @src 21:7501:7507  \"index1\" */ 0x19)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(_167, /** @src 21:7475:7487  \"supplyIndex1\" */ 0x1b)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    sstore(keccak256(_1, 64), _170)\n                                }\n                                default /// @src 21:6371:7518  \"if (_supplied > 0) {...\"\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(_1, /** @src 21:4755:4765  \"msg.sender\" */ caller())\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(_167, /** @src 21:6428:6440  \"supplyIndex0\" */ 0x1a)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let _171 := sload(keccak256(_1, 64))\n                                    mstore(_167, /** @src 21:6531:6543  \"supplyIndex1\" */ 0x1b)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let _172 := sload(keccak256(_1, 64))\n                                    let _173 := sload(/** @src 21:6586:6592  \"index0\" */ 0x18)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let _174 := sload(/** @src 21:6666:6672  \"index1\" */ 0x19)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(_167, /** @src 21:6428:6440  \"supplyIndex0\" */ 0x1a)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    sstore(keccak256(_1, 64), _173)\n                                    mstore(_167, /** @src 21:6531:6543  \"supplyIndex1\" */ 0x1b)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    sstore(keccak256(_1, 64), _174)\n                                    /// @src 21:6849:6872  \"_index0 - _supplyIndex0\"\n                                    let expr_40 := checked_sub_uint256(_173, _171)\n                                    /// @src 21:6962:6985  \"_index1 - _supplyIndex1\"\n                                    let expr_41 := checked_sub_uint256(_174, _172)\n                                    /// @src 21:6999:7193  \"if (_delta0 > 0) {...\"\n                                    if /** @src 21:7003:7014  \"_delta0 > 0\" */ iszero(iszero(expr_40))\n                                    /// @src 21:6999:7193  \"if (_delta0 > 0) {...\"\n                                    {\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let r := div(/** @src 21:7052:7071  \"_supplied * _delta0\" */ checked_mul_uint256(_168, expr_40), /** @src 21:7075:7079  \"1e18\" */ 0x0de0b6b3a7640000)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        mstore(_1, /** @src 21:4755:4765  \"msg.sender\" */ caller())\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        mstore(_167, /** @src 21:7147:7157  \"claimable0\" */ 0x1c)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let dataSlot_2 := keccak256(_1, 64)\n                                        sstore(dataSlot_2, /** @src 21:7147:7178  \"claimable0[recipient] += _share\" */ checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:7147:7178  \"claimable0[recipient] += _share\" */ dataSlot_2), r))\n                                    }\n                                    /// @src 21:7206:7350  \"if (_delta1 > 0) {...\"\n                                    if /** @src 21:7210:7221  \"_delta1 > 0\" */ iszero(iszero(expr_41))\n                                    /// @src 21:7206:7350  \"if (_delta1 > 0) {...\"\n                                    {\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let r_1 := div(/** @src 21:7259:7278  \"_supplied * _delta1\" */ checked_mul_uint256(_168, expr_41), /** @src 21:7282:7286  \"1e18\" */ 0x0de0b6b3a7640000)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        mstore(_1, /** @src 21:4755:4765  \"msg.sender\" */ caller())\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        mstore(_167, /** @src 21:7304:7314  \"claimable1\" */ 0x1d)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let dataSlot_3 := keccak256(_1, 64)\n                                        sstore(dataSlot_3, /** @src 21:7304:7335  \"claimable1[recipient] += _share\" */ checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:7304:7335  \"claimable1[recipient] += _share\" */ dataSlot_3), r_1))\n                                    }\n                                }\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(_1, /** @src 21:4755:4765  \"msg.sender\" */ caller())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(_167, /** @src 21:4788:4798  \"claimable0\" */ 0x1c)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _175 := sload(keccak256(_1, 64))\n                                mstore(_167, /** @src 21:4831:4841  \"claimable1\" */ 0x1d)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _176 := sload(keccak256(_1, 64))\n                                /// @src 21:4868:4880  \"claimed0 > 0\"\n                                let _177 := iszero(_175)\n                                /// @src 21:4868:4896  \"claimed0 > 0 || claimed1 > 0\"\n                                let expr_42 := /** @src 21:4868:4880  \"claimed0 > 0\" */ iszero(_177)\n                                /// @src 21:4868:4896  \"claimed0 > 0 || claimed1 > 0\"\n                                if _177\n                                {\n                                    expr_42 := /** @src 21:4884:4896  \"claimed1 > 0\" */ iszero(iszero(_176))\n                                }\n                                /// @src 21:4864:5136  \"if (claimed0 > 0 || claimed1 > 0) {...\"\n                                if expr_42\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(_167, /** @src 21:4788:4798  \"claimable0\" */ 0x1c)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    sstore(keccak256(_1, 64), _1)\n                                    mstore(_167, /** @src 21:4831:4841  \"claimable1\" */ 0x1d)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    sstore(keccak256(_1, 64), _1)\n                                    let cleaned_19 := and(sload(/** @src 21:5002:5010  \"poolFees\" */ 0x0e), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                    /// @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\"\n                                    if iszero(extcodesize(cleaned_19))\n                                    {\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        revert(_1, _1)\n                                    }\n                                    /// @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\"\n                                    let _178 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\"\n                                    mstore(_178, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(225, 0x299e7ae7))\n                                    /// @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\"\n                                    let _179 := call(gas(), cleaned_19, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, /** @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\" */ _178, sub(abi_encode_address_uint256_uint256(add(_178, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:4755:4765  \"msg.sender\" */ caller(), /** @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\" */ _175, _176), _178), _178, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                                    /// @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\"\n                                    if iszero(_179)\n                                    {\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let pos_18 := mload(64)\n                                        returndatacopy(pos_18, _1, returndatasize())\n                                        revert(pos_18, returndatasize())\n                                    }\n                                    /// @src 21:4993:5056  \"PoolFees(poolFees).claimFeesFor(msg.sender, claimed0, claimed1)\"\n                                    if _179\n                                    {\n                                        finalize_allocation_35698(_178)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        if _1 { revert(_1, _1) }\n                                    }\n                                    /// @src 21:5076:5125  \"Claim(msg.sender, msg.sender, claimed0, claimed1)\"\n                                    let _180 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    mstore(_180, _175)\n                                    mstore(add(_180, _167), _176)\n                                    /// @src 21:5076:5125  \"Claim(msg.sender, msg.sender, claimed0, claimed1)\"\n                                    log3(_180, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 21:5076:5125  \"Claim(msg.sender, msg.sender, claimed0, claimed1)\" */ 0x865ca08d59f5cb456e85cd2f7ef63664ea4f73327414e9d8152c4158b0e94645, /** @src 21:4755:4765  \"msg.sender\" */ caller(), caller())\n                                }\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_38 := mload(64)\n                                mstore(memPos_38, _175)\n                                mstore(add(memPos_38, _167), _176)\n                                return(memPos_38, 64)\n                            }\n                            case 0xd505accf {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_1, _1) }\n                                let value0_9 := abi_decode_address_35700()\n                                let value1_3 := abi_decode_address()\n                                let value_14 := calldataload(68)\n                                let value_15 := calldataload(100)\n                                let value_16 := calldataload(132)\n                                if iszero(eq(value_16, and(value_16, 0xff))) { revert(_1, _1) }\n                                /// @src 5:1879:1976  \"if (block.timestamp > deadline) {...\"\n                                if /** @src 5:1883:1909  \"block.timestamp > deadline\" */ gt(/** @src 5:1883:1898  \"block.timestamp\" */ timestamp(), /** @src 5:1883:1909  \"block.timestamp > deadline\" */ value_15)\n                                /// @src 5:1879:1976  \"if (block.timestamp > deadline) {...\"\n                                {\n                                    /// @src 5:1932:1965  \"ERC2612ExpiredSignature(deadline)\"\n                                    let _181 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 5:1932:1965  \"ERC2612ExpiredSignature(deadline)\"\n                                    mstore(_181, shl(225, 0x313c8981))\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(/** @src 5:1932:1965  \"ERC2612ExpiredSignature(deadline)\" */ add(_181, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), value_15)\n                                    /// @src 5:1932:1965  \"ERC2612ExpiredSignature(deadline)\"\n                                    revert(_181, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                                }\n                                let _182 := sub(shl(160, 1), 1)\n                                let _183 := and(value0_9, _182)\n                                mstore(_1, _183)\n                                mstore(32, /** @src 11:1121:1128  \"_nonces\" */ 0x07)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let dataSlot_4 := keccak256(_1, 64)\n                                let _184 := sload(/** @src 11:1121:1137  \"_nonces[owner]++\" */ dataSlot_4)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                sstore(dataSlot_4, add(/** @src 11:1121:1137  \"_nonces[owner]++\" */ _184, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 1))\n                                /// @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                let expr_mpos_2 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                let _185 := add(expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                                mstore(_185, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(/** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64), _183)\n                                mstore(/** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 96), and(value1_3, _182))\n                                mstore(/** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 128), value_14)\n                                mstore(/** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 160), _184)\n                                mstore(/** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 192), value_15)\n                                /// @src 5:2017:2095  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                mstore(expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 192)\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                let newFreePtr_1 := add(expr_mpos_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, expr_mpos_2))\n                                {\n                                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0, shl(224, 0x4e487b71))\n                                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                    revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x24)\n                                }\n                                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ newFreePtr_1)\n                                /// @src 5:2007:2096  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\"\n                                let _186 := keccak256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _185, mload(/** @src 5:2007:2096  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\" */ expr_mpos_2))\n                                /// @src 17:5053:5073  \"_domainSeparatorV4()\"\n                                let _187 := fun_domainSeparatorV4()\n                                /// @src 18:3515:3748  \"assembly {...\"\n                                let usr$ptr := mload(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64)\n                                /// @src 18:3515:3748  \"assembly {...\"\n                                mstore(usr$ptr, \"\\x19\\x01\")\n                                mstore(add(usr$ptr, 0x02), _187)\n                                mstore(add(usr$ptr, 0x22), _186)\n                                /// @src 16:6967:6992  \"tryRecover(hash, v, r, s)\"\n                                let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(/** @src 18:3515:3748  \"assembly {...\" */ keccak256(usr$ptr, 0x42), /** @src 16:6967:6992  \"tryRecover(hash, v, r, s)\" */ value_16, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ calldataload(164), calldataload(196))\n                                /// @src 16:7021:7029  \"errorArg\"\n                                fun_throwError(expr_component_1, expr_component_2)\n                                /// @src 5:2216:2304  \"if (signer != owner) {...\"\n                                if /** @src 5:2220:2235  \"signer != owner\" */ iszero(eq(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 5:2220:2235  \"signer != owner\" */ expr_component, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _182), _183))\n                                /// @src 5:2216:2304  \"if (signer != owner) {...\"\n                                {\n                                    /// @src 5:2258:2293  \"ERC2612InvalidSigner(signer, owner)\"\n                                    let _188 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 5:2258:2293  \"ERC2612InvalidSigner(signer, owner)\"\n                                    mstore(_188, shl(225, 0x25c00723))\n                                    revert(_188, sub(abi_encode_address_address(add(_188, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 5:2258:2293  \"ERC2612InvalidSigner(signer, owner)\" */ expr_component, value0_9), _188))\n                                }\n                                /// @src 3:9105:9109  \"true\"\n                                fun_approve(value0_9, value1_3, value_14)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                return(_1, _1)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                                let value0_10 := abi_decode_address_35700()\n                                let value1_4 := abi_decode_address()\n                                let _189 := sub(shl(160, 1), 1)\n                                mstore(_1, and(value0_10, _189))\n                                mstore(32, /** @src 3:3952:3963  \"_allowances\" */ 0x01)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _190 := keccak256(_1, 64)\n                                mstore(0, and(value1_4, _189))\n                                mstore(32, _190)\n                                let _191 := sload(keccak256(0, 64))\n                                let memPos_39 := mload(64)\n                                mstore(memPos_39, _191)\n                                return(memPos_39, 32)\n                            }\n                            case 0xe4463eb2 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let memPos_40 := mload(64)\n                                mstore(memPos_40, /** @src 21:1549:1553  \"1800\" */ 0x0708)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                return(memPos_40, 32)\n                            }\n                            case 0xe4bbb5a8 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_1, _1) }\n                                let value0_11 := abi_decode_address_35700()\n                                let value1_5 := abi_decode_address()\n                                let value_17 := calldataload(68)\n                                let _192 := iszero(iszero(value_17))\n                                if iszero(eq(value_17, _192)) { revert(_1, _1) }\n                                let _193 := sload(/** @src 21:2570:2577  \"factory\" */ 0x0f)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _194 := sub(shl(160, 1), 1)\n                                /// @src 21:2566:2619  \"if (factory != address(0)) revert FactoryAlreadySet()\"\n                                if /** @src 21:2570:2591  \"factory != address(0)\" */ iszero(iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(_193, _194)))\n                                /// @src 21:2566:2619  \"if (factory != address(0)) revert FactoryAlreadySet()\"\n                                {\n                                    /// @src 21:2600:2619  \"FactoryAlreadySet()\"\n                                    let _195 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:2600:2619  \"FactoryAlreadySet()\"\n                                    mstore(_195, shl(227, 0x02a98a37))\n                                    revert(_195, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                let _196 := shl(160, 0xffffffffffffffffffffffff)\n                                sstore(/** @src 21:2570:2577  \"factory\" */ 0x0f, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(_193, _196), /** @src 21:2639:2649  \"msg.sender\" */ caller()))\n                                /// @src 21:2668:2697  \"IPoolFactory(factory).voter()\"\n                                let _197 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:2668:2697  \"IPoolFactory(factory).voter()\"\n                                mstore(_197, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(226, 0x11b25aab))\n                                let _198 := 32\n                                /// @src 21:2668:2697  \"IPoolFactory(factory).voter()\"\n                                let _199 := staticcall(gas(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(_193, _1), /** @src 21:2639:2649  \"msg.sender\" */ caller()), /** @src 21:2668:2697  \"IPoolFactory(factory).voter()\" */ _197, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:2668:2697  \"IPoolFactory(factory).voter()\" */ _197, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198)\n                                /// @src 21:2668:2697  \"IPoolFactory(factory).voter()\"\n                                if iszero(_199)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_19 := mload(64)\n                                    returndatacopy(pos_19, _1, returndatasize())\n                                    revert(pos_19, returndatasize())\n                                }\n                                /// @src 21:2668:2697  \"IPoolFactory(factory).voter()\"\n                                let expr_43 := _1\n                                if _199\n                                {\n                                    let _200 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198\n                                    /// @src 21:2668:2697  \"IPoolFactory(factory).voter()\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198, /** @src 21:2668:2697  \"IPoolFactory(factory).voter()\" */ returndatasize()) { _200 := returndatasize() }\n                                    finalize_allocation(_197, _200)\n                                    expr_43 := abi_decode_address_fromMemory(_197, add(_197, _200))\n                                }\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _201 := sload(/** @src 21:2659:2697  \"_voter = IPoolFactory(factory).voter()\" */ 0x0b)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                sstore(/** @src 21:2659:2697  \"_voter = IPoolFactory(factory).voter()\" */ 0x0b, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(or(and(_201, shl(168, 0xffffffffffffffffffffff)), and(expr_43, _194)), and(shl(160, _192), shl(160, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 255))))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _202 := and(value1_5, _194)\n                                sstore(/** @src 21:2707:2761  \"(token0, token1, stable) = (_token0, _token1, _stable)\" */ 0x0d, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(sload(/** @src 21:2707:2761  \"(token0, token1, stable) = (_token0, _token1, _stable)\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _196), _202))\n                                let _203 := and(value0_11, _194)\n                                sstore(/** @src 21:2707:2761  \"(token0, token1, stable) = (_token0, _token1, _stable)\" */ 0x0c, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(sload(/** @src 21:2707:2761  \"(token0, token1, stable) = (_token0, _token1, _stable)\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _196), _203))\n                                /// @src 21:2790:2820  \"new PoolFees(_token0, _token1)\"\n                                let _204 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:2790:2820  \"new PoolFees(_token0, _token1)\"\n                                let _205 := datasize(\"PoolFees_6496\")\n                                let _206 := add(_204, _205)\n                                let _207 := 0xffffffffffffffff\n                                if or(gt(_206, _207), lt(_206, _204))\n                                {\n                                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                    mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                    revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, 36)\n                                }\n                                /// @src 21:2790:2820  \"new PoolFees(_token0, _token1)\"\n                                datacopy(_204, dataoffset(\"PoolFees_6496\"), _205)\n                                let expr_address := create(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, /** @src 21:2790:2820  \"new PoolFees(_token0, _token1)\" */ _204, sub(abi_encode_address_address(_206, value0_11, value1_5), _204))\n                                if iszero(expr_address)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_20 := mload(64)\n                                    returndatacopy(pos_20, _1, returndatasize())\n                                    revert(pos_20, returndatasize())\n                                }\n                                sstore(/** @src 21:2771:2821  \"poolFees = address(new PoolFees(_token0, _token1))\" */ 0x0e, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ or(and(sload(/** @src 21:2771:2821  \"poolFees = address(new PoolFees(_token0, _token1))\" */ 0x0e), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _196), and(/** @src 21:2782:2821  \"address(new PoolFees(_token0, _token1))\" */ expr_address, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _194)))\n                                /// @src 21:2855:2878  \"ERC20(_token0).symbol()\"\n                                let _208 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                let _209 := shl(224, 0x95d89b41)\n                                /// @src 21:2855:2878  \"ERC20(_token0).symbol()\"\n                                mstore(_208, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _209)\n                                /// @src 21:2855:2878  \"ERC20(_token0).symbol()\"\n                                let _210 := staticcall(gas(), _203, _208, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:2855:2878  \"ERC20(_token0).symbol()\" */ _208, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                                /// @src 21:2855:2878  \"ERC20(_token0).symbol()\"\n                                if iszero(_210)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_21 := mload(64)\n                                    returndatacopy(pos_21, _1, returndatasize())\n                                    revert(pos_21, returndatasize())\n                                }\n                                /// @src 21:2855:2878  \"ERC20(_token0).symbol()\"\n                                let expr_mpos_3 := _1\n                                if _210\n                                {\n                                    let _211 := returndatasize()\n                                    returndatacopy(_208, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, /** @src 21:2855:2878  \"ERC20(_token0).symbol()\" */ _211)\n                                    finalize_allocation(_208, _211)\n                                    expr_mpos_3 := abi_decode_string_fromMemory(_208, add(_208, _211))\n                                }\n                                /// @src 21:2912:2935  \"ERC20(_token1).symbol()\"\n                                let _212 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:2912:2935  \"ERC20(_token1).symbol()\"\n                                mstore(_212, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _209)\n                                /// @src 21:2912:2935  \"ERC20(_token1).symbol()\"\n                                let _213 := staticcall(gas(), _202, _212, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:2912:2935  \"ERC20(_token1).symbol()\" */ _212, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                                /// @src 21:2912:2935  \"ERC20(_token1).symbol()\"\n                                if iszero(_213)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_22 := mload(64)\n                                    returndatacopy(pos_22, _1, returndatasize())\n                                    revert(pos_22, returndatasize())\n                                }\n                                /// @src 21:2912:2935  \"ERC20(_token1).symbol()\"\n                                let expr_mpos_4 := _1\n                                if _213\n                                {\n                                    let _214 := returndatasize()\n                                    returndatacopy(_212, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, /** @src 21:2912:2935  \"ERC20(_token1).symbol()\" */ _214)\n                                    finalize_allocation(_212, _214)\n                                    expr_mpos_4 := abi_decode_string_fromMemory(_212, add(_212, _214))\n                                }\n                                /// @src 21:2945:3328  \"if (_stable) {...\"\n                                switch value_17\n                                case 0 {\n                                    /// @src 21:3174:3234  \"abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\"\n                                    let expr_mpos_5 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    mstore(/** @src 21:3174:3234  \"abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ add(expr_mpos_5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198), \"VolatileV2 AMM - \")\n                                    let length_2 := mload(expr_mpos_3)\n                                    let _215 := add(expr_mpos_3, _198)\n                                    copy_memory_to_memory_with_cleanup(_215, add(/** @src 21:3174:3234  \"abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 49), length_2)\n                                    let _216 := add(/** @src 21:3174:3234  \"abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_2)\n                                    let _217 := \"/\"\n                                    mstore(add(_216, 49), _217)\n                                    let length_3 := mload(expr_mpos_4)\n                                    let _218 := add(expr_mpos_4, _198)\n                                    copy_memory_to_memory_with_cleanup(_218, add(_216, 50), length_3)\n                                    /// @src 21:3174:3234  \"abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\"\n                                    let _219 := sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(_216, length_3), /** @src 21:3174:3234  \"abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_5)\n                                    mstore(expr_mpos_5, add(_219, 18))\n                                    finalize_allocation(expr_mpos_5, add(_219, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 50))\n                                    let newLen := mload(expr_mpos_5)\n                                    if gt(newLen, /** @src 21:2790:2820  \"new PoolFees(_token0, _token1)\" */ _207)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    {\n                                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                        revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, 36)\n                                    }\n                                    clean_up_bytearray_end_slots_string_storage_35729(extract_byte_array_length(sload(/** @src 21:3159:3235  \"_name = string(abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen)\n                                    let srcOffset_2 := _1\n                                    srcOffset_2 := _198\n                                    switch gt(newLen, 31)\n                                    case 1 {\n                                        let loopEnd_2 := and(newLen, not(31))\n                                        mstore(_1, /** @src 21:3159:3235  \"_name = string(abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let dstPtr_2 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                                        let i_4 := _1\n                                        for { } lt(i_4, loopEnd_2) { i_4 := add(i_4, _198) }\n                                        {\n                                            sstore(dstPtr_2, mload(add(expr_mpos_5, srcOffset_2)))\n                                            dstPtr_2 := add(dstPtr_2, 1)\n                                            srcOffset_2 := add(srcOffset_2, _198)\n                                        }\n                                        if lt(loopEnd_2, newLen)\n                                        {\n                                            let lastValue := mload(add(expr_mpos_5, srcOffset_2))\n                                            sstore(dstPtr_2, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 21:3159:3235  \"_name = string(abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(1, newLen), 1))\n                                    }\n                                    default {\n                                        let value_18 := _1\n                                        if newLen\n                                        {\n                                            value_18 := mload(add(expr_mpos_5, srcOffset_2))\n                                        }\n                                        sstore(/** @src 21:3159:3235  \"_name = string(abi.encodePacked(\\\"VolatileV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_18, newLen))\n                                    }\n                                    /// @src 21:3266:3316  \"abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\"\n                                    let expr_mpos_6 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    mstore(/** @src 21:3266:3316  \"abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ add(expr_mpos_6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198), \"vAMMV2-\")\n                                    let length_4 := mload(expr_mpos_3)\n                                    copy_memory_to_memory_with_cleanup(_215, add(/** @src 21:3266:3316  \"abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 39), length_4)\n                                    let _220 := add(/** @src 21:3266:3316  \"abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_4)\n                                    mstore(add(_220, 39), _217)\n                                    let length_5 := mload(expr_mpos_4)\n                                    copy_memory_to_memory_with_cleanup(_218, add(_220, 40), length_5)\n                                    /// @src 21:3266:3316  \"abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\"\n                                    let _221 := sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(_220, length_5), /** @src 21:3266:3316  \"abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_6)\n                                    mstore(expr_mpos_6, add(_221, 8))\n                                    finalize_allocation(expr_mpos_6, add(_221, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 40))\n                                    let newLen_1 := mload(expr_mpos_6)\n                                    if gt(newLen_1, /** @src 21:2790:2820  \"new PoolFees(_token0, _token1)\" */ _207)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    {\n                                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                        revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, 36)\n                                    }\n                                    clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 21:3249:3317  \"_symbol = string(abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen_1)\n                                    let srcOffset_3 := _1\n                                    srcOffset_3 := _198\n                                    switch gt(newLen_1, 31)\n                                    case 1 {\n                                        let loopEnd_3 := and(newLen_1, not(31))\n                                        mstore(_1, /** @src 21:3249:3317  \"_symbol = string(abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let dstPtr_3 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                                        let i_5 := _1\n                                        for { } lt(i_5, loopEnd_3) { i_5 := add(i_5, _198) }\n                                        {\n                                            sstore(dstPtr_3, mload(add(expr_mpos_6, srcOffset_3)))\n                                            dstPtr_3 := add(dstPtr_3, 1)\n                                            srcOffset_3 := add(srcOffset_3, _198)\n                                        }\n                                        if lt(loopEnd_3, newLen_1)\n                                        {\n                                            let lastValue_1 := mload(add(expr_mpos_6, srcOffset_3))\n                                            sstore(dstPtr_3, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 21:3249:3317  \"_symbol = string(abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(1, newLen_1), 1))\n                                    }\n                                    default {\n                                        let value_19 := _1\n                                        if newLen_1\n                                        {\n                                            value_19 := mload(add(expr_mpos_6, srcOffset_3))\n                                        }\n                                        sstore(/** @src 21:3249:3317  \"_symbol = string(abi.encodePacked(\\\"vAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_19, newLen_1))\n                                    }\n                                }\n                                default /// @src 21:2945:3328  \"if (_stable) {...\"\n                                {\n                                    /// @src 21:2987:3045  \"abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\"\n                                    let expr_mpos_7 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    mstore(/** @src 21:2987:3045  \"abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ add(expr_mpos_7, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198), \"StableV2 AMM - \")\n                                    let length_6 := mload(expr_mpos_3)\n                                    let _222 := add(expr_mpos_3, _198)\n                                    copy_memory_to_memory_with_cleanup(_222, add(/** @src 21:2987:3045  \"abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_7, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 47), length_6)\n                                    let _223 := add(/** @src 21:2987:3045  \"abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_7, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_6)\n                                    let _224 := \"/\"\n                                    mstore(add(_223, 47), _224)\n                                    let length_7 := mload(expr_mpos_4)\n                                    let _225 := add(expr_mpos_4, _198)\n                                    copy_memory_to_memory_with_cleanup(_225, add(_223, 48), length_7)\n                                    /// @src 21:2987:3045  \"abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\"\n                                    let _226 := sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(_223, length_7), /** @src 21:2987:3045  \"abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_7)\n                                    mstore(expr_mpos_7, add(_226, 16))\n                                    finalize_allocation(expr_mpos_7, add(_226, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 48))\n                                    let newLen_2 := mload(expr_mpos_7)\n                                    if gt(newLen_2, /** @src 21:2790:2820  \"new PoolFees(_token0, _token1)\" */ _207)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    {\n                                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                        revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, 36)\n                                    }\n                                    clean_up_bytearray_end_slots_string_storage_35729(extract_byte_array_length(sload(/** @src 21:2972:3046  \"_name = string(abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen_2)\n                                    let srcOffset_4 := _1\n                                    srcOffset_4 := _198\n                                    switch gt(newLen_2, 31)\n                                    case 1 {\n                                        let loopEnd_4 := and(newLen_2, not(31))\n                                        mstore(_1, /** @src 21:2972:3046  \"_name = string(abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let dstPtr_4 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                                        let i_6 := _1\n                                        for { } lt(i_6, loopEnd_4) { i_6 := add(i_6, _198) }\n                                        {\n                                            sstore(dstPtr_4, mload(add(expr_mpos_7, srcOffset_4)))\n                                            dstPtr_4 := add(dstPtr_4, 1)\n                                            srcOffset_4 := add(srcOffset_4, _198)\n                                        }\n                                        if lt(loopEnd_4, newLen_2)\n                                        {\n                                            let lastValue_2 := mload(add(expr_mpos_7, srcOffset_4))\n                                            sstore(dstPtr_4, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 21:2972:3046  \"_name = string(abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(1, newLen_2), 1))\n                                    }\n                                    default {\n                                        let value_20 := _1\n                                        if newLen_2\n                                        {\n                                            value_20 := mload(add(expr_mpos_7, srcOffset_4))\n                                        }\n                                        sstore(/** @src 21:2972:3046  \"_name = string(abi.encodePacked(\\\"StableV2 AMM - \\\", symbol0, \\\"/\\\", symbol1))\" */ 0x09, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_20, newLen_2))\n                                    }\n                                    /// @src 21:3077:3127  \"abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\"\n                                    let expr_mpos_8 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    mstore(/** @src 21:3077:3127  \"abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ add(expr_mpos_8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198), \"sAMMV2-\")\n                                    let length_8 := mload(expr_mpos_3)\n                                    copy_memory_to_memory_with_cleanup(_222, add(/** @src 21:3077:3127  \"abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 39), length_8)\n                                    let _227 := add(/** @src 21:3077:3127  \"abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_8, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ length_8)\n                                    mstore(add(_227, 39), _224)\n                                    let length_9 := mload(expr_mpos_4)\n                                    copy_memory_to_memory_with_cleanup(_225, add(_227, 40), length_9)\n                                    /// @src 21:3077:3127  \"abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\"\n                                    let _228 := sub(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(_227, length_9), /** @src 21:3077:3127  \"abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1)\" */ expr_mpos_8)\n                                    mstore(expr_mpos_8, add(_228, 8))\n                                    finalize_allocation(expr_mpos_8, add(_228, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 40))\n                                    let newLen_3 := mload(expr_mpos_8)\n                                    if gt(newLen_3, /** @src 21:2790:2820  \"new PoolFees(_token0, _token1)\" */ _207)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    {\n                                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, shl(224, 0x4e487b71))\n                                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x41)\n                                        revert(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, 36)\n                                    }\n                                    clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 21:3060:3128  \"_symbol = string(abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ newLen_3)\n                                    let srcOffset_5 := _1\n                                    srcOffset_5 := _198\n                                    switch gt(newLen_3, 31)\n                                    case 1 {\n                                        let loopEnd_5 := and(newLen_3, not(31))\n                                        mstore(_1, /** @src 21:3060:3128  \"_symbol = string(abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a)\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let dstPtr_5 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                                        let i_7 := _1\n                                        for { } lt(i_7, loopEnd_5) { i_7 := add(i_7, _198) }\n                                        {\n                                            sstore(dstPtr_5, mload(add(expr_mpos_8, srcOffset_5)))\n                                            dstPtr_5 := add(dstPtr_5, 1)\n                                            srcOffset_5 := add(srcOffset_5, _198)\n                                        }\n                                        if lt(loopEnd_5, newLen_3)\n                                        {\n                                            let lastValue_3 := mload(add(expr_mpos_8, srcOffset_5))\n                                            sstore(dstPtr_5, and(lastValue_3, not(shr(and(shl(3, newLen_3), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 21:3060:3128  \"_symbol = string(abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(shl(1, newLen_3), 1))\n                                    }\n                                    default {\n                                        let value_21 := _1\n                                        if newLen_3\n                                        {\n                                            value_21 := mload(add(expr_mpos_8, srcOffset_5))\n                                        }\n                                        sstore(/** @src 21:3060:3128  \"_symbol = string(abi.encodePacked(\\\"sAMMV2-\\\", symbol0, \\\"/\\\", symbol1))\" */ 0x0a, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_21, newLen_3))\n                                    }\n                                }\n                                /// @src 21:3356:3381  \"ERC20(_token0).decimals()\"\n                                let _229 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                let _230 := shl(224, 0x313ce567)\n                                /// @src 21:3356:3381  \"ERC20(_token0).decimals()\"\n                                mstore(_229, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _230)\n                                /// @src 21:3356:3381  \"ERC20(_token0).decimals()\"\n                                let _231 := staticcall(gas(), _203, _229, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:3356:3381  \"ERC20(_token0).decimals()\" */ _229, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198)\n                                /// @src 21:3356:3381  \"ERC20(_token0).decimals()\"\n                                if iszero(_231)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_23 := mload(64)\n                                    returndatacopy(pos_23, _1, returndatasize())\n                                    revert(pos_23, returndatasize())\n                                }\n                                /// @src 21:3356:3381  \"ERC20(_token0).decimals()\"\n                                let expr_44 := _1\n                                if _231\n                                {\n                                    let _232 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198\n                                    /// @src 21:3356:3381  \"ERC20(_token0).decimals()\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198, /** @src 21:3356:3381  \"ERC20(_token0).decimals()\" */ returndatasize()) { _232 := returndatasize() }\n                                    finalize_allocation(_229, _232)\n                                    expr_44 := abi_decode_uint8_fromMemory(_229, add(_229, _232))\n                                }\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                sstore(/** @src 21:3338:3381  \"decimals0 = 10 ** ERC20(_token0).decimals()\" */ 0x11, /** @src 21:3350:3381  \"10 ** ERC20(_token0).decimals()\" */ checked_exp_rational_by_uint8(expr_44))\n                                /// @src 21:3409:3434  \"ERC20(_token1).decimals()\"\n                                let _233 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:3409:3434  \"ERC20(_token1).decimals()\"\n                                mstore(_233, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _230)\n                                /// @src 21:3409:3434  \"ERC20(_token1).decimals()\"\n                                let _234 := staticcall(gas(), _202, _233, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4, /** @src 21:3409:3434  \"ERC20(_token1).decimals()\" */ _233, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198)\n                                /// @src 21:3409:3434  \"ERC20(_token1).decimals()\"\n                                if iszero(_234)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_24 := mload(64)\n                                    returndatacopy(pos_24, _1, returndatasize())\n                                    revert(pos_24, returndatasize())\n                                }\n                                /// @src 21:3409:3434  \"ERC20(_token1).decimals()\"\n                                let expr_45 := _1\n                                if _234\n                                {\n                                    let _235 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198\n                                    /// @src 21:3409:3434  \"ERC20(_token1).decimals()\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198, /** @src 21:3409:3434  \"ERC20(_token1).decimals()\" */ returndatasize()) { _235 := returndatasize() }\n                                    finalize_allocation(_233, _235)\n                                    expr_45 := abi_decode_uint8_fromMemory(_233, add(_233, _235))\n                                }\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                sstore(/** @src 21:3391:3434  \"decimals1 = 10 ** ERC20(_token1).decimals()\" */ 0x12, /** @src 21:3403:3434  \"10 ** ERC20(_token1).decimals()\" */ checked_exp_rational_by_uint8(expr_45))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPtr_3 := mload(64)\n                                finalize_allocation_35742(memPtr_3)\n                                mstore(memPtr_3, /** @src 21:3475:3490  \"block.timestamp\" */ timestamp())\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(/** @src 21:3463:3497  \"Observation(block.timestamp, 0, 0)\" */ add(memPtr_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _198), _1)\n                                mstore(/** @src 21:3463:3497  \"Observation(block.timestamp, 0, 0)\" */ add(memPtr_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64), _1)\n                                /// @src 21:3445:3498  \"observations.push(Observation(block.timestamp, 0, 0))\"\n                                array_push_from_struct_Observation_to_array_struct_Observation_storage_dyn_ptr(memPtr_3)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                return(_1, _1)\n                            }\n                            case 0xebeb31db {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let length_10 := sload(/** @src 21:4031:4043  \"observations\" */ 0x10)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_41 := mload(64)\n                                mstore(memPos_41, length_10)\n                                return(memPos_41, 32)\n                            }\n                            case 0xf140a35a {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(_1, _1) }\n                                let value_22 := calldataload(4)\n                                let value1_6 := abi_decode_address()\n                                let _236 := sload(/** @src 21:19754:19762  \"reserve0\" */ 0x13)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let _237 := sload(/** @src 21:19764:19772  \"reserve1\" */ 0x14)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let cleaned_20 := and(sload(/** @src 21:19820:19827  \"factory\" */ 0x0f), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                                let value_23 := and(shr(160, sload(/** @src 21:19851:19857  \"stable\" */ 0x0b)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                                /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                let _238 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                mstore(_238, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0xcc56b2c5))\n                                /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                let _239 := staticcall(gas(), cleaned_20, _238, sub(abi_encode_address_bool(add(_238, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:19844:19848  \"this\" */ address(), /** @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\" */ value_23), _238), _238, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                                /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                if iszero(_239)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_25 := mload(64)\n                                    returndatacopy(pos_25, _1, returndatasize())\n                                    revert(pos_25, returndatasize())\n                                }\n                                /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                let expr_46 := _1\n                                if _239\n                                {\n                                    let _240 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32\n                                    /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                    if gt(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _240, /** @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\" */ returndatasize()) { _240 := returndatasize() }\n                                    finalize_allocation(_238, _240)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\" */ add(_238, _240), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _238), 32) { revert(0, 0) }\n                                    /// @src 21:19807:19858  \"IPoolFactory(factory).getFee(address(this), stable)\"\n                                    expr_46 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_238)\n                                }\n                                /// @src 21:19912:19973  \"return _getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\"\n                                let var := /** @src 21:19919:19973  \"_getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\" */ fun_getAmountOut(/** @src 21:19783:19867  \"amountIn -= (amountIn * IPoolFactory(factory).getFee(address(this), stable)) / 10000\" */ checked_sub_uint256(value_22, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:19796:19858  \"amountIn * IPoolFactory(factory).getFee(address(this), stable)\" */ checked_mul_uint256(value_22, expr_46), /** @src 21:19862:19867  \"10000\" */ 0x2710)), /** @src 21:19919:19973  \"_getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\" */ value1_6, _236, _237)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let memPos_42 := mload(64)\n                                mstore(memPos_42, var)\n                                return(memPos_42, 32)\n                            }\n                            case 0xfff6cae9 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                /// @src 12:2322:2425  \"modifier nonReentrant() {...\"\n                                fun_nonReentrantBefore()\n                                /// @src 21:17143:17197  \"if (totalSupply() == 0) revert InsufficientLiquidity()\"\n                                if /** @src 21:17147:17165  \"totalSupply() == 0\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02))\n                                /// @src 21:17143:17197  \"if (totalSupply() == 0) revert InsufficientLiquidity()\"\n                                {\n                                    /// @src 21:17174:17197  \"InsufficientLiquidity()\"\n                                    let _241 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 21:17174:17197  \"InsufficientLiquidity()\"\n                                    mstore(_241, /** @src 21:14534:14557  \"InsufficientLiquidity()\" */ shl(224, 0xbb55fd27))\n                                    /// @src 21:17174:17197  \"InsufficientLiquidity()\"\n                                    revert(_241, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                                }\n                                let _242 := sub(shl(160, 1), 1)\n                                let cleaned_21 := and(sload(/** @src 21:17222:17228  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _242)\n                                /// @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\"\n                                let _243 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                let _244 := shl(224, 0x70a08231)\n                                /// @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\"\n                                mstore(_243, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _244)\n                                mstore(/** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ add(_243, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:17248:17252  \"this\" */ address())\n                                /// @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\"\n                                let _245 := 32\n                                let _246 := staticcall(gas(), cleaned_21, _243, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ _243, _245)\n                                if iszero(_246)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_26 := mload(64)\n                                    returndatacopy(pos_26, _1, returndatasize())\n                                    revert(pos_26, returndatasize())\n                                }\n                                /// @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\"\n                                let expr_47 := _1\n                                if _246\n                                {\n                                    let _247 := _245\n                                    if gt(_245, returndatasize()) { _247 := returndatasize() }\n                                    finalize_allocation(_243, _247)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ add(_243, _247), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _243), /** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ _245)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    { revert(0, 0) }\n                                    /// @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\"\n                                    expr_47 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_243)\n                                }\n                                let cleaned_22 := and(sload(/** @src 21:17263:17269  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _242)\n                                /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                                let _248 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                                mstore(_248, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _244)\n                                mstore(/** @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\" */ add(_248, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), /** @src 21:17248:17252  \"this\" */ address())\n                                /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                                let _249 := staticcall(gas(), cleaned_22, _248, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36, /** @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\" */ _248, /** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ _245)\n                                /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                                if iszero(_249)\n                                {\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let pos_27 := mload(64)\n                                    returndatacopy(pos_27, _1, returndatasize())\n                                    revert(pos_27, returndatasize())\n                                }\n                                /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                                let expr_48 := _1\n                                if _249\n                                {\n                                    let _250 := /** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ _245\n                                    /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                                    if gt(/** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ _245, /** @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\" */ returndatasize()) { _250 := returndatasize() }\n                                    finalize_allocation(_248, _250)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if slt(sub(/** @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\" */ add(_248, _250), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _248), /** @src 21:17215:17254  \"IERC20(token0).balanceOf(address(this))\" */ _245)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    { revert(0, 0) }\n                                    /// @src 21:17256:17295  \"IERC20(token1).balanceOf(address(this))\"\n                                    expr_48 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(_248)\n                                }\n                                let _251 := sload(/** @src 21:17297:17305  \"reserve0\" */ 0x13)\n                                /// @src 21:17307:17315  \"reserve1\"\n                                fun_update(expr_47, expr_48, _251, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:17307:17315  \"reserve1\" */ 0x14))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                sstore(/** @src 12:2924:2945  \"_status = NOT_ENTERED\" */ 0x08, /** @src 12:1713:1714  \"1\" */ 0x01)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                return(_1, _1)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_decode_address_35700() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        length := calldataload(offset)\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        arrayPos := add(offset, 0x20)\n                        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n                    }\n                    function copy_memory_to_memory_with_cleanup(src, dst, length)\n                    {\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 32) }\n                        {\n                            mstore(add(dst, i), mload(add(src, i)))\n                        }\n                        mstore(add(dst, length), 0)\n                    }\n                    function abi_encode_string(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                    }\n                    function abi_encode_uint256_uint256_uint256(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        mstore(headStart, value0)\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                    }\n                    function abi_encode_array_uint256_dyn(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        let _1 := 0x20\n                        pos := add(pos, _1)\n                        let srcPtr := add(value, _1)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, mload(srcPtr))\n                            pos := add(pos, _1)\n                            srcPtr := add(srcPtr, _1)\n                        }\n                        end := pos\n                    }\n                    function storage_array_index_access_struct_Observation__dyn(index) -> slot, offset\n                    {\n                        if iszero(lt(index, sload(/** @src 21:1560:1593  \"Observation[] public observations\" */ 16)))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 21:1560:1593  \"Observation[] public observations\" */ 16)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        slot := add(12396694973890998440467380340983585058878106250672390494374587083972727727730, mul(index, 3))\n                        offset := /** @src -1:-1:-1 */ 0\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    function abi_decode_addresst_uint256t_uint256(dataEnd) -> value0, value1, value2\n                    {\n                        if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                        let value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        value0 := value\n                        value1 := calldataload(36)\n                        value2 := calldataload(68)\n                    }\n                    function abi_encode_address_address(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                    }\n                    /// @ast-id 491 @src 3:5656:5956  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                    function fun_transfer(var_from, var_to, var_value)\n                    {\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 3:5739:5757  \"from == address(0)\" */ var_from, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                        /// @src 3:5735:5821  \"if (from == address(0)) {...\"\n                        if /** @src 3:5739:5757  \"from == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                        /// @src 3:5735:5821  \"if (from == address(0)) {...\"\n                        {\n                            /// @src 3:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 3:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            mstore(_3, /** @src 3:8361:8391  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 3:5780:5810  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 3:5755:5756  \"0\" */ 0x00)\n                            /// @src 3:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            revert(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                        }\n                        let _4 := and(/** @src 3:5834:5850  \"to == address(0)\" */ var_to, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                        /// @src 3:5830:5916  \"if (to == address(0)) {...\"\n                        if /** @src 3:5834:5850  \"to == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _4)\n                        /// @src 3:5830:5916  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 3:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            let _5 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 3:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(_5, /** @src 3:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 3:5873:5905  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 3:5755:5756  \"0\" */ 0x00)\n                            /// @src 3:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            revert(_5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                        }\n                        /// @src 3:6356:6896  \"if (from == address(0)) {...\"\n                        let _6 := 0\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                        mstore(0x20, /** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _7 := sload(keccak256(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x40))\n                        /// @src 3:6599:6714  \"if (fromBalance < value) {...\"\n                        if /** @src 3:6603:6622  \"fromBalance < value\" */ lt(_7, var_value)\n                        /// @src 3:6599:6714  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 3:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            let _8 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(0x40)\n                            /// @src 3:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(_8, shl(226, 0x391434e3))\n                            revert(_8, sub(abi_encode_address_uint256_uint256(add(_8, 4), var_from, _7, var_value), _8))\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                        mstore(0x20, /** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        sstore(keccak256(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x40), sub(/** @src 3:6852:6871  \"fromBalance - value\" */ _7, var_value))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _4)\n                        let dataSlot := keccak256(/** @src 3:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x40)\n                        sstore(dataSlot, add(sload(/** @src 3:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value))\n                        /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                        let _9 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(0x40)\n                        mstore(_9, var_value)\n                        /// @src 3:7346:7371  \"Transfer(from, to, value)\"\n                        log3(_9, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x20, /** @src 3:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                    }\n                    function checked_add_uint256(x, y) -> sum\n                    {\n                        sum := add(x, y)\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    /// @ast-id 712 @src 3:9949:10381  \"function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {...\"\n                    function fun_approve(var_owner, var_spender, var_value)\n                    {\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 3:10061:10080  \"owner == address(0)\" */ var_owner, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                        /// @src 3:10057:10146  \"if (owner == address(0)) {...\"\n                        if /** @src 3:10061:10080  \"owner == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                        /// @src 3:10057:10146  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                            let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                            mstore(_3, shl(224, 0xe602df05))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_3, 4), /** @src 3:10078:10079  \"0\" */ 0x00)\n                            /// @src 3:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                            revert(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                        }\n                        let _4 := and(/** @src 3:10159:10180  \"spender == address(0)\" */ var_spender, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                        /// @src 3:10155:10245  \"if (spender == address(0)) {...\"\n                        if /** @src 3:10159:10180  \"spender == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _4)\n                        /// @src 3:10155:10245  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                            let _5 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                            mstore(_5, shl(225, 0x4a1406b1))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_5, 4), /** @src 3:10078:10079  \"0\" */ 0x00)\n                            /// @src 3:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                            revert(_5, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                        }\n                        mstore(/** @src 3:10078:10079  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                        mstore(0x20, /** @src 3:9105:9109  \"true\" */ 0x01)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _6 := keccak256(/** @src 3:10078:10079  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x40)\n                        mstore(/** @src 3:10078:10079  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _4)\n                        mstore(0x20, _6)\n                        sstore(keccak256(/** @src 3:10078:10079  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x40), var_value)\n                        /// @src 3:10333:10364  \"Approval(owner, spender, value)\"\n                        let _7 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(0x40)\n                        mstore(_7, var_value)\n                        /// @src 3:10333:10364  \"Approval(owner, spender, value)\"\n                        log3(_7, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x20, /** @src 3:10333:10364  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _4)\n                    }\n                    /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                    function finalize_allocation_35698(memPtr)\n                    {\n                        if gt(memPtr, 0xffffffffffffffff)\n                        {\n                            mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, memPtr)\n                    }\n                    function finalize_allocation_35742(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 96)\n                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_53278(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64)\n                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(add(/** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ size, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 31), not(31)))\n                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    /// @ast-id 2609 @src 16:5140:6670  \"function tryRecover(...\"\n                    function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                    {\n                        /// @src 16:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        if /** @src 16:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 16:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                        /// @src 16:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        {\n                            /// @src 16:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var := /** @src 16:6297:6298  \"0\" */ 0x00\n                            /// @src 16:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_1 := /** @src 16:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                            /// @src 16:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_2 := var_s\n                            leave\n                        }\n                        /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _1 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        mstore(_1, var_hash)\n                        mstore(add(_1, 32), and(var_v, 0xff))\n                        mstore(add(_1, 64), var_r)\n                        mstore(add(_1, 96), var_s)\n                        /// @src -1:-1:-1\n                        let _2 := 0\n                        /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        mstore(/** @src -1:-1:-1 */ _2, _2)\n                        /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        if iszero(staticcall(gas(), 1, _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32))\n                        /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 16:6457:6481  \"ecrecover(hash, v, r, s)\"\n                        let _3 := mload(/** @src -1:-1:-1 */ _2)\n                        /// @src 16:6491:6604  \"if (signer == address(0)) {...\"\n                        if /** @src 16:6495:6515  \"signer == address(0)\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 16:6495:6515  \"signer == address(0)\" */ _3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 16:6491:6604  \"if (signer == address(0)) {...\"\n                        {\n                            /// @src 16:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var := /** @src -1:-1:-1 */ _2\n                            /// @src 16:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_1 := /** @src 16:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                            /// @src 16:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_2 := /** @src -1:-1:-1 */ _2\n                            /// @src 16:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            leave\n                        }\n                        /// @src 16:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var := _3\n                        var_1 := /** @src -1:-1:-1 */ _2\n                        /// @src 16:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_2 := /** @src -1:-1:-1 */ _2\n                    }\n                    /// @ast-id 2694 @src 16:7196:7728  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n                    function fun_throwError(var_error, var_errorArg)\n                    {\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if iszero(lt(var_error, 4))\n                        {\n                            mstore(/** @src 16:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(/** @src 16:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        /// @src 16:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                        switch /** @src 16:7282:7311  \"error == RecoverError.NoError\" */ iszero(var_error)\n                        case /** @src 16:7278:7722  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                            /// @src 16:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                            switch /** @src 16:7378:7416  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 1)\n                            case /** @src 16:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                                /// @src 16:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                switch /** @src 16:7483:7527  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 16:7492:7527  \"RecoverError.InvalidSignatureLength\" */ 2)\n                                case /** @src 16:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                                    /// @src 16:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    if /** @src 16:7617:7656  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 16:7626:7656  \"RecoverError.InvalidSignatureS\" */ 3)\n                                    /// @src 16:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    {\n                                        /// @src 16:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        let _1 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                        /// @src 16:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        mstore(_1, shl(226, 0x35e2f383))\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        mstore(/** @src 16:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\" */ add(_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), var_errorArg)\n                                        /// @src 16:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        revert(_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                                    }\n                                }\n                                default /// @src 16:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                {\n                                    /// @src 16:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    let _2 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                    /// @src 16:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    mstore(_2, shl(224, 0xfce698f7))\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    mstore(/** @src 16:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\" */ add(_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4), var_errorArg)\n                                    /// @src 16:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    revert(_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                                }\n                            }\n                            default /// @src 16:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                            {\n                                /// @src 16:7439:7462  \"ECDSAInvalidSignature()\"\n                                let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 16:7439:7462  \"ECDSAInvalidSignature()\"\n                                mstore(_3, shl(224, 0xf645eedf))\n                                revert(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 4)\n                            }\n                        }\n                        default /// @src 16:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                        {\n                            /// @src 16:7327:7334  \"return;\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 2818 @src 17:3845:4107  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n                    function fun_domainSeparatorV4() -> var\n                    {\n                        /// @src 17:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        let expr := /** @src 17:3921:3949  \"address(this) == _cachedThis\" */ eq(/** @src 17:3929:3933  \"this\" */ address(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 17:3938:3949  \"_cachedThis\" */ loadimmutable(\"2720\"), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 17:3921:3984  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        if expr\n                        {\n                            expr := /** @src 17:3953:3984  \"block.chainid == _cachedChainId\" */ eq(/** @src 17:3953:3966  \"block.chainid\" */ chainid(), /** @src 17:3970:3984  \"_cachedChainId\" */ loadimmutable(\"2718\"))\n                        }\n                        /// @src 17:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        switch expr\n                        case 0 {\n                            /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let expr_mpos := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let _1 := add(expr_mpos, 0x20)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(_1, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64), /** @src 17:4226:4237  \"_hashedName\" */ loadimmutable(\"2722\"))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 17:4239:4253  \"_hashedVersion\" */ loadimmutable(\"2724\"))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 17:4255:4268  \"block.chainid\" */ chainid())\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 17:3929:3933  \"this\" */ address())\n                            /// @src 17:4204:4284  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            mstore(expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            let newFreePtr := add(expr_mpos, /** @src 17:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 192)\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                            {\n                                mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ newFreePtr)\n                            /// @src 17:4060:4090  \"return _buildDomainSeparator()\"\n                            var := /** @src 17:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1, mload(/** @src 17:4194:4285  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                            /// @src 17:4060:4090  \"return _buildDomainSeparator()\"\n                            leave\n                        }\n                        default /// @src 17:3917:4101  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        {\n                            /// @src 17:4000:4029  \"return _cachedDomainSeparator\"\n                            var := /** @src 17:4007:4029  \"_cachedDomainSeparator\" */ loadimmutable(\"2716\")\n                            /// @src 17:4000:4029  \"return _cachedDomainSeparator\"\n                            leave\n                        }\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    function array_allocation_size_array_uint256_dyn(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        size := add(shl(5, length), 0x20)\n                    }\n                    function allocate_and_zero_memory_array_array_uint256_dyn(length) -> memPtr\n                    {\n                        let _1 := array_allocation_size_array_uint256_dyn(length)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _1)\n                        mstore(memPtr_1, length)\n                        memPtr := memPtr_1\n                        calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_uint256_dyn(length), not(31)))\n                    }\n                    /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                    function extract_byte_array_length(data) -> length\n                    {\n                        length := shr(1, data)\n                        let outOfPlaceEncoding := and(data, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                    }\n                    /// @ast-id 1950 @src 13:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback(var_value) -> var_mpos\n                    {\n                        /// @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 13:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let ret := /** @src -1:-1:-1 */ 0\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let slotValue := sload(/** @src 17:6126:6139  \"_nameFallback\" */ 0x05)\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let length := extract_byte_array_length(slotValue)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(memPtr, length)\n                            let _1 := 0x20\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let _2 := 1\n                            switch and(slotValue, _2)\n                            case 0 {\n                                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(memPtr, _1), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ and(slotValue, not(255)))\n                                ret := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(/** @src 17:6126:6139  \"_nameFallback\" */ 0x05, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ iszero(iszero(length)))), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                            }\n                            case /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 1 {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 17:6126:6139  \"_nameFallback\" */ 0x05)\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let dataPos := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                for { }\n                                lt(i, length)\n                                {\n                                    i := add(i, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                                }\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                {\n                                    mstore(add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ sload(dataPos))\n                                    dataPos := add(dataPos, _2)\n                                }\n                                ret := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                            }\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            finalize_allocation(memPtr, sub(ret, memPtr))\n                            /// @src 13:3623:3635  \"return store\"\n                            var_mpos := memPtr\n                            leave\n                        }\n                        default /// @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 13:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 13:2702:2771  \"if (result > 31) {...\"\n                            if /** @src 13:2706:2717  \"result > 31\" */ gt(expr, /** @src 13:2715:2717  \"31\" */ 0x1f)\n                            /// @src 13:2702:2771  \"if (result > 31) {...\"\n                            {\n                                /// @src 13:2740:2760  \"InvalidShortString()\"\n                                let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 13:2740:2760  \"InvalidShortString()\"\n                                mstore(_3, shl(226, 0x2cd44ac3))\n                                revert(_3, 4)\n                            }\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let memPtr_1 := mload(64)\n                            finalize_allocation_53278(memPtr_1)\n                            /// @src 13:2367:2457  \"assembly {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(memPtr_1, /** @src 13:2311:2313  \"32\" */ 0x20), /** @src 13:2367:2457  \"assembly {...\" */ var_value)\n                            /// @src 13:3570:3592  \"return toString(value)\"\n                            var_mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 1950 @src 13:3385:3652  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback_35716(var_value) -> var_mpos\n                    {\n                        /// @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 13:3508:3554  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let ret := /** @src -1:-1:-1 */ 0\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let slotValue := sload(/** @src 17:6584:6600  \"_versionFallback\" */ 0x06)\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let length := extract_byte_array_length(slotValue)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(memPtr, length)\n                            let _1 := 0x20\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let _2 := 1\n                            switch and(slotValue, _2)\n                            case 0 {\n                                mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(memPtr, _1), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ and(slotValue, not(255)))\n                                ret := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ shl(5, iszero(iszero(length)))), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                            }\n                            case /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 1 {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 17:6584:6600  \"_versionFallback\" */ 0x06)\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let dataPos := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 111414077815863400510004064629973595961579173665589224203503662149373724986687\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                for { }\n                                lt(i, length)\n                                {\n                                    i := add(i, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                                }\n                                /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                                {\n                                    mstore(add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1), /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ sload(dataPos))\n                                    dataPos := add(dataPos, _2)\n                                }\n                                ret := add(add(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ memPtr, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ i), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                            }\n                            /// @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            finalize_allocation(memPtr, sub(ret, memPtr))\n                            /// @src 13:3623:3635  \"return store\"\n                            var_mpos := memPtr\n                            leave\n                        }\n                        default /// @src 13:3504:3646  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 13:2652:2692  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 13:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 13:2702:2771  \"if (result > 31) {...\"\n                            if /** @src 13:2706:2717  \"result > 31\" */ gt(expr, /** @src 13:2715:2717  \"31\" */ 0x1f)\n                            /// @src 13:2702:2771  \"if (result > 31) {...\"\n                            {\n                                /// @src 13:2740:2760  \"InvalidShortString()\"\n                                let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 13:2740:2760  \"InvalidShortString()\"\n                                mstore(_3, shl(226, 0x2cd44ac3))\n                                revert(_3, 4)\n                            }\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let memPtr_1 := mload(64)\n                            finalize_allocation_53278(memPtr_1)\n                            /// @src 13:2367:2457  \"assembly {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(memPtr_1, /** @src 13:2311:2313  \"32\" */ 0x20), /** @src 13:2367:2457  \"assembly {...\" */ var_value)\n                            /// @src 13:3570:3592  \"return toString(value)\"\n                            var_mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    function array_allocation_size_string(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        size := add(and(add(length, 31), not(31)), 0x20)\n                    }\n                    function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        value0 := value\n                    }\n                    function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let offset := mload(headStart)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        let _1 := add(headStart, offset)\n                        if iszero(slt(add(_1, 0x1f), dataEnd))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _2 := mload(_1)\n                        let _3 := array_allocation_size_string(_2)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _3)\n                        mstore(memPtr, _2)\n                        if gt(add(add(_1, _2), 32), dataEnd)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        copy_memory_to_memory_with_cleanup(add(_1, 32), add(memPtr, 32), _2)\n                        value0 := memPtr\n                    }\n                    function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n                    {\n                        if gt(len, 31)\n                        {\n                            /// @src -1:-1:-1\n                            let _1 := 0\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 21:3896:3914  \"_symbol = __symbol\" */ 0x0a)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _2 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                            let deleteStart := add(_2, shr(5, add(startIndex, 31)))\n                            if lt(startIndex, 0x20) { deleteStart := _2 }\n                            let _3 := add(_2, shr(5, add(len, 31)))\n                            let start := deleteStart\n                            for { } lt(start, _3) { start := add(start, 1) }\n                            {\n                                sstore(start, /** @src -1:-1:-1 */ _1)\n                            }\n                        }\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    function clean_up_bytearray_end_slots_string_storage_35729(len, startIndex)\n                    {\n                        if gt(len, 31)\n                        {\n                            /// @src -1:-1:-1\n                            let _1 := 0\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 21:3688:3702  \"_name = __name\" */ 0x09)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _2 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                            let deleteStart := add(_2, shr(5, add(startIndex, 31)))\n                            if lt(startIndex, 0x20) { deleteStart := _2 }\n                            let _3 := add(_2, shr(5, add(len, 31)))\n                            let start := deleteStart\n                            for { } lt(start, _3) { start := add(start, 1) }\n                            {\n                                sstore(start, /** @src -1:-1:-1 */ _1)\n                            }\n                        }\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n                    {\n                        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n                    }\n                    function abi_decode_uint8_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        if iszero(eq(value, and(value, 0xff)))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        value0 := value\n                    }\n                    function checked_exp_rational_by_uint8(exponent) -> power\n                    {\n                        let exponent_1 := and(exponent, 0xff)\n                        if gt(exponent_1, 77)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        power := exp(10, exponent_1)\n                    }\n                    function array_push_from_struct_Observation_to_array_struct_Observation_storage_dyn_ptr(value0)\n                    {\n                        let oldLen := sload(/** @src 21:3445:3457  \"observations\" */ 0x10)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if iszero(lt(oldLen, 18446744073709551616))\n                        {\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        sstore(/** @src 21:3445:3457  \"observations\" */ 0x10, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(oldLen, 1))\n                        let slot, offset := storage_array_index_access_struct_Observation__dyn(oldLen)\n                        if offset\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0)\n                            revert(0, 0x24)\n                        }\n                        sstore(slot, mload(value0))\n                        sstore(add(slot, 1), mload(add(value0, 32)))\n                        sstore(add(slot, 2), mload(add(value0, 64)))\n                    }\n                    function checked_sub_uint256(x, y) -> diff\n                    {\n                        diff := sub(x, y)\n                        if gt(diff, x)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    /// @ast-id 4515 @src 21:4089:4218  \"function lastObservation() public view returns (Observation memory) {...\"\n                    function fun_lastObservation() -> var_4505_mpos\n                    {\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPtr := mload(64)\n                        finalize_allocation_35742(memPtr)\n                        mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(add(memPtr, 32), /** @src -1:-1:-1 */ 0)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(add(memPtr, 64), /** @src -1:-1:-1 */ 0)\n                        /// @src 21:4187:4206  \"observations.length\"\n                        let expr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:4174:4186  \"observations\" */ 0x10)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let diff := add(expr, not(0))\n                        if gt(diff, expr)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        /// @src 21:4174:4211  \"observations[observations.length - 1]\"\n                        let _1, _2 := storage_array_index_access_struct_Observation__dyn(/** @src 21:4187:4210  \"observations.length - 1\" */ diff)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_35742(memPtr_1)\n                        mstore(memPtr_1, sload(_1))\n                        mstore(add(memPtr_1, 32), sload(add(_1, /** @src 21:4209:4210  \"1\" */ 0x01)))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(add(memPtr_1, 64), sload(add(_1, 2)))\n                        /// @src 21:4167:4211  \"return observations[observations.length - 1]\"\n                        var_4505_mpos := memPtr_1\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    function checked_mul_uint256(x, y) -> product\n                    {\n                        product := mul(x, y)\n                        if iszero(or(iszero(x), eq(y, div(product, x))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function checked_div_uint256(x, y) -> r\n                    {\n                        if iszero(y)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x12)\n                            revert(0, 0x24)\n                        }\n                        r := div(x, y)\n                    }\n                    function increment_uint256(value) -> ret\n                    {\n                        if eq(value, not(0))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        ret := add(value, 1)\n                    }\n                    function memory_array_index_access_uint256_dyn(baseRef, index) -> addr\n                    {\n                        if iszero(lt(index, mload(baseRef)))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        addr := add(add(baseRef, shl(5, index)), 32)\n                    }\n                    /// @ast-id 5210 @src 21:10365:11459  \"function sample(...\"\n                    function fun_sample(var_tokenIn, var_amountIn, var_points) -> var_mpos\n                    {\n                        /// @src 21:10562:10583  \"new uint256[](points)\"\n                        let expr_mpos := allocate_and_zero_memory_array_array_uint256_dyn(var_points)\n                        /// @src 21:10611:10630  \"observations.length\"\n                        let expr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:10611:10623  \"observations\" */ 0x10)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let diff := add(expr, not(0))\n                        if gt(diff, expr)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        /// @src 21:10324:10325  \"1\"\n                        let _1 := 0x01\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if iszero(or(iszero(var_points), eq(/** @src 21:10324:10325  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(var_points, var_points))))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        /// @src 21:10644:10682  \"uint256 i = length - (points * window)\"\n                        let var_i := /** @src 21:10656:10682  \"length - (points * window)\" */ checked_sub_uint256(diff, /** @src 21:10666:10681  \"points * window\" */ var_points)\n                        /// @src 21:10723:10740  \"uint256 index = 0\"\n                        let var_index := /** @src -1:-1:-1 */ 0\n                        /// @src 21:10751:11429  \"for (; i < length; i += window) {...\"\n                        for { }\n                        /** @src 21:10758:10768  \"i < length\" */ lt(var_i, diff)\n                        /// @src 21:10751:11429  \"for (; i < length; i += window) {...\"\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let sum := add(var_i, /** @src 21:10324:10325  \"1\" */ _1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if gt(var_i, sum)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                            }\n                            /// @src 21:10770:10781  \"i += window\"\n                            var_i := sum\n                        }\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let sum_1 := add(var_i, /** @src 21:10324:10325  \"1\" */ _1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if gt(var_i, sum_1)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                            }\n                            /// @src 21:10855:10878  \"observations[nextIndex]\"\n                            let _2, _3 := storage_array_index_access_struct_Observation__dyn(sum_1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _4 := sload(/** @src 21:10855:10888  \"observations[nextIndex].timestamp\" */ _2)\n                            /// @src 21:10891:10906  \"observations[i]\"\n                            let _5, _6 := storage_array_index_access_struct_Observation__dyn(var_i)\n                            /// @src 21:10855:10916  \"observations[nextIndex].timestamp - observations[i].timestamp\"\n                            let expr_1 := checked_sub_uint256(_4, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:10891:10916  \"observations[i].timestamp\" */ _5))\n                            /// @src 21:10951:10974  \"observations[nextIndex]\"\n                            let _7, _8 := storage_array_index_access_struct_Observation__dyn(sum_1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _9 := sload(/** @src 21:10951:10993  \"observations[nextIndex].reserve0Cumulative\" */ add(_7, /** @src 21:10324:10325  \"1\" */ _1))\n                            /// @src 21:10996:11011  \"observations[i]\"\n                            let _10, _11 := storage_array_index_access_struct_Observation__dyn(var_i)\n                            /// @src 21:10950:11061  \"(observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative) /...\"\n                            let expr_2 := checked_div_uint256(/** @src 21:10951:11030  \"observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative\" */ checked_sub_uint256(_9, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:10996:11030  \"observations[i].reserve0Cumulative\" */ add(_10, /** @src 21:10324:10325  \"1\" */ _1))), /** @src 21:10950:11061  \"(observations[nextIndex].reserve0Cumulative - observations[i].reserve0Cumulative) /...\" */ expr_1)\n                            /// @src 21:11096:11119  \"observations[nextIndex]\"\n                            let _12, _13 := storage_array_index_access_struct_Observation__dyn(sum_1)\n                            /// @src 21:11096:11138  \"observations[nextIndex].reserve1Cumulative\"\n                            let _14 := 2\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _15 := sload(/** @src 21:11096:11138  \"observations[nextIndex].reserve1Cumulative\" */ add(_12, _14))\n                            /// @src 21:11141:11156  \"observations[i]\"\n                            let _16, _17 := storage_array_index_access_struct_Observation__dyn(var_i)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 21:11220:11291  \"_prices[index] = _getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\" */ memory_array_index_access_uint256_dyn(expr_mpos, var_index), /** @src 21:11237:11291  \"_getAmountOut(amountIn, tokenIn, _reserve0, _reserve1)\" */ fun_getAmountOut(var_amountIn, var_tokenIn, expr_2, /** @src 21:11095:11206  \"(observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative) /...\" */ checked_div_uint256(/** @src 21:11096:11175  \"observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative\" */ checked_sub_uint256(_15, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:11141:11175  \"observations[i].reserve1Cumulative\" */ add(_16, /** @src 21:11096:11138  \"observations[nextIndex].reserve1Cumulative\" */ _14))), /** @src 21:11095:11206  \"(observations[nextIndex].reserve1Cumulative - observations[i].reserve1Cumulative) /...\" */ expr_1)))\n                            /// @src 21:11387:11404  \"index = index + 1\"\n                            var_index := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 21:11395:11404  \"index + 1\" */ var_index, /** @src 21:10324:10325  \"1\" */ _1)\n                        }\n                        /// @src 21:11438:11452  \"return _prices\"\n                        var_mpos := expr_mpos\n                    }\n                    /// @ast-id 1745 @src 12:2431:2738  \"function _nonReentrantBefore() private {...\"\n                    function fun_nonReentrantBefore()\n                    {\n                        /// @src 12:2554:2640  \"if (_status == ENTERED) {...\"\n                        if /** @src 12:2558:2576  \"_status == ENTERED\" */ eq(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 12:2558:2565  \"_status\" */ 0x08), /** @src 12:1755:1756  \"2\" */ 0x02)\n                        /// @src 12:2554:2640  \"if (_status == ENTERED) {...\"\n                        {\n                            /// @src 12:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                            let _1 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 12:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                            mstore(_1, shl(224, 0x3ee5aeb5))\n                            revert(_1, 4)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        sstore(/** @src 12:2558:2565  \"_status\" */ 0x08, /** @src 12:1755:1756  \"2\" */ 0x02)\n                    }\n                    /// @ast-id 3539 @src 19:8587:10229  \"function sqrt(uint256 a) internal pure returns (uint256) {...\"\n                    function fun_sqrt(var_a) -> var\n                    {\n                        /// @src 19:8654:8699  \"if (a == 0) {...\"\n                        if /** @src 19:8658:8664  \"a == 0\" */ iszero(var_a)\n                        /// @src 19:8654:8699  \"if (a == 0) {...\"\n                        {\n                            /// @src 19:8680:8688  \"return 0\"\n                            var := /** @src 19:8663:8664  \"0\" */ 0x00\n                            /// @src 19:8680:8688  \"return 0\"\n                            leave\n                        }\n                        /// @src 19:9401:9408  \"log2(a)\"\n                        let var_value := var_a\n                        /// @src 19:10770:10788  \"uint256 result = 0\"\n                        let var_result := /** @src 19:8663:8664  \"0\" */ 0x00\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result := shr(/** @src 19:10835:10838  \"128\" */ 0x80, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_a)\n                        /// @src 19:10822:10921  \"if (value >> 128 > 0) {...\"\n                        if /** @src 19:10826:10842  \"value >> 128 > 0\" */ iszero(iszero(result))\n                        /// @src 19:10822:10921  \"if (value >> 128 > 0) {...\"\n                        {\n                            /// @src 19:10862:10875  \"value >>= 128\"\n                            var_value := result\n                            /// @src 19:10893:10906  \"result += 128\"\n                            var_result := /** @src 19:10835:10838  \"128\" */ 0x80\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_1 := shr(/** @src 19:10947:10949  \"64\" */ 0x40, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)\n                        /// @src 19:10934:11030  \"if (value >> 64 > 0) {...\"\n                        if /** @src 19:10938:10953  \"value >> 64 > 0\" */ iszero(iszero(result_1))\n                        /// @src 19:10934:11030  \"if (value >> 64 > 0) {...\"\n                        {\n                            /// @src 19:10973:10985  \"value >>= 64\"\n                            var_value := result_1\n                            /// @src 19:11003:11015  \"result += 64\"\n                            var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11003:11015  \"result += 64\" */ var_result, /** @src 19:10947:10949  \"64\" */ 0x40)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_2 := shr(/** @src 19:11056:11058  \"32\" */ 0x20, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)\n                        /// @src 19:11043:11139  \"if (value >> 32 > 0) {...\"\n                        if /** @src 19:11047:11062  \"value >> 32 > 0\" */ iszero(iszero(result_2))\n                        /// @src 19:11043:11139  \"if (value >> 32 > 0) {...\"\n                        {\n                            /// @src 19:11082:11094  \"value >>= 32\"\n                            var_value := result_2\n                            /// @src 19:11112:11124  \"result += 32\"\n                            var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11112:11124  \"result += 32\" */ var_result, /** @src 19:11056:11058  \"32\" */ 0x20)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_3 := shr(/** @src 19:11165:11167  \"16\" */ 0x10, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)\n                        /// @src 19:11152:11248  \"if (value >> 16 > 0) {...\"\n                        if /** @src 19:11156:11171  \"value >> 16 > 0\" */ iszero(iszero(result_3))\n                        /// @src 19:11152:11248  \"if (value >> 16 > 0) {...\"\n                        {\n                            /// @src 19:11191:11203  \"value >>= 16\"\n                            var_value := result_3\n                            /// @src 19:11221:11233  \"result += 16\"\n                            var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11221:11233  \"result += 16\" */ var_result, /** @src 19:11165:11167  \"16\" */ 0x10)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_4 := shr(/** @src 19:11274:11275  \"8\" */ 0x08, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)\n                        /// @src 19:11261:11354  \"if (value >> 8 > 0) {...\"\n                        if /** @src 19:11265:11279  \"value >> 8 > 0\" */ iszero(iszero(result_4))\n                        /// @src 19:11261:11354  \"if (value >> 8 > 0) {...\"\n                        {\n                            /// @src 19:11299:11310  \"value >>= 8\"\n                            var_value := result_4\n                            /// @src 19:11328:11339  \"result += 8\"\n                            var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11328:11339  \"result += 8\" */ var_result, /** @src 19:11274:11275  \"8\" */ 0x08)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_5 := shr(/** @src 19:11380:11381  \"4\" */ 0x04, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)\n                        /// @src 19:11367:11460  \"if (value >> 4 > 0) {...\"\n                        if /** @src 19:11371:11385  \"value >> 4 > 0\" */ iszero(iszero(result_5))\n                        /// @src 19:11367:11460  \"if (value >> 4 > 0) {...\"\n                        {\n                            /// @src 19:11405:11416  \"value >>= 4\"\n                            var_value := result_5\n                            /// @src 19:11434:11445  \"result += 4\"\n                            var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11434:11445  \"result += 4\" */ var_result, /** @src 19:11380:11381  \"4\" */ 0x04)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_6 := shr(/** @src 19:11486:11487  \"2\" */ 0x02, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)\n                        /// @src 19:11473:11566  \"if (value >> 2 > 0) {...\"\n                        if /** @src 19:11477:11491  \"value >> 2 > 0\" */ iszero(iszero(result_6))\n                        /// @src 19:11473:11566  \"if (value >> 2 > 0) {...\"\n                        {\n                            /// @src 19:11511:11522  \"value >>= 2\"\n                            var_value := result_6\n                            /// @src 19:11540:11551  \"result += 2\"\n                            var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11540:11551  \"result += 2\" */ var_result, /** @src 19:11486:11487  \"2\" */ 0x02)\n                        }\n                        /// @src 19:11592:11593  \"1\"\n                        let _1 := 0x01\n                        /// @src 19:11579:11643  \"if (value >> 1 > 0) {...\"\n                        if /** @src 19:11583:11597  \"value >> 1 > 0\" */ iszero(iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_value)))\n                        /// @src 19:11579:11643  \"if (value >> 1 > 0) {...\"\n                        {\n                            /// @src 19:11617:11628  \"result += 1\"\n                            var_result := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(/** @src 19:11617:11628  \"result += 1\" */ var_result, /** @src 19:11592:11593  \"1\" */ _1)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_7 := shl(shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_result), /** @src 19:11592:11593  \"1\" */ _1)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_8 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_7, /** @src 19:9858:9868  \"a / result\" */ checked_div_uint256(var_a, result_7)))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_9 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_8, /** @src 19:9907:9917  \"a / result\" */ checked_div_uint256(var_a, result_8)))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_10 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_9, /** @src 19:9956:9966  \"a / result\" */ checked_div_uint256(var_a, result_9)))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_11 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_10, /** @src 19:10005:10015  \"a / result\" */ checked_div_uint256(var_a, result_10)))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_12 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_11, /** @src 19:10054:10064  \"a / result\" */ checked_div_uint256(var_a, result_11)))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_13 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_12, /** @src 19:10103:10113  \"a / result\" */ checked_div_uint256(var_a, result_12)))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let result_14 := shr(/** @src 19:11592:11593  \"1\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ add(result_13, /** @src 19:10152:10162  \"a / result\" */ checked_div_uint256(var_a, result_13)))\n                        /// @src 19:10201:10211  \"a / result\"\n                        let _2 := checked_div_uint256(var_a, result_14)\n                        /// @src 19:2641:2654  \"a < b ? a : b\"\n                        let expr := /** @src 19:8663:8664  \"0\" */ 0x00\n                        /// @src 19:2641:2654  \"a < b ? a : b\"\n                        switch /** @src 19:2641:2646  \"a < b\" */ lt(result_14, _2)\n                        case /** @src 19:2641:2654  \"a < b ? a : b\" */ 0 { expr := _2 }\n                        default { expr := result_14 }\n                        /// @src 19:10182:10212  \"return min(result, a / result)\"\n                        var := expr\n                    }\n                    /// @ast-id 4950 @src 21:7872:8815  \"function _update(uint256 balance0, uint256 balance1, uint256 _reserve0, uint256 _reserve1) internal {...\"\n                    function fun_update(var_balance0, var_balance1, var_reserve0, var_reserve1)\n                    {\n                        /// @src 21:8054:8089  \"blockTimestamp - blockTimestampLast\"\n                        let expr := checked_sub_uint256(/** @src 21:8007:8022  \"block.timestamp\" */ timestamp(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:8071:8089  \"blockTimestampLast\" */ 0x15))\n                        /// @src 21:8103:8136  \"timeElapsed > 0 && _reserve0 != 0\"\n                        let expr_1 := /** @src 21:8103:8118  \"timeElapsed > 0\" */ iszero(iszero(expr))\n                        /// @src 21:8103:8136  \"timeElapsed > 0 && _reserve0 != 0\"\n                        if expr_1\n                        {\n                            expr_1 := /** @src 21:8122:8136  \"_reserve0 != 0\" */ iszero(iszero(var_reserve0))\n                        }\n                        /// @src 21:8103:8154  \"timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0\"\n                        let expr_2 := expr_1\n                        if expr_1\n                        {\n                            expr_2 := /** @src 21:8140:8154  \"_reserve1 != 0\" */ iszero(iszero(var_reserve1))\n                        }\n                        /// @src 21:8099:8293  \"if (timeElapsed > 0 && _reserve0 != 0 && _reserve1 != 0) {...\"\n                        if expr_2\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            sstore(/** @src 21:8170:8219  \"reserve0CumulativeLast += _reserve0 * timeElapsed\" */ 0x16, checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:8170:8219  \"reserve0CumulativeLast += _reserve0 * timeElapsed\" */ 0x16), /** @src 21:8196:8219  \"_reserve0 * timeElapsed\" */ checked_mul_uint256(var_reserve0, expr)))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            sstore(/** @src 21:8233:8282  \"reserve1CumulativeLast += _reserve1 * timeElapsed\" */ 0x17, checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:8233:8282  \"reserve1CumulativeLast += _reserve1 * timeElapsed\" */ 0x17), /** @src 21:8259:8282  \"_reserve1 * timeElapsed\" */ checked_mul_uint256(var_reserve1, expr)))\n                        }\n                        /// @src 21:8518:8667  \"if (timeElapsed > periodSize) {...\"\n                        if /** @src 21:8522:8546  \"timeElapsed > periodSize\" */ gt(/** @src 21:8372:8405  \"blockTimestamp - _point.timestamp\" */ checked_sub_uint256(/** @src 21:8007:8022  \"block.timestamp\" */ timestamp(), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 21:8331:8348  \"lastObservation()\" */ fun_lastObservation())), /** @src 21:1549:1553  \"1800\" */ 0x0708)\n                        /// @src 21:8518:8667  \"if (timeElapsed > periodSize) {...\"\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _1 := sload(/** @src 21:8608:8630  \"reserve0CumulativeLast\" */ 0x16)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _2 := sload(/** @src 21:8632:8654  \"reserve1CumulativeLast\" */ 0x17)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let memPtr := mload(64)\n                            finalize_allocation_35742(memPtr)\n                            mstore(memPtr, /** @src 21:8007:8022  \"block.timestamp\" */ timestamp())\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 21:8580:8655  \"Observation(blockTimestamp, reserve0CumulativeLast, reserve1CumulativeLast)\" */ add(memPtr, 32), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                            mstore(/** @src 21:8580:8655  \"Observation(blockTimestamp, reserve0CumulativeLast, reserve1CumulativeLast)\" */ add(memPtr, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64), _2)\n                            /// @src 21:8562:8656  \"observations.push(Observation(blockTimestamp, reserve0CumulativeLast, reserve1CumulativeLast))\"\n                            array_push_from_struct_Observation_to_array_struct_Observation_storage_dyn_ptr(memPtr)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        sstore(/** @src 21:8676:8695  \"reserve0 = balance0\" */ 0x13, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_balance0)\n                        sstore(/** @src 21:8705:8724  \"reserve1 = balance1\" */ 0x14, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_balance1)\n                        sstore(/** @src 21:8071:8089  \"blockTimestampLast\" */ 0x15, /** @src 21:8007:8022  \"block.timestamp\" */ timestamp())\n                        /// @src 21:8784:8808  \"Sync(reserve0, reserve1)\"\n                        let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        mstore(_3, var_balance0)\n                        mstore(add(_3, 32), var_balance1)\n                        /// @src 21:8784:8808  \"Sync(reserve0, reserve1)\"\n                        log1(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 21:8784:8808  \"Sync(reserve0, reserve1)\" */ 0xcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a)\n                    }\n                    /// @ast-id 1105 @src 8:1303:1463  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n                    function fun_safeTransfer(var_token_address, var_to, var_value)\n                    {\n                        /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_1101_mpos := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _1 := add(expr_1101_mpos, 0x20)\n                        mstore(_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0xa9059cbb))\n                        let _2 := sub(shl(160, 1), 1)\n                        mstore(/** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ add(expr_1101_mpos, 36), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(var_to, _2))\n                        mstore(add(/** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_1101_mpos, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 68), var_value)\n                        /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(expr_1101_mpos, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 68)\n                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        let newFreePtr := add(expr_1101_mpos, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 128)\n                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_1101_mpos))\n                        {\n                            mstore(0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                            mstore(4, 0x41)\n                            revert(0, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                        }\n                        /// @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\"\n                        mstore(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 5:1022:1117  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ newFreePtr)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _3 := and(/** @src 8:4504:4518  \"address(token)\" */ var_token_address, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _2)\n                        /// @src 9:3462:3493  \"target.call{value: value}(data)\"\n                        let expr_component := call(gas(), _3, /** @src -1:-1:-1 */ 0, /** @src 9:3462:3493  \"target.call{value: value}(data)\" */ _1, mload(expr_1101_mpos), /** @src -1:-1:-1 */ 0, 0)\n                        /// @src 9:3462:3493  \"target.call{value: value}(data)\"\n                        let data := /** @src -1:-1:-1 */ 0\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _4 := returndatasize()\n                            let _5 := array_allocation_size_string(_4)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _5)\n                            mstore(memPtr, _4)\n                            data := memPtr\n                            returndatacopy(add(memPtr, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ returndatasize())\n                        }\n                        /// @src 9:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                        let var_mpos := /** @src 9:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_3, expr_component, /** @src 9:3462:3493  \"target.call{value: value}(data)\" */ data)\n                        /// @src 8:4551:4568  \"returndata.length\"\n                        let expr := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 8:4551:4568  \"returndata.length\" */ var_mpos)\n                        /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                        let expr_1 := /** @src 8:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                        /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                        if expr_1\n                        {\n                            expr_1 := /** @src 8:4577:4608  \"!abi.decode(returndata, (bool))\" */ iszero(/** @src 8:4578:4608  \"abi.decode(returndata, (bool))\" */ abi_decode_bool_fromMemory(add(var_mpos, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src 8:4578:4608  \"abi.decode(returndata, (bool))\" */ add(add(var_mpos, expr), /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20)))\n                        }\n                        /// @src 8:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                        if expr_1\n                        {\n                            /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            let _6 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                            /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            mstore(_6, shl(224, 0x5274afe7))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            mstore(/** @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_6, 4), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _3)\n                            /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                            revert(_6, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                        }\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                        let value := mload(headStart)\n                        if iszero(eq(value, iszero(iszero(value))))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        value0 := value\n                    }\n                    /// @ast-id 1557 @src 9:4625:5207  \"function verifyCallResultFromTarget(...\"\n                    function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_1527_mpos\n                    {\n                        /// @src 9:4793:5201  \"if (!success) {...\"\n                        switch /** @src 9:4797:4805  \"!success\" */ iszero(var_success)\n                        case /** @src 9:4793:5201  \"if (!success) {...\" */ 0 {\n                            /// @src 9:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            let expr := /** @src 9:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 9:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                            /// @src 9:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                            if expr\n                            {\n                                expr := /** @src 9:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 9:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                            }\n                            /// @src 9:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                            if expr\n                            {\n                                /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                                let _1 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                                mstore(_1, shl(224, 0x9996b315))\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                mstore(/** @src 9:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                                revert(_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36)\n                            }\n                            /// @src 9:5173:5190  \"return returndata\"\n                            var_1527_mpos := var_returndata_mpos\n                            leave\n                        }\n                        default /// @src 9:4793:5201  \"if (!success) {...\"\n                        {\n                            /// @src 9:5870:6253  \"if (returndata.length > 0) {...\"\n                            switch /** @src 9:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(/** @src 9:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                            case /** @src 9:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                /// @src 9:6225:6242  \"FailedInnerCall()\"\n                                let _2 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                                /// @src 9:6225:6242  \"FailedInnerCall()\"\n                                mstore(_2, shl(225, 0x0a12f521))\n                                revert(_2, 4)\n                            }\n                            default /// @src 9:5870:6253  \"if (returndata.length > 0) {...\"\n                            {\n                                /// @src 9:6046:6188  \"assembly {...\"\n                                revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                            }\n                        }\n                    }\n                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                    function abi_encode_address_bool(headStart, value0, value1) -> tail\n                    {\n                        tail := add(headStart, 64)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), iszero(iszero(value1)))\n                    }\n                    /// @ast-id 4672 @src 21:5183:5621  \"function _update0(uint256 amount) internal {...\"\n                    function fun_update0(var_amount)\n                    {\n                        /// @src 21:5290:5314  \"if (amount == 0) return;\"\n                        if /** @src 21:5294:5305  \"amount == 0\" */ iszero(var_amount)\n                        /// @src 21:5290:5314  \"if (amount == 0) return;\"\n                        {\n                            /// @src 21:5307:5314  \"return;\"\n                            leave\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let cleaned := and(sload(/** @src 21:5330:5336  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                        /// @src 21:5361:5367  \"amount\"\n                        fun_safeTransfer(cleaned, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(sload(/** @src 21:5351:5359  \"poolFees\" */ 0x0e), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1), /** @src 21:5361:5367  \"amount\" */ var_amount)\n                        /// @src 21:5442:5446  \"1e18\"\n                        let _2 := 0x0de0b6b3a7640000\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let product := mul(var_amount, /** @src 21:5442:5446  \"1e18\" */ _2)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if iszero(eq(/** @src 21:5442:5446  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product, var_amount)))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        /// @src 21:5432:5463  \"(amount * 1e18) / totalSupply()\"\n                        let expr := checked_div_uint256(product, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02))\n                        /// @src 21:5516:5573  \"if (_ratio > 0) {...\"\n                        if /** @src 21:5520:5530  \"_ratio > 0\" */ iszero(iszero(expr))\n                        /// @src 21:5516:5573  \"if (_ratio > 0) {...\"\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            sstore(/** @src 21:5546:5562  \"index0 += _ratio\" */ 0x18, checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:5546:5562  \"index0 += _ratio\" */ 0x18), expr))\n                        }\n                        /// @src 21:5587:5614  \"Fees(msg.sender, amount, 0)\"\n                        let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        mstore(_3, var_amount)\n                        mstore(add(_3, 32), /** @src -1:-1:-1 */ 0)\n                        /// @src 21:5587:5614  \"Fees(msg.sender, amount, 0)\"\n                        log2(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 21:5587:5614  \"Fees(msg.sender, amount, 0)\" */ 0x112c256902bf554b6ed882d2936687aaeb4225e8cd5b51303c90ca6cf43a8602, /** @src 21:5592:5602  \"msg.sender\" */ caller())\n                    }\n                    /// @ast-id 4718 @src 21:5662:6020  \"function _update1(uint256 amount) internal {...\"\n                    function fun_update1(var_amount)\n                    {\n                        /// @src 21:5769:5793  \"if (amount == 0) return;\"\n                        if /** @src 21:5773:5784  \"amount == 0\" */ iszero(var_amount)\n                        /// @src 21:5769:5793  \"if (amount == 0) return;\"\n                        {\n                            /// @src 21:5786:5793  \"return;\"\n                            leave\n                        }\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let cleaned := and(sload(/** @src 21:5809:5815  \"token1\" */ 0x0d), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1)\n                        /// @src 21:5840:5846  \"amount\"\n                        fun_safeTransfer(cleaned, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(sload(/** @src 21:5830:5838  \"poolFees\" */ 0x0e), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1), /** @src 21:5840:5846  \"amount\" */ var_amount)\n                        /// @src 21:5884:5888  \"1e18\"\n                        let _2 := 0x0de0b6b3a7640000\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let product := mul(var_amount, /** @src 21:5884:5888  \"1e18\" */ _2)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        if iszero(eq(/** @src 21:5884:5888  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product, var_amount)))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        /// @src 21:5874:5905  \"(amount * 1e18) / totalSupply()\"\n                        let expr := checked_div_uint256(product, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 3:3222:3234  \"_totalSupply\" */ 0x02))\n                        /// @src 21:5915:5972  \"if (_ratio > 0) {...\"\n                        if /** @src 21:5919:5929  \"_ratio > 0\" */ iszero(iszero(expr))\n                        /// @src 21:5915:5972  \"if (_ratio > 0) {...\"\n                        {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            sstore(/** @src 21:5945:5961  \"index1 += _ratio\" */ 0x19, checked_add_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:5945:5961  \"index1 += _ratio\" */ 0x19), expr))\n                        }\n                        /// @src 21:5986:6013  \"Fees(msg.sender, 0, amount)\"\n                        let _3 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        mstore(_3, /** @src -1:-1:-1 */ 0)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(add(_3, 32), var_amount)\n                        /// @src 21:5986:6013  \"Fees(msg.sender, 0, amount)\"\n                        log2(_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 64, /** @src 21:5986:6013  \"Fees(msg.sender, 0, amount)\" */ 0x112c256902bf554b6ed882d2936687aaeb4225e8cd5b51303c90ca6cf43a8602, /** @src 21:5991:6001  \"msg.sender\" */ caller())\n                    }\n                    /// @ast-id 6306 @src 21:19986:20938  \"function _getAmountOut(...\"\n                    function fun_getAmountOut(var_amountIn, var_tokenIn, var__reserve0, var_reserve1) -> var\n                    {\n                        /// @src 21:20162:20932  \"if (stable) {...\"\n                        switch /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(shr(160, sload(/** @src 21:20166:20172  \"stable\" */ 0x0b)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                        case /** @src 21:20162:20932  \"if (stable) {...\" */ 0 {\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let _1 := sub(shl(160, 1), 1)\n                            /// @src 21:20788:20805  \"tokenIn == token0\"\n                            let expr := eq(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 21:20788:20805  \"tokenIn == token0\" */ var_tokenIn, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1), and(sload(/** @src 21:20799:20805  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _1))\n                            /// @src 21:20788:20855  \"tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0)\"\n                            let expr_6291_component := /** @src -1:-1:-1 */ 0\n                            let expr_component := expr_6291_component\n                            /// @src 21:20788:20855  \"tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0)\"\n                            switch expr\n                            case 0 {\n                                expr_6291_component := var_reserve1\n                                expr_component := var__reserve0\n                            }\n                            default {\n                                expr_6291_component := var__reserve0\n                                expr_component := var_reserve1\n                            }\n                            /// @src 21:20877:20896  \"amountIn * reserveB\"\n                            let expr_1 := checked_mul_uint256(var_amountIn, expr_component)\n                            /// @src 21:20869:20921  \"return (amountIn * reserveB) / (reserveA + amountIn)\"\n                            var := /** @src 21:20876:20921  \"(amountIn * reserveB) / (reserveA + amountIn)\" */ checked_div_uint256(expr_1, /** @src 21:20901:20920  \"reserveA + amountIn\" */ checked_add_uint256(expr_6291_component, var_amountIn))\n                            /// @src 21:20869:20921  \"return (amountIn * reserveB) / (reserveA + amountIn)\"\n                            leave\n                        }\n                        default /// @src 21:20162:20932  \"if (stable) {...\"\n                        {\n                            /// @src 21:20201:20225  \"_k(_reserve0, _reserve1)\"\n                            let expr_2 := fun_k(var__reserve0, var_reserve1)\n                            /// @src 21:20264:20268  \"1e18\"\n                            let _2 := 0x0de0b6b3a7640000\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let product := mul(var__reserve0, /** @src 21:20264:20268  \"1e18\" */ _2)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if iszero(or(iszero(var__reserve0), eq(/** @src 21:20264:20268  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product, var__reserve0))))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                            }\n                            let _3 := sload(/** @src 21:20272:20281  \"decimals0\" */ 0x11)\n                            /// @src 21:20251:20281  \"(_reserve0 * 1e18) / decimals0\"\n                            let expr_3 := checked_div_uint256(product, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _3)\n                            let product_1 := mul(var_reserve1, /** @src 21:20264:20268  \"1e18\" */ _2)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if iszero(or(iszero(var_reserve1), eq(/** @src 21:20264:20268  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product_1, var_reserve1))))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, /** @src 21:20272:20281  \"decimals0\" */ 0x11)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                            }\n                            let _4 := sload(/** @src 21:20328:20337  \"decimals1\" */ 0x12)\n                            /// @src 21:20307:20337  \"(_reserve1 * 1e18) / decimals1\"\n                            let expr_4 := checked_div_uint256(product_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _4)\n                            let _5 := sub(shl(160, 1), 1)\n                            /// @src 21:20390:20407  \"tokenIn == token0\"\n                            let expr_5 := eq(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(/** @src 21:20390:20407  \"tokenIn == token0\" */ var_tokenIn, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _5), and(sload(/** @src 21:20401:20407  \"token0\" */ 0x0c), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _5))\n                            /// @src 21:20390:20457  \"tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0)\"\n                            let expr_component_1 := /** @src -1:-1:-1 */ 0\n                            let expr_6231_component := expr_component_1\n                            /// @src 21:20390:20457  \"tokenIn == token0 ? (_reserve0, _reserve1) : (_reserve1, _reserve0)\"\n                            switch expr_5\n                            case 0 {\n                                expr_component_1 := expr_4\n                                expr_6231_component := expr_3\n                            }\n                            default {\n                                expr_component_1 := expr_3\n                                expr_6231_component := expr_4\n                            }\n                            /// @src 21:20482:20563  \"tokenIn == token0 ? (amountIn * 1e18) / decimals0 : (amountIn * 1e18) / decimals1\"\n                            let expr_6 := /** @src -1:-1:-1 */ 0\n                            /// @src 21:20482:20563  \"tokenIn == token0 ? (amountIn * 1e18) / decimals0 : (amountIn * 1e18) / decimals1\"\n                            switch expr_5\n                            case 0 {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let product_2 := mul(var_amountIn, /** @src 21:20264:20268  \"1e18\" */ _2)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                if iszero(or(iszero(var_amountIn), eq(/** @src 21:20264:20268  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product_2, var_amountIn))))\n                                {\n                                    mstore(/** @src -1:-1:-1 */ expr_6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, /** @src 21:20272:20281  \"decimals0\" */ 0x11)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    revert(/** @src -1:-1:-1 */ expr_6, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                                }\n                                /// @src 21:20482:20563  \"tokenIn == token0 ? (amountIn * 1e18) / decimals0 : (amountIn * 1e18) / decimals1\"\n                                expr_6 := /** @src 21:20534:20563  \"(amountIn * 1e18) / decimals1\" */ checked_div_uint256(product_2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _4)\n                            }\n                            default /// @src 21:20482:20563  \"tokenIn == token0 ? (amountIn * 1e18) / decimals0 : (amountIn * 1e18) / decimals1\"\n                            {\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let product_3 := mul(var_amountIn, /** @src 21:20264:20268  \"1e18\" */ _2)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                if iszero(or(iszero(var_amountIn), eq(/** @src 21:20264:20268  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product_3, var_amountIn))))\n                                {\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, /** @src 21:20272:20281  \"decimals0\" */ 0x11)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                                }\n                                /// @src 21:20482:20563  \"tokenIn == token0 ? (amountIn * 1e18) / decimals0 : (amountIn * 1e18) / decimals1\"\n                                expr_6 := /** @src 21:20502:20531  \"(amountIn * 1e18) / decimals0\" */ checked_div_uint256(product_3, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ _3)\n                            }\n                            /// @src 21:20589:20641  \"reserveB - _get_y(amountIn + reserveA, xy, reserveB)\"\n                            let expr_7 := checked_sub_uint256(expr_6231_component, /** @src 21:20600:20641  \"_get_y(amountIn + reserveA, xy, reserveB)\" */ fun_get_y(/** @src 21:20607:20626  \"amountIn + reserveA\" */ checked_add_uint256(expr_6, expr_component_1), /** @src 21:20600:20641  \"_get_y(amountIn + reserveA, xy, reserveB)\" */ expr_2, expr_6231_component))\n                            /// @src 21:20668:20709  \"tokenIn == token0 ? decimals1 : decimals0\"\n                            let expr_8 := /** @src -1:-1:-1 */ 0\n                            /// @src 21:20668:20709  \"tokenIn == token0 ? decimals1 : decimals0\"\n                            switch expr_5\n                            case 0 { expr_8 := _3 }\n                            default { expr_8 := _4 }\n                            /// @src 21:20655:20718  \"return (y * (tokenIn == token0 ? decimals1 : decimals0)) / 1e18\"\n                            var := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:20663:20710  \"y * (tokenIn == token0 ? decimals1 : decimals0)\" */ checked_mul_uint256(expr_7, expr_8), /** @src 21:20264:20268  \"1e18\" */ _2)\n                            /// @src 21:20655:20718  \"return (y * (tokenIn == token0 ? decimals1 : decimals0)) / 1e18\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 6135 @src 21:17706:19581  \"function _get_y(uint256 x0, uint256 xy, uint256 y) internal view returns (uint256) {...\"\n                    function fun_get_y(var_x0, var_xy, var_y) -> var\n                    {\n                        /// @src 21:17804:17817  \"uint256 i = 0\"\n                        let var_i := /** @src 21:17816:17817  \"0\" */ 0x00\n                        /// @src 21:17799:19553  \"for (uint256 i = 0; i < 255; i++) {...\"\n                        for { }\n                        /** @src 21:17819:17826  \"i < 255\" */ lt(var_i, /** @src 21:17823:17826  \"255\" */ 0xff)\n                        /// @src 21:17804:17817  \"uint256 i = 0\"\n                        {\n                            /// @src 21:17828:17831  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 21:17859:17868  \"_f(x0, y)\"\n                            let expr := fun_f(var_x0, var_y)\n                            /// @src 21:17847:17868  \"uint256 k = _f(x0, y)\"\n                            let var_k := expr\n                            /// @src 21:17882:19543  \"if (k < xy) {...\"\n                            switch /** @src 21:17886:17892  \"k < xy\" */ lt(expr, var_xy)\n                            case /** @src 21:17882:19543  \"if (k < xy) {...\" */ 0 {\n                                /// @src 21:18859:18865  \"k - xy\"\n                                let expr_1 := checked_sub_uint256(expr, var_xy)\n                                /// @src 21:18869:18873  \"1e18\"\n                                let _1 := 0x0de0b6b3a7640000\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let product := mul(expr_1, /** @src 21:18869:18873  \"1e18\" */ _1)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                if iszero(or(iszero(expr_1), eq(/** @src 21:18869:18873  \"1e18\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product, expr_1))))\n                                {\n                                    mstore(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                                }\n                                /// @src 21:18844:18886  \"uint256 dy = ((k - xy) * 1e18) / _d(x0, y)\"\n                                let var_dy := /** @src 21:18857:18886  \"((k - xy) * 1e18) / _d(x0, y)\" */ checked_div_uint256(product, /** @src 21:18877:18886  \"_d(x0, y)\" */ fun_d(var_x0, var_y))\n                                /// @src 21:18904:19501  \"if (dy == 0) {...\"\n                                if /** @src 21:18908:18915  \"dy == 0\" */ iszero(var_dy)\n                                /// @src 21:18904:19501  \"if (dy == 0) {...\"\n                                {\n                                    /// @src 21:18943:18972  \"k == xy || _f(x0, y - 1) < xy\"\n                                    let expr_2 := /** @src 21:18943:18950  \"k == xy\" */ eq(expr, var_xy)\n                                    /// @src 21:18943:18972  \"k == xy || _f(x0, y - 1) < xy\"\n                                    if iszero(expr_2)\n                                    {\n                                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                        let diff := add(var_y, not(0))\n                                        if gt(diff, var_y)\n                                        {\n                                            mstore(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                                        }\n                                        /// @src 21:18943:18972  \"k == xy || _f(x0, y - 1) < xy\"\n                                        expr_2 := /** @src 21:18954:18972  \"_f(x0, y - 1) < xy\" */ lt(/** @src 21:18954:18967  \"_f(x0, y - 1)\" */ fun_f(var_x0, /** @src 21:18961:18966  \"y - 1\" */ diff), /** @src 21:18954:18972  \"_f(x0, y - 1) < xy\" */ var_xy)\n                                    }\n                                    /// @src 21:18939:19455  \"if (k == xy || _f(x0, y - 1) < xy) {...\"\n                                    if expr_2\n                                    {\n                                        /// @src 21:19424:19432  \"return y\"\n                                        var := var_y\n                                        leave\n                                    }\n                                    /// @src 21:19476:19482  \"dy = 1\"\n                                    var_dy := /** @src 21:19481:19482  \"1\" */ 0x01\n                                }\n                                /// @src 21:19518:19528  \"y = y - dy\"\n                                var_y := /** @src 21:19522:19528  \"y - dy\" */ checked_sub_uint256(var_y, var_dy)\n                            }\n                            default /// @src 21:17882:19543  \"if (k < xy) {...\"\n                            {\n                                /// @src 21:18257:18263  \"xy - k\"\n                                let expr_3 := checked_sub_uint256(var_xy, var_k)\n                                /// @src 21:18267:18271  \"1e18\"\n                                let _2 := 0x0de0b6b3a7640000\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                let product_1 := mul(expr_3, /** @src 21:18267:18271  \"1e18\" */ _2)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                if iszero(or(iszero(expr_3), eq(/** @src 21:18267:18271  \"1e18\" */ _2, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product_1, expr_3))))\n                                {\n                                    mstore(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                                }\n                                /// @src 21:18242:18284  \"uint256 dy = ((xy - k) * 1e18) / _d(x0, y)\"\n                                let var_dy_1 := /** @src 21:18255:18284  \"((xy - k) * 1e18) / _d(x0, y)\" */ checked_div_uint256(product_1, /** @src 21:18275:18284  \"_d(x0, y)\" */ fun_d(var_x0, var_y))\n                                /// @src 21:18302:18778  \"if (dy == 0) {...\"\n                                if /** @src 21:18306:18313  \"dy == 0\" */ iszero(var_dy_1)\n                                /// @src 21:18302:18778  \"if (dy == 0) {...\"\n                                {\n                                    /// @src 21:18337:18472  \"if (k == xy) {...\"\n                                    if /** @src 21:18341:18348  \"k == xy\" */ eq(var_k, var_xy)\n                                    /// @src 21:18337:18472  \"if (k == xy) {...\"\n                                    {\n                                        /// @src 21:18441:18449  \"return y\"\n                                        var := var_y\n                                        leave\n                                    }\n                                    /// @src 21:18508:18509  \"1\"\n                                    let _3 := 0x01\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    let sum := add(var_y, /** @src 21:18508:18509  \"1\" */ _3)\n                                    /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                    if gt(var_y, sum)\n                                    {\n                                        mstore(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x11)\n                                        revert(/** @src 21:17816:17817  \"0\" */ 0x00, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                                    }\n                                    /// @src 21:18493:18732  \"if (_k(x0, y + 1) > xy) {...\"\n                                    if /** @src 21:18497:18515  \"_k(x0, y + 1) > xy\" */ gt(/** @src 21:18497:18510  \"_k(x0, y + 1)\" */ fun_k(var_x0, /** @src 21:18504:18509  \"y + 1\" */ sum), /** @src 21:18497:18515  \"_k(x0, y + 1) > xy\" */ var_xy)\n                                    /// @src 21:18493:18732  \"if (_k(x0, y + 1) > xy) {...\"\n                                    {\n                                        /// @src 21:18697:18709  \"return y + 1\"\n                                        var := sum\n                                        leave\n                                    }\n                                    /// @src 21:18753:18759  \"dy = 1\"\n                                    var_dy_1 := /** @src 21:18508:18509  \"1\" */ _3\n                                }\n                                /// @src 21:18795:18805  \"y = y + dy\"\n                                var_y := /** @src 21:18799:18805  \"y + dy\" */ checked_add_uint256(var_y, var_dy_1)\n                            }\n                        }\n                        /// @src 21:19562:19574  \"revert(\\\"!y\\\")\"\n                        let _4 := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 21:19562:19574  \"revert(\\\"!y\\\")\"\n                        mstore(_4, shl(229, 4594637))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        mstore(/** @src 21:19562:19574  \"revert(\\\"!y\\\")\" */ add(_4, 4), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 32)\n                        mstore(add(/** @src 21:19562:19574  \"revert(\\\"!y\\\")\" */ _4, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 36), 2)\n                        mstore(add(/** @src 21:19562:19574  \"revert(\\\"!y\\\")\" */ _4, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 68), \"!y\")\n                        /// @src 21:19562:19574  \"revert(\\\"!y\\\")\"\n                        revert(_4, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 100)\n                    }\n                    /// @ast-id 5958 @src 21:17329:17532  \"function _f(uint256 x0, uint256 y) internal pure returns (uint256) {...\"\n                    function fun_f(var_x0, var_y) -> var\n                    {\n                        /// @src 21:17430:17434  \"1e18\"\n                        let _1 := 0x0de0b6b3a7640000\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let r := div(/** @src 21:17420:17426  \"x0 * y\" */ checked_mul_uint256(var_x0, var_y), /** @src 21:17430:17434  \"1e18\" */ _1)\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let r_1 := div(/** @src 21:17459:17466  \"x0 * x0\" */ checked_mul_uint256(var_x0, var_x0), /** @src 21:17430:17434  \"1e18\" */ _1)\n                        /// @src 21:17502:17525  \"return (_a * _b) / 1e18\"\n                        var := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:17510:17517  \"_a * _b\" */ checked_mul_uint256(r, /** @src 21:17458:17491  \"(x0 * x0) / 1e18 + (y * y) / 1e18\" */ checked_add_uint256(r_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:17478:17483  \"y * y\" */ checked_mul_uint256(var_y, var_y), /** @src 21:17430:17434  \"1e18\" */ _1))), _1)\n                    }\n                    /// @ast-id 5997 @src 21:17538:17700  \"function _d(uint256 x0, uint256 y) internal pure returns (uint256) {...\"\n                    function fun_d(var_x0, var_y) -> var\n                    {\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let product := mul(/** @src 21:17623:17624  \"3\" */ 0x03, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ var_x0)\n                        if iszero(eq(var_x0, div(product, /** @src 21:17623:17624  \"3\" */ 0x03)))\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                        }\n                        /// @src 21:17643:17647  \"1e18\"\n                        let _1 := 0x0de0b6b3a7640000\n                        /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                        let r := div(/** @src 21:17623:17648  \"3 * x0 * ((y * y) / 1e18)\" */ checked_mul_uint256(product, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:17634:17639  \"y * y\" */ checked_mul_uint256(var_y, var_y), /** @src 21:17643:17647  \"1e18\" */ _1)), _1)\n                        /// @src 21:17615:17693  \"return (3 * x0 * ((y * y) / 1e18)) / 1e18 + ((((x0 * x0) / 1e18) * x0) / 1e18)\"\n                        var := /** @src 21:17622:17693  \"(3 * x0 * ((y * y) / 1e18)) / 1e18 + ((((x0 * x0) / 1e18) * x0) / 1e18)\" */ checked_add_uint256(r, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:17661:17684  \"((x0 * x0) / 1e18) * x0\" */ checked_mul_uint256(/** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:17663:17670  \"x0 * x0\" */ checked_mul_uint256(var_x0, var_x0), /** @src 21:17643:17647  \"1e18\" */ _1), /** @src 21:17661:17684  \"((x0 * x0) / 1e18) * x0\" */ var_x0), /** @src 21:17643:17647  \"1e18\" */ _1))\n                    }\n                    /// @ast-id 6375 @src 21:20944:21361  \"function _k(uint256 x, uint256 y) internal view returns (uint256) {...\"\n                    function fun_k(var_x, var_y) -> var\n                    {\n                        /// @src 21:21020:21355  \"if (stable) {...\"\n                        switch /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ and(shr(160, sload(/** @src 21:21024:21030  \"stable\" */ 0x0b)), /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0xff)\n                        case /** @src 21:21020:21355  \"if (stable) {...\" */ 0 {\n                            /// @src 21:21321:21333  \"return x * y\"\n                            var := /** @src 21:21328:21333  \"x * y\" */ checked_mul_uint256(var_x, var_y)\n                            /// @src 21:21321:21333  \"return x * y\"\n                            leave\n                        }\n                        default /// @src 21:21020:21355  \"if (stable) {...\"\n                        {\n                            /// @src 21:21064:21068  \"1e18\"\n                            let _1 := 0x0de0b6b3a7640000\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let product := mul(var_x, /** @src 21:21064:21068  \"1e18\" */ _1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if iszero(or(iszero(var_x), eq(/** @src 21:21064:21068  \"1e18\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product, var_x))))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                            }\n                            /// @src 21:21059:21081  \"(x * 1e18) / decimals0\"\n                            let expr := checked_div_uint256(product, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:21072:21081  \"decimals0\" */ 0x11))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let product_1 := mul(var_y, /** @src 21:21064:21068  \"1e18\" */ _1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            if iszero(or(iszero(var_y), eq(/** @src 21:21064:21068  \"1e18\" */ _1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(product_1, var_y))))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, /** @src 21:21072:21081  \"decimals0\" */ 0x11)\n                                /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ 0x24)\n                            }\n                            /// @src 21:21108:21130  \"(y * 1e18) / decimals1\"\n                            let expr_1 := checked_div_uint256(product_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ sload(/** @src 21:21121:21130  \"decimals1\" */ 0x12))\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let r := div(/** @src 21:21158:21165  \"_x * _y\" */ checked_mul_uint256(expr, expr_1), /** @src 21:21064:21068  \"1e18\" */ _1)\n                            /// @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\"\n                            let r_1 := div(/** @src 21:21202:21209  \"_x * _x\" */ checked_mul_uint256(expr, expr), /** @src 21:21064:21068  \"1e18\" */ _1)\n                            /// @src 21:21251:21274  \"return (_a * _b) / 1e18\"\n                            var := /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:21259:21266  \"_a * _b\" */ checked_mul_uint256(r, /** @src 21:21201:21236  \"(_x * _x) / 1e18 + (_y * _y) / 1e18\" */ checked_add_uint256(r_1, /** @src 21:932:21883  \"contract Pool is IPool, ERC20Permit, ReentrancyGuard {...\" */ div(/** @src 21:21221:21228  \"_y * _y\" */ checked_mul_uint256(expr_1, expr_1), /** @src 21:21064:21068  \"1e18\" */ _1))), _1)\n                            /// @src 21:21251:21274  \"return (_a * _b) / 1e18\"\n                            leave\n                        }\n                    }\n                }\n                /// @use-src 22:\"contracts/PoolFees.sol\"\n                object \"PoolFees_6496\" {\n                    code {\n                        {\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            let _1 := memoryguard(0xe0)\n                            if callvalue() { revert(0, 0) }\n                            let programSize := datasize(\"PoolFees_6496\")\n                            let argSize := sub(codesize(), programSize)\n                            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:387:1240  \"contract PoolFees {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 22:387:1240  \"contract PoolFees {...\" */ 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                            codecopy(_1, programSize, argSize)\n                            if slt(sub(add(_1, argSize), _1), 64)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            let value0 := abi_decode_address_fromMemory(_1)\n                            let value1 := abi_decode_address_fromMemory(add(_1, 32))\n                            /// @src 22:801:818  \"pool = msg.sender\"\n                            mstore(128, /** @src 22:808:818  \"msg.sender\" */ caller())\n                            /// @src 22:828:844  \"token0 = _token0\"\n                            mstore(160, value0)\n                            /// @src 22:854:870  \"token1 = _token1\"\n                            mstore(192, value1)\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            let _2 := mload(64)\n                            let _3 := datasize(\"PoolFees_6496_deployed\")\n                            codecopy(_2, dataoffset(\"PoolFees_6496_deployed\"), _3)\n                            setimmutable(_2, \"6425\", mload(/** @src 22:801:818  \"pool = msg.sender\" */ 128))\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            setimmutable(_2, \"6427\", mload(/** @src 22:828:844  \"token0 = _token0\" */ 160))\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            setimmutable(_2, \"6429\", mload(/** @src 22:854:870  \"token1 = _token1\" */ 192))\n                            /// @src 22:387:1240  \"contract PoolFees {...\"\n                            return(_2, _3)\n                        }\n                        function abi_decode_address_fromMemory(offset) -> value\n                        {\n                            value := mload(offset)\n                            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        }\n                    }\n                    /// @use-src 8:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\", 9:\"@openzeppelin/contracts/utils/Address.sol\", 22:\"contracts/PoolFees.sol\"\n                    object \"PoolFees_6496_deployed\" {\n                        code {\n                            {\n                                /// @src 22:387:1240  \"contract PoolFees {...\"\n                                let _1 := memoryguard(0x80)\n                                mstore(64, _1)\n                                if iszero(lt(calldatasize(), 4))\n                                {\n                                    let _2 := 0\n                                    if eq(0x533cf5ce, shr(224, calldataload(_2)))\n                                    {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), 96) { revert(_2, _2) }\n                                        let value := calldataload(4)\n                                        let _3 := sub(shl(160, 1), 1)\n                                        if iszero(eq(value, and(value, _3))) { revert(_2, _2) }\n                                        let value_1 := calldataload(36)\n                                        let value_2 := calldataload(68)\n                                        /// @src 22:1037:1077  \"if (msg.sender != pool) revert NotPool()\"\n                                        if /** @src 22:1041:1059  \"msg.sender != pool\" */ iszero(eq(/** @src 22:1041:1051  \"msg.sender\" */ caller(), /** @src 22:387:1240  \"contract PoolFees {...\" */ and(/** @src 22:1055:1059  \"pool\" */ loadimmutable(\"6425\"), /** @src 22:387:1240  \"contract PoolFees {...\" */ _3)))\n                                        /// @src 22:1037:1077  \"if (msg.sender != pool) revert NotPool()\"\n                                        {\n                                            /// @src 22:1068:1077  \"NotPool()\"\n                                            mstore(_1, shl(224, 0x6f61f641))\n                                            revert(_1, /** @src 22:387:1240  \"contract PoolFees {...\" */ 4)\n                                        }\n                                        /// @src 22:1087:1154  \"if (_amount0 > 0) IERC20(token0).safeTransfer(_recipient, _amount0)\"\n                                        if /** @src 22:1091:1103  \"_amount0 > 0\" */ iszero(iszero(value_1))\n                                        /// @src 22:1087:1154  \"if (_amount0 > 0) IERC20(token0).safeTransfer(_recipient, _amount0)\"\n                                        {\n                                            /// @src 22:1145:1153  \"_amount0\"\n                                            fun_safeTransfer(/** @src 22:387:1240  \"contract PoolFees {...\" */ and(/** @src 22:1112:1118  \"token0\" */ loadimmutable(\"6427\"), /** @src 22:387:1240  \"contract PoolFees {...\" */ _3), /** @src 22:1145:1153  \"_amount0\" */ value, value_1)\n                                        }\n                                        /// @src 22:1164:1231  \"if (_amount1 > 0) IERC20(token1).safeTransfer(_recipient, _amount1)\"\n                                        if /** @src 22:1168:1180  \"_amount1 > 0\" */ iszero(iszero(value_2))\n                                        /// @src 22:1164:1231  \"if (_amount1 > 0) IERC20(token1).safeTransfer(_recipient, _amount1)\"\n                                        {\n                                            /// @src 22:1222:1230  \"_amount1\"\n                                            fun_safeTransfer(/** @src 22:387:1240  \"contract PoolFees {...\" */ and(/** @src 22:1189:1195  \"token1\" */ loadimmutable(\"6429\"), /** @src 22:387:1240  \"contract PoolFees {...\" */ _3), /** @src 22:1222:1230  \"_amount1\" */ value, value_2)\n                                        }\n                                        /// @src 22:387:1240  \"contract PoolFees {...\"\n                                        return(_2, _2)\n                                    }\n                                }\n                                revert(0, 0)\n                            }\n                            /// @ast-id 1105 @src 8:1303:1463  \"function safeTransfer(IERC20 token, address to, uint256 value) internal {...\"\n                            function fun_safeTransfer(var_token_address, var_to, var_value)\n                            {\n                                /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let expr_mpos := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(64)\n                                /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                let _1 := add(expr_mpos, 0x20)\n                                mstore(_1, /** @src 22:387:1240  \"contract PoolFees {...\" */ shl(224, 0xa9059cbb))\n                                let _2 := sub(shl(160, 1), 1)\n                                mstore(/** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ add(expr_mpos, 36), /** @src 22:387:1240  \"contract PoolFees {...\" */ and(var_to, _2))\n                                mstore(add(/** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_mpos, /** @src 22:387:1240  \"contract PoolFees {...\" */ 68), var_value)\n                                /// @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                                mstore(expr_mpos, /** @src 22:387:1240  \"contract PoolFees {...\" */ 68)\n                                let newFreePtr := add(expr_mpos, 128)\n                                let _3 := 0xffffffffffffffff\n                                if or(gt(newFreePtr, _3), lt(newFreePtr, expr_mpos))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                                }\n                                /// @src 22:387:1240  \"contract PoolFees {...\"\n                                mstore(64, newFreePtr)\n                                let _4 := and(/** @src 8:4504:4518  \"address(token)\" */ var_token_address, /** @src 22:387:1240  \"contract PoolFees {...\" */ _2)\n                                /// @src -1:-1:-1\n                                let _5 := 0\n                                /// @src 9:3462:3493  \"target.call{value: value}(data)\"\n                                let expr_component := call(gas(), _4, /** @src -1:-1:-1 */ _5, /** @src 9:3462:3493  \"target.call{value: value}(data)\" */ _1, mload(expr_mpos), /** @src -1:-1:-1 */ _5, _5)\n                                /// @src 9:3462:3493  \"target.call{value: value}(data)\"\n                                let data := /** @src -1:-1:-1 */ _5\n                                /// @src 22:387:1240  \"contract PoolFees {...\"\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _6 := returndatasize()\n                                    if gt(_6, _3)\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ _5, /** @src 22:387:1240  \"contract PoolFees {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(/** @src -1:-1:-1 */ _5, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                                    }\n                                    let _7 := not(31)\n                                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                                    let memPtr := mload(64)\n                                    let newFreePtr_1 := add(memPtr, and(add(and(add(_6, 31), /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ _7), /** @src 22:387:1240  \"contract PoolFees {...\" */ 63), /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ _7))\n                                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                                    if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ _5, /** @src 22:387:1240  \"contract PoolFees {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(/** @src -1:-1:-1 */ _5, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                                    }\n                                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                                    mstore(64, newFreePtr_1)\n                                    mstore(memPtr, _6)\n                                    data := memPtr\n                                    returndatacopy(add(memPtr, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20), /** @src -1:-1:-1 */ _5, /** @src 22:387:1240  \"contract PoolFees {...\" */ returndatasize())\n                                }\n                                /// @src 9:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                                let var_mpos := /** @src 9:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_4, expr_component, /** @src 9:3462:3493  \"target.call{value: value}(data)\" */ data)\n                                /// @src 8:4551:4568  \"returndata.length\"\n                                let expr := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(/** @src 8:4551:4568  \"returndata.length\" */ var_mpos)\n                                /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                let expr_1 := /** @src 8:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                                /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                if expr_1\n                                {\n                                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                                    if slt(sub(/** @src 8:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr), var_mpos), /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20)\n                                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                                    {\n                                        revert(/** @src -1:-1:-1 */ _5, _5)\n                                    }\n                                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                                    let value := mload(/** @src 8:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 0x20))\n                                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                                    let _8 := iszero(value)\n                                    if iszero(eq(value, iszero(_8)))\n                                    {\n                                        revert(/** @src -1:-1:-1 */ _5, _5)\n                                    }\n                                    /// @src 8:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                                    expr_1 := _8\n                                }\n                                /// @src 8:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                                if expr_1\n                                {\n                                    /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    let _9 := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(64)\n                                    /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    mstore(_9, shl(224, 0x5274afe7))\n                                    /// @src 22:387:1240  \"contract PoolFees {...\"\n                                    mstore(/** @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_9, 4), /** @src 22:387:1240  \"contract PoolFees {...\" */ _4)\n                                    /// @src 8:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                                    revert(_9, /** @src 8:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ 36)\n                                }\n                            }\n                            /// @ast-id 1557 @src 9:4625:5207  \"function verifyCallResultFromTarget(...\"\n                            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n                            {\n                                /// @src 9:4793:5201  \"if (!success) {...\"\n                                switch /** @src 9:4797:4805  \"!success\" */ iszero(var_success)\n                                case /** @src 9:4793:5201  \"if (!success) {...\" */ 0 {\n                                    /// @src 9:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                    let expr := /** @src 9:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 22:387:1240  \"contract PoolFees {...\" */ mload(/** @src 9:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                                    /// @src 9:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                                    if expr\n                                    {\n                                        expr := /** @src 9:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 9:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                                    }\n                                    /// @src 9:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                                    if expr\n                                    {\n                                        /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                                        let _1 := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(64)\n                                        /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                                        mstore(_1, shl(224, 0x9996b315))\n                                        /// @src 22:387:1240  \"contract PoolFees {...\"\n                                        mstore(/** @src 9:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 22:387:1240  \"contract PoolFees {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                                        /// @src 9:5121:5145  \"AddressEmptyCode(target)\"\n                                        revert(_1, /** @src 22:387:1240  \"contract PoolFees {...\" */ 36)\n                                    }\n                                    /// @src 9:5173:5190  \"return returndata\"\n                                    var_mpos := var_returndata_mpos\n                                    leave\n                                }\n                                default /// @src 9:4793:5201  \"if (!success) {...\"\n                                {\n                                    /// @src 9:5870:6253  \"if (returndata.length > 0) {...\"\n                                    switch /** @src 9:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 22:387:1240  \"contract PoolFees {...\" */ mload(/** @src 9:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                                    case /** @src 9:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                                        /// @src 9:6225:6242  \"FailedInnerCall()\"\n                                        let _2 := /** @src 22:387:1240  \"contract PoolFees {...\" */ mload(64)\n                                        /// @src 9:6225:6242  \"FailedInnerCall()\"\n                                        mstore(_2, shl(225, 0x0a12f521))\n                                        revert(_2, 4)\n                                    }\n                                    default /// @src 9:5870:6253  \"if (returndata.length > 0) {...\"\n                                    {\n                                        /// @src 9:6046:6188  \"assembly {...\"\n                                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                                    }\n                                }\n                            }\n                        }\n                        data \".metadata\" hex\"a26469706673582212206ecbdc6aff314b5389e0835989ddc065b67f6240a8881d9aa13bd34b5120580564736f6c63430008140033\"\n                    }\n                }\n                data \".metadata\" hex\"a26469706673582212207bc03432829fe1a9b195cc4fac8e333a019a2006e04b62916c185cad78f1c9e164736f6c63430008140033\"\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e1aa4508f2f257f14ecf4972be115d9f73c776d948eb92450b45a47e0b25f65d64736f6c63430008140033\"\n    }\n}\n","hash":"010001a7484eff3ad5f4cc65cd6ca9c901247ab3b38add77a5c8ea3e06232329","factoryDependencies":{"01000a5f90c0c98e47585eeb93566ad1608648baacb1862b4849e50e97d39f86":"contracts/Pool.sol:Pool"}}},"contracts/interfaces/IPool.sol":{"IPool":{"abi":[{"inputs":[],"name":"BelowMinimumK","type":"error"},{"inputs":[],"name":"DepositsNotEqual","type":"error"},{"inputs":[],"name":"FactoryAlreadySet","type":"error"},{"inputs":[],"name":"InsufficientInputAmount","type":"error"},{"inputs":[],"name":"InsufficientLiquidity","type":"error"},{"inputs":[],"name":"InsufficientLiquidityBurned","type":"error"},{"inputs":[],"name":"InsufficientLiquidityMinted","type":"error"},{"inputs":[],"name":"InsufficientOutputAmount","type":"error"},{"inputs":[],"name":"InvalidTo","type":"error"},{"inputs":[],"name":"IsPaused","type":"error"},{"inputs":[],"name":"K","type":"error"},{"inputs":[],"name":"NotEmergencyCouncil","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Claim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Fees","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1In","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0Out","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1Out","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reserve0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"reserve1","type":"uint256"}],"name":"Sync","type":"event"},{"inputs":[],"name":"blockTimestampLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimable0","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimable1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentCumulativePrices","outputs":[{"internalType":"uint256","name":"reserve0Cumulative","type":"uint256"},{"internalType":"uint256","name":"reserve1Cumulative","type":"uint256"},{"internalType":"uint256","name":"blockTimestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"tokenIn","type":"address"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256","name":"_reserve0","type":"uint256"},{"internalType":"uint256","name":"_reserve1","type":"uint256"},{"internalType":"uint256","name":"_blockTimestampLast","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"index0","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"index1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token0","type":"address"},{"internalType":"address","name":"_token1","type":"address"},{"internalType":"bool","name":"_stable","type":"bool"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lastObservation","outputs":[{"components":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"reserve0Cumulative","type":"uint256"},{"internalType":"uint256","name":"reserve1Cumulative","type":"uint256"}],"internalType":"struct IPool.Observation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"metadata","outputs":[{"internalType":"uint256","name":"dec0","type":"uint256"},{"internalType":"uint256","name":"dec1","type":"uint256"},{"internalType":"uint256","name":"r0","type":"uint256"},{"internalType":"uint256","name":"r1","type":"uint256"},{"internalType":"bool","name":"st","type":"bool"},{"internalType":"address","name":"t0","type":"address"},{"internalType":"address","name":"t1","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"observationLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"periodSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolFees","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"points","type":"uint256"}],"name":"prices","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"granularity","type":"uint256"}],"name":"quote","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserve0","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserve0CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserve1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reserve1CumulativeLast","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"points","type":"uint256"},{"internalType":"uint256","name":"window","type":"uint256"}],"name":"sample","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"__name","type":"string"}],"name":"setName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"__symbol","type":"string"}],"name":"setSymbol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"skim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"supplyIndex0","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"supplyIndex1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0Out","type":"uint256"},{"internalType":"uint256","name":"amount1Out","type":"uint256"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sync","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokens","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BelowMinimumK\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositsNotEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FactoryAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidityBurned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidityMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTo\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IsPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"K\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEmergencyCouncil\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Fees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"blockTimestampLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimable0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimable1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentCumulativePrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve0Cumulative\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1Cumulative\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_blockTimestampLast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_stable\",\"type\":\"bool\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastObservation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve0Cumulative\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1Cumulative\",\"type\":\"uint256\"}],\"internalType\":\"struct IPool.Observation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dec0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dec1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r1\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"st\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"observationLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFees\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"name\":\"prices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"granularity\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"sample\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"__name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"__symbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplyIndex0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplyIndex1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(address)\":{\"params\":{\"to\":\"Address to receive token0 and token1 from burning the pool token\"},\"returns\":{\"amount0\":\"Amount of token0 returned\",\"amount1\":\"Amount of token1 returned\"}},\"getAmountOut(uint256,address)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"tokenIn\":\"Address of token\"},\"returns\":{\"_0\":\"Amount out\"}},\"getReserves()\":{\"returns\":{\"_blockTimestampLast\":\".\",\"_reserve0\":\".\",\"_reserve1\":\".\"}},\"initialize(address,address,bool)\":{\"params\":{\"_stable\":\"True if stable, false if volatile\",\"_token0\":\"Address of token0\",\"_token1\":\"Address of token1\"}},\"mint(address)\":{\"params\":{\"to\":\"Address to receive the minted LP token\"},\"returns\":{\"liquidity\":\"  Amount of LP token minted\"}},\"prices(address,uint256,uint256)\":{\"params\":{\"amountIn\":\".\",\"points\":\"Number of points to return\",\"tokenIn\":\".\"},\"returns\":{\"_0\":\"Array of TWAP prices\"}},\"quote(address,uint256,uint256)\":{\"params\":{\"amountIn\":\".\",\"granularity\":\".\",\"tokenIn\":\".\"},\"returns\":{\"amountOut\":\".\"}},\"sample(address,uint256,uint256,uint256)\":{\"params\":{\"amountIn\":\".\",\"points\":\".\",\"tokenIn\":\".\",\"window\":\".\"},\"returns\":{\"_0\":\"Array of TWAP prices\"}},\"setName(string)\":{\"params\":{\"__name\":\"String of new name\"}},\"setSymbol(string)\":{\"params\":{\"__symbol\":\"String of new symbol\"}},\"skim(address)\":{\"params\":{\"to\":\"Address to receive any skimmed rewards\"}},\"swap(uint256,uint256,address,bytes)\":{\"params\":{\"amount0Out\":\"Amount of token0 to send to `to`\",\"amount1Out\":\"Amount of token1 to send to `to`\",\"data\":\"Additional calldata for flashloans\",\"to\":\"Address to recieve the swapped output\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"blockTimestampLast()\":{\"notice\":\"Timestamp of last update to pool\"},\"burn(address)\":{\"notice\":\"This low-level function should be called from a contract which performs important safety checks         standard uniswap v2 implementation\"},\"claimFees()\":{\"notice\":\"Claim accumulated but unclaimed fees (claimable0 and claimable1)\"},\"claimable0(address)\":{\"notice\":\"Amount of unclaimed, but claimable tokens from fees of token0 for an LP\"},\"claimable1(address)\":{\"notice\":\"Amount of unclaimed, but claimable tokens from fees of token1 for an LP\"},\"currentCumulativePrices()\":{\"notice\":\"Produces the cumulative price using counterfactuals to save gas and avoid a call to sync.\"},\"factory()\":{\"notice\":\"Address of PoolFactory that created this contract\"},\"getAmountOut(uint256,address)\":{\"notice\":\"Get the amount of tokenOut given the amount of tokenIn\"},\"getReserves()\":{\"notice\":\"Update reserves and, on the first call per block, price accumulators\"},\"index0()\":{\"notice\":\"Accumulated fees of token0 (global)\"},\"index1()\":{\"notice\":\"Accumulated fees of token1 (global)\"},\"initialize(address,address,bool)\":{\"notice\":\"Called on pool creation by PoolFactory\"},\"lastObservation()\":{\"notice\":\"Get the value of the most recent observation\"},\"metadata()\":{\"notice\":\"Returns the decimal (dec), reserves (r), stable (st), and tokens (t) of token0 and token1\"},\"mint(address)\":{\"notice\":\"This low-level function should be called by addLiquidity functions in Router.sol, which performs important safety checks         standard uniswap v2 implementation\"},\"observationLength()\":{\"notice\":\"Get the number of observations recorded\"},\"periodSize()\":{\"notice\":\"Capture oracle reading every 30 minutes (1800 seconds)\"},\"poolFees()\":{\"notice\":\"Address of linked PoolFees.sol\"},\"prices(address,uint256,uint256)\":{\"notice\":\"Returns a memory set of TWAP prices         Same as calling sample(tokenIn, amountIn, points, 1)\"},\"quote(address,uint256,uint256)\":{\"notice\":\"Provides twap price with user configured granularity, up to the full window size\"},\"reserve0()\":{\"notice\":\"Amount of token0 in pool\"},\"reserve0CumulativeLast()\":{\"notice\":\"Cumulative of reserve0 factoring in time elapsed\"},\"reserve1()\":{\"notice\":\"Amount of token1 in pool\"},\"reserve1CumulativeLast()\":{\"notice\":\"Cumulative of reserve1 factoring in time elapsed\"},\"sample(address,uint256,uint256,uint256)\":{\"notice\":\"Same as prices with with an additional window argument.         Window = 2 means 2 * 30min (or 1 hr) between observations\"},\"setName(string)\":{\"notice\":\"Set pool name         Only callable by Voter.emergencyCouncil()\"},\"setSymbol(string)\":{\"notice\":\"Set pool symbol         Only callable by Voter.emergencyCouncil()\"},\"skim(address)\":{\"notice\":\"Force balances to match reserves\"},\"stable()\":{\"notice\":\"True if pool is stable, false if volatile\"},\"supplyIndex0(address)\":{\"notice\":\"Get an LP's relative index0 to index0\"},\"supplyIndex1(address)\":{\"notice\":\"Get an LP's relative index1 to index1\"},\"swap(uint256,uint256,address,bytes)\":{\"notice\":\"This low-level function should be called from a contract which performs important safety checks\"},\"sync()\":{\"notice\":\"Force reserves to match balances\"},\"token0()\":{\"notice\":\"Address of token in the pool with the lower address value\"},\"token1()\":{\"notice\":\"Address of token in the poool with the higher address value\"},\"tokens()\":{\"notice\":\"Returns [token0, token1]\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPool.sol\":{\"keccak256\":\"0x8d099692dcb8e82df0b0921c8af8aab339050b177dc19806e58f7cc5bb181ccd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60a2085df66cee4a8c2f4b3c26b54c2734e40ddaefa51208bd5b5f052d4701dd\",\"dweb:/ipfs/Qmeo6yFpUgz54Karohx3DCZwuvXkb7RXg7a5NGgiaZnvL1\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"blockTimestampLast()":"c5700a02","burn(address)":"89afcb44","claimFees()":"d294f093","claimable0(address)":"4d5a9f8a","claimable1(address)":"a1ac4d13","currentCumulativePrices()":"1df8c717","factory()":"c45a0155","getAmountOut(uint256,address)":"f140a35a","getReserves()":"0902f1ac","index0()":"32c0defd","index1()":"bda39cad","initialize(address,address,bool)":"e4bbb5a8","lastObservation()":"8a7b8cf2","metadata()":"392f37e9","mint(address)":"6a627842","observationLength()":"ebeb31db","periodSize()":"e4463eb2","poolFees()":"33580959","prices(address,uint256,uint256)":"5881c475","quote(address,uint256,uint256)":"9e8cc04b","reserve0()":"443cb4bc","reserve0CumulativeLast()":"bf944dbc","reserve1()":"5a76f25e","reserve1CumulativeLast()":"c245febc","sample(address,uint256,uint256,uint256)":"13345fe1","setName(string)":"c47f0027","setSymbol(string)":"b84c8246","skim(address)":"bc25cf77","stable()":"22be3de1","supplyIndex0(address)":"9f767c88","supplyIndex1(address)":"205aabf1","swap(uint256,uint256,address,bytes)":"022c0d9f","sync()":"fff6cae9","token0()":"0dfe1681","token1()":"d21220a7","tokens()":"9d63848a"}},"irOptimized":""}},"contracts/interfaces/IPoolCallee.sol":{"IPoolCallee":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"hook","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"hook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPoolCallee.sol\":\"IPoolCallee\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPoolCallee.sol\":{\"keccak256\":\"0xacfd7476bc6cff1b1ce9f584a051a3b4979371a37c70daa3c97921748cc15a46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6281b9677a2712a552ffae6485c935483463806dba2d92ea623681b3c1d65acb\",\"dweb:/ipfs/QmZScNqf5BgThhdunzEG9PXW67iSTjiF66RxmTeLfP6xMV\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"hook(address,uint256,uint256,bytes)":"9a7bff79"}},"irOptimized":""}},"contracts/interfaces/IVoter.sol":{"IVoter":{"abi":[{"inputs":[],"name":"AlreadyVotedOrDeposited","type":"error"},{"inputs":[],"name":"DistributeWindow","type":"error"},{"inputs":[],"name":"FactoryPathNotApproved","type":"error"},{"inputs":[],"name":"GaugeAlreadyKilled","type":"error"},{"inputs":[],"name":"GaugeAlreadyRevived","type":"error"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"name":"GaugeDoesNotExist","type":"error"},{"inputs":[],"name":"GaugeExists","type":"error"},{"inputs":[{"internalType":"address","name":"_gauge","type":"address"}],"name":"GaugeNotAlive","type":"error"},{"inputs":[],"name":"InactiveManagedNFT","type":"error"},{"inputs":[],"name":"MaximumVotingNumberTooLow","type":"error"},{"inputs":[],"name":"NonZeroVotes","type":"error"},{"inputs":[],"name":"NotAPool","type":"error"},{"inputs":[],"name":"NotApprovedOrOwner","type":"error"},{"inputs":[],"name":"NotEmergencyCouncil","type":"error"},{"inputs":[],"name":"NotGovernor","type":"error"},{"inputs":[],"name":"NotMinter","type":"error"},{"inputs":[],"name":"NotWhitelistedNFT","type":"error"},{"inputs":[],"name":"NotWhitelistedToken","type":"error"},{"inputs":[],"name":"SameValue","type":"error"},{"inputs":[],"name":"SpecialVotingWindow","type":"error"},{"inputs":[],"name":"TooManyPools","type":"error"},{"inputs":[],"name":"UnequalLengths","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"inputs":[],"name":"ZeroBalance","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalWeight","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"Abstained","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"gauge","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"DistributeReward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"poolFactory","type":"address"},{"indexed":true,"internalType":"address","name":"votingRewardsFactory","type":"address"},{"indexed":true,"internalType":"address","name":"gaugeFactory","type":"address"},{"indexed":false,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"address","name":"bribeVotingReward","type":"address"},{"indexed":false,"internalType":"address","name":"feeVotingReward","type":"address"},{"indexed":false,"internalType":"address","name":"gauge","type":"address"},{"indexed":false,"internalType":"address","name":"creator","type":"address"}],"name":"GaugeCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"gauge","type":"address"}],"name":"GaugeKilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"gauge","type":"address"}],"name":"GaugeRevived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"reward","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"NotifyReward","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalWeight","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"Voted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"whitelister","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"bool","name":"_bool","type":"bool"}],"name":"WhitelistNFT","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"whitelister","type":"address"},{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"bool","name":"_bool","type":"bool"}],"name":"WhitelistToken","type":"event"},{"inputs":[{"internalType":"address[]","name":"_bribes","type":"address[]"},{"internalType":"address[][]","name":"_tokens","type":"address[][]"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"claimBribes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_fees","type":"address[]"},{"internalType":"address[][]","name":"_tokens","type":"address[][]"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"claimFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_gauges","type":"address[]"}],"name":"claimRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"gauge","type":"address"}],"name":"claimable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"},{"internalType":"address","name":"_pool","type":"address"}],"name":"createGauge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"uint256","name":"_mTokenId","type":"uint256"}],"name":"depositManaged","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_gauges","type":"address[]"}],"name":"distribute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_start","type":"uint256"},{"internalType":"uint256","name":"_finish","type":"uint256"}],"name":"distribute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyCouncil","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"epochGovernor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factoryRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"forwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"gauge","type":"address"}],"name":"gaugeToBribe","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"gauge","type":"address"}],"name":"gaugeToFees","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"gauges","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"gauge","type":"address"}],"name":"isAlive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isGauge","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isWhitelistedNFT","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"isWhitelistedToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_gauge","type":"address"}],"name":"killGauge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"lastVoted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"length","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxVotingNum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"notifyRewardAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"poke","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"gauge","type":"address"}],"name":"poolForGauge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"reset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_gauge","type":"address"}],"name":"reviveGauge","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_emergencyCouncil","type":"address"}],"name":"setEmergencyCouncil","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_epochGovernor","type":"address"}],"name":"setEpochGovernor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_governor","type":"address"}],"name":"setGovernor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxVotingNum","type":"uint256"}],"name":"setMaxVotingNum","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_gauge","type":"address"}],"name":"updateFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_start","type":"uint256"},{"internalType":"uint256","name":"_end","type":"uint256"}],"name":"updateFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_gauges","type":"address[]"}],"name":"updateFor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"usedWeights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ve","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"address[]","name":"_poolVote","type":"address[]"},{"internalType":"uint256[]","name":"_weights","type":"uint256[]"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"pool","type":"address"}],"name":"votes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"weights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"bool","name":"_bool","type":"bool"}],"name":"whitelistNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"bool","name":"_bool","type":"bool"}],"name":"whitelistToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"withdrawManaged","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyVotedOrDeposited\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DistributeWindow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FactoryPathNotApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GaugeAlreadyKilled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GaugeAlreadyRevived\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"GaugeDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GaugeExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"}],\"name\":\"GaugeNotAlive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InactiveManagedNFT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaximumVotingNumberTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonZeroVotes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotApprovedOrOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEmergencyCouncil\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotGovernor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMinter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelistedNFT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotWhitelistedToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpecialVotingWindow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyPools\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnequalLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Abstained\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DistributeReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"votingRewardsFactory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gaugeFactory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bribeVotingReward\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeVotingReward\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"GaugeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"GaugeKilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"GaugeRevived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NotifyReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWeight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whitelister\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"WhitelistNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whitelister\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"WhitelistToken\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bribes\",\"type\":\"address[]\"},{\"internalType\":\"address[][]\",\"name\":\"_tokens\",\"type\":\"address[][]\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"claimBribes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_fees\",\"type\":\"address[]\"},{\"internalType\":\"address[][]\",\"name\":\"_tokens\",\"type\":\"address[][]\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_gauges\",\"type\":\"address[]\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"createGauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mTokenId\",\"type\":\"uint256\"}],\"name\":\"depositManaged\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_gauges\",\"type\":\"address[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_finish\",\"type\":\"uint256\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyCouncil\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"gaugeToBribe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"gaugeToFees\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"gauges\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"isAlive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isGauge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isWhitelistedNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isWhitelistedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"}],\"name\":\"killGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"lastVoted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxVotingNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"poke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"poolForGauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"}],\"name\":\"reviveGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_emergencyCouncil\",\"type\":\"address\"}],\"name\":\"setEmergencyCouncil\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_epochGovernor\",\"type\":\"address\"}],\"name\":\"setEpochGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"setGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxVotingNum\",\"type\":\"uint256\"}],\"name\":\"setMaxVotingNum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"}],\"name\":\"updateFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"updateFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_gauges\",\"type\":\"address[]\"}],\"name\":\"updateFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"usedWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_poolVote\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"weights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"whitelistNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"whitelistToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawManaged\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimBribes(address[],address[][],uint256)\":{\"details\":\"Utility to help batch bribe claims.\",\"params\":{\"_bribes\":\"Array of BribeVotingReward contracts to collect from.\",\"_tokenId\":\"Id of veNFT that you wish to claim bribes for.\",\"_tokens\":\"Array of tokens that are used as bribes.\"}},\"claimFees(address[],address[][],uint256)\":{\"details\":\"Utility to help batch fee claims.\",\"params\":{\"_fees\":\"Array of FeesVotingReward contracts to collect from.\",\"_tokenId\":\"Id of veNFT that you wish to claim fees for.\",\"_tokens\":\"Array of tokens that are used as fees.\"}},\"claimRewards(address[])\":{\"params\":{\"_gauges\":\"Array of gauges to collect emissions from.\"}},\"claimable(address)\":{\"details\":\"Gauge => Amount claimable\"},\"createGauge(address,address)\":{\"details\":\"Governor can create a new gauge for a pool with any address.\",\"params\":{\"_pool\":\".\",\"_poolFactory\":\".\"}},\"depositManaged(uint256,uint256)\":{\"details\":\"Throws if not approved or owner.      Throws if managed NFT is inactive.      Throws if depositing within privileged window (one hour prior to epoch flip).\"},\"distribute(address[])\":{\"details\":\"Utility to distribute to gauges of pools in array.\",\"params\":{\"_gauges\":\"Array of gauges to distribute to.\"}},\"distribute(uint256,uint256)\":{\"details\":\"Utility to distribute to gauges of pools in range _start to _finish.\",\"params\":{\"_finish\":\"Ending index of gauges to distribute to.\",\"_start\":\"Starting index of gauges to distribute to.\"}},\"gaugeToBribe(address)\":{\"details\":\"Gauge => Bribes Voting Reward\"},\"gaugeToFees(address)\":{\"details\":\"Gauge => Fees Voting Reward\"},\"gauges(address)\":{\"details\":\"Pool => Gauge\"},\"isAlive(address)\":{\"details\":\"Gauge => Liveness status\"},\"isGauge(address)\":{\"details\":\"Address => Gauge\"},\"isWhitelistedNFT(uint256)\":{\"details\":\"TokenId => Whitelisted status\"},\"isWhitelistedToken(address)\":{\"details\":\"Token => Whitelisted status\"},\"killGauge(address)\":{\"details\":\"Throws if not called by emergency council.      Throws if gauge already killed.\",\"params\":{\"_gauge\":\".\"}},\"lastVoted(uint256)\":{\"details\":\"Nft => Timestamp of last vote (ensures single vote per epoch)\"},\"maxVotingNum()\":{\"details\":\"Most number of pools one voter can vote for at once\"},\"notifyRewardAmount(uint256)\":{\"details\":\"Assumes totalWeight != 0 (Will never be zero as long as users are voting).      Throws if not called by minter.\",\"params\":{\"_amount\":\"Amount of rewards to distribute.\"}},\"poke(uint256)\":{\"params\":{\"_tokenId\":\"Id of veNFT whose balance you wish to update.\"}},\"poolForGauge(address)\":{\"details\":\"Gauge => Pool\"},\"reset(uint256)\":{\"params\":{\"_tokenId\":\"Id of veNFT you are reseting.\"}},\"reviveGauge(address)\":{\"details\":\"Throws if not called by emergency council.      Throws if gauge is not killed.\",\"params\":{\"_gauge\":\".\"}},\"setEmergencyCouncil(address)\":{\"details\":\"Throws if not called by emergency council.\",\"params\":{\"_emergencyCouncil\":\".\"}},\"setEpochGovernor(address)\":{\"details\":\"Throws if not called by governor.\",\"params\":{\"_epochGovernor\":\".\"}},\"setGovernor(address)\":{\"details\":\"Throws if not called by governor.\",\"params\":{\"_governor\":\".\"}},\"setMaxVotingNum(uint256)\":{\"details\":\"Throws if not called by governor.      Throws if _maxVotingNum is too low.      Throws if the values are the same.\",\"params\":{\"_maxVotingNum\":\".\"}},\"totalWeight()\":{\"details\":\"Total Voting Weights\"},\"updateFor(address)\":{\"details\":\"Update claims to emissions for single gauge\",\"params\":{\"_gauge\":\".\"}},\"updateFor(address[])\":{\"details\":\"Update claims to emissions for an array of gauges.\",\"params\":{\"_gauges\":\"Array of gauges to update emissions for.\"}},\"updateFor(uint256,uint256)\":{\"details\":\"Update claims to emissions for gauges based on their pool id as stored in Voter.\",\"params\":{\"_end\":\"Ending index of pools.\",\"_start\":\"Starting index of pools.\"}},\"usedWeights(uint256)\":{\"details\":\"NFT => Total voting weight of NFT\"},\"vote(uint256,address[],uint256[])\":{\"details\":\"Weights are distributed proportional to the sum of the weights in the array.      Throws if length of _poolVote and _weights do not match.\",\"params\":{\"_poolVote\":\"Array of pools you are voting for.\",\"_tokenId\":\"Id of veNFT you are voting with.\",\"_weights\":\"Weights of pools.\"}},\"votes(uint256,address)\":{\"details\":\"NFT => Pool => Votes\"},\"weights(address)\":{\"details\":\"Pool => Weights\"},\"whitelistNFT(uint256,bool)\":{\"details\":\"Throws if not called by governor.      Throws if already whitelisted.\",\"params\":{\"_bool\":\".\",\"_tokenId\":\".\"}},\"whitelistToken(address,bool)\":{\"details\":\"Throws if not called by governor.\",\"params\":{\"_bool\":\".\",\"_token\":\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimBribes(address[],address[][],uint256)\":{\"notice\":\"Claim bribes for a given NFT.\"},\"claimFees(address[],address[][],uint256)\":{\"notice\":\"Claim fees for a given NFT.\"},\"claimRewards(address[])\":{\"notice\":\"Claim emissions from gauges.\"},\"createGauge(address,address)\":{\"notice\":\"Create a new gauge (unpermissioned).\"},\"depositManaged(uint256,uint256)\":{\"notice\":\"Called by users to deposit into a managed NFT.         Can only vote or deposit into a managed NFT once per epoch.         Note that NFTs deposited into a managed NFT will be re-locked         to the maximum lock time on withdrawal.\"},\"emergencyCouncil()\":{\"notice\":\"credibly neutral party similar to Curve's Emergency DAO\"},\"epochGovernor()\":{\"notice\":\"Custom Epoch Governor using ve for vote weights.\"},\"factoryRegistry()\":{\"notice\":\"Factory registry for valid pool / gauge / rewards factories\"},\"forwarder()\":{\"notice\":\"Store trusted forwarder address to pass into factories\"},\"governor()\":{\"notice\":\"Standard OZ IGovernor using ve for vote weights.\"},\"killGauge(address)\":{\"notice\":\"Kills a gauge. The gauge will not receive any new emissions and cannot be deposited into.         Can still withdraw from gauge.\"},\"length()\":{\"notice\":\"Number of pools with a Gauge\"},\"minter()\":{\"notice\":\"Address of Minter.sol\"},\"notifyRewardAmount(uint256)\":{\"notice\":\"Called by Minter to distribute weekly emissions rewards for disbursement amongst gauges.\"},\"poke(uint256)\":{\"notice\":\"Called by users to update voting balances in voting rewards contracts.\"},\"reset(uint256)\":{\"notice\":\"Called by users to reset voting state. Required if you wish to make changes to         veNFT state (e.g. merge, split, deposit into managed etc).         Cannot reset in the same epoch that you voted in.         Can vote or deposit into a managed NFT again after reset.\"},\"reviveGauge(address)\":{\"notice\":\"Revives a killed gauge. Gauge will can receive emissions and deposits again.\"},\"setEmergencyCouncil(address)\":{\"notice\":\"Set new emergency council.\"},\"setEpochGovernor(address)\":{\"notice\":\"Set new epoch based governor.\"},\"setGovernor(address)\":{\"notice\":\"Set new governor.\"},\"setMaxVotingNum(uint256)\":{\"notice\":\"Set maximum number of gauges that can be voted for.\"},\"ve()\":{\"notice\":\"The ve token that governs these contracts\"},\"vote(uint256,address[],uint256[])\":{\"notice\":\"Called by users to vote for pools. Votes distributed proportionally based on weights.         Can only vote or deposit into a managed NFT once per epoch.         Can only vote for gauges that have not been killed.\"},\"whitelistNFT(uint256,bool)\":{\"notice\":\"Whitelist (or unwhitelist) token id for voting in last hour prior to epoch flip.\"},\"whitelistToken(address,bool)\":{\"notice\":\"Whitelist (or unwhitelist) token for use in bribes.\"},\"withdrawManaged(uint256)\":{\"notice\":\"Called by users to withdraw from a managed NFT.         Cannot do it in the same epoch that you deposited into a managed NFT.         Can vote or deposit into a managed NFT again after withdrawing.         Note that the NFT withdrawn is re-locked to the maximum lock time.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IVoter.sol\":\"IVoter\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IVoter.sol\":{\"keccak256\":\"0x23eb6f7da0291d983ddf81d97673fd14b89793218e33a9c1b3180d0fc79ebc80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7b8998845c380241317fbc7b105d5d6fa8010dfb5a3e3c2983d2c796b0d0c29\",\"dweb:/ipfs/QmXa7D1PkAkJnYxK7mVXXqjjBi3BFcjPRPERxbMeeifqiS\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"claimBribes(address[],address[][],uint256)":"7715ee75","claimFees(address[],address[][],uint256)":"666256aa","claimRewards(address[])":"f9f031df","claimable(address)":"402914f5","createGauge(address,address)":"794cea3c","depositManaged(uint256,uint256)":"e0c11f9a","distribute(address[])":"6138889b","distribute(uint256,uint256)":"7625391a","emergencyCouncil()":"7778960e","epochGovernor()":"3aae971f","factoryRegistry()":"3bf0c9fb","forwarder()":"f645d4f9","gaugeToBribe(address)":"929c8dcd","gaugeToFees(address)":"c4f08165","gauges(address)":"b9a09fd5","governor()":"0c340a24","isAlive(address)":"1703e5f9","isGauge(address)":"aa79979b","isWhitelistedNFT(uint256)":"d4e2616f","isWhitelistedToken(address)":"ab37f486","killGauge(address)":"992a7933","lastVoted(uint256)":"f3594be0","length()":"1f7b6d32","maxVotingNum()":"e8b3fd57","minter()":"07546172","notifyRewardAmount(uint256)":"3c6b16ab","poke(uint256)":"32145f90","poolForGauge(address)":"06d6a1b2","reset(uint256)":"310bd74b","reviveGauge(address)":"9f06247b","setEmergencyCouncil(address)":"e586875f","setEpochGovernor(address)":"598d521b","setGovernor(address)":"c42cf535","setMaxVotingNum(uint256)":"30331b2f","totalWeight()":"96c82e57","updateFor(address)":"0e0a5968","updateFor(address[])":"d560b0d7","updateFor(uint256,uint256)":"c9ff6f4d","usedWeights(uint256)":"79e93824","ve()":"1f850716","vote(uint256,address[],uint256[])":"7ac09bf7","votes(uint256,address)":"d23254b4","weights(address)":"a7cac846","whitelistNFT(uint256,bool)":"e2819d5c","whitelistToken(address,bool)":"0ffb1d8b","withdrawManaged(uint256)":"370fb5fa"}},"irOptimized":""}},"contracts/interfaces/factories/IPoolFactory.sol":{"IPoolFactory":{"abi":[{"inputs":[],"name":"FeeInvalid","type":"error"},{"inputs":[],"name":"FeeTooHigh","type":"error"},{"inputs":[],"name":"InvalidPool","type":"error"},{"inputs":[],"name":"NotFeeManager","type":"error"},{"inputs":[],"name":"NotPauser","type":"error"},{"inputs":[],"name":"NotVoter","type":"error"},{"inputs":[],"name":"PoolAlreadyExists","type":"error"},{"inputs":[],"name":"SameAddress","type":"error"},{"inputs":[],"name":"ZeroAddress","type":"error"},{"inputs":[],"name":"ZeroFee","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"bool","name":"stable","type":"bool"},{"indexed":false,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenA","type":"address"},{"indexed":true,"internalType":"address","name":"tokenB","type":"address"},{"indexed":true,"internalType":"bool","name":"stable","type":"bool"}],"name":"PoolStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"SetCustomFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"feeManager","type":"address"}],"name":"SetFeeManager","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"state","type":"bool"}],"name":"SetPauseState","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"pauser","type":"address"}],"name":"SetPauser","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"voter","type":"address"}],"name":"SetVoter","type":"event"},{"inputs":[],"name":"allPoolsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"},{"internalType":"bool","name":"_stable","type":"bool"}],"name":"getFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"bool","name":"stable","type":"bool"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"isPool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"},{"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"setCustomFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_stable","type":"bool"},{"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"setFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeManager","type":"address"}],"name":"setFeeManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_state","type":"bool"}],"name":"setPauseState","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_pauser","type":"address"}],"name":"setPauser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_voter","type":"address"}],"name":"setVoter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"voter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FeeInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFeeManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVoter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroFee\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"name\":\"PoolStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetCustomFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeManager\",\"type\":\"address\"}],\"name\":\"SetFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"SetPauseState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"}],\"name\":\"SetPauser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"SetVoter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allPoolsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_stable\",\"type\":\"bool\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setCustomFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"}],\"name\":\"setFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setPauseState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pauser\",\"type\":\"address\"}],\"name\":\"setPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"setVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createPool(address,address,bool)\":{\"details\":\"token order does not matter\",\"params\":{\"stable\":\".\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"createPool(address,address,uint24)\":{\"details\":\"fee is converted to stable booleantoken order does not matter\",\"params\":{\"fee\":\"1 if stable, 0 if volatile, else revert\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"getPool(address,address,bool)\":{\"params\":{\"stable\":\"True if stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"getPool(address,address,uint24)\":{\"details\":\"fee is converted to stable boolean.\",\"params\":{\"fee\":\"1 if stable, 0 if volatile, else returns address(0)\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"isPool(address)\":{\"params\":{\"\":\".\"}},\"setCustomFee(address,uint256)\":{\"details\":\"A custom fee of zero means the default fee will be used.\"},\"setFee(bool,uint256)\":{\"details\":\"Throws if higher than maximum fee.      Throws if fee is zero.\",\"params\":{\"_fee\":\".\",\"_stable\":\"Stable or volatile pool.\"}},\"setVoter(address)\":{\"details\":\"Only called once to set to Voter.sol - Voter does not have a function      to call this contract method, so once set it's immutable.      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol\",\"params\":{\"_voter\":\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allPoolsLength()\":{\"notice\":\"returns the number of pools created from this factory\"},\"createPool(address,address,bool)\":{\"notice\":\"Create a pool given two tokens and if they're stable/volatile\"},\"createPool(address,address,uint24)\":{\"notice\":\"Support for v3-style pools which wraps around createPool(tokena,tokenB,stable)\"},\"getFee(address,bool)\":{\"notice\":\"Returns fee for a pool, as custom fees are possible.\"},\"getPool(address,address,bool)\":{\"notice\":\"Return address of pool created by this factory\"},\"getPool(address,address,uint24)\":{\"notice\":\"Support for v3-style pools which wraps around getPool(tokenA,tokenB,stable)\"},\"isPool(address)\":{\"notice\":\"Is a valid pool created by this factory.\"},\"setCustomFee(address,uint256)\":{\"notice\":\"Set overriding fee for a pool from the default\"},\"setFee(bool,uint256)\":{\"notice\":\"Set default fee for stable and volatile pools.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/factories/IPoolFactory.sol\":\"IPoolFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{\"contracts/art/PerlinNoise.sol:PerlinNoise\":\"0xb30c4307270dec94d254c414a2284a45255e47c0\",\"contracts/art/PerlinNoise.sol:PerlinNoise:PerlinNoise\":\"0x1fb34d433ce1d007c5c9c19b021aa896f8cb18b1\",\"contracts/art/Trig.sol:Trig\":\"0xa0c97479a27a30fc5786dcdb8b6a568ad0a9a30c\",\"contracts/art/Trig.sol:Trig:Trig\":\"0xdfe367b10ebe44721abd4698d3a600551ecbc0f7\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary\":\"0xac36bde2f3e13e01371bbefefa313d4fe51d473c\",\"contracts/libraries/BalanceLogicLibrary.sol:BalanceLogicLibrary:BalanceLogicLibrary\":\"0xb6d3049fbc7849f3f990fbb63e8d0cf75cec3490\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary\":\"0xb32ef5b29c7ba7297ee6e1491d0ed0ef14391a04\",\"contracts/libraries/DelegationLogicLibrary.sol:DelegationLogicLibrary:DelegationLogicLibrary\":\"0xb14cb52f8ff6b9a14b1fdcb1ed3c05f2ead52029\"},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/factories/IPoolFactory.sol\":{\"keccak256\":\"0xb071c9e435d796bb22f7a5beb9960461126dead2f5890e84474993384f7c84c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://766c10c022a7ab9496475948061f3e3a6712c652f9dd0e1345a5c0b11ee899f1\",\"dweb:/ipfs/QmQeSHRcEcufdqFphciXaeD8LA9LPzUShqYL1sG2sB8cQ9\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allPoolsLength()":"efde4e64","createPool(address,address,bool)":"36bf95a0","createPool(address,address,uint24)":"a1671295","getFee(address,bool)":"cc56b2c5","getPool(address,address,bool)":"79bc57d5","getPool(address,address,uint24)":"1698ee82","implementation()":"5c60da1b","isPaused()":"b187bd26","isPool(address)":"5b16ebb7","setCustomFee(address,uint256)":"d49466a8","setFee(bool,uint256)":"e1f76b44","setFeeManager(address)":"472d35b9","setPauseState(bool)":"cdb88ad1","setPauser(address)":"2d88af4a","setVoter(address)":"4bc2a657","voter()":"46c96aac"}},"irOptimized":""}}}}}